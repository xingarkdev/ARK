#pragma once

/**
 * Name: ARK
 * Version: 1.0.1
 */

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace CG
{
	// --------------------------------------------------
	// # Structs
	// --------------------------------------------------
	/**
	 * Function Engine.Actor.UserConstructionScript
	 */
	struct AActor_UserConstructionScript_Params
	{	};

	/**
	 * Function Engine.Actor.Unstasis
	 */
	struct AActor_Unstasis_Params
	{	};

	/**
	 * Function Engine.Actor.TryMultiUse
	 */
	struct AActor_TryMultiUse_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    UseIndex;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ThrottledTick
	 */
	struct AActor_ThrottledTick_Params
	{	};

	/**
	 * Function Engine.Actor.TargetingTeamChanged__DelegateSignature
	 */
	struct AActor_TargetingTeamChanged__DelegateSignature_Params
	{	};

	/**
	 * Function Engine.Actor.TargetingTeamChanged
	 */
	struct AActor_TargetingTeamChanged_Params
	{	};

	/**
	 * Function Engine.Actor.TakePointDamageSignature__DelegateSignature
	 */
	struct AActor_TakePointDamageSignature__DelegateSignature_Params
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_GBTF[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AController*                                         InstigatedBy;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             HitLocation;                                             // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_SPD3[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimitiveComponent*                                 FHitComponent;                                           // 0x0020(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                BoneName;                                                // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ShotFromDirection;                                       // 0x0030(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KT23[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UDamageType*                                         DamageType;                                              // 0x0040(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0048(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.TakeAnyDamageSignature__DelegateSignature
	 */
	struct AActor_TakeAnyDamageSignature__DelegateSignature_Params
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_BSHP[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UDamageType*                                         DamageType;                                              // 0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AController*                                         InstigatedBy;                                            // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.StopActorSound
	 */
	struct AActor_StopActorSound_Params
	{
	public:
		class USoundBase*                                          SoundAsset;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      FadeOutTime;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.SnapRootComponentTo
	 */
	struct AActor_SnapRootComponentTo_Params
	{
	public:
		class AActor*                                              InParentActor;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                InSocketName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.SetTickFunctionEnabled
	 */
	struct AActor_SetTickFunctionEnabled_Params
	{
	public:
		bool                                                       bEnableTick;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.SetTickableWhenPaused
	 */
	struct AActor_SetTickableWhenPaused_Params
	{
	public:
		bool                                                       bTickableWhenPaused;                                     // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.SetReplicates
	 */
	struct AActor_SetReplicates_Params
	{
	public:
		bool                                                       bInReplicates;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.SetOwner
	 */
	struct AActor_SetOwner_Params
	{
	public:
		class AActor*                                              NewOwner;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.SetNetworkSpatializationParent
	 */
	struct AActor_SetNetworkSpatializationParent_Params
	{
	public:
		class AActor*                                              NewParent;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.SetLifeSpan
	 */
	struct AActor_SetLifeSpan_Params
	{
	public:
		float                                                      InLifespan;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.SetActorTransform
	 */
	struct AActor_SetActorTransform_Params
	{
	public:
		struct FTransform                                          NewTransform;                                            // 0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0031(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.SetActorScale3D
	 */
	struct AActor_SetActorScale3D_Params
	{
	public:
		struct FVector                                             NewScale3D;                                              // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.SetActorRotation
	 */
	struct AActor_SetActorRotation_Params
	{
	public:
		struct FRotator                                            NewRotation;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.SetActorRelativeTransform
	 */
	struct AActor_SetActorRelativeTransform_Params
	{
	public:
		struct FTransform                                          NewRelativeTransform;                                    // 0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.SetActorRelativeScale3D
	 */
	struct AActor_SetActorRelativeScale3D_Params
	{
	public:
		struct FVector                                             NewRelativeScale;                                        // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.SetActorRelativeRotation
	 */
	struct AActor_SetActorRelativeRotation_Params
	{
	public:
		struct FRotator                                            NewRelativeRotation;                                     // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.SetActorRelativeLocation
	 */
	struct AActor_SetActorRelativeLocation_Params
	{
	public:
		struct FVector                                             NewRelativeLocation;                                     // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.SetActorLocationAndRotation
	 */
	struct AActor_SetActorLocationAndRotation_Params
	{
	public:
		struct FVector                                             NewLocation;                                             // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            NewRotation;                                             // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0019(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.SetActorHiddenInGame
	 */
	struct AActor_SetActorHiddenInGame_Params
	{
	public:
		bool                                                       bNewHidden;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.SetActorEnableCollision
	 */
	struct AActor_SetActorEnableCollision_Params
	{
	public:
		bool                                                       bNewActorEnableCollision;                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ServerSendSimpleExecCommandToEveryone
	 */
	struct AActor_ServerSendSimpleExecCommandToEveryone_Params
	{
	public:
		class FName                                                CommandName;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsReliable;                                             // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceSendToLocalPlayer;                                 // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreRelevancy;                                        // 0x000A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ServerSendExecCommandToPlayer
	 */
	struct AActor_ServerSendExecCommandToPlayer_Params
	{
	public:
		class APlayerController*                                   ToPC;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                CommandName;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FBPNetExecParams                                    ExecParams;                                              // 0x0010(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       bIsReliable;                                             // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceSendToLocalPlayer;                                 // 0x0051(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreRelevancy;                                        // 0x0052(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ServerSendExecCommandToEveryone
	 */
	struct AActor_ServerSendExecCommandToEveryone_Params
	{
	public:
		class FName                                                CommandName;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FBPNetExecParams                                    ExecParams;                                              // 0x0008(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       bIsReliable;                                             // 0x0048(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceSendToLocalPlayer;                                 // 0x0049(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreRelevancy;                                        // 0x004A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.RerunConstructionScripts
	 */
	struct AActor_RerunConstructionScripts_Params
	{	};

	/**
	 * Function Engine.Actor.ReregisterAllComponents
	 */
	struct AActor_ReregisterAllComponents_Params
	{	};

	/**
	 * Function Engine.Actor.RemoveTickPrerequisiteComponent
	 */
	struct AActor_RemoveTickPrerequisiteComponent_Params
	{
	public:
		class UActorComponent*                                     PrerequisiteComponent;                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.RemoveTickPrerequisiteActor
	 */
	struct AActor_RemoveTickPrerequisiteActor_Params
	{
	public:
		class AActor*                                              PrerequisiteActor;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.RecieveMatineeUpdated
	 */
	struct AActor_RecieveMatineeUpdated_Params
	{	};

	/**
	 * Function Engine.Actor.ReceiveTick
	 */
	struct AActor_ReceiveTick_Params
	{
	public:
		float                                                      DeltaSeconds;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ReceiveRadialDamage
	 */
	struct AActor_ReceiveRadialDamage_Params
	{
	public:
		float                                                      DamageReceived;                                          // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_AFHO[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UDamageType*                                         DamageType;                                              // 0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Origin;                                                  // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_GKOC[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          HitInfo;                                                 // 0x0020(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AController*                                         InstigatedBy;                                            // 0x00A8(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x00B0(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ReceivePointDamage
	 */
	struct AActor_ReceivePointDamage_Params
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_6EQN[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UDamageType*                                         DamageType;                                              // 0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             HitLocation;                                             // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             HitNormal;                                               // 0x001C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 HitComponent;                                            // 0x0028(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                BoneName;                                                // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ShotFromDirection;                                       // 0x0038(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZV71[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AController*                                         InstigatedBy;                                            // 0x0048(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0050(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ReceiveInput
	 */
	struct AActor_ReceiveInput_Params
	{
	public:
		class FString                                              InputName;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
		float                                                      Value;                                                   // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             VectorValue;                                             // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bStarted;                                                // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEnded;                                                  // 0x0021(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ReceiveHit
	 */
	struct AActor_ReceiveHit_Params
	{
	public:
		class UPrimitiveComponent*                                 MyComp;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class AActor*                                              Other;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       bSelfMoved;                                              // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_PTLE[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             HitLocation;                                             // 0x001C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             HitNormal;                                               // 0x0028(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NormalImpulse;                                           // 0x0034(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FHitResult                                          Hit;                                                     // 0x0040(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function Engine.Actor.ReceiveEndPlay
	 */
	struct AActor_ReceiveEndPlay_Params
	{
	public:
		EEndPlayReason                                             EndPlayReason;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ReceiveDestroyed
	 */
	struct AActor_ReceiveDestroyed_Params
	{	};

	/**
	 * Function Engine.Actor.ReceiveBeginPlay
	 */
	struct AActor_ReceiveBeginPlay_Params
	{	};

	/**
	 * Function Engine.Actor.ReceiveAnyDamage
	 */
	struct AActor_ReceiveAnyDamage_Params
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZI3N[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UDamageType*                                         DamageType;                                              // 0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AController*                                         InstigatedBy;                                            // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ReceiveActorOnReleased
	 */
	struct AActor_ReceiveActorOnReleased_Params
	{	};

	/**
	 * Function Engine.Actor.ReceiveActorOnInputTouchLeave
	 */
	struct AActor_ReceiveActorOnInputTouchLeave_Params
	{
	public:
		ETouchIndex                                                FingerIndex;                                             // 0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ReceiveActorOnInputTouchEnter
	 */
	struct AActor_ReceiveActorOnInputTouchEnter_Params
	{
	public:
		ETouchIndex                                                FingerIndex;                                             // 0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ReceiveActorOnInputTouchEnd
	 */
	struct AActor_ReceiveActorOnInputTouchEnd_Params
	{
	public:
		ETouchIndex                                                FingerIndex;                                             // 0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ReceiveActorOnInputTouchBegin
	 */
	struct AActor_ReceiveActorOnInputTouchBegin_Params
	{
	public:
		ETouchIndex                                                FingerIndex;                                             // 0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ReceiveActorOnClicked
	 */
	struct AActor_ReceiveActorOnClicked_Params
	{	};

	/**
	 * Function Engine.Actor.ReceiveActorEndOverlap
	 */
	struct AActor_ReceiveActorEndOverlap_Params
	{
	public:
		class AActor*                                              OtherActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ReceiveActorEndCursorOver
	 */
	struct AActor_ReceiveActorEndCursorOver_Params
	{	};

	/**
	 * Function Engine.Actor.ReceiveActorBeginOverlap
	 */
	struct AActor_ReceiveActorBeginOverlap_Params
	{
	public:
		class AActor*                                              OtherActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ReceiveActorBeginCursorOver
	 */
	struct AActor_ReceiveActorBeginCursorOver_Params
	{	};

	/**
	 * Function Engine.Actor.PropertyServerToClients
	 */
	struct AActor_PropertyServerToClients_Params
	{
	public:
		class AActor*                                              ActorToRep;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                PropertyName;                                            // 0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<unsigned char>                                      ReplicationData;                                         // 0x0010(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.Actor.PlaySoundOnActor
	 */
	struct AActor_PlaySoundOnActor_Params
	{
	public:
		class USoundCue*                                           InSoundCue;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      VolumeMultiplier;                                        // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      PitchMultiplier;                                         // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.PlaySoundAtLocation
	 */
	struct AActor_PlaySoundAtLocation_Params
	{
	public:
		class USoundCue*                                           InSoundCue;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             SoundLocation;                                           // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      VolumeMultiplier;                                        // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      PitchMultiplier;                                         // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.PerformanceThrottledTick
	 */
	struct AActor_PerformanceThrottledTick_Params
	{	};

	/**
	 * Function Engine.Actor.OnRep_ReplicatedMovement
	 */
	struct AActor_OnRep_ReplicatedMovement_Params
	{	};

	/**
	 * Function Engine.Actor.OnRep_Instigator
	 */
	struct AActor_OnRep_Instigator_Params
	{	};

	/**
	 * Function Engine.Actor.OnRep_AttachmentReplication
	 */
	struct AActor_OnRep_AttachmentReplication_Params
	{	};

	/**
	 * Function Engine.Actor.OnInventoryItemGrind
	 */
	struct AActor_OnInventoryItemGrind_Params
	{	};

	/**
	 * Function Engine.Actor.NetDetachRootComponentFromAny
	 */
	struct AActor_NetDetachRootComponentFromAny_Params
	{	};

	/**
	 * Function Engine.Actor.NetAttachRootComponentTo
	 */
	struct AActor_NetAttachRootComponentTo_Params
	{
	public:
		class USceneComponent*                                     InParent;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                InSocketName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             RelativeLocation;                                        // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            RelativeRotation;                                        // 0x001C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.MulticastPropertyToPlayer
	 */
	struct AActor_MulticastPropertyToPlayer_Params
	{
	public:
		class FName                                                PropertyName;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APlayerController*                                   PC;                                                      // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.MulticastProperty
	 */
	struct AActor_MulticastProperty_Params
	{
	public:
		class FName                                                PropertyName;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.MulticastDrawDebugString
	 */
	struct AActor_MulticastDrawDebugString_Params
	{
	public:
		struct FVector                                             TextLocation;                                            // 0x0000(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_IPO2[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Text;                                                    // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class AActor*                                              TestBaseActor;                                           // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        TextColor;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       enableInShipping;                                        // 0x003C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.MulticastDrawDebugSphere
	 */
	struct AActor_MulticastDrawDebugSphere_Params
	{
	public:
		struct FVector                                             Center;                                                  // 0x0000(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Segments;                                                // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x0014(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       enableInShipping;                                        // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.MulticastDrawDebugPoint
	 */
	struct AActor_MulticastDrawDebugPoint_Params
	{
	public:
		struct FVector                                             Position;                                                // 0x0000(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Size;                                                    // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        PointColor;                                              // 0x0010(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       enableInShipping;                                        // 0x0024(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.MulticastDrawDebugPlane
	 */
	struct AActor_MulticastDrawDebugPlane_Params
	{
	public:
		struct FPlane                                              PlaneCoordinates;                                        // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x0010(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Size;                                                    // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        PlaneColor;                                              // 0x0020(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       enableInShipping;                                        // 0x0034(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.MulticastDrawDebugLineTraceHitResult
	 */
	struct AActor_MulticastDrawDebugLineTraceHitResult_Params
	{
	public:
		struct FHitResult                                          Hit;                                                     // 0x0000(0x0088)  (ConstParm, Parm)
		struct FVector                                             TraceStart;                                              // 0x0088(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             TraceEnd;                                                // 0x0094(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        StartColor;                                              // 0x00A0(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        HitColor;                                                // 0x00B0(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      LineThickness;                                           // 0x00C0(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HitSize;                                                 // 0x00C4(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDrawHitNormal;                                          // 0x00C8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_B2V3[0x3];                                   // 0x00C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FLinearColor                                        HitNormalColor;                                          // 0x00CC(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HitNormalLength;                                         // 0x00DC(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x00E0(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       enableInShipping;                                        // 0x00E4(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.MulticastDrawDebugLine
	 */
	struct AActor_MulticastDrawDebugLine_Params
	{
	public:
		struct FVector                                             LineStart;                                               // 0x0000(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             LineEnd;                                                 // 0x000C(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x0018(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Thickness;                                               // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       enableInShipping;                                        // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.MulticastDrawDebugCylinder
	 */
	struct AActor_MulticastDrawDebugCylinder_Params
	{
	public:
		struct FVector                                             Start;                                                   // 0x0000(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x000C(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Segments;                                                // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x0020(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       enableInShipping;                                        // 0x0034(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.MulticastDrawDebugCoordinateSystem
	 */
	struct AActor_MulticastDrawDebugCoordinateSystem_Params
	{
	public:
		struct FVector                                             AxisLoc;                                                 // 0x0000(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            AxisRot;                                                 // 0x000C(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Scale;                                                   // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Thickness;                                               // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       enableInShipping;                                        // 0x0024(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.MulticastDrawDebugCapsuleWithExtents
	 */
	struct AActor_MulticastDrawDebugCapsuleWithExtents_Params
	{
	public:
		struct FVector                                             Top;                                                     // 0x0000(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Bottom;                                                  // 0x000C(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x001C(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPersistent;                                             // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       enableInShipping;                                        // 0x0031(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.MulticastDrawDebugCapsule
	 */
	struct AActor_MulticastDrawDebugCapsule_Params
	{
	public:
		struct FVector                                             Center;                                                  // 0x0000(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HalfHeight;                                              // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x0020(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       enableInShipping;                                        // 0x0034(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.MulticastDrawDebugCamera
	 */
	struct AActor_MulticastDrawDebugCamera_Params
	{
	public:
		class ACameraActor*                                        CameraActor;                                             // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        CameraColor;                                             // 0x0008(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       enableInShipping;                                        // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.MulticastDrawDebugBox
	 */
	struct AActor_MulticastDrawDebugBox_Params
	{
	public:
		struct FVector                                             Center;                                                  // 0x0000(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Extent;                                                  // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x0018(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x0028(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0034(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       enableInShipping;                                        // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.MulticastDrawDebugArrow
	 */
	struct AActor_MulticastDrawDebugArrow_Params
	{
	public:
		struct FVector                                             LineStart;                                               // 0x0000(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             LineEnd;                                                 // 0x000C(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ArrowSize;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x001C(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       enableInShipping;                                        // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ModifyHudMultiUseLoc
	 */
	struct AActor_ModifyHudMultiUseLoc_Params
	{
	public:
		struct FVector2D                                           theVec;                                                  // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class APlayerController*                                   PC;                                                      // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    index;                                                   // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.MakeNoise
	 */
	struct AActor_MakeNoise_Params
	{
	public:
		float                                                      Loudness;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_BEIC[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APawn*                                               NoiseInstigator;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NoiseLocation;                                           // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.MakeMIDForMaterial
	 */
	struct AActor_MakeMIDForMaterial_Params
	{
	public:
		class UMaterialInterface*                                  Parent;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialInstanceDynamic*                            ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.K2_TeleportTo
	 */
	struct AActor_K2_TeleportTo_Params
	{
	public:
		struct FVector                                             DestLocation;                                            // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            DestRotation;                                            // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSimpleTeleport;                                         // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0019(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.K2_SetActorLocation
	 */
	struct AActor_K2_SetActorLocation_Params
	{
	public:
		struct FVector                                             NewLocation;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000D(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.K2_OnEndViewTarget
	 */
	struct AActor_K2_OnEndViewTarget_Params
	{
	public:
		class APlayerController*                                   PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.K2_OnBecomeViewTarget
	 */
	struct AActor_K2_OnBecomeViewTarget_Params
	{
	public:
		class APlayerController*                                   PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.K2_GetWorld
	 */
	struct AActor_K2_GetWorld_Params
	{
	public:
		class UWorld*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.K2_GetRootComponent
	 */
	struct AActor_K2_GetRootComponent_Params
	{
	public:
		class USceneComponent*                                     ReturnValue;                                             // 0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.K2_GetActorRotation
	 */
	struct AActor_K2_GetActorRotation_Params
	{
	public:
		struct FRotator                                            ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.K2_GetActorLocation
	 */
	struct AActor_K2_GetActorLocation_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.K2_DestroyComponent
	 */
	struct AActor_K2_DestroyComponent_Params
	{
	public:
		class UActorComponent*                                     Component;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.K2_DestroyActor
	 */
	struct AActor_K2_DestroyActor_Params
	{	};

	/**
	 * Function Engine.Actor.K2_AttachRootComponentToActor
	 */
	struct AActor_K2_AttachRootComponentToActor_Params
	{
	public:
		class AActor*                                              InParentActor;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                InSocketName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EAttachLocation                                            AttachLocationType;                                      // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bWeldSimulatedBodies;                                    // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.K2_AttachRootComponentTo
	 */
	struct AActor_K2_AttachRootComponentTo_Params
	{
	public:
		class USceneComponent*                                     InParent;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                InSocketName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EAttachLocation                                            AttachLocationType;                                      // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bWeldSimulatedBodies;                                    // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.IsTargetable
	 */
	struct AActor_IsTargetable_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.IsShooterCharacter
	 */
	struct AActor_IsShooterCharacter_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.IsPrimalStructureTurret
	 */
	struct AActor_IsPrimalStructureTurret_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.IsPrimalStructureItemContainer
	 */
	struct AActor_IsPrimalStructureItemContainer_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.IsPrimalStructure
	 */
	struct AActor_IsPrimalStructure_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.IsPrimalDino
	 */
	struct AActor_IsPrimalDino_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.IsPrimalCharacterOrStructure
	 */
	struct AActor_IsPrimalCharacterOrStructure_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.IsPrimalCharacter
	 */
	struct AActor_IsPrimalCharacter_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.IsOwnedOrControlledBy
	 */
	struct AActor_IsOwnedOrControlledBy_Params
	{
	public:
		class AActor*                                              TestOwner;                                               // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.IsLocallyControlledByPlayer
	 */
	struct AActor_IsLocallyControlledByPlayer_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.IsFirstPersonMeshVisible
	 */
	struct AActor_IsFirstPersonMeshVisible_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.IsDead
	 */
	struct AActor_IsDead_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.IsCorruptDino
	 */
	struct AActor_IsCorruptDino_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.HasAuthority
	 */
	struct AActor_HasAuthority_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetVisibleComponentByClass
	 */
	struct AActor_GetVisibleComponentByClass_Params
	{
	public:
		class UClass*                                              ComponentClass;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSkipHiddenComponents;                                   // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_6GLO[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimitiveComponent*                                 ReturnValue;                                             // 0x0010(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetVerticalDistanceTo
	 */
	struct AActor_GetVerticalDistanceTo_Params
	{
	public:
		class AActor*                                              OtherActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetVelocity
	 */
	struct AActor_GetVelocity_Params
	{
	public:
		bool                                                       bIsForRagdoll;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_3C6E[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             ReturnValue;                                             // 0x0004(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetUsablePriority
	 */
	struct AActor_GetUsablePriority_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetTransform
	 */
	struct AActor_GetTransform_Params
	{
	public:
		struct FTransform                                          ReturnValue;                                             // 0x0000(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetTargetingLocation
	 */
	struct AActor_GetTargetingLocation_Params
	{
	public:
		class AActor*                                              Attacker;                                                // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetSecondaryMountedActor
	 */
	struct AActor_GetSecondaryMountedActor_Params
	{
	public:
		class AActor*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetOwnerController
	 */
	struct AActor_GetOwnerController_Params
	{
	public:
		class APlayerController*                                   ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetOwner
	 */
	struct AActor_GetOwner_Params
	{
	public:
		class AActor*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetOverlappingComponents
	 */
	struct AActor_GetOverlappingComponents_Params
	{
	public:
		TArray<class UPrimitiveComponent*>                         OverlappingComponents;                                   // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
	};

	/**
	 * Function Engine.Actor.GetOverlappingActors
	 */
	struct AActor_GetOverlappingActors_Params
	{
	public:
		TArray<class AActor*>                                      OverlappingActors;                                       // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
		class UClass*                                              ClassFilter;                                             // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetLifeSpan
	 */
	struct AActor_GetLifeSpan_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetInterpolatedTransform
	 */
	struct AActor_GetInterpolatedTransform_Params
	{
	public:
		struct FTransform                                          ReturnValue;                                             // 0x0000(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetInterpolatedRotation
	 */
	struct AActor_GetInterpolatedRotation_Params
	{
	public:
		struct FRotator                                            ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetInterpolatedLocation
	 */
	struct AActor_GetInterpolatedLocation_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetInstigatorController
	 */
	struct AActor_GetInstigatorController_Params
	{
	public:
		class AController*                                         ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetInstigator
	 */
	struct AActor_GetInstigator_Params
	{
	public:
		class APawn*                                               ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetInputVectorAxisValue
	 */
	struct AActor_GetInputVectorAxisValue_Params
	{
	public:
		struct FKey                                                InputAxisKey;                                            // 0x0000(0x0018)  (ConstParm, Parm)
		struct FVector                                             ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetInputAxisValue
	 */
	struct AActor_GetInputAxisValue_Params
	{
	public:
		class FName                                                InputAxisName;                                           // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetInputAxisKeyValue
	 */
	struct AActor_GetInputAxisKeyValue_Params
	{
	public:
		struct FKey                                                InputAxisKey;                                            // 0x0000(0x0018)  (ConstParm, Parm)
		float                                                      ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetHorizontalDotProductTo
	 */
	struct AActor_GetHorizontalDotProductTo_Params
	{
	public:
		class AActor*                                              OtherActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetHorizontalDistanceTo
	 */
	struct AActor_GetHorizontalDistanceTo_Params
	{
	public:
		class AActor*                                              OtherActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetDotProductTo
	 */
	struct AActor_GetDotProductTo_Params
	{
	public:
		class AActor*                                              OtherActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetDistanceTo
	 */
	struct AActor_GetDistanceTo_Params
	{
	public:
		class AActor*                                              OtherActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetComponentsByCustomTag
	 */
	struct AActor_GetComponentsByCustomTag_Params
	{
	public:
		class FName                                                TheTag;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class UActorComponent*>                             ReturnValue;                                             // 0x0008(0x0010)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference)
	};

	/**
	 * Function Engine.Actor.GetComponentsByClass
	 */
	struct AActor_GetComponentsByClass_Params
	{
	public:
		class UClass*                                              ComponentClass;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class UActorComponent*>                             ReturnValue;                                             // 0x0008(0x0010)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference)
	};

	/**
	 * Function Engine.Actor.GetComponentByCustomTag
	 */
	struct AActor_GetComponentByCustomTag_Params
	{
	public:
		class FName                                                TheTag;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UActorComponent*                                     ReturnValue;                                             // 0x0008(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetComponentByClass
	 */
	struct AActor_GetComponentByClass_Params
	{
	public:
		class UClass*                                              ComponentClass;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UActorComponent*                                     ReturnValue;                                             // 0x0008(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetCharacterController
	 */
	struct AActor_GetCharacterController_Params
	{
	public:
		class AController*                                         ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetAttachedSoundVolumeMultiplier
	 */
	struct AActor_GetAttachedSoundVolumeMultiplier_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetAttachedSoundPitchMultiplier
	 */
	struct AActor_GetAttachedSoundPitchMultiplier_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetAttachedActors
	 */
	struct AActor_GetAttachedActors_Params
	{
	public:
		TArray<class AActor*>                                      OutActors;                                               // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function Engine.Actor.GetAllSceneComponents
	 */
	struct AActor_GetAllSceneComponents_Params
	{
	public:
		TArray<class USceneComponent*>                             OutComponents;                                           // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
	};

	/**
	 * Function Engine.Actor.GetActorViewDirection
	 */
	struct AActor_GetActorViewDirection_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetActorUpVector
	 */
	struct AActor_GetActorUpVector_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetActorTimeDilation
	 */
	struct AActor_GetActorTimeDilation_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetActorScale3D
	 */
	struct AActor_GetActorScale3D_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetActorRightVector
	 */
	struct AActor_GetActorRightVector_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetActorRelativeScale3D
	 */
	struct AActor_GetActorRelativeScale3D_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetActorForwardVector
	 */
	struct AActor_GetActorForwardVector_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetActorEnableCollision
	 */
	struct AActor_GetActorEnableCollision_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetActorClass
	 */
	struct AActor_GetActorClass_Params
	{
	public:
		class UClass*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.GetActorBounds
	 */
	struct AActor_GetActorBounds_Params
	{
	public:
		bool                                                       bOnlyCollidingComponents;                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ODT2[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             Origin;                                                  // 0x0004(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             BoxExtent;                                               // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ForceReplicateNowWithChannel
	 */
	struct AActor_ForceReplicateNowWithChannel_Params
	{	};

	/**
	 * Function Engine.Actor.ForceReplicateNow
	 */
	struct AActor_ForceReplicateNow_Params
	{
	public:
		bool                                                       bForceCreateChannel;                                     // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceCreateChannelIfRelevant;                           // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ForceNetUpdate
	 */
	struct AActor_ForceNetUpdate_Params
	{
	public:
		bool                                                       bDormantDontReplicateProperties;                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAbsoluteForceNetUpdate;                                 // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDontUpdateChannel;                                      // 0x0002(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ForceDestroy
	 */
	struct AActor_ForceDestroy_Params
	{	};

	/**
	 * Function Engine.Actor.FlushNetDormancy
	 */
	struct AActor_FlushNetDormancy_Params
	{	};

	/**
	 * Function Engine.Actor.EnableInput
	 */
	struct AActor_EnableInput_Params
	{
	public:
		class APlayerController*                                   PlayerController;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.DrawInEditorViewport
	 */
	struct AActor_DrawInEditorViewport_Params
	{
	public:
		class UCanvas*                                             Canvas;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    LHSX;                                                    // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    InOutLHSY;                                               // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    RHSX;                                                    // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    InOutRHSY;                                               // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ViewLocation;                                            // 0x0018(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ViewRotation;                                            // 0x0024(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.DrawBasicFloatingHUD
	 */
	struct AActor_DrawBasicFloatingHUD_Params
	{
	public:
		class AHUD*                                                ForHUD;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.DisableInput
	 */
	struct AActor_DisableInput_Params
	{
	public:
		class APlayerController*                                   PlayerController;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.DetachRootComponentFromParent
	 */
	struct AActor_DetachRootComponentFromParent_Params
	{
	public:
		bool                                                       bMaintainWorldPosition;                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ClientMultiUse
	 */
	struct AActor_ClientMultiUse_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    UseIndex;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.CalculateComponentsBoundingBoxInLocalSpace
	 */
	struct AActor_CalculateComponentsBoundingBoxInLocalSpace_Params
	{
	public:
		bool                                                       bNonColliding;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_LMZ2[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FBox                                                ReturnValue;                                             // 0x0004(0x001C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.BPTryMultiUse
	 */
	struct AActor_BPTryMultiUse_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    UseIndex;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.BPServerHandleNetExecCommand
	 */
	struct AActor_BPServerHandleNetExecCommand_Params
	{
	public:
		class APlayerController*                                   FromPC;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                CommandName;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FBPNetExecParams                                    ExecParams;                                              // 0x0010(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0050(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.BPPreventAttachments
	 */
	struct AActor_BPPreventAttachments_Params
	{
	public:
		class UObject*                                             ForItem;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.BPPreInitializeComponents
	 */
	struct AActor_BPPreInitializeComponents_Params
	{	};

	/**
	 * Function Engine.Actor.BPPostInitializeComponents
	 */
	struct AActor_BPPostInitializeComponents_Params
	{	};

	/**
	 * Function Engine.Actor.BPOverrideUILocation
	 */
	struct AActor_BPOverrideUILocation_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.BPIsA
	 */
	struct AActor_BPIsA_Params
	{
	public:
		class UClass*                                              anActorClass;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.BPInventoryItemUsed
	 */
	struct AActor_BPInventoryItemUsed_Params
	{
	public:
		class UObject*                                             InventoryItemObject;                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.BPInventoryItemDropped
	 */
	struct AActor_BPInventoryItemDropped_Params
	{
	public:
		class UObject*                                             InventoryItemObject;                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.BPGetShowDebugAnimationComponents
	 */
	struct AActor_BPGetShowDebugAnimationComponents_Params
	{
	public:
		TArray<class USkeletalMeshComponent*>                      SkelMeshComponents;                                      // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
	};

	/**
	 * Function Engine.Actor.BPGetMultiUseEntries
	 */
	struct AActor_BPGetMultiUseEntries_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FMultiUseEntry>                              MultiUseEntries;                                         // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
		TArray<struct FMultiUseEntry>                              ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference)
	};

	/**
	 * Function Engine.Actor.BPGetMultiUseCenterText
	 */
	struct AActor_BPGetMultiUseCenterText_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    UseIndex;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_VFLX[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              OutCenterText;                                           // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		struct FLinearColor                                        OutCenterTextColor;                                      // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0030(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.BPGetExtraSpecialBlueprintInt
	 */
	struct AActor_BPGetExtraSpecialBlueprintInt_Params
	{
	public:
		int32_t                                                    toCheck;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.BPGetBonesToHideOnAllocation
	 */
	struct AActor_BPGetBonesToHideOnAllocation_Params
	{
	public:
		TArray<class FName>                                        ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.Actor.BPGetActorEyesViewPoint
	 */
	struct AActor_BPGetActorEyesViewPoint_Params
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.BPForceAllowsInventoryUse
	 */
	struct AActor_BPForceAllowsInventoryUse_Params
	{
	public:
		class UObject*                                             InventoryItemObject;                                     // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.BPCustomIsRelevantForClient
	 */
	struct AActor_BPCustomIsRelevantForClient_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.BPConsumeUsePinCode
	 */
	struct AActor_BPConsumeUsePinCode_Params
	{
	public:
		class AActor*                                              FromKeypadActor;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APlayerController*                                   ForPC;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    appledPinCode;                                           // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsActivating;                                           // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0015(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.BPConsumeSetPinCode
	 */
	struct AActor_BPConsumeSetPinCode_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    appledPinCode;                                           // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsSetting;                                              // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7W86[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    TheCustomIndex;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.BPClientHandleNetExecCommand
	 */
	struct AActor_BPClientHandleNetExecCommand_Params
	{
	public:
		class FName                                                CommandName;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FBPNetExecParams                                    ExecParams;                                              // 0x0008(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm)
		class APlayerController*                                   ForPC;                                                   // 0x0048(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0050(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.BPClientDoMultiUse
	 */
	struct AActor_BPClientDoMultiUse_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ClientUseIndex;                                          // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.BPCheckForErrors
	 */
	struct AActor_BPCheckForErrors_Params
	{
	public:
		TArray<struct FBPMapCheckEntry>                            ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.Actor.BPChangedActorTeam
	 */
	struct AActor_BPChangedActorTeam_Params
	{	};

	/**
	 * Function Engine.Actor.BPAttachedRootComponent
	 */
	struct AActor_BPAttachedRootComponent_Params
	{	};

	/**
	 * Function Engine.Actor.BP_OverrideTargetingLocation
	 */
	struct AActor_BP_OverrideTargetingLocation_Params
	{
	public:
		class AActor*                                              Attacker;                                                // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.BP_GetHUDWorldDrawLocation
	 */
	struct AActor_BP_GetHUDWorldDrawLocation_Params
	{
	public:
		class FName                                                HUDTag;                                                  // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.AllowManualMultiUseActivation
	 */
	struct AActor_AllowManualMultiUseActivation_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.AllowIgnoreCharacterEncroachment
	 */
	struct AActor_AllowIgnoreCharacterEncroachment_Params
	{
	public:
		class UPrimitiveComponent*                                 HitComponent;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class AActor*                                              EncroachingCharacter;                                    // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.AllowGrappling
	 */
	struct AActor_AllowGrappling_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.AddTickPrerequisiteComponent
	 */
	struct AActor_AddTickPrerequisiteComponent_Params
	{
	public:
		class UActorComponent*                                     PrerequisiteComponent;                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.AddTickPrerequisiteActor
	 */
	struct AActor_AddTickPrerequisiteActor_Params
	{
	public:
		class AActor*                                              PrerequisiteActor;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.AddComponent
	 */
	struct AActor_AddComponent_Params
	{
	public:
		class FName                                                TemplateName;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bManualAttachment;                                       // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_HWV1[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          RelativeTransform;                                       // 0x0010(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		class UObject*                                             ComponentTemplateContext;                                // 0x0040(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UActorComponent*                                     ReturnValue;                                             // 0x0048(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.AddActorWorldTransform
	 */
	struct AActor_AddActorWorldTransform_Params
	{
	public:
		struct FTransform                                          DeltaTransform;                                          // 0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.AddActorWorldRotation
	 */
	struct AActor_AddActorWorldRotation_Params
	{
	public:
		struct FRotator                                            DeltaRotation;                                           // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.AddActorWorldOffset
	 */
	struct AActor_AddActorWorldOffset_Params
	{
	public:
		struct FVector                                             DeltaLocation;                                           // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.AddActorLocalTransform
	 */
	struct AActor_AddActorLocalTransform_Params
	{
	public:
		struct FTransform                                          NewTransform;                                            // 0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.AddActorLocalRotation
	 */
	struct AActor_AddActorLocalRotation_Params
	{
	public:
		struct FRotator                                            DeltaRotation;                                           // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.AddActorLocalOffset
	 */
	struct AActor_AddActorLocalOffset_Params
	{
	public:
		struct FVector                                             DeltaLocation;                                           // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ActorSemaphoreTaken__DelegateSignature
	 */
	struct AActor_ActorSemaphoreTaken__DelegateSignature_Params
	{
	public:
		class FName                                                SemaphoreName;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ActorPlaySoundUnreliable
	 */
	struct AActor_ActorPlaySoundUnreliable_Params
	{
	public:
		class USoundBase*                                          SoundAsset;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAttach;                                                 // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_AMIT[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FName                                                BoneName;                                                // 0x000C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             LocOffset;                                               // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ActorPlaySound
	 */
	struct AActor_ActorPlaySound_Params
	{
	public:
		class USoundBase*                                          SoundAsset;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAttach;                                                 // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_OYU2[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FName                                                BoneName;                                                // 0x000C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             LocOffset;                                               // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ActorOnReleasedSignature__DelegateSignature
	 */
	struct AActor_ActorOnReleasedSignature__DelegateSignature_Params
	{	};

	/**
	 * Function Engine.Actor.ActorOnInputTouchEndSignature__DelegateSignature
	 */
	struct AActor_ActorOnInputTouchEndSignature__DelegateSignature_Params
	{
	public:
		ETouchIndex                                                FingerIndex;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ActorOnInputTouchBeginSignature__DelegateSignature
	 */
	struct AActor_ActorOnInputTouchBeginSignature__DelegateSignature_Params
	{
	public:
		ETouchIndex                                                FingerIndex;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ActorOnClickedSignature__DelegateSignature
	 */
	struct AActor_ActorOnClickedSignature__DelegateSignature_Params
	{	};

	/**
	 * Function Engine.Actor.ActorMatineeUpdated__DelegateSignature
	 */
	struct AActor_ActorMatineeUpdated__DelegateSignature_Params
	{	};

	/**
	 * Function Engine.Actor.ActorHitSignature__DelegateSignature
	 */
	struct AActor_ActorHitSignature__DelegateSignature_Params
	{
	public:
		class AActor*                                              SelfActor;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              OtherActor;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NormalImpulse;                                           // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_U9FD[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          Hit;                                                     // 0x0020(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function Engine.Actor.ActorHasTag
	 */
	struct AActor_ActorHasTag_Params
	{
	public:
		class FName                                                Tag;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ActorEndTouchOverSignature__DelegateSignature
	 */
	struct AActor_ActorEndTouchOverSignature__DelegateSignature_Params
	{
	public:
		ETouchIndex                                                FingerIndex;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ActorEndPlaySignature__DelegateSignature
	 */
	struct AActor_ActorEndPlaySignature__DelegateSignature_Params
	{
	public:
		EEndPlayReason                                             EndPlayReason;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ActorEndOverlapSignature__DelegateSignature
	 */
	struct AActor_ActorEndOverlapSignature__DelegateSignature_Params
	{
	public:
		class AActor*                                              OtherActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ActorEndCursorOverSignature__DelegateSignature
	 */
	struct AActor_ActorEndCursorOverSignature__DelegateSignature_Params
	{	};

	/**
	 * Function Engine.Actor.ActorDestroyedSignature__DelegateSignature
	 */
	struct AActor_ActorDestroyedSignature__DelegateSignature_Params
	{	};

	/**
	 * Function Engine.Actor.ActorCustomEventSignature__DelegateSignature
	 */
	struct AActor_ActorCustomEventSignature__DelegateSignature_Params
	{
	public:
		class FName                                                EventCustomName;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              EventCustomString;                                       // 0x0008(0x0010)  (Parm, ZeroConstructor)
		class AActor*                                              InstigatorActor;                                         // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ActorBeginTouchOverSignature__DelegateSignature
	 */
	struct AActor_ActorBeginTouchOverSignature__DelegateSignature_Params
	{
	public:
		ETouchIndex                                                FingerIndex;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ActorBeginOverlapSignature__DelegateSignature
	 */
	struct AActor_ActorBeginOverlapSignature__DelegateSignature_Params
	{
	public:
		class AActor*                                              OtherActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Actor.ActorBeginCursorOverSignature__DelegateSignature
	 */
	struct AActor_ActorBeginCursorOverSignature__DelegateSignature_Params
	{	};

	/**
	 * Function Engine.Controller.UnPossess
	 */
	struct AController_UnPossess_Params
	{	};

	/**
	 * Function Engine.Controller.StopMovement
	 */
	struct AController_StopMovement_Params
	{	};

	/**
	 * Function Engine.Controller.SetInitialLocationAndRotation
	 */
	struct AController_SetInitialLocationAndRotation_Params
	{
	public:
		struct FVector                                             NewLocation;                                             // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            NewRotation;                                             // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Controller.SetControlRotation
	 */
	struct AController_SetControlRotation_Params
	{
	public:
		struct FRotator                                            NewRotation;                                             // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Controller.ReceiveInstigatedAnyDamage
	 */
	struct AController_ReceiveInstigatedAnyDamage_Params
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZBE3[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UDamageType*                                         DamageType;                                              // 0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamagedActor;                                            // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Controller.Possess
	 */
	struct AController_Possess_Params
	{
	public:
		class APawn*                                               inPawn;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Controller.OnRep_PlayerState
	 */
	struct AController_OnRep_PlayerState_Params
	{	};

	/**
	 * Function Engine.Controller.OnRep_Pawn
	 */
	struct AController_OnRep_Pawn_Params
	{	};

	/**
	 * Function Engine.Controller.LineOfSightTo
	 */
	struct AController_LineOfSightTo_Params
	{
	public:
		class AActor*                                              Other;                                                   // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ViewPoint;                                               // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAlternateChecks;                                        // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0015(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Controller.K2_GetPawn
	 */
	struct AController_K2_GetPawn_Params
	{
	public:
		class APawn*                                               ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Controller.IsLocalPlayerController
	 */
	struct AController_IsLocalPlayerController_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Controller.IsLocalController
	 */
	struct AController_IsLocalController_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Controller.InstigatedAnyDamageSignature__DelegateSignature
	 */
	struct AController_InstigatedAnyDamageSignature__DelegateSignature_Params
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_BXVZ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UDamageType*                                         DamageType;                                              // 0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamagedActor;                                            // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Controller.GetViewTarget
	 */
	struct AController_GetViewTarget_Params
	{
	public:
		class AActor*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Controller.GetPlayerViewPoint
	 */
	struct AController_GetPlayerViewPoint_Params
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Controller.GetDesiredRotation
	 */
	struct AController_GetDesiredRotation_Params
	{
	public:
		struct FRotator                                            ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Controller.GetControlRotation
	 */
	struct AController_GetControlRotation_Params
	{
	public:
		struct FRotator                                            ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Controller.ClientSetRotation
	 */
	struct AController_ClientSetRotation_Params
	{
	public:
		struct FRotator                                            NewRotation;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bResetCamera;                                            // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Controller.ClientSetLocation
	 */
	struct AController_ClientSetLocation_Params
	{
	public:
		struct FVector                                             NewLocation;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            NewRotation;                                             // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Controller.CastToPlayerController
	 */
	struct AController_CastToPlayerController_Params
	{
	public:
		class APlayerController*                                   ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ActorComponent.ToggleActive
	 */
	struct UActorComponent_ToggleActive_Params
	{	};

	/**
	 * Function Engine.ActorComponent.SetIsReplicated
	 */
	struct UActorComponent_SetIsReplicated_Params
	{
	public:
		bool                                                       ShouldReplicate;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ActorComponent.SetComponentTickEnabled
	 */
	struct UActorComponent_SetComponentTickEnabled_Params
	{
	public:
		bool                                                       bEnabled;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ActorComponent.SetActive
	 */
	struct UActorComponent_SetActive_Params
	{
	public:
		bool                                                       bNewActive;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReset;                                                  // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ActorComponent.ReregisterComponent
	 */
	struct UActorComponent_ReregisterComponent_Params
	{	};

	/**
	 * Function Engine.ActorComponent.RemoveTickPrerequisiteComponent
	 */
	struct UActorComponent_RemoveTickPrerequisiteComponent_Params
	{
	public:
		class UActorComponent*                                     PrerequisiteComponent;                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ActorComponent.RemoveTickPrerequisiteActor
	 */
	struct UActorComponent_RemoveTickPrerequisiteActor_Params
	{
	public:
		class AActor*                                              PrerequisiteActor;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ActorComponent.OnRep_IsActive
	 */
	struct UActorComponent_OnRep_IsActive_Params
	{	};

	/**
	 * Function Engine.ActorComponent.K2_DestroyComponent
	 */
	struct UActorComponent_K2_DestroyComponent_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ActorComponent.IsActive
	 */
	struct UActorComponent_IsActive_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ActorComponent.GetWorld
	 */
	struct UActorComponent_GetWorld_Params
	{
	public:
		class UWorld*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ActorComponent.GetOwner
	 */
	struct UActorComponent_GetOwner_Params
	{
	public:
		class AActor*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ActorComponent.Deactivate
	 */
	struct UActorComponent_Deactivate_Params
	{	};

	/**
	 * Function Engine.ActorComponent.ComponentHasTag
	 */
	struct UActorComponent_ComponentHasTag_Params
	{
	public:
		class FName                                                Tag;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ActorComponent.BPTickComponent
	 */
	struct UActorComponent_BPTickComponent_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ActorComponent.BPOnComponentTick
	 */
	struct UActorComponent_BPOnComponentTick_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ActorComponent.BPOnComponentDestroyed
	 */
	struct UActorComponent_BPOnComponentDestroyed_Params
	{	};

	/**
	 * Function Engine.ActorComponent.BPOnComponentCreated
	 */
	struct UActorComponent_BPOnComponentCreated_Params
	{	};

	/**
	 * Function Engine.ActorComponent.AddTickPrerequisiteComponent
	 */
	struct UActorComponent_AddTickPrerequisiteComponent_Params
	{
	public:
		class UActorComponent*                                     PrerequisiteComponent;                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ActorComponent.AddTickPrerequisiteActor
	 */
	struct UActorComponent_AddTickPrerequisiteActor_Params
	{
	public:
		class AActor*                                              PrerequisiteActor;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ActorComponent.AddedAsPrimalItemAttachment
	 */
	struct UActorComponent_AddedAsPrimalItemAttachment_Params
	{	};

	/**
	 * Function Engine.ActorComponent.Activate
	 */
	struct UActorComponent_Activate_Params
	{
	public:
		bool                                                       bReset;                                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.ToggleVisibility
	 */
	struct USceneComponent_ToggleVisibility_Params
	{
	public:
		bool                                                       bPropagateToChildren;                                    // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.StopSound
	 */
	struct USceneComponent_StopSound_Params
	{
	public:
		class USoundBase*                                          SoundToStop;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      FadeOutTime;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.SnapTo
	 */
	struct USceneComponent_SnapTo_Params
	{
	public:
		class USceneComponent*                                     InParent;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                InSocketName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.SetWorldTransform
	 */
	struct USceneComponent_SetWorldTransform_Params
	{
	public:
		struct FTransform                                          NewTransform;                                            // 0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.SetWorldScale3D
	 */
	struct USceneComponent_SetWorldScale3D_Params
	{
	public:
		struct FVector                                             NewScale;                                                // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.SetWorldRotation
	 */
	struct USceneComponent_SetWorldRotation_Params
	{
	public:
		struct FRotator                                            NewRotation;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.SetWorldLocationAndRotation
	 */
	struct USceneComponent_SetWorldLocationAndRotation_Params
	{
	public:
		struct FVector                                             NewLocation;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            NewRotation;                                             // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.SetWorldLocation
	 */
	struct USceneComponent_SetWorldLocation_Params
	{
	public:
		struct FVector                                             NewLocation;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.SetVisibility
	 */
	struct USceneComponent_SetVisibility_Params
	{
	public:
		bool                                                       bNewVisibility;                                          // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPropagateToChildren;                                    // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.SetRelativeTransform
	 */
	struct USceneComponent_SetRelativeTransform_Params
	{
	public:
		struct FTransform                                          NewTransform;                                            // 0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.SetRelativeScale3D
	 */
	struct USceneComponent_SetRelativeScale3D_Params
	{
	public:
		struct FVector                                             NewScale3D;                                              // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.SetRelativeRotation
	 */
	struct USceneComponent_SetRelativeRotation_Params
	{
	public:
		struct FRotator                                            NewRotation;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.SetRelativeLocationAndRotation
	 */
	struct USceneComponent_SetRelativeLocationAndRotation_Params
	{
	public:
		struct FVector                                             NewLocation;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            NewRotation;                                             // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.SetRelativeLocation
	 */
	struct USceneComponent_SetRelativeLocation_Params
	{
	public:
		struct FVector                                             NewLocation;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.SetMobility
	 */
	struct USceneComponent_SetMobility_Params
	{
	public:
		EComponentMobility                                         NewMobility;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.SetHiddenInGame
	 */
	struct USceneComponent_SetHiddenInGame_Params
	{
	public:
		bool                                                       NewHidden;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPropagateToChildren;                                    // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.SetAbsolute
	 */
	struct USceneComponent_SetAbsolute_Params
	{
	public:
		bool                                                       bNewAbsoluteLocation;                                    // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bNewAbsoluteRotation;                                    // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bNewAbsoluteScale;                                       // 0x0002(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.ResetRelativeTransform
	 */
	struct USceneComponent_ResetRelativeTransform_Params
	{	};

	/**
	 * Function Engine.SceneComponent.PhysicsVolumeChanged__DelegateSignature
	 */
	struct USceneComponent_PhysicsVolumeChanged__DelegateSignature_Params
	{
	public:
		class APhysicsVolume*                                      NewVolume;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.OnRep_Visibility
	 */
	struct USceneComponent_OnRep_Visibility_Params
	{
	public:
		bool                                                       OldValue;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.OnRep_Transform
	 */
	struct USceneComponent_OnRep_Transform_Params
	{	};

	/**
	 * Function Engine.SceneComponent.K2_GetComponentToWorld
	 */
	struct USceneComponent_K2_GetComponentToWorld_Params
	{
	public:
		struct FTransform                                          ReturnValue;                                             // 0x0000(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.K2_GetComponentScale
	 */
	struct USceneComponent_K2_GetComponentScale_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.K2_GetComponentRotation
	 */
	struct USceneComponent_K2_GetComponentRotation_Params
	{
	public:
		struct FRotator                                            ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.K2_GetComponentLocation
	 */
	struct USceneComponent_K2_GetComponentLocation_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.K2_AttachTo
	 */
	struct USceneComponent_K2_AttachTo_Params
	{
	public:
		class USceneComponent*                                     InParent;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                InSocketName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EAttachLocation                                            AttachType;                                              // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bWeldSimulatedBodies;                                    // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.IsVisible
	 */
	struct USceneComponent_IsVisible_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.IsSimulatingPhysics
	 */
	struct USceneComponent_IsSimulatingPhysics_Params
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.IsAnySimulatingPhysics
	 */
	struct USceneComponent_IsAnySimulatingPhysics_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.GetWorldLocation
	 */
	struct USceneComponent_GetWorldLocation_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.GetUpVector
	 */
	struct USceneComponent_GetUpVector_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.GetSocketTransform
	 */
	struct USceneComponent_GetSocketTransform_Params
	{
	public:
		class FName                                                InSocketName;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ERelativeTransformSpace                                    TransformSpace;                                          // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_37Z4[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          ReturnValue;                                             // 0x0010(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.GetSocketRotation
	 */
	struct USceneComponent_GetSocketRotation_Params
	{
	public:
		class FName                                                InSocketName;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.GetSocketQuaternion
	 */
	struct USceneComponent_GetSocketQuaternion_Params
	{
	public:
		class FName                                                InSocketName;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_LES0[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FQuat                                               ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.GetSocketLocation
	 */
	struct USceneComponent_GetSocketLocation_Params
	{
	public:
		class FName                                                InSocketName;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.GetRightVector
	 */
	struct USceneComponent_GetRightVector_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.GetRelativeTransform
	 */
	struct USceneComponent_GetRelativeTransform_Params
	{
	public:
		struct FTransform                                          ReturnValue;                                             // 0x0000(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.GetPhysicsVolume
	 */
	struct USceneComponent_GetPhysicsVolume_Params
	{
	public:
		class APhysicsVolume*                                      ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.GetParentComponents
	 */
	struct USceneComponent_GetParentComponents_Params
	{
	public:
		TArray<class USceneComponent*>                             Parents;                                                 // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
	};

	/**
	 * Function Engine.SceneComponent.GetNumChildrenComponents
	 */
	struct USceneComponent_GetNumChildrenComponents_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.GetForwardVector
	 */
	struct USceneComponent_GetForwardVector_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.GetComponentVelocity
	 */
	struct USceneComponent_GetComponentVelocity_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.GetChildrenComponents
	 */
	struct USceneComponent_GetChildrenComponents_Params
	{
	public:
		bool                                                       bIncludeAllDescendants;                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_M9W5[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class USceneComponent*>                             Children;                                                // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
	};

	/**
	 * Function Engine.SceneComponent.GetChildComponent
	 */
	struct USceneComponent_GetChildComponent_Params
	{
	public:
		int32_t                                                    ChildIndex;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_LPLM[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class USceneComponent*                                     ReturnValue;                                             // 0x0008(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.GetAttachParent
	 */
	struct USceneComponent_GetAttachParent_Params
	{
	public:
		class USceneComponent*                                     ReturnValue;                                             // 0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.GetAllSocketNames
	 */
	struct USceneComponent_GetAllSocketNames_Params
	{
	public:
		TArray<class FName>                                        ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.SceneComponent.DoesSocketExist
	 */
	struct USceneComponent_DoesSocketExist_Params
	{
	public:
		class FName                                                InSocketName;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.DetachFromParent
	 */
	struct USceneComponent_DetachFromParent_Params
	{
	public:
		bool                                                       bMaintainWorldPosition;                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.BP_GetCollisionEnabled
	 */
	struct USceneComponent_BP_GetCollisionEnabled_Params
	{
	public:
		ECollisionEnabled                                          ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.AddWorldTransform
	 */
	struct USceneComponent_AddWorldTransform_Params
	{
	public:
		struct FTransform                                          DeltaTransform;                                          // 0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.AddWorldRotation
	 */
	struct USceneComponent_AddWorldRotation_Params
	{
	public:
		struct FRotator                                            DeltaRotation;                                           // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.AddWorldOffset
	 */
	struct USceneComponent_AddWorldOffset_Params
	{
	public:
		struct FVector                                             DeltaLocation;                                           // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.AddRelativeRotation
	 */
	struct USceneComponent_AddRelativeRotation_Params
	{
	public:
		struct FRotator                                            DeltaRotation;                                           // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.AddRelativeLocation
	 */
	struct USceneComponent_AddRelativeLocation_Params
	{
	public:
		struct FVector                                             DeltaLocation;                                           // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.AddLocalTransform
	 */
	struct USceneComponent_AddLocalTransform_Params
	{
	public:
		struct FTransform                                          DeltaTransform;                                          // 0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.AddLocalRotation
	 */
	struct USceneComponent_AddLocalRotation_Params
	{
	public:
		struct FRotator                                            DeltaRotation;                                           // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneComponent.AddLocalOffset
	 */
	struct USceneComponent_AddLocalOffset_Params
	{
	public:
		struct FVector                                             DeltaLocation;                                           // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSweep;                                                  // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.WasRecentlyVisible
	 */
	struct UPrimitiveComponent_WasRecentlyVisible_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.WakeRigidBody
	 */
	struct UPrimitiveComponent_WakeRigidBody_Params
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.WakeAllRigidBodies
	 */
	struct UPrimitiveComponent_WakeAllRigidBodies_Params
	{	};

	/**
	 * Function Engine.PrimitiveComponent.SetTranslucentSortPriority
	 */
	struct UPrimitiveComponent_SetTranslucentSortPriority_Params
	{
	public:
		int32_t                                                    NewTranslucentSortPriority;                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.SetSimulatePhysics
	 */
	struct UPrimitiveComponent_SetSimulatePhysics_Params
	{
	public:
		bool                                                       bSimulate;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.SetRenderCustomDepth
	 */
	struct UPrimitiveComponent_SetRenderCustomDepth_Params
	{
	public:
		bool                                                       bValue;                                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.SetPhysMaterialOverride
	 */
	struct UPrimitiveComponent_SetPhysMaterialOverride_Params
	{
	public:
		class UPhysicalMaterial*                                   NewPhysMaterial;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.SetPhysicsMaxAngularVelocity
	 */
	struct UPrimitiveComponent_SetPhysicsMaxAngularVelocity_Params
	{
	public:
		float                                                      NewMaxAngVel;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAddToCurrent;                                           // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CGZB[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FName                                                BoneName;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.SetPhysicsLinearVelocity
	 */
	struct UPrimitiveComponent_SetPhysicsLinearVelocity_Params
	{
	public:
		struct FVector                                             NewVel;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAddToCurrent;                                           // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_Y08P[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FName                                                BoneName;                                                // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.SetPhysicsAngularVelocity
	 */
	struct UPrimitiveComponent_SetPhysicsAngularVelocity_Params
	{
	public:
		struct FVector                                             NewAngVel;                                               // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAddToCurrent;                                           // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KE9S[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FName                                                BoneName;                                                // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.SetOwnerNoSee
	 */
	struct UPrimitiveComponent_SetOwnerNoSee_Params
	{
	public:
		bool                                                       bNewOwnerNoSee;                                          // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.SetOnlyOwnerSee
	 */
	struct UPrimitiveComponent_SetOnlyOwnerSee_Params
	{
	public:
		bool                                                       bNewOnlyOwnerSee;                                        // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.SetNotifyRigidBodyCollision
	 */
	struct UPrimitiveComponent_SetNotifyRigidBodyCollision_Params
	{
	public:
		bool                                                       bNewNotifyRigidBodyCollision;                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.SetMaterial
	 */
	struct UPrimitiveComponent_SetMaterial_Params
	{
	public:
		int32_t                                                    ElementIndex;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1OH4[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UMaterialInterface*                                  Material;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.SetLinearDamping
	 */
	struct UPrimitiveComponent_SetLinearDamping_Params
	{
	public:
		float                                                      InDamping;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.SetEnableGravity
	 */
	struct UPrimitiveComponent_SetEnableGravity_Params
	{
	public:
		bool                                                       bGravityEnabled;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.SetCustomDepthStencilValue
	 */
	struct UPrimitiveComponent_SetCustomDepthStencilValue_Params
	{
	public:
		int32_t                                                    Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.SetCollisionResponseToChannel
	 */
	struct UPrimitiveComponent_SetCollisionResponseToChannel_Params
	{
	public:
		ECollisionChannel                                          Channel;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionResponse                                         NewResponse;                                             // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.SetCollisionResponseToAllChannels
	 */
	struct UPrimitiveComponent_SetCollisionResponseToAllChannels_Params
	{
	public:
		ECollisionResponse                                         NewResponse;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.SetCollisionResponseSet
	 */
	struct UPrimitiveComponent_SetCollisionResponseSet_Params
	{
	public:
		struct FCollisionResponseSet                               Responses;                                               // 0x0000(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function Engine.PrimitiveComponent.SetCollisionProfileName
	 */
	struct UPrimitiveComponent_SetCollisionProfileName_Params
	{
	public:
		class FName                                                InCollisionProfileName;                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.SetCollisionObjectType
	 */
	struct UPrimitiveComponent_SetCollisionObjectType_Params
	{
	public:
		ECollisionChannel                                          Channel;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.SetCollisionEnabled
	 */
	struct UPrimitiveComponent_SetCollisionEnabled_Params
	{
	public:
		ECollisionEnabled                                          NewType;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.SetCastShadow
	 */
	struct UPrimitiveComponent_SetCastShadow_Params
	{
	public:
		bool                                                       NewCastShadow;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.SetAngularDamping
	 */
	struct UPrimitiveComponent_SetAngularDamping_Params
	{
	public:
		float                                                      InDamping;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.SetAllPhysicsLinearVelocity
	 */
	struct UPrimitiveComponent_SetAllPhysicsLinearVelocity_Params
	{
	public:
		struct FVector                                             NewVel;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAddToCurrent;                                           // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.PutRigidBodyToSleep
	 */
	struct UPrimitiveComponent_PutRigidBodyToSleep_Params
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.K2_LineTraceComponent
	 */
	struct UPrimitiveComponent_K2_LineTraceComponent_Params
	{
	public:
		struct FVector                                             TraceStart;                                              // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             TraceEnd;                                                // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bShowTrace;                                              // 0x0019(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XM0K[0x2];                                   // 0x001A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             HitLocation;                                             // 0x001C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             HitNormal;                                               // 0x0028(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                BoneName;                                                // 0x0034(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x003C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.IsGravityEnabled
	 */
	struct UPrimitiveComponent_IsGravityEnabled_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.IgnoreActorWhenMoving
	 */
	struct UPrimitiveComponent_IgnoreActorWhenMoving_Params
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bShouldIgnore;                                           // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.GetWalkableSlopeOverride
	 */
	struct UPrimitiveComponent_GetWalkableSlopeOverride_Params
	{
	public:
		struct FWalkableSlopeOverride                              ReturnValue;                                             // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)
	};

	/**
	 * Function Engine.PrimitiveComponent.GetPhysicsLinearVelocity
	 */
	struct UPrimitiveComponent_GetPhysicsLinearVelocity_Params
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.GetPhysicsAngularVelocity
	 */
	struct UPrimitiveComponent_GetPhysicsAngularVelocity_Params
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.GetOverlappingComponents
	 */
	struct UPrimitiveComponent_GetOverlappingComponents_Params
	{
	public:
		TArray<class UPrimitiveComponent*>                         InOverlappingComponents;                                 // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
	};

	/**
	 * Function Engine.PrimitiveComponent.GetOverlappingActors
	 */
	struct UPrimitiveComponent_GetOverlappingActors_Params
	{
	public:
		TArray<class AActor*>                                      OverlappingActors;                                       // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
		class UClass*                                              ClassFilter;                                             // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.GetOverlapInfos
	 */
	struct UPrimitiveComponent_GetOverlapInfos_Params
	{
	public:
		TArray<struct FOverlapInfo>                                ReturnValue;                                             // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)
	};

	/**
	 * Function Engine.PrimitiveComponent.GetNumMaterials
	 */
	struct UPrimitiveComponent_GetNumMaterials_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.GetMoveIgnoreActors
	 */
	struct UPrimitiveComponent_GetMoveIgnoreActors_Params
	{
	public:
		TArray<TWeakObjectPtr<class AActor>>                       ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.PrimitiveComponent.GetMaterial
	 */
	struct UPrimitiveComponent_GetMaterial_Params
	{
	public:
		int32_t                                                    ElementIndex;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7L0E[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UMaterialInterface*                                  ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.GetMass
	 */
	struct UPrimitiveComponent_GetMass_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.GetLinearDamping
	 */
	struct UPrimitiveComponent_GetLinearDamping_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.GetCollisionResponseSet
	 */
	struct UPrimitiveComponent_GetCollisionResponseSet_Params
	{
	public:
		struct FCollisionResponseSet                               OutResponses;                                            // 0x0000(0x0020)  (Parm, OutParm)
	};

	/**
	 * Function Engine.PrimitiveComponent.GetCollisionProfileName
	 */
	struct UPrimitiveComponent_GetCollisionProfileName_Params
	{
	public:
		class FName                                                ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.GetAngularDamping
	 */
	struct UPrimitiveComponent_GetAngularDamping_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.CreateDynamicMaterialInstance
	 */
	struct UPrimitiveComponent_CreateDynamicMaterialInstance_Params
	{
	public:
		int32_t                                                    ElementIndex;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7TVF[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UMaterialInterface*                                  SourceMaterial;                                          // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialInstanceDynamic*                            ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.CreateAndSetMaterialInstanceDynamicFromMaterial
	 */
	struct UPrimitiveComponent_CreateAndSetMaterialInstanceDynamicFromMaterial_Params
	{
	public:
		int32_t                                                    ElementIndex;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QZX2[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UMaterialInterface*                                  Parent;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialInstanceDynamic*                            ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.CreateAndSetMaterialInstanceDynamic
	 */
	struct UPrimitiveComponent_CreateAndSetMaterialInstanceDynamic_Params
	{
	public:
		int32_t                                                    ElementIndex;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KHYU[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UMaterialInstanceDynamic*                            ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.ComponentOnReleasedSignature__DelegateSignature
	 */
	struct UPrimitiveComponent_ComponentOnReleasedSignature__DelegateSignature_Params
	{
	public:
		class UPrimitiveComponent*                                 TouchedComponent;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.ComponentOnInputTouchEndSignature__DelegateSignature
	 */
	struct UPrimitiveComponent_ComponentOnInputTouchEndSignature__DelegateSignature_Params
	{
	public:
		ETouchIndex                                                FingerIndex;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XNXT[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimitiveComponent*                                 TouchedComponent;                                        // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.ComponentOnInputTouchBeginSignature__DelegateSignature
	 */
	struct UPrimitiveComponent_ComponentOnInputTouchBeginSignature__DelegateSignature_Params
	{
	public:
		ETouchIndex                                                FingerIndex;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7IKM[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimitiveComponent*                                 TouchedComponent;                                        // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.ComponentOnClickedSignature__DelegateSignature
	 */
	struct UPrimitiveComponent_ComponentOnClickedSignature__DelegateSignature_Params
	{
	public:
		class UPrimitiveComponent*                                 TouchedComponent;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.ComponentHitSignature__DelegateSignature
	 */
	struct UPrimitiveComponent_ComponentHitSignature__DelegateSignature_Params
	{
	public:
		class AActor*                                              OtherActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FVector                                             NormalImpulse;                                           // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_BYYL[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          Hit;                                                     // 0x0020(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function Engine.PrimitiveComponent.ComponentEndTouchOverSignature__DelegateSignature
	 */
	struct UPrimitiveComponent_ComponentEndTouchOverSignature__DelegateSignature_Params
	{
	public:
		ETouchIndex                                                FingerIndex;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZXNP[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimitiveComponent*                                 TouchedComponent;                                        // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.ComponentEndOverlapSignature__DelegateSignature
	 */
	struct UPrimitiveComponent_ComponentEndOverlapSignature__DelegateSignature_Params
	{
	public:
		class AActor*                                              OtherActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    OtherBodyIndex;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.ComponentEndCursorOverSignature__DelegateSignature
	 */
	struct UPrimitiveComponent_ComponentEndCursorOverSignature__DelegateSignature_Params
	{
	public:
		class UPrimitiveComponent*                                 TouchedComponent;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.ComponentBeginTouchOverSignature__DelegateSignature
	 */
	struct UPrimitiveComponent_ComponentBeginTouchOverSignature__DelegateSignature_Params
	{
	public:
		ETouchIndex                                                FingerIndex;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_RWQ3[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimitiveComponent*                                 TouchedComponent;                                        // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.ComponentBeginOverlapSignature__DelegateSignature
	 */
	struct UPrimitiveComponent_ComponentBeginOverlapSignature__DelegateSignature_Params
	{
	public:
		class AActor*                                              OtherActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    OtherBodyIndex;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFromSweep;                                              // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_MU2B[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          SweepResult;                                             // 0x0018(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function Engine.PrimitiveComponent.ComponentBeginCursorOverSignature__DelegateSignature
	 */
	struct UPrimitiveComponent_ComponentBeginCursorOverSignature__DelegateSignature_Params
	{
	public:
		class UPrimitiveComponent*                                 TouchedComponent;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.ClearMoveIgnoreActors
	 */
	struct UPrimitiveComponent_ClearMoveIgnoreActors_Params
	{	};

	/**
	 * Function Engine.PrimitiveComponent.AddTorque
	 */
	struct UPrimitiveComponent_AddTorque_Params
	{
	public:
		struct FVector                                             Torque;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                BoneName;                                                // 0x000C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.AddRadialImpulse
	 */
	struct UPrimitiveComponent_AddRadialImpulse_Params
	{
	public:
		struct FVector                                             Origin;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Strength;                                                // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ERadialImpulseFalloff                                      Falloff;                                                 // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bVelChange;                                              // 0x0015(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.AddRadialForce
	 */
	struct UPrimitiveComponent_AddRadialForce_Params
	{
	public:
		struct FVector                                             Origin;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Strength;                                                // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ERadialImpulseFalloff                                      Falloff;                                                 // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.AddImpulseAtLocation
	 */
	struct UPrimitiveComponent_AddImpulseAtLocation_Params
	{
	public:
		struct FVector                                             Impulse;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                BoneName;                                                // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.AddImpulse
	 */
	struct UPrimitiveComponent_AddImpulse_Params
	{
	public:
		struct FVector                                             Impulse;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                BoneName;                                                // 0x000C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bVelChange;                                              // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.AddForceAtLocation
	 */
	struct UPrimitiveComponent_AddForceAtLocation_Params
	{
	public:
		struct FVector                                             Force;                                                   // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                BoneName;                                                // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PrimitiveComponent.AddForce
	 */
	struct UPrimitiveComponent_AddForce_Params
	{
	public:
		struct FVector                                             Force;                                                   // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                BoneName;                                                // 0x000C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkinnedMeshComponent.UnHideBoneByName
	 */
	struct USkinnedMeshComponent_UnHideBoneByName_Params
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkinnedMeshComponent.TransformToBoneSpace
	 */
	struct USkinnedMeshComponent_TransformToBoneSpace_Params
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             InPosition;                                              // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            InRotation;                                              // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             OutPosition;                                             // 0x0020(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            OutRotation;                                             // 0x002C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkinnedMeshComponent.TransformFromBoneSpace
	 */
	struct USkinnedMeshComponent_TransformFromBoneSpace_Params
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             InPosition;                                              // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            InRotation;                                              // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             OutPosition;                                             // 0x0020(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            OutRotation;                                             // 0x002C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkinnedMeshComponent.SetSkeletalMesh
	 */
	struct USkinnedMeshComponent_SetSkeletalMesh_Params
	{
	public:
		class USkeletalMesh*                                       NewMesh;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkinnedMeshComponent.SetPhysicsAsset
	 */
	struct USkinnedMeshComponent_SetPhysicsAsset_Params
	{
	public:
		class UPhysicsAsset*                                       NewPhysicsAsset;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceReinit;                                            // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkinnedMeshComponent.SetMasterPoseComponent
	 */
	struct USkinnedMeshComponent_SetMasterPoseComponent_Params
	{
	public:
		class USkinnedMeshComponent*                               NewMasterBoneComponent;                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkinnedMeshComponent.IsBoneHiddenByName
	 */
	struct USkinnedMeshComponent_IsBoneHiddenByName_Params
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkinnedMeshComponent.HideBoneByName
	 */
	struct USkinnedMeshComponent_HideBoneByName_Params
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EPhysBodyOp                                                PhysBodyOption;                                          // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkinnedMeshComponent.GetSocketBoneName
	 */
	struct USkinnedMeshComponent_GetSocketBoneName_Params
	{
	public:
		class FName                                                InSocketName;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkinnedMeshComponent.GetParentBone
	 */
	struct USkinnedMeshComponent_GetParentBone_Params
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkinnedMeshComponent.GetNumBones
	 */
	struct USkinnedMeshComponent_GetNumBones_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkinnedMeshComponent.GetBoneName
	 */
	struct USkinnedMeshComponent_GetBoneName_Params
	{
	public:
		int32_t                                                    BoneIndex;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ReturnValue;                                             // 0x0004(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkinnedMeshComponent.GetBoneIndex
	 */
	struct USkinnedMeshComponent_GetBoneIndex_Params
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.UnlockAIResources
	 */
	struct UAnimInstance_UnlockAIResources_Params
	{
	public:
		bool                                                       bUnlockMovement;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       UnlockAILogic;                                           // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.TryGetPawnOwner
	 */
	struct UAnimInstance_TryGetPawnOwner_Params
	{
	public:
		class APawn*                                               ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.StopSlotAnimation
	 */
	struct UAnimInstance_StopSlotAnimation_Params
	{
	public:
		float                                                      InBlendOutTime;                                          // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.SetMorphTarget
	 */
	struct UAnimInstance_SetMorphTarget_Params
	{
	public:
		class FName                                                MorphTargetName;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Value;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.PlaySlotAnimation
	 */
	struct UAnimInstance_PlaySlotAnimation_Params
	{
	public:
		class UAnimSequenceBase*                                   Asset;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                SlotNodeName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BlendInTime;                                             // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BlendOutTime;                                            // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InPlayRate;                                              // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x001C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.OnMontageEndedMCDelegate__DelegateSignature
	 */
	struct UAnimInstance_OnMontageEndedMCDelegate__DelegateSignature_Params
	{
	public:
		class UAnimMontage*                                        Montage;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bInterrupted;                                            // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.OnMontageBlendingOutStartedMCDelegate__DelegateSignature
	 */
	struct UAnimInstance_OnMontageBlendingOutStartedMCDelegate__DelegateSignature_Params
	{
	public:
		class UAnimMontage*                                        Montage;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bInterrupted;                                            // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.Montage_Stop
	 */
	struct UAnimInstance_Montage_Stop_Params
	{
	public:
		float                                                      InBlendOutTime;                                          // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_O2Q5[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UAnimMontage*                                        Montage;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.Montage_SetPosition
	 */
	struct UAnimInstance_Montage_SetPosition_Params
	{
	public:
		class UAnimMontage*                                        Montage;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      NewPosition;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.Montage_SetPlayRate
	 */
	struct UAnimInstance_Montage_SetPlayRate_Params
	{
	public:
		class UAnimMontage*                                        Montage;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      NewPlayRate;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.Montage_SetNextSection
	 */
	struct UAnimInstance_Montage_SetNextSection_Params
	{
	public:
		class FName                                                SectionNameToChange;                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                NextSection;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UAnimMontage*                                        Montage;                                                 // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.Montage_Play_WithBlending
	 */
	struct UAnimInstance_Montage_Play_WithBlending_Params
	{
	public:
		class UAnimMontage*                                        MontageToPlay;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BlendInTime;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BlendOutTime;                                            // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InPlayRate;                                              // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPauseOnFinish;                                          // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_361V[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.Montage_Play
	 */
	struct UAnimInstance_Montage_Play_Params
	{
	public:
		class UAnimMontage*                                        MontageToPlay;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InPlayRate;                                              // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPauseOnFinish;                                          // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_J4CR[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.Montage_JumpToSectionsEnd
	 */
	struct UAnimInstance_Montage_JumpToSectionsEnd_Params
	{
	public:
		class FName                                                SectionName;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UAnimMontage*                                        Montage;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.Montage_JumpToSection
	 */
	struct UAnimInstance_Montage_JumpToSection_Params
	{
	public:
		class FName                                                SectionName;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UAnimMontage*                                        Montage;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.Montage_IsPlaying
	 */
	struct UAnimInstance_Montage_IsPlaying_Params
	{
	public:
		class UAnimMontage*                                        Montage;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TimeFromEndToConsiderFinished;                           // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.Montage_IsActive
	 */
	struct UAnimInstance_Montage_IsActive_Params
	{
	public:
		class UAnimMontage*                                        Montage;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.Montage_GetPosition
	 */
	struct UAnimInstance_Montage_GetPosition_Params
	{
	public:
		class UAnimMontage*                                        Montage;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.Montage_GetPlayRate
	 */
	struct UAnimInstance_Montage_GetPlayRate_Params
	{
	public:
		class UAnimMontage*                                        Montage;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.Montage_GetIsStopped
	 */
	struct UAnimInstance_Montage_GetIsStopped_Params
	{
	public:
		class UAnimMontage*                                        Montage;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.Montage_GetCurrentTime
	 */
	struct UAnimInstance_Montage_GetCurrentTime_Params
	{
	public:
		class UAnimMontage*                                        Montage;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MontageTimeRemaining;                                    // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TotalMontageDuration;                                    // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.Montage_GetCurrentSection
	 */
	struct UAnimInstance_Montage_GetCurrentSection_Params
	{
	public:
		class UAnimMontage*                                        Montage;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.LockAIResources
	 */
	struct UAnimInstance_LockAIResources_Params
	{
	public:
		bool                                                       bLockMovement;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       LockAILogic;                                             // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.IsPlayingSlotAnimation
	 */
	struct UAnimInstance_IsPlayingSlotAnimation_Params
	{
	public:
		class UAnimSequenceBase*                                   Asset;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                SlotNodeName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.GetStateWeight
	 */
	struct UAnimInstance_GetStateWeight_Params
	{
	public:
		int32_t                                                    MachineIndex;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    StateIndex;                                              // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.GetOwningComponent
	 */
	struct UAnimInstance_GetOwningComponent_Params
	{
	public:
		class USkeletalMeshComponent*                              ReturnValue;                                             // 0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.GetOwningActor
	 */
	struct UAnimInstance_GetOwningActor_Params
	{
	public:
		class AActor*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.GetCurveValue
	 */
	struct UAnimInstance_GetCurveValue_Params
	{
	public:
		class FName                                                CurveName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.GetCurrentStateElapsedTime
	 */
	struct UAnimInstance_GetCurrentStateElapsedTime_Params
	{
	public:
		int32_t                                                    MachineIndex;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.GetCurrentActiveMontage
	 */
	struct UAnimInstance_GetCurrentActiveMontage_Params
	{
	public:
		class UAnimMontage*                                        ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.GetAnimAssetPlayerTimeFromEndFraction
	 */
	struct UAnimInstance_GetAnimAssetPlayerTimeFromEndFraction_Params
	{
	public:
		class UAnimationAsset*                                     AnimAsset;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CurrentTime;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.GetAnimAssetPlayerTimeFromEnd
	 */
	struct UAnimInstance_GetAnimAssetPlayerTimeFromEnd_Params
	{
	public:
		class UAnimationAsset*                                     AnimAsset;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CurrentTime;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.GetAnimAssetPlayerTimeFraction
	 */
	struct UAnimInstance_GetAnimAssetPlayerTimeFraction_Params
	{
	public:
		class UAnimationAsset*                                     AnimAsset;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CurrentTime;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.GetAnimAssetPlayerLength
	 */
	struct UAnimInstance_GetAnimAssetPlayerLength_Params
	{
	public:
		class UAnimationAsset*                                     AnimAsset;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.ClearMorphTargets
	 */
	struct UAnimInstance_ClearMorphTargets_Params
	{	};

	/**
	 * Function Engine.AnimInstance.CalculateDirection
	 */
	struct UAnimInstance_CalculateDirection_Params
	{
	public:
		struct FVector                                             Velocity;                                                // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            BaseRotation;                                            // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.BlueprintUpdateAnimation
	 */
	struct UAnimInstance_BlueprintUpdateAnimation_Params
	{
	public:
		float                                                      DeltaTimeX;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.BlueprintTriggerAnimationEvent
	 */
	struct UAnimInstance_BlueprintTriggerAnimationEvent_Params
	{
	public:
		class FName                                                AnimationEventName;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      playedAnimLength;                                        // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.BlueprintPlayAnimationEvent
	 */
	struct UAnimInstance_BlueprintPlayAnimationEvent_Params
	{
	public:
		class UAnimMontage*                                        AnimationMontage;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      PlayRate;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      playedAnimLength;                                        // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimInstance.BlueprintInitializeAnimation
	 */
	struct UAnimInstance_BlueprintInitializeAnimation_Params
	{	};

	/**
	 * Function Engine.AnimInstance.AnimNotify_Sound
	 */
	struct UAnimInstance_AnimNotify_Sound_Params
	{
	public:
		class UAnimNotify*                                         Notify;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimNotify.Received_Notify
	 */
	struct UAnimNotify_Received_Notify_Params
	{
	public:
		class USkeletalMeshComponent*                              MeshComp;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UAnimSequenceBase*                                   Animation;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimNotify.GetNotifyName
	 */
	struct UAnimNotify_GetNotifyName_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.AnimNotifyState.Received_NotifyTick
	 */
	struct UAnimNotifyState_Received_NotifyTick_Params
	{
	public:
		class USkeletalMeshComponent*                              MeshComp;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UAnimSequenceBase*                                   Animation;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      FrameDeltaTime;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimNotifyState.Received_NotifyEnd
	 */
	struct UAnimNotifyState_Received_NotifyEnd_Params
	{
	public:
		class USkeletalMeshComponent*                              MeshComp;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UAnimSequenceBase*                                   Animation;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimNotifyState.Received_NotifyBegin
	 */
	struct UAnimNotifyState_Received_NotifyBegin_Params
	{
	public:
		class USkeletalMeshComponent*                              MeshComp;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UAnimSequenceBase*                                   Animation;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TotalDuration;                                           // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimNotifyState.GetNotifyName
	 */
	struct UAnimNotifyState_GetNotifyName_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.CurveBase.GetValueRange
	 */
	struct UCurveBase_GetValueRange_Params
	{
	public:
		float                                                      MinValue;                                                // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxValue;                                                // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CurveBase.GetTimeRange
	 */
	struct UCurveBase_GetTimeRange_Params
	{
	public:
		float                                                      MinTime;                                                 // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxTime;                                                 // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CurveFloat.GetFloatValue
	 */
	struct UCurveFloat_GetFloatValue_Params
	{
	public:
		float                                                      InTime;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerCameraManager.StopCameraAnimInst
	 */
	struct APlayerCameraManager_StopCameraAnimInst_Params
	{
	public:
		class UCameraAnimInst*                                     AnimInst;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bImmediate;                                              // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerCameraManager.StopAllInstancesOfCameraAnim
	 */
	struct APlayerCameraManager_StopAllInstancesOfCameraAnim_Params
	{
	public:
		class UCameraAnim*                                         Anim;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bImmediate;                                              // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerCameraManager.StopAllCameraAnims
	 */
	struct APlayerCameraManager_StopAllCameraAnims_Params
	{
	public:
		bool                                                       bImmediate;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerCameraManager.RemoveCameraLensEffect
	 */
	struct APlayerCameraManager_RemoveCameraLensEffect_Params
	{
	public:
		class AEmitterCameraLensEffectBase*                        Emitter;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerCameraManager.PlayCameraAnim
	 */
	struct APlayerCameraManager_PlayCameraAnim_Params
	{
	public:
		class UCameraAnim*                                         Anim;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Rate;                                                    // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Scale;                                                   // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BlendInTime;                                             // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BlendOutTime;                                            // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bLoop;                                                   // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRandomStartTime;                                        // 0x0019(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_OB2Y[0x2];                                   // 0x001A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      Duration;                                                // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECameraAnimPlaySpace                                       PlaySpace;                                               // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ULES[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRotator                                            UserPlaySpaceRot;                                        // 0x0024(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UCameraAnimInst*                                     ReturnValue;                                             // 0x0030(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerCameraManager.GetWorldCameraShakeScale
	 */
	struct APlayerCameraManager_GetWorldCameraShakeScale_Params
	{
	public:
		bool                                                       bForceReturnUserSettingScale;                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_N3XU[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerCameraManager.GetOwningPlayerController
	 */
	struct APlayerCameraManager_GetOwningPlayerController_Params
	{
	public:
		class APlayerController*                                   ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerCameraManager.GetCameraRotation
	 */
	struct APlayerCameraManager_GetCameraRotation_Params
	{
	public:
		struct FRotator                                            ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerCameraManager.GetCameraLocation
	 */
	struct APlayerCameraManager_GetCameraLocation_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerCameraManager.ClearCameraLensEffects
	 */
	struct APlayerCameraManager_ClearCameraLensEffects_Params
	{	};

	/**
	 * Function Engine.PlayerCameraManager.BlueprintUpdateCamera
	 */
	struct APlayerCameraManager_BlueprintUpdateCamera_Params
	{
	public:
		class AActor*                                              CameraTarget;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NewCameraLocation;                                       // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            NewCameraRotation;                                       // 0x0014(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      NewCameraFOV;                                            // 0x0020(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0024(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerCameraManager.AddCameraLensEffect
	 */
	struct APlayerCameraManager_AddCameraLensEffect_Params
	{
	public:
		class UClass*                                              LensEffectEmitterClass;                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AEmitterCameraLensEffectBase*                        ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.WasInputKeyJustReleased
	 */
	struct APlayerController_WasInputKeyJustReleased_Params
	{
	public:
		struct FKey                                                Key;                                                     // 0x0000(0x0018)  (Parm)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.WasInputKeyJustPressed
	 */
	struct APlayerController_WasInputKeyJustPressed_Params
	{
	public:
		struct FKey                                                Key;                                                     // 0x0000(0x0018)  (Parm)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ToggleSpeaking
	 */
	struct APlayerController_ToggleSpeaking_Params
	{
	public:
		bool                                                       bSpeaking;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.SwitchLevel
	 */
	struct APlayerController_SwitchLevel_Params
	{
	public:
		class FString                                              URL;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.PlayerController.StartFire
	 */
	struct APlayerController_StartFire_Params
	{
	public:
		unsigned char                                              FireModeNum;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.SetVirtualJoystickVisibility
	 */
	struct APlayerController_SetVirtualJoystickVisibility_Params
	{
	public:
		bool                                                       bVisible;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.SetViewTargetWithBlend
	 */
	struct APlayerController_SetViewTargetWithBlend_Params
	{
	public:
		class AActor*                                              NewViewTarget;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BlendTime;                                               // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EViewTargetBlendFunction                                   BlendFunc;                                               // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NM2D[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      BlendExp;                                                // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bLockOutgoing;                                           // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.SetName
	 */
	struct APlayerController_SetName_Params
	{
	public:
		class FString                                              S;                                                       // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.PlayerController.SetIgnoreMoveInput
	 */
	struct APlayerController_SetIgnoreMoveInput_Params
	{
	public:
		bool                                                       bNewMoveInput;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.SetIgnoreLookInput
	 */
	struct APlayerController_SetIgnoreLookInput_Params
	{
	public:
		bool                                                       bNewLookInput;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.SetAudioListenerOverride
	 */
	struct APlayerController_SetAudioListenerOverride_Params
	{
	public:
		class USceneComponent*                                     attachToComponent;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ServerViewSelf
	 */
	struct APlayerController_ServerViewSelf_Params
	{
	public:
		struct FViewTargetTransitionParams                         TransitionParams;                                        // 0x0000(0x0010)  (Parm)
	};

	/**
	 * Function Engine.PlayerController.ServerViewPrevPlayer
	 */
	struct APlayerController_ServerViewPrevPlayer_Params
	{	};

	/**
	 * Function Engine.PlayerController.ServerViewNextPlayer
	 */
	struct APlayerController_ServerViewNextPlayer_Params
	{	};

	/**
	 * Function Engine.PlayerController.ServerVerifyViewTarget
	 */
	struct APlayerController_ServerVerifyViewTarget_Params
	{	};

	/**
	 * Function Engine.PlayerController.ServerUpdateLevelVisibility
	 */
	struct APlayerController_ServerUpdateLevelVisibility_Params
	{
	public:
		class FName                                                PackageName;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsVisible;                                              // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ServerUpdateCamera
	 */
	struct APlayerController_ServerUpdateCamera_Params
	{
	public:
		struct FVector_NetQuantize                                 CamLoc;                                                  // 0x0000(0x000C)  (Parm)
		int32_t                                                    CamPitchAndYaw;                                          // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ServerUnmutePlayer
	 */
	struct APlayerController_ServerUnmutePlayer_Params
	{
	public:
		struct FUniqueNetIdRepl                                    PlayerId;                                                // 0x0000(0x0010)  (Parm)
	};

	/**
	 * Function Engine.PlayerController.ServerToggleAILogging
	 */
	struct APlayerController_ServerToggleAILogging_Params
	{	};

	/**
	 * Function Engine.PlayerController.ServerShortTimeout
	 */
	struct APlayerController_ServerShortTimeout_Params
	{	};

	/**
	 * Function Engine.PlayerController.ServerSetSpectatorLocation
	 */
	struct APlayerController_ServerSetSpectatorLocation_Params
	{
	public:
		struct FVector                                             NewLoc;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ServerRestartPlayer
	 */
	struct APlayerController_ServerRestartPlayer_Params
	{	};

	/**
	 * Function Engine.PlayerController.ServerReceivedPlayerControllerAck
	 */
	struct APlayerController_ServerReceivedPlayerControllerAck_Params
	{	};

	/**
	 * Function Engine.PlayerController.ServerProcessNetExecCommandUnreliable
	 */
	struct APlayerController_ServerProcessNetExecCommandUnreliable_Params
	{
	public:
		class AActor*                                              forActor;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                CommandName;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FBPNetExecParams                                    ExecParams;                                              // 0x0010(0x0040)  (Parm)
	};

	/**
	 * Function Engine.PlayerController.ServerProcessNetExecCommand
	 */
	struct APlayerController_ServerProcessNetExecCommand_Params
	{
	public:
		class AActor*                                              forActor;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                CommandName;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FBPNetExecParams                                    ExecParams;                                              // 0x0010(0x0040)  (Parm)
	};

	/**
	 * Function Engine.PlayerController.ServerPause
	 */
	struct APlayerController_ServerPause_Params
	{	};

	/**
	 * Function Engine.PlayerController.ServerNotifyLoadedWorld
	 */
	struct APlayerController_ServerNotifyLoadedWorld_Params
	{
	public:
		class FName                                                WorldPackageName;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ServerMutePlayer
	 */
	struct APlayerController_ServerMutePlayer_Params
	{
	public:
		struct FUniqueNetIdRepl                                    PlayerId;                                                // 0x0000(0x0010)  (Parm)
	};

	/**
	 * Function Engine.PlayerController.ServerCheckClientPossession
	 */
	struct APlayerController_ServerCheckClientPossession_Params
	{	};

	/**
	 * Function Engine.PlayerController.ServerChangeName
	 */
	struct APlayerController_ServerChangeName_Params
	{
	public:
		class FString                                              S;                                                       // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.PlayerController.ServerCamera
	 */
	struct APlayerController_ServerCamera_Params
	{
	public:
		class FName                                                NewMode;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ServerAcknowledgePossession
	 */
	struct APlayerController_ServerAcknowledgePossession_Params
	{
	public:
		class APawn*                                               P;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.SendToConsole
	 */
	struct APlayerController_SendToConsole_Params
	{
	public:
		class FString                                              Command;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.PlayerController.RestartLevel
	 */
	struct APlayerController_RestartLevel_Params
	{	};

	/**
	 * Function Engine.PlayerController.ResetIgnoreInputFlags
	 */
	struct APlayerController_ResetIgnoreInputFlags_Params
	{	};

	/**
	 * Function Engine.PlayerController.ProjectWorldLocationToScreen
	 */
	struct APlayerController_ProjectWorldLocationToScreen_Params
	{
	public:
		struct FVector                                             WorldLocation;                                           // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ScreenLocation;                                          // 0x000C(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.PlayDynamicForceFeedback
	 */
	struct APlayerController_PlayDynamicForceFeedback_Params
	{
	public:
		float                                                      Intensity;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAffectsLeftLarge;                                       // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bAffectsLeftSmall;                                       // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bAffectsRightLarge;                                      // 0x000A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bAffectsRightSmall;                                      // 0x000B(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		EDynamicForceFeedbackAction                                Action;                                                  // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1MVN[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FLatentActionInfo                                   LatentInfo;                                              // 0x0010(0x0018)  (Parm)
	};

	/**
	 * Function Engine.PlayerController.Pause
	 */
	struct APlayerController_Pause_Params
	{	};

	/**
	 * Function Engine.PlayerController.NetSpawnActorAtLocation
	 */
	struct APlayerController_NetSpawnActorAtLocation_Params
	{
	public:
		class UClass*                                              anActorClass;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector_NetQuantize                                 AtLocation;                                              // 0x0008(0x000C)  (Parm)
		struct FRotator_NetQuantize                                AtRotation;                                              // 0x0014(0x000C)  (Parm)
		class USceneComponent*                                     attachToComponent;                                       // 0x0020(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    dataIndex;                                               // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                attachSocketName;                                        // 0x002C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.NetConnectionHasActiveActor
	 */
	struct APlayerController_NetConnectionHasActiveActor_Params
	{
	public:
		class AActor*                                              anActor;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.LocalTravel
	 */
	struct APlayerController_LocalTravel_Params
	{
	public:
		class FString                                              URL;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.PlayerController.IsMoveInputIgnored
	 */
	struct APlayerController_IsMoveInputIgnored_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.IsLookInputIgnored
	 */
	struct APlayerController_IsLookInputIgnored_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.IsInputKeyDown
	 */
	struct APlayerController_IsInputKeyDown_Params
	{
	public:
		struct FKey                                                Key;                                                     // 0x0000(0x0018)  (Parm)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.HandleRespawned
	 */
	struct APlayerController_HandleRespawned_Params
	{
	public:
		class APawn*                                               NewPawn;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       IsFirstSpawn;                                            // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.GetViewportSize
	 */
	struct APlayerController_GetViewportSize_Params
	{
	public:
		int32_t                                                    SizeX;                                                   // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    SizeY;                                                   // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.GetMousePosition
	 */
	struct APlayerController_GetMousePosition_Params
	{
	public:
		float                                                      LocationX;                                               // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      LocationY;                                               // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEvenWhenMouseNotAttached;                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.GetInputVectorKeyState
	 */
	struct APlayerController_GetInputVectorKeyState_Params
	{
	public:
		struct FKey                                                Key;                                                     // 0x0000(0x0018)  (Parm)
		struct FVector                                             ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.GetInputTouchState
	 */
	struct APlayerController_GetInputTouchState_Params
	{
	public:
		ETouchIndex                                                FingerIndex;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_66H3[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      LocationX;                                               // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      LocationY;                                               // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsCurrentlyPressed;                                     // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.GetInputMouseDelta
	 */
	struct APlayerController_GetInputMouseDelta_Params
	{
	public:
		float                                                      DeltaX;                                                  // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaY;                                                  // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.GetInputMotionState
	 */
	struct APlayerController_GetInputMotionState_Params
	{
	public:
		struct FVector                                             Tilt;                                                    // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             RotationRate;                                            // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Gravity;                                                 // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Acceleration;                                            // 0x0024(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.GetInputKeyTimeDown
	 */
	struct APlayerController_GetInputKeyTimeDown_Params
	{
	public:
		struct FKey                                                Key;                                                     // 0x0000(0x0018)  (Parm)
		float                                                      ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.GetInputAnalogStickState
	 */
	struct APlayerController_GetInputAnalogStickState_Params
	{
	public:
		EControllerAnalogStick                                     WhichStick;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_HX01[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      StickX;                                                  // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      StickY;                                                  // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.GetInputAnalogKeyState
	 */
	struct APlayerController_GetInputAnalogKeyState_Params
	{
	public:
		struct FKey                                                Key;                                                     // 0x0000(0x0018)  (Parm)
		float                                                      ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.GetHUD
	 */
	struct APlayerController_GetHUD_Params
	{
	public:
		class AHUD*                                                ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.GetHitResultUnderFingerForObjects
	 */
	struct APlayerController_GetHitResultUnderFingerForObjects_Params
	{
	public:
		ETouchIndex                                                FingerIndex;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7V1S[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<EObjectTypeQuery>                                   ObjectTypes;                                             // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bTraceComplex;                                           // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_BQE8[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          HitResult;                                               // 0x0020(0x0088)  (Parm, OutParm)
		bool                                                       ReturnValue;                                             // 0x00A8(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.GetHitResultUnderFingerByChannel
	 */
	struct APlayerController_GetHitResultUnderFingerByChannel_Params
	{
	public:
		ETouchIndex                                                FingerIndex;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ETraceTypeQuery                                            TraceChannel;                                            // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x0002(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_N8JA[0x5];                                   // 0x0003(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          HitResult;                                               // 0x0008(0x0088)  (Parm, OutParm)
		bool                                                       ReturnValue;                                             // 0x0090(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.GetHitResultUnderFinger
	 */
	struct APlayerController_GetHitResultUnderFinger_Params
	{
	public:
		ETouchIndex                                                FingerIndex;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          TraceChannel;                                            // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x0002(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_EWDK[0x5];                                   // 0x0003(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          HitResult;                                               // 0x0008(0x0088)  (Parm, OutParm)
		bool                                                       ReturnValue;                                             // 0x0090(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.GetHitResultUnderCursorForObjects
	 */
	struct APlayerController_GetHitResultUnderCursorForObjects_Params
	{
	public:
		TArray<EObjectTypeQuery>                                   ObjectTypes;                                             // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bTraceComplex;                                           // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QBNU[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          HitResult;                                               // 0x0018(0x0088)  (Parm, OutParm)
		bool                                                       ReturnValue;                                             // 0x00A0(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.GetHitResultUnderCursorByChannel
	 */
	struct APlayerController_GetHitResultUnderCursorByChannel_Params
	{
	public:
		ETraceTypeQuery                                            TraceChannel;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_405L[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          HitResult;                                               // 0x0008(0x0088)  (Parm, OutParm)
		bool                                                       ReturnValue;                                             // 0x0090(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.GetHitResultUnderCursor
	 */
	struct APlayerController_GetHitResultUnderCursor_Params
	{
	public:
		ECollisionChannel                                          TraceChannel;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_SD0W[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          HitResult;                                               // 0x0008(0x0088)  (Parm, OutParm)
		bool                                                       ReturnValue;                                             // 0x0090(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.FOV
	 */
	struct APlayerController_FOV_Params
	{
	public:
		float                                                      NewFOV;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.EnableCheats
	 */
	struct APlayerController_EnableCheats_Params
	{
	public:
		class FString                                              pass;                                                    // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.PlayerController.DeprojectScreenPositionToWorld
	 */
	struct APlayerController_DeprojectScreenPositionToWorld_Params
	{
	public:
		float                                                      ScreenX;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScreenY;                                                 // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             WorldLocation;                                           // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             WorldDirection;                                          // 0x0014(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.DeprojectMousePositionToWorld
	 */
	struct APlayerController_DeprojectMousePositionToWorld_Params
	{
	public:
		struct FVector                                             WorldLocation;                                           // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             WorldDirection;                                          // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.CopyStringToClipboard
	 */
	struct APlayerController_CopyStringToClipboard_Params
	{
	public:
		class FString                                              S;                                                       // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.PlayerController.ConsoleKey
	 */
	struct APlayerController_ConsoleKey_Params
	{
	public:
		struct FKey                                                Key;                                                     // 0x0000(0x0018)  (Parm)
	};

	/**
	 * Function Engine.PlayerController.ClientWasKicked
	 */
	struct APlayerController_ClientWasKicked_Params
	{
	public:
		class FText                                                KickReason;                                              // 0x0000(0x0018)  (ConstParm, Parm)
	};

	/**
	 * Function Engine.PlayerController.ClientVoiceHandshakeComplete
	 */
	struct APlayerController_ClientVoiceHandshakeComplete_Params
	{	};

	/**
	 * Function Engine.PlayerController.ClientUpdateLevelStreamingStatus
	 */
	struct APlayerController_ClientUpdateLevelStreamingStatus_Params
	{
	public:
		class FName                                                PackageName;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bNewShouldBeLoaded;                                      // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bNewShouldBeVisible;                                     // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bNewShouldBlockOnLoad;                                   // 0x000A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_4QNM[0x1];                                   // 0x000B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    LODIndex;                                                // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientUnmutePlayer
	 */
	struct APlayerController_ClientUnmutePlayer_Params
	{
	public:
		struct FUniqueNetIdRepl                                    PlayerId;                                                // 0x0000(0x0010)  (Parm)
	};

	/**
	 * Function Engine.PlayerController.ClientTravelInternal
	 */
	struct APlayerController_ClientTravelInternal_Params
	{
	public:
		class FString                                              URL;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		ETravelType                                                TravelType;                                              // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSeamless;                                               // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_MBLM[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FGuid                                               MapPackageGuid;                                          // 0x0014(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.PlayerController.ClientTravel
	 */
	struct APlayerController_ClientTravel_Params
	{
	public:
		class FString                                              URL;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		ETravelType                                                TravelType;                                              // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSeamless;                                               // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_MIVO[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FGuid                                               MapPackageGuid;                                          // 0x0014(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.PlayerController.ClientTeleportSucceeded
	 */
	struct APlayerController_ClientTeleportSucceeded_Params
	{
	public:
		struct FVector                                             TeleportLoc;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            TeleportRot;                                             // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSimpleTeleport;                                         // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientTeamMessage
	 */
	struct APlayerController_ClientTeamMessage_Params
	{
	public:
		class APlayerState*                                        SenderPlayerState;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              S;                                                       // 0x0008(0x0010)  (Parm, ZeroConstructor)
		class FName                                                Type;                                                    // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MsgLifeTime;                                             // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientStopForceFeedback
	 */
	struct APlayerController_ClientStopForceFeedback_Params
	{
	public:
		class UForceFeedbackEffect*                                ForceFeedbackEffect;                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Tag;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientStopCameraShake
	 */
	struct APlayerController_ClientStopCameraShake_Params
	{
	public:
		class UClass*                                              Shake;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientStopCameraAnim
	 */
	struct APlayerController_ClientStopCameraAnim_Params
	{
	public:
		class UCameraAnim*                                         AnimToStop;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientSpawnCameraLensEffect
	 */
	struct APlayerController_ClientSpawnCameraLensEffect_Params
	{
	public:
		class UClass*                                              LensEffectEmitterClass;                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientSetViewTarget
	 */
	struct APlayerController_ClientSetViewTarget_Params
	{
	public:
		class AActor*                                              A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FViewTargetTransitionParams                         TransitionParams;                                        // 0x0008(0x0010)  (Parm)
	};

	/**
	 * Function Engine.PlayerController.ClientSetHUD
	 */
	struct APlayerController_ClientSetHUD_Params
	{
	public:
		class UClass*                                              NewHUDClass;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientSetForceMipLevelsToBeResident
	 */
	struct APlayerController_ClientSetForceMipLevelsToBeResident_Params
	{
	public:
		class UMaterialInterface*                                  Material;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ForceDuration;                                           // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    CinematicTextureGroups;                                  // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientSetCinematicMode
	 */
	struct APlayerController_ClientSetCinematicMode_Params
	{
	public:
		bool                                                       bInCinematicMode;                                        // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAffectsMovement;                                        // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAffectsTurning;                                         // 0x0002(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAffectsHUD;                                             // 0x0003(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientSetCameraMode
	 */
	struct APlayerController_ClientSetCameraMode_Params
	{
	public:
		class FName                                                NewCamMode;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientSetCameraFade
	 */
	struct APlayerController_ClientSetCameraFade_Params
	{
	public:
		bool                                                       bEnableFading;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_I93W[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FColor                                              FadeColor;                                               // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           FadeAlpha;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      FadeTime;                                                // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFadeAudio;                                              // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientSetBlockOnAsyncLoading
	 */
	struct APlayerController_ClientSetBlockOnAsyncLoading_Params
	{	};

	/**
	 * Function Engine.PlayerController.ClientSendNetExecCommandToServer
	 */
	struct APlayerController_ClientSendNetExecCommandToServer_Params
	{
	public:
		class AActor*                                              forActor;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                CommandName;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FBPNetExecParams                                    ExecParams;                                              // 0x0010(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       bIsReliable;                                             // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientReturnToMainMenu
	 */
	struct APlayerController_ClientReturnToMainMenu_Params
	{
	public:
		class FString                                              ReturnReason;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.PlayerController.ClientRetryClientRestart
	 */
	struct APlayerController_ClientRetryClientRestart_Params
	{
	public:
		class APawn*                                               NewPawn;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientRestart
	 */
	struct APlayerController_ClientRestart_Params
	{
	public:
		class APawn*                                               NewPawn;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientReset
	 */
	struct APlayerController_ClientReset_Params
	{	};

	/**
	 * Function Engine.PlayerController.ClientRepObjRef
	 */
	struct APlayerController_ClientRepObjRef_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientReceiveLocalizedMessage
	 */
	struct APlayerController_ClientReceiveLocalizedMessage_Params
	{
	public:
		class UClass*                                              Message;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Switch;                                                  // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_4IVC[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APlayerState*                                        RelatedPlayerState_2;                                    // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APlayerState*                                        RelatedPlayerState_3;                                    // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObject*                                             OptionalObject;                                          // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientProcessSimpleNetExecCommandUnreliableBP
	 */
	struct APlayerController_ClientProcessSimpleNetExecCommandUnreliableBP_Params
	{
	public:
		class AActor*                                              forActor;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                CommandName;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientProcessSimpleNetExecCommandBP
	 */
	struct APlayerController_ClientProcessSimpleNetExecCommandBP_Params
	{
	public:
		class AActor*                                              forActor;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                CommandName;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientProcessNetExecCommandUnreliableBP
	 */
	struct APlayerController_ClientProcessNetExecCommandUnreliableBP_Params
	{
	public:
		class AActor*                                              forActor;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                CommandName;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FBPNetExecParams                                    ExecParams;                                              // 0x0010(0x0040)  (Parm)
	};

	/**
	 * Function Engine.PlayerController.ClientProcessNetExecCommandUnreliable
	 */
	struct APlayerController_ClientProcessNetExecCommandUnreliable_Params
	{
	public:
		class AActor*                                              forActor;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                CommandName;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FNetExecParams                                      ExecParams;                                              // 0x0010(0x0018)  (Parm)
	};

	/**
	 * Function Engine.PlayerController.ClientProcessNetExecCommandBP
	 */
	struct APlayerController_ClientProcessNetExecCommandBP_Params
	{
	public:
		class AActor*                                              forActor;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                CommandName;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FBPNetExecParams                                    ExecParams;                                              // 0x0010(0x0040)  (Parm)
	};

	/**
	 * Function Engine.PlayerController.ClientProcessNetExecCommand
	 */
	struct APlayerController_ClientProcessNetExecCommand_Params
	{
	public:
		class AActor*                                              forActor;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                CommandName;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FNetExecParams                                      ExecParams;                                              // 0x0010(0x0018)  (Parm)
	};

	/**
	 * Function Engine.PlayerController.ClientPrestreamTextures
	 */
	struct APlayerController_ClientPrestreamTextures_Params
	{
	public:
		class AActor*                                              ForcedActor;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ForceDuration;                                           // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEnableStreaming;                                        // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_I6P2[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    CinematicTextureGroups;                                  // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientPrepareMapChange
	 */
	struct APlayerController_ClientPrepareMapChange_Params
	{
	public:
		class FName                                                LevelName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFirst;                                                  // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bLast;                                                   // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientPlaySoundAtLocation
	 */
	struct APlayerController_ClientPlaySoundAtLocation_Params
	{
	public:
		class USoundBase*                                          Sound;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      VolumeMultiplier;                                        // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      PitchMultiplier;                                         // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientPlaySound
	 */
	struct APlayerController_ClientPlaySound_Params
	{
	public:
		class USoundBase*                                          Sound;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      VolumeMultiplier;                                        // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      PitchMultiplier;                                         // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientPlayForceFeedback
	 */
	struct APlayerController_ClientPlayForceFeedback_Params
	{
	public:
		class UForceFeedbackEffect*                                ForceFeedbackEffect;                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bLooping;                                                // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XAEL[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FName                                                Tag;                                                     // 0x000C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientPlayCameraShake
	 */
	struct APlayerController_ClientPlayCameraShake_Params
	{
	public:
		class UClass*                                              Shake;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Scale;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECameraAnimPlaySpace                                       PlaySpace;                                               // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_LOBK[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRotator                                            UserPlaySpaceRot;                                        // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Speed;                                                   // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceUseWorldCameraShakeScale;                          // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientPlayCameraAnim
	 */
	struct APlayerController_ClientPlayCameraAnim_Params
	{
	public:
		class UCameraAnim*                                         AnimToPlay;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Scale;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Rate;                                                    // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BlendInTime;                                             // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BlendOutTime;                                            // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bLoop;                                                   // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRandomStartTime;                                        // 0x0019(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECameraAnimPlaySpace                                       Space;                                                   // 0x001A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_HSKZ[0x1];                                   // 0x001B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRotator                                            CustomPlaySpace;                                         // 0x001C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientNotifyRespawned
	 */
	struct APlayerController_ClientNotifyRespawned_Params
	{
	public:
		class APawn*                                               NewPawn;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       IsFirstSpawn;                                            // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientNotifyReconnected
	 */
	struct APlayerController_ClientNotifyReconnected_Params
	{
	public:
		class APawn*                                               NewPawn;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientNetGUIDActorDeletion
	 */
	struct APlayerController_ClientNetGUIDActorDeletion_Params
	{
	public:
		struct FNetworkGUID                                        TheNetGUID;                                              // 0x0000(0x0004)  (Parm)
	};

	/**
	 * Function Engine.PlayerController.ClientMutePlayer
	 */
	struct APlayerController_ClientMutePlayer_Params
	{
	public:
		struct FUniqueNetIdRepl                                    PlayerId;                                                // 0x0000(0x0010)  (Parm)
	};

	/**
	 * Function Engine.PlayerController.ClientMessage
	 */
	struct APlayerController_ClientMessage_Params
	{
	public:
		class FString                                              S;                                                       // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FName                                                Type;                                                    // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MsgLifeTime;                                             // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientIgnoreMoveInput
	 */
	struct APlayerController_ClientIgnoreMoveInput_Params
	{
	public:
		bool                                                       bIgnore;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientIgnoreLookInput
	 */
	struct APlayerController_ClientIgnoreLookInput_Params
	{
	public:
		bool                                                       bIgnore;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientGotoState
	 */
	struct APlayerController_ClientGotoState_Params
	{
	public:
		class FName                                                NewState;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientGameEnded
	 */
	struct APlayerController_ClientGameEnded_Params
	{
	public:
		class AActor*                                              EndGameFocus;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsWinner;                                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientForceGarbageCollection
	 */
	struct APlayerController_ClientForceGarbageCollection_Params
	{	};

	/**
	 * Function Engine.PlayerController.ClientFlushLevelStreaming
	 */
	struct APlayerController_ClientFlushLevelStreaming_Params
	{	};

	/**
	 * Function Engine.PlayerController.ClientEnableNetworkVoice
	 */
	struct APlayerController_ClientEnableNetworkVoice_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientCommitMapChange
	 */
	struct APlayerController_ClientCommitMapChange_Params
	{	};

	/**
	 * Function Engine.PlayerController.ClientClearCameraLensEffects
	 */
	struct APlayerController_ClientClearCameraLensEffects_Params
	{	};

	/**
	 * Function Engine.PlayerController.ClientCapBandwidth
	 */
	struct APlayerController_ClientCapBandwidth_Params
	{
	public:
		int32_t                                                    Cap;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClientCancelPendingMapChange
	 */
	struct APlayerController_ClientCancelPendingMapChange_Params
	{	};

	/**
	 * Function Engine.PlayerController.ClientAddTextureStreamingLoc
	 */
	struct APlayerController_ClientAddTextureStreamingLoc_Params
	{
	public:
		struct FVector                                             InLoc;                                                   // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOverrideLocation;                                       // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ClearAudioListenerOverride
	 */
	struct APlayerController_ClearAudioListenerOverride_Params
	{	};

	/**
	 * Function Engine.PlayerController.Camera
	 */
	struct APlayerController_Camera_Params
	{
	public:
		class FName                                                NewMode;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.BPGetAimedUseActor
	 */
	struct APlayerController_BPGetAimedUseActor_Params
	{
	public:
		class AActor*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.AddYawInput
	 */
	struct APlayerController_AddYawInput_Params
	{
	public:
		float                                                      val;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.AddRollInput
	 */
	struct APlayerController_AddRollInput_Params
	{
	public:
		float                                                      val;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.AddPitchInput
	 */
	struct APlayerController_AddPitchInput_Params
	{
	public:
		float                                                      val;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerController.ActivateTouchInterface
	 */
	struct APlayerController_ActivateTouchInterface_Params
	{
	public:
		class UTouchInterface*                                     NewTouchInterface;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HUD.ShowHUD
	 */
	struct AHUD_ShowHUD_Params
	{	};

	/**
	 * Function Engine.HUD.ShowDebugToggleSubCategory
	 */
	struct AHUD_ShowDebugToggleSubCategory_Params
	{
	public:
		class FName                                                Category;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HUD.ShowDebug
	 */
	struct AHUD_ShowDebug_Params
	{
	public:
		class FName                                                DebugType;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HUD.RemoveDebugText
	 */
	struct AHUD_RemoveDebugText_Params
	{
	public:
		class AActor*                                              SrcActor;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bLeaveDurationText;                                      // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HUD.RemoveAllDebugStrings
	 */
	struct AHUD_RemoveAllDebugStrings_Params
	{	};

	/**
	 * Function Engine.HUD.ReceiveHitBoxRelease
	 */
	struct AHUD_ReceiveHitBoxRelease_Params
	{
	public:
		class FName                                                BoxName;                                                 // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HUD.ReceiveHitBoxEndCursorOver
	 */
	struct AHUD_ReceiveHitBoxEndCursorOver_Params
	{
	public:
		class FName                                                BoxName;                                                 // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HUD.ReceiveHitBoxClick
	 */
	struct AHUD_ReceiveHitBoxClick_Params
	{
	public:
		class FName                                                BoxName;                                                 // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HUD.ReceiveHitBoxBeginCursorOver
	 */
	struct AHUD_ReceiveHitBoxBeginCursorOver_Params
	{
	public:
		class FName                                                BoxName;                                                 // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HUD.ReceiveDrawHUD
	 */
	struct AHUD_ReceiveDrawHUD_Params
	{
	public:
		int32_t                                                    SizeX;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    SizeY;                                                   // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HUD.Project
	 */
	struct AHUD_Project_Params
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HUD.GetTextSize
	 */
	struct AHUD_GetTextSize_Params
	{
	public:
		class FString                                              Text;                                                    // 0x0000(0x0010)  (Parm, ZeroConstructor)
		float                                                      OutWidth;                                                // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OutHeight;                                               // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UFont*                                               Font;                                                    // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Scale;                                                   // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HUD.GetOwningPlayerController
	 */
	struct AHUD_GetOwningPlayerController_Params
	{
	public:
		class APlayerController*                                   ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HUD.GetOwningPawn
	 */
	struct AHUD_GetOwningPawn_Params
	{
	public:
		class APawn*                                               ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HUD.GetActorsInSelectionRectangle
	 */
	struct AHUD_GetActorsInSelectionRectangle_Params
	{
	public:
		class UClass*                                              ClassFilter;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           FirstPoint;                                              // 0x0008(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector2D                                           SecondPoint;                                             // 0x0010(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      OutActors;                                               // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bIncludeNonCollidingComponents;                          // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bActorMustBeFullyEnclosed;                               // 0x0029(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HUD.DrawTextureSimple
	 */
	struct AHUD_DrawTextureSimple_Params
	{
	public:
		class UTexture*                                            Texture;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScreenX;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScreenY;                                                 // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Scale;                                                   // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bScalePosition;                                          // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HUD.DrawTexture
	 */
	struct AHUD_DrawTexture_Params
	{
	public:
		class UTexture*                                            Texture;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScreenX;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScreenY;                                                 // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScreenW;                                                 // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScreenH;                                                 // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TextureU;                                                // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TextureV;                                                // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TextureUWidth;                                           // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TextureVHeight;                                          // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        TintColor;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		EBlendMode                                                 BlendMode;                                               // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_Z2C7[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      Scale;                                                   // 0x003C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bScalePosition;                                          // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_U5HV[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      Rotation;                                                // 0x0044(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		struct FVector2D                                           RotPivot;                                                // 0x0048(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	};

	/**
	 * Function Engine.HUD.DrawText
	 */
	struct AHUD_DrawText_Params
	{
	public:
		class FString                                              Text;                                                    // 0x0000(0x0010)  (Parm, ZeroConstructor)
		struct FLinearColor                                        TextColor;                                               // 0x0010(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScreenX;                                                 // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScreenY;                                                 // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UFont*                                               Font;                                                    // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Scale;                                                   // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bScalePosition;                                          // 0x0034(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HUD.DrawRect
	 */
	struct AHUD_DrawRect_Params
	{
	public:
		struct FLinearColor                                        RectColor;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScreenX;                                                 // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScreenY;                                                 // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScreenW;                                                 // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScreenH;                                                 // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HUD.DrawMaterialSimple
	 */
	struct AHUD_DrawMaterialSimple_Params
	{
	public:
		class UMaterialInterface*                                  Material;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScreenX;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScreenY;                                                 // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScreenW;                                                 // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScreenH;                                                 // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Scale;                                                   // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bScalePosition;                                          // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HUD.DrawMaterial
	 */
	struct AHUD_DrawMaterial_Params
	{
	public:
		class UMaterialInterface*                                  Material;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScreenX;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScreenY;                                                 // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScreenW;                                                 // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScreenH;                                                 // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaterialU;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaterialV;                                               // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaterialUWidth;                                          // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaterialVHeight;                                         // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Scale;                                                   // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bScalePosition;                                          // 0x002C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_KAKQ[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      Rotation;                                                // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		struct FVector2D                                           RotPivot;                                                // 0x0034(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	};

	/**
	 * Function Engine.HUD.DrawLine
	 */
	struct AHUD_DrawLine_Params
	{
	public:
		float                                                      StartScreenX;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      StartScreenY;                                            // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      EndScreenX;                                              // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      EndScreenY;                                              // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x0010(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HUD.Deproject
	 */
	struct AHUD_Deproject_Params
	{
	public:
		float                                                      ScreenX;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScreenY;                                                 // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             WorldPosition;                                           // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             WorldDirection;                                          // 0x0014(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HUD.AddHitBox
	 */
	struct AHUD_AddHitBox_Params
	{
	public:
		struct FVector2D                                           Position;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           Size;                                                    // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                InName;                                                  // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bConsumesInput;                                          // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NNIO[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    Priority;                                                // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HUD.AddDebugText
	 */
	struct AHUD_AddDebugText_Params
	{
	public:
		class FString                                              DebugText;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class AActor*                                              SrcActor;                                                // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Offset;                                                  // 0x001C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             DesiredOffset;                                           // 0x0028(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FColor                                              TextColor;                                               // 0x0034(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSkipOverwriteCheck;                                     // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAbsoluteLocation;                                       // 0x0039(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bKeepAttachedToActor;                                    // 0x003A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_Y1IU[0x5];                                   // 0x003B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UFont*                                               InFont;                                                  // 0x0040(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      FontScale;                                               // 0x0048(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerState.OnRep_UniqueId
	 */
	struct APlayerState_OnRep_UniqueId_Params
	{	};

	/**
	 * Function Engine.PlayerState.OnRep_Score
	 */
	struct APlayerState_OnRep_Score_Params
	{	};

	/**
	 * Function Engine.PlayerState.OnRep_PlayerName
	 */
	struct APlayerState_OnRep_PlayerName_Params
	{	};

	/**
	 * Function Engine.PlayerState.OnRep_bIsInactive
	 */
	struct APlayerState_OnRep_bIsInactive_Params
	{	};

	/**
	 * Function Engine.PlayerState.GetExactPing
	 */
	struct APlayerState_GetExactPing_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Volume.BPEncompassesPoint
	 */
	struct AVolume_BPEncompassesPoint_Params
	{
	public:
		struct FVector                                             Point;                                                   // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OutDistanceToPoint;                                      // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SphereRadius;                                            // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DestructibleActor.SetFadingStaticMesh
	 */
	struct ADestructibleActor_SetFadingStaticMesh_Params
	{
	public:
		class UStaticMesh*                                         TheMesh;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DestructibleActor.SetFadingSkeletalMesh
	 */
	struct ADestructibleActor_SetFadingSkeletalMesh_Params
	{
	public:
		class USkeletalMesh*                                       TheMesh;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DestructibleActor.GetFadingMeshComponent
	 */
	struct ADestructibleActor_GetFadingMeshComponent_Params
	{
	public:
		class UMeshComponent*                                      ReturnValue;                                             // 0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DestructibleActor.ActorFractureSignature__DelegateSignature
	 */
	struct ADestructibleActor_ActorFractureSignature__DelegateSignature_Params
	{
	public:
		struct FVector                                             HitPoint;                                                // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             HitDirection;                                            // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Light.ToggleEnabled
	 */
	struct ALight_ToggleEnabled_Params
	{	};

	/**
	 * Function Engine.Light.SetLightFunctionScale
	 */
	struct ALight_SetLightFunctionScale_Params
	{
	public:
		struct FVector                                             NewLightFunctionScale;                                   // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Light.SetLightFunctionMaterial
	 */
	struct ALight_SetLightFunctionMaterial_Params
	{
	public:
		class UMaterialInterface*                                  NewLightFunctionMaterial;                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Light.SetLightFunctionFadeDistance
	 */
	struct ALight_SetLightFunctionFadeDistance_Params
	{
	public:
		float                                                      NewLightFunctionFadeDistance;                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Light.SetLightColor
	 */
	struct ALight_SetLightColor_Params
	{
	public:
		struct FLinearColor                                        NewLightColor;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Light.SetEnabled
	 */
	struct ALight_SetEnabled_Params
	{
	public:
		bool                                                       bSetEnabled;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Light.SetCastShadows
	 */
	struct ALight_SetCastShadows_Params
	{
	public:
		bool                                                       bNewValue;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Light.SetBrightness
	 */
	struct ALight_SetBrightness_Params
	{
	public:
		float                                                      NewBrightness;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Light.SetAffectTranslucentLighting
	 */
	struct ALight_SetAffectTranslucentLighting_Params
	{
	public:
		bool                                                       bNewValue;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Light.OnRep_bEnabled
	 */
	struct ALight_OnRep_bEnabled_Params
	{	};

	/**
	 * Function Engine.Light.IsEnabled
	 */
	struct ALight_IsEnabled_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Light.GetLightColor
	 */
	struct ALight_GetLightColor_Params
	{
	public:
		struct FLinearColor                                        ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Light.GetBrightness
	 */
	struct ALight_GetBrightness_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DamageType.HandleDamage
	 */
	struct UDamageType_HandleDamage_Params
	{
	public:
		class AActor*                                              Victim;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DamageAmount;                                            // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_95GE[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0010(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AController*                                         EventInstigator;                                         // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0040(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Emitter.ToggleActive
	 */
	struct AEmitter_ToggleActive_Params
	{	};

	/**
	 * Function Engine.Emitter.SetVectorParameter
	 */
	struct AEmitter_SetVectorParameter_Params
	{
	public:
		class FName                                                ParameterName;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Param;                                                   // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Emitter.SetTemplate
	 */
	struct AEmitter_SetTemplate_Params
	{
	public:
		class UParticleSystem*                                     NewTemplate;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Emitter.SetMaterialParameter
	 */
	struct AEmitter_SetMaterialParameter_Params
	{
	public:
		class FName                                                ParameterName;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialInterface*                                  Param;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Emitter.SetFloatParameter
	 */
	struct AEmitter_SetFloatParameter_Params
	{
	public:
		class FName                                                ParameterName;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Param;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Emitter.SetColorParameter
	 */
	struct AEmitter_SetColorParameter_Params
	{
	public:
		class FName                                                ParameterName;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        Param;                                                   // 0x0008(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Emitter.SetActorParameter
	 */
	struct AEmitter_SetActorParameter_Params
	{
	public:
		class FName                                                ParameterName;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              Param;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Emitter.ParticleSpawnSignature__DelegateSignature
	 */
	struct AEmitter_ParticleSpawnSignature__DelegateSignature_Params
	{
	public:
		class FName                                                EventName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      EmitterTime;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Velocity;                                                // 0x0018(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Emitter.ParticleDeathSignature__DelegateSignature
	 */
	struct AEmitter_ParticleDeathSignature__DelegateSignature_Params
	{
	public:
		class FName                                                EventName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      EmitterTime;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ParticleTime;                                            // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Velocity;                                                // 0x001C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Direction;                                               // 0x0028(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Emitter.ParticleCollisionSignature__DelegateSignature
	 */
	struct AEmitter_ParticleCollisionSignature__DelegateSignature_Params
	{
	public:
		class FName                                                EventName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      EmitterTime;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ParticleTime;                                            // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Velocity;                                                // 0x001C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Direction;                                               // 0x0028(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Normal;                                                  // 0x0034(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                BoneName;                                                // 0x0040(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Emitter.ParticleBurstSignature__DelegateSignature
	 */
	struct AEmitter_ParticleBurstSignature__DelegateSignature_Params
	{
	public:
		class FName                                                EventName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      EmitterTime;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ParticleCount;                                           // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Emitter.OnRep_bCurrentlyActive
	 */
	struct AEmitter_OnRep_bCurrentlyActive_Params
	{	};

	/**
	 * Function Engine.Emitter.OnParticleSystemFinished
	 */
	struct AEmitter_OnParticleSystemFinished_Params
	{
	public:
		class UParticleSystemComponent*                            FinishedComponent;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Emitter.IsActive
	 */
	struct AEmitter_IsActive_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Emitter.Deactivate
	 */
	struct AEmitter_Deactivate_Params
	{	};

	/**
	 * Function Engine.Emitter.Activate
	 */
	struct AEmitter_Activate_Params
	{	};

	/**
	 * Function Engine.Pawn.SpawnDefaultController
	 */
	struct APawn_SpawnDefaultController_Params
	{	};

	/**
	 * Function Engine.Pawn.SetMovementTether
	 */
	struct APawn_SetMovementTether_Params
	{
	public:
		class AActor*                                              InTetherActor;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Height;                                                  // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.SetCanAffectNavigationGeneration
	 */
	struct APawn_SetCanAffectNavigationGeneration_Params
	{
	public:
		bool                                                       bNewValue;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.ReceiveUnpossessed
	 */
	struct APawn_ReceiveUnpossessed_Params
	{
	public:
		class AController*                                         OldController;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.ReceivePossessed
	 */
	struct APawn_ReceivePossessed_Params
	{
	public:
		class AController*                                         NewController;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.PawnMakeNoise
	 */
	struct APawn_PawnMakeNoise_Params
	{
	public:
		float                                                      Loudness;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NoiseLocation;                                           // 0x0004(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bUseNoiseMakerLocation;                                  // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7ULB[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              NoiseMaker;                                              // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.OnRep_PlayerState
	 */
	struct APawn_OnRep_PlayerState_Params
	{	};

	/**
	 * Function Engine.Pawn.OnRep_Controller
	 */
	struct APawn_OnRep_Controller_Params
	{	};

	/**
	 * Function Engine.Pawn.MovementTetherEvent__DelegateSignature
	 */
	struct APawn_MovementTetherEvent__DelegateSignature_Params
	{
	public:
		class APawn*                                               Pawn;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              TetherObject;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.LaunchPawn
	 */
	struct APawn_LaunchPawn_Params
	{
	public:
		struct FVector                                             LaunchVelocity;                                          // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bXYOverride;                                             // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bZOverride;                                              // 0x000D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.K2_GetMovementInputVector
	 */
	struct APawn_K2_GetMovementInputVector_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.IsWithinTether
	 */
	struct APawn_IsWithinTether_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.IsWalking
	 */
	struct APawn_IsWalking_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.IsTargetWithinTether
	 */
	struct APawn_IsTargetWithinTether_Params
	{
	public:
		struct FVector                                             Destination;                                             // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      AdditionalRadius;                                        // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.IsMovementTethered
	 */
	struct APawn_IsMovementTethered_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.IsMoveInputIgnored
	 */
	struct APawn_IsMoveInputIgnored_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.IsLocallyControlled
	 */
	struct APawn_IsLocallyControlled_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.IsFalling
	 */
	struct APawn_IsFalling_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.IsCrouched
	 */
	struct APawn_IsCrouched_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.IsControlled
	 */
	struct APawn_IsControlled_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.InterceptInputEvent
	 */
	struct APawn_InterceptInputEvent_Params
	{
	public:
		class FString                                              InputName;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.Pawn.GetTetherObject
	 */
	struct APawn_GetTetherObject_Params
	{
	public:
		class AActor*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.GetTetheredVelocity
	 */
	struct APawn_GetTetheredVelocity_Params
	{
	public:
		struct FVector                                             RequestedVelocity;                                       // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      DeltaSeconds;                                            // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.GetTetheredDestination
	 */
	struct APawn_GetTetheredDestination_Params
	{
	public:
		struct FVector                                             Destination;                                             // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      AdditionalRadius;                                        // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.GetPendingMovementInputVector
	 */
	struct APawn_GetPendingMovementInputVector_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.GetNavAgentLocation
	 */
	struct APawn_GetNavAgentLocation_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.GetMovementComponent
	 */
	struct APawn_GetMovementComponent_Params
	{
	public:
		class UPawnMovementComponent*                              ReturnValue;                                             // 0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.GetMovementBaseActor
	 */
	struct APawn_GetMovementBaseActor_Params
	{
	public:
		class APawn*                                               Pawn;                                                    // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.GetLastMovementInputVector
	 */
	struct APawn_GetLastMovementInputVector_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.GetControlRotation
	 */
	struct APawn_GetControlRotation_Params
	{
	public:
		struct FRotator                                            ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.GetController
	 */
	struct APawn_GetController_Params
	{
	public:
		class AController*                                         ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.GetBaseAimRotation
	 */
	struct APawn_GetBaseAimRotation_Params
	{
	public:
		struct FRotator                                            ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.DetachFromControllerPendingDestroy
	 */
	struct APawn_DetachFromControllerPendingDestroy_Params
	{	};

	/**
	 * Function Engine.Pawn.ConsumeMovementInputVector
	 */
	struct APawn_ConsumeMovementInputVector_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.ClearMovementTether
	 */
	struct APawn_ClearMovementTether_Params
	{	};

	/**
	 * Function Engine.Pawn.AddMovementInput
	 */
	struct APawn_AddMovementInput_Params
	{
	public:
		struct FVector                                             WorldDirection;                                          // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScaleValue;                                              // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForce;                                                  // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.AddControllerYawInput
	 */
	struct APawn_AddControllerYawInput_Params
	{
	public:
		float                                                      val;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.AddControllerRollInput
	 */
	struct APawn_AddControllerRollInput_Params
	{
	public:
		float                                                      val;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Pawn.AddControllerPitchInput
	 */
	struct APawn_AddControllerPitchInput_Params
	{
	public:
		float                                                      val;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.UnProne
	 */
	struct ACharacter_UnProne_Params
	{
	public:
		bool                                                       bClientSimulation;                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.UnCrouch
	 */
	struct ACharacter_UnCrouch_Params
	{
	public:
		bool                                                       bClientSimulation;                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.StopJumping
	 */
	struct ACharacter_StopJumping_Params
	{	};

	/**
	 * Function Engine.Character.StopAnimMontage
	 */
	struct ACharacter_StopAnimMontage_Params
	{
	public:
		class UAnimMontage*                                        AnimMontage;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.ShouldForceDedicatedMovementTickEveryFrame
	 */
	struct ACharacter_ShouldForceDedicatedMovementTickEveryFrame_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.ReplicateMovementToSimulatedClients
	 */
	struct ACharacter_ReplicateMovementToSimulatedClients_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.Prone
	 */
	struct ACharacter_Prone_Params
	{
	public:
		bool                                                       bClientSimulation;                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.PlayAnimMontage
	 */
	struct ACharacter_PlayAnimMontage_Params
	{
	public:
		class UAnimMontage*                                        AnimMontage;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InPlayRate;                                              // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                StartSectionName;                                        // 0x000C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceTickPoseAndServerUpdateMesh;                       // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceTickPoseOnServer;                                  // 0x0015(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_GVUX[0x2];                                   // 0x0016(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      BlendInTime;                                             // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BlendOutTime;                                            // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0020(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.OverrideTerminalVelocity
	 */
	struct ACharacter_OverrideTerminalVelocity_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.OnWalkingOffLedge
	 */
	struct ACharacter_OnWalkingOffLedge_Params
	{	};

	/**
	 * Function Engine.Character.OnRep_RootMotion
	 */
	struct ACharacter_OnRep_RootMotion_Params
	{	};

	/**
	 * Function Engine.Character.OnRep_ReplicatedBasedMovement
	 */
	struct ACharacter_OnRep_ReplicatedBasedMovement_Params
	{	};

	/**
	 * Function Engine.Character.OnRep_IsProne
	 */
	struct ACharacter_OnRep_IsProne_Params
	{	};

	/**
	 * Function Engine.Character.OnRep_IsCrouched
	 */
	struct ACharacter_OnRep_IsCrouched_Params
	{	};

	/**
	 * Function Engine.Character.OnLaunched
	 */
	struct ACharacter_OnLaunched_Params
	{
	public:
		struct FVector                                             LaunchVelocity;                                          // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bXYOverride;                                             // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bZOverride;                                              // 0x000D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.OnLanded
	 */
	struct ACharacter_OnLanded_Params
	{
	public:
		struct FHitResult                                          Hit;                                                     // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function Engine.Character.OnJumped
	 */
	struct ACharacter_OnJumped_Params
	{	};

	/**
	 * Function Engine.Character.NetTeleportSucceeded
	 */
	struct ACharacter_NetTeleportSucceeded_Params
	{
	public:
		struct FVector                                             ToLoc;                                                   // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ToRot;                                                   // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.MovementModeChangedSignature__DelegateSignature
	 */
	struct ACharacter_MovementModeChangedSignature__DelegateSignature_Params
	{
	public:
		class ACharacter*                                          Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EMovementMode                                              PrevMovementMode;                                        // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              PreviousCustomMode;                                      // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.LaunchCharacter
	 */
	struct ACharacter_LaunchCharacter_Params
	{
	public:
		struct FVector                                             LaunchVelocity;                                          // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bXYOverride;                                             // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bZOverride;                                              // 0x000D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.K2_UpdateCustomMovement
	 */
	struct ACharacter_K2_UpdateCustomMovement_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.K2_OnStartCrouch
	 */
	struct ACharacter_K2_OnStartCrouch_Params
	{
	public:
		float                                                      HalfHeightAdjust;                                        // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScaledHalfHeightAdjust;                                  // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.K2_OnMovementModeChanged
	 */
	struct ACharacter_K2_OnMovementModeChanged_Params
	{
	public:
		EMovementMode                                              PrevMovementMode;                                        // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EMovementMode                                              NewMovementMode;                                         // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              PrevCustomMode;                                          // 0x0002(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              NewCustomMode;                                           // 0x0003(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.K2_OnEndCrouch
	 */
	struct ACharacter_K2_OnEndCrouch_Params
	{
	public:
		float                                                      HalfHeightAdjust;                                        // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScaledHalfHeightAdjust;                                  // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.Jump
	 */
	struct ACharacter_Jump_Params
	{	};

	/**
	 * Function Engine.Character.IsRagdolled
	 */
	struct ACharacter_IsRagdolled_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.IsPlayingRootMotion
	 */
	struct ACharacter_IsPlayingRootMotion_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.IsJumpProvidingForce
	 */
	struct ACharacter_IsJumpProvidingForce_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.GetLastMovementDesiredRotation
	 */
	struct ACharacter_GetLastMovementDesiredRotation_Params
	{
	public:
		struct FRotator                                            ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.GetCurrentMontage
	 */
	struct ACharacter_GetCurrentMontage_Params
	{
	public:
		class UAnimMontage*                                        ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.Crouch
	 */
	struct ACharacter_Crouch_Params
	{
	public:
		bool                                                       bClientSimulation;                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.ClientCheatWalk
	 */
	struct ACharacter_ClientCheatWalk_Params
	{	};

	/**
	 * Function Engine.Character.ClientCheatGhost
	 */
	struct ACharacter_ClientCheatGhost_Params
	{	};

	/**
	 * Function Engine.Character.ClientCheatFly
	 */
	struct ACharacter_ClientCheatFly_Params
	{	};

	/**
	 * Function Engine.Character.CharacterMovementUpdatedSignature__DelegateSignature
	 */
	struct ACharacter_CharacterMovementUpdatedSignature__DelegateSignature_Params
	{
	public:
		float                                                      DeltaSeconds;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             OldLocation;                                             // 0x0004(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             OldVelocity;                                             // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.CanJumpInternal
	 */
	struct ACharacter_CanJumpInternal_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.CanJump
	 */
	struct ACharacter_CanJump_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.BPOverrideCharacterSound
	 */
	struct ACharacter_BPOverrideCharacterSound_Params
	{
	public:
		class USoundBase*                                          SoundIn;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USoundBase*                                          ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.BPOverrideCharacterParticle
	 */
	struct ACharacter_BPOverrideCharacterParticle_Params
	{
	public:
		class UParticleSystem*                                     ParticleIn;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UParticleSystem*                                     ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.BPModifyRootMotionDeltaRotation
	 */
	struct ACharacter_BPModifyRootMotionDeltaRotation_Params
	{
	public:
		struct FRotator                                            Delta;                                                   // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.BPAcknowledgeServerCorrection
	 */
	struct ACharacter_BPAcknowledgeServerCorrection_Params
	{
	public:
		float                                                      TimeStamp;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NewLoc;                                                  // 0x0004(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NewVel;                                                  // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1WY5[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimitiveComponent*                                 NewBase;                                                 // 0x0020(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                NewBaseBoneName;                                         // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bHasBase;                                                // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bBaseRelativePosition;                                   // 0x0031(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ServerMovementMode;                                      // 0x0032(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0033(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Character.BP_PreventMovementMode
	 */
	struct ACharacter_BP_PreventMovementMode_Params
	{
	public:
		EMovementMode                                              NewMovementMode;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              NewCustomMode;                                           // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.WorldSettings.PooledParticleSystemFinished
	 */
	struct AWorldSettings_PooledParticleSystemFinished_Params
	{
	public:
		class UParticleSystemComponent*                            FinishedComponent;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MovementComponent.StopMovementImmediately
	 */
	struct UMovementComponent_StopMovementImmediately_Params
	{	};

	/**
	 * Function Engine.MovementComponent.SnapUpdatedComponentToPlane
	 */
	struct UMovementComponent_SnapUpdatedComponentToPlane_Params
	{	};

	/**
	 * Function Engine.MovementComponent.ShouldForceDedicatedTickEveryFrame
	 */
	struct UMovementComponent_ShouldForceDedicatedTickEveryFrame_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MovementComponent.SetUpdatedComponent
	 */
	struct UMovementComponent_SetUpdatedComponent_Params
	{
	public:
		class UPrimitiveComponent*                                 NewUpdatedComponent;                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MovementComponent.SetPlaneConstraintOrigin
	 */
	struct UMovementComponent_SetPlaneConstraintOrigin_Params
	{
	public:
		struct FVector                                             PlaneOrigin;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MovementComponent.SetPlaneConstraintNormal
	 */
	struct UMovementComponent_SetPlaneConstraintNormal_Params
	{
	public:
		struct FVector                                             PlaneNormal;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MovementComponent.SetPlaneConstraintFromVectors
	 */
	struct UMovementComponent_SetPlaneConstraintFromVectors_Params
	{
	public:
		struct FVector                                             Forward;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Up;                                                      // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MovementComponent.PhysicsVolumeChanged
	 */
	struct UMovementComponent_PhysicsVolumeChanged_Params
	{
	public:
		class APhysicsVolume*                                      NewVolume;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MovementComponent.K2_MoveUpdatedComponent
	 */
	struct UMovementComponent_K2_MoveUpdatedComponent_Params
	{
	public:
		struct FVector                                             Delta;                                                   // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            NewRotation;                                             // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FHitResult                                          OutHit;                                                  // 0x0018(0x0088)  (Parm, OutParm)
		bool                                                       bSweep;                                                  // 0x00A0(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x00A1(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MovementComponent.K2_GetModifiedMaxSpeed
	 */
	struct UMovementComponent_K2_GetModifiedMaxSpeed_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MovementComponent.K2_GetMaxSpeedModifier
	 */
	struct UMovementComponent_K2_GetMaxSpeedModifier_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MovementComponent.IsExceedingMaxSpeed
	 */
	struct UMovementComponent_IsExceedingMaxSpeed_Params
	{
	public:
		float                                                      MaxSpeed;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MovementComponent.GetPlaneConstraintOrigin
	 */
	struct UMovementComponent_GetPlaneConstraintOrigin_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MovementComponent.GetPlaneConstraintNormal
	 */
	struct UMovementComponent_GetPlaneConstraintNormal_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MovementComponent.GetPhysicsVolume
	 */
	struct UMovementComponent_GetPhysicsVolume_Params
	{
	public:
		class APhysicsVolume*                                      ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MovementComponent.GetMaxSpeed
	 */
	struct UMovementComponent_GetMaxSpeed_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MovementComponent.GetGravityZ
	 */
	struct UMovementComponent_GetGravityZ_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MovementComponent.ConstrainLocationToPlane
	 */
	struct UMovementComponent_ConstrainLocationToPlane_Params
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MovementComponent.ConstrainDirectionToPlane
	 */
	struct UMovementComponent_ConstrainDirectionToPlane_Params
	{
	public:
		struct FVector                                             Direction;                                               // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavMovementComponent.StopMovementKeepPathing
	 */
	struct UNavMovementComponent_StopMovementKeepPathing_Params
	{	};

	/**
	 * Function Engine.NavMovementComponent.StopActiveMovement
	 */
	struct UNavMovementComponent_StopActiveMovement_Params
	{	};

	/**
	 * Function Engine.NavMovementComponent.IsSwimming
	 */
	struct UNavMovementComponent_IsSwimming_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavMovementComponent.IsMovingOnGround
	 */
	struct UNavMovementComponent_IsMovingOnGround_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavMovementComponent.IsFlying
	 */
	struct UNavMovementComponent_IsFlying_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavMovementComponent.IsFalling
	 */
	struct UNavMovementComponent_IsFalling_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavMovementComponent.IsCrouching
	 */
	struct UNavMovementComponent_IsCrouching_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PawnMovementComponent.K2_GetInputVector
	 */
	struct UPawnMovementComponent_K2_GetInputVector_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PawnMovementComponent.IsMoveInputIgnored
	 */
	struct UPawnMovementComponent_IsMoveInputIgnored_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PawnMovementComponent.GetPendingInputVector
	 */
	struct UPawnMovementComponent_GetPendingInputVector_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PawnMovementComponent.GetPawnOwner
	 */
	struct UPawnMovementComponent_GetPawnOwner_Params
	{
	public:
		class APawn*                                               ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PawnMovementComponent.GetLastInputVector
	 */
	struct UPawnMovementComponent_GetLastInputVector_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PawnMovementComponent.ConsumeInputVector
	 */
	struct UPawnMovementComponent_ConsumeInputVector_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PawnMovementComponent.AddInputVector
	 */
	struct UPawnMovementComponent_AddInputVector_Params
	{
	public:
		struct FVector                                             WorldVector;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForce;                                                  // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.SetWalkableFloorZ
	 */
	struct UCharacterMovementComponent_SetWalkableFloorZ_Params
	{
	public:
		float                                                      InWalkableFloorZ;                                        // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.SetWalkableFloorAngle
	 */
	struct UCharacterMovementComponent_SetWalkableFloorAngle_Params
	{
	public:
		float                                                      InWalkableFloorAngle;                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.SetMovementMode
	 */
	struct UCharacterMovementComponent_SetMovementMode_Params
	{
	public:
		EMovementMode                                              NewMovementMode;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              NewCustomMode;                                           // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.SetGroupsToIgnore
	 */
	struct UCharacterMovementComponent_SetGroupsToIgnore_Params
	{
	public:
		int32_t                                                    GroupFlags;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.SetGroupsToAvoid
	 */
	struct UCharacterMovementComponent_SetGroupsToAvoid_Params
	{
	public:
		int32_t                                                    GroupFlags;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.SetBase
	 */
	struct UCharacterMovementComponent_SetBase_Params
	{
	public:
		class UPrimitiveComponent*                                 NewBase;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                BoneName;                                                // 0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bNotifyActor;                                            // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.SetAvoidanceGroup
	 */
	struct UCharacterMovementComponent_SetAvoidanceGroup_Params
	{
	public:
		int32_t                                                    GroupFlags;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.SetAvoidanceEnabled
	 */
	struct UCharacterMovementComponent_SetAvoidanceEnabled_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.ServerMoveWithRotation
	 */
	struct UCharacterMovementComponent_ServerMoveWithRotation_Params
	{
	public:
		float                                                      TimeStamp;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector_NetQuantize100                              InAccel;                                                 // 0x0004(0x000C)  (Parm)
		struct FVector_NetQuantize100                              ClientLoc;                                               // 0x0010(0x000C)  (Parm)
		unsigned char                                              CompressedMoveFlags;                                     // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ClientRoll;                                              // 0x001D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ATOF[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		uint32_t                                                   View;                                                    // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_6IH4[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimitiveComponent*                                 ClientMovementBase;                                      // 0x0028(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                ClientBaseBoneName;                                      // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ClientMovementMode;                                      // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_SR9F[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRotator                                            ClientRotation;                                          // 0x003C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.ServerMoveOnlyRotation
	 */
	struct UCharacterMovementComponent_ServerMoveOnlyRotation_Params
	{
	public:
		float                                                      TimeStamp;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ClientRoll;                                              // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_OMCP[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		uint32_t                                                   View;                                                    // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.ServerMoveOldWithRotation
	 */
	struct UCharacterMovementComponent_ServerMoveOldWithRotation_Params
	{
	public:
		float                                                      OldTimeStamp;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector_NetQuantize100                              OldAccel;                                                // 0x0004(0x000C)  (Parm)
		unsigned char                                              OldMoveFlags;                                            // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_WNM0[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRotator                                            OldRotation;                                             // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.ServerMoveOld
	 */
	struct UCharacterMovementComponent_ServerMoveOld_Params
	{
	public:
		float                                                      OldTimeStamp;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector_NetQuantize100                              OldAccel;                                                // 0x0004(0x000C)  (Parm)
		unsigned char                                              OldMoveFlags;                                            // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.ServerMoveDualWithRotation
	 */
	struct UCharacterMovementComponent_ServerMoveDualWithRotation_Params
	{
	public:
		float                                                      TimeStamp0;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector_NetQuantize100                              InAccel0;                                                // 0x0004(0x000C)  (Parm)
		unsigned char                                              PendingFlags;                                            // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_M252[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		uint32_t                                                   View0;                                                   // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TimeStamp;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector_NetQuantize100                              InAccel;                                                 // 0x001C(0x000C)  (Parm)
		struct FVector_NetQuantize100                              ClientLoc;                                               // 0x0028(0x000C)  (Parm)
		unsigned char                                              NewFlags;                                                // 0x0034(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ClientRoll;                                              // 0x0035(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_4VYE[0x2];                                   // 0x0036(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		uint32_t                                                   View;                                                    // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_P0FD[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimitiveComponent*                                 ClientMovementBase;                                      // 0x0040(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                ClientBaseBoneName;                                      // 0x0048(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ClientMovementMode;                                      // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NPN0[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRotator                                            InRotation0;                                             // 0x0054(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            InRotation;                                              // 0x0060(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.ServerMoveDualOnlyRotation
	 */
	struct UCharacterMovementComponent_ServerMoveDualOnlyRotation_Params
	{
	public:
		float                                                      TimeStamp0;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		uint32_t                                                   View0;                                                   // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TimeStamp;                                               // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ClientRoll;                                              // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZZL6[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		uint32_t                                                   View;                                                    // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.ServerMoveDual
	 */
	struct UCharacterMovementComponent_ServerMoveDual_Params
	{
	public:
		float                                                      TimeStamp0;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector_NetQuantize100                              InAccel0;                                                // 0x0004(0x000C)  (Parm)
		unsigned char                                              PendingFlags;                                            // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_2CUX[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		uint32_t                                                   View0;                                                   // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TimeStamp;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector_NetQuantize100                              InAccel;                                                 // 0x001C(0x000C)  (Parm)
		struct FVector_NetQuantize100                              ClientLoc;                                               // 0x0028(0x000C)  (Parm)
		unsigned char                                              NewFlags;                                                // 0x0034(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ClientRoll;                                              // 0x0035(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_C85Q[0x2];                                   // 0x0036(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		uint32_t                                                   View;                                                    // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_U66O[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimitiveComponent*                                 ClientMovementBase;                                      // 0x0040(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                ClientBaseBoneName;                                      // 0x0048(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ClientMovementMode;                                      // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.ServerMove
	 */
	struct UCharacterMovementComponent_ServerMove_Params
	{
	public:
		float                                                      TimeStamp;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector_NetQuantize100                              InAccel;                                                 // 0x0004(0x000C)  (Parm)
		struct FVector_NetQuantize100                              ClientLoc;                                               // 0x0010(0x000C)  (Parm)
		unsigned char                                              CompressedMoveFlags;                                     // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ClientRoll;                                              // 0x001D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_2OJ5[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		uint32_t                                                   View;                                                    // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_J34P[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimitiveComponent*                                 ClientMovementBase;                                      // 0x0028(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                ClientBaseBoneName;                                      // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ClientMovementMode;                                      // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.ServerJumpOutOfWater
	 */
	struct UCharacterMovementComponent_ServerJumpOutOfWater_Params
	{
	public:
		struct FVector_NetQuantize100                              WallNormal;                                              // 0x0000(0x000C)  (Parm)
		unsigned char                                              JumpFlag;                                                // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.RequestDirectMove
	 */
	struct UCharacterMovementComponent_RequestDirectMove_Params
	{
	public:
		struct FVector                                             MoveVelocity;                                            // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bForceMaxSpeed;                                          // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.NewFallVelocity
	 */
	struct UCharacterMovementComponent_NewFallVelocity_Params
	{
	public:
		struct FVector                                             InitialVelocity;                                         // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             Gravity;                                                 // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x001C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.K2_GetWalkableFloorZ
	 */
	struct UCharacterMovementComponent_K2_GetWalkableFloorZ_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.K2_GetWalkableFloorAngle
	 */
	struct UCharacterMovementComponent_K2_GetWalkableFloorAngle_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.K2_GetModifiedMaxAcceleration
	 */
	struct UCharacterMovementComponent_K2_GetModifiedMaxAcceleration_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.IsWalking
	 */
	struct UCharacterMovementComponent_IsWalking_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.IsWalkable
	 */
	struct UCharacterMovementComponent_IsWalkable_Params
	{
	public:
		struct FHitResult                                          Hit;                                                     // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0088(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.IsOnWalkableFloor
	 */
	struct UCharacterMovementComponent_IsOnWalkableFloor_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.GetValidPerchRadius
	 */
	struct UCharacterMovementComponent_GetValidPerchRadius_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.GetPerchRadiusThreshold
	 */
	struct UCharacterMovementComponent_GetPerchRadiusThreshold_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.GetMovementBase
	 */
	struct UCharacterMovementComponent_GetMovementBase_Params
	{
	public:
		class UPrimitiveComponent*                                 ReturnValue;                                             // 0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.GetMaxJumpHeight
	 */
	struct UCharacterMovementComponent_GetMaxJumpHeight_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.GetMaxAcceleration
	 */
	struct UCharacterMovementComponent_GetMaxAcceleration_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.GetImpartedMovementBaseVelocity
	 */
	struct UCharacterMovementComponent_GetImpartedMovementBaseVelocity_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.GetCurrentAcceleration
	 */
	struct UCharacterMovementComponent_GetCurrentAcceleration_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.GetCharacterOwner
	 */
	struct UCharacterMovementComponent_GetCharacterOwner_Params
	{
	public:
		class ACharacter*                                          ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.GetAnalogInputModifier
	 */
	struct UCharacterMovementComponent_GetAnalogInputModifier_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.DisableMovement
	 */
	struct UCharacterMovementComponent_DisableMovement_Params
	{	};

	/**
	 * Function Engine.CharacterMovementComponent.ClientVeryShortAdjustPosition
	 */
	struct UCharacterMovementComponent_ClientVeryShortAdjustPosition_Params
	{
	public:
		float                                                      TimeStamp;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NewLoc;                                                  // 0x0004(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 NewBase;                                                 // 0x0010(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                NewBaseBoneName;                                         // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bHasBase;                                                // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bBaseRelativePosition;                                   // 0x0021(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ServerMovementMode;                                      // 0x0022(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.ClientDrawDebugSphere
	 */
	struct UCharacterMovementComponent_ClientDrawDebugSphere_Params
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FColor                                              SphereColor;                                             // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      LifeSpan;                                                // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.ClientAdjustRootMotionPosition
	 */
	struct UCharacterMovementComponent_ClientAdjustRootMotionPosition_Params
	{
	public:
		float                                                      TimeStamp;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ServerMontageTrackPosition;                              // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ServerLoc;                                               // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector_NetQuantizeNormal                           ServerRotation;                                          // 0x0014(0x000C)  (Parm)
		float                                                      ServerVelZ;                                              // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_EX9O[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimitiveComponent*                                 ServerBase;                                              // 0x0028(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                ServerBoneName;                                          // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bHasBase;                                                // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bBaseRelativePosition;                                   // 0x0039(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ServerMovementMode;                                      // 0x003A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.ClientAdjustPosition
	 */
	struct UCharacterMovementComponent_ClientAdjustPosition_Params
	{
	public:
		float                                                      TimeStamp;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NewLoc;                                                  // 0x0004(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NewVel;                                                  // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KBZ4[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimitiveComponent*                                 NewBase;                                                 // 0x0020(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                NewBaseBoneName;                                         // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bHasBase;                                                // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bBaseRelativePosition;                                   // 0x0031(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ServerMovementMode;                                      // 0x0032(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.ClientAckGoodMove
	 */
	struct UCharacterMovementComponent_ClientAckGoodMove_Params
	{
	public:
		float                                                      TimeStamp;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.ClearBase
	 */
	struct UCharacterMovementComponent_ClearBase_Params
	{
	public:
		bool                                                       bNotifyActor;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.CapsuleTouched
	 */
	struct UCharacterMovementComponent_CapsuleTouched_Params
	{
	public:
		class AActor*                                              Other;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    OtherBodyIndex;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFromSweep;                                              // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_VLSX[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          SweepResult;                                             // 0x0018(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function Engine.CharacterMovementComponent.CalcVelocity
	 */
	struct UCharacterMovementComponent_CalcVelocity_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Friction;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFluid;                                                  // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_PZ1X[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      BrakingDeceleration;                                     // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.AddImpulse
	 */
	struct UCharacterMovementComponent_AddImpulse_Params
	{
	public:
		struct FVector                                             Impulse;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bVelocityChange;                                         // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_G0EI[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      MassScaleImpulseExponent;                                // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOverrideMaxImpulseZ;                                    // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CharacterMovementComponent.AddForce
	 */
	struct UCharacterMovementComponent_AddForce_Params
	{
	public:
		struct FVector                                             Force;                                                   // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CheatManager.WidgetReflector
	 */
	struct UCheatManager_WidgetReflector_Params
	{	};

	/**
	 * Function Engine.CheatManager.Walk
	 */
	struct UCheatManager_Walk_Params
	{	};

	/**
	 * Function Engine.CheatManager.ViewSelf
	 */
	struct UCheatManager_ViewSelf_Params
	{	};

	/**
	 * Function Engine.CheatManager.ViewPlayer
	 */
	struct UCheatManager_ViewPlayer_Params
	{
	public:
		class FString                                              S;                                                       // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.CheatManager.ViewClass
	 */
	struct UCheatManager_ViewClass_Params
	{
	public:
		class UClass*                                              DesiredClass;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CheatManager.ViewActor
	 */
	struct UCheatManager_ViewActor_Params
	{
	public:
		class FName                                                ActorName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CheatManager.ToggleDebugCamera
	 */
	struct UCheatManager_ToggleDebugCamera_Params
	{	};

	/**
	 * Function Engine.CheatManager.ToggleAILogging
	 */
	struct UCheatManager_ToggleAILogging_Params
	{	};

	/**
	 * Function Engine.CheatManager.TestCollisionDistance
	 */
	struct UCheatManager_TestCollisionDistance_Params
	{	};

	/**
	 * Function Engine.CheatManager.Teleport
	 */
	struct UCheatManager_Teleport_Params
	{	};

	/**
	 * Function Engine.CheatManager.Summon
	 */
	struct UCheatManager_Summon_Params
	{
	public:
		class FString                                              ClassName;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.CheatManager.StreamLevelOut
	 */
	struct UCheatManager_StreamLevelOut_Params
	{
	public:
		class FName                                                PackageName;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CheatManager.StreamLevelIn
	 */
	struct UCheatManager_StreamLevelIn_Params
	{
	public:
		class FName                                                PackageName;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CheatManager.Slomo
	 */
	struct UCheatManager_Slomo_Params
	{
	public:
		float                                                      T;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CheatManager.SetWorldOrigin
	 */
	struct UCheatManager_SetWorldOrigin_Params
	{	};

	/**
	 * Function Engine.CheatManager.SetNavDrawDistance
	 */
	struct UCheatManager_SetNavDrawDistance_Params
	{
	public:
		float                                                      DrawDistance;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CheatManager.ServerToggleAILogging
	 */
	struct UCheatManager_ServerToggleAILogging_Params
	{	};

	/**
	 * Function Engine.CheatManager.RebuildNavigation
	 */
	struct UCheatManager_RebuildNavigation_Params
	{	};

	/**
	 * Function Engine.CheatManager.PlayersOnly
	 */
	struct UCheatManager_PlayersOnly_Params
	{	};

	/**
	 * Function Engine.CheatManager.OnlyLoadLevel
	 */
	struct UCheatManager_OnlyLoadLevel_Params
	{
	public:
		class FName                                                PackageName;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CheatManager.LogLoc
	 */
	struct UCheatManager_LogLoc_Params
	{	};

	/**
	 * Function Engine.CheatManager.God
	 */
	struct UCheatManager_God_Params
	{	};

	/**
	 * Function Engine.CheatManager.Ghost
	 */
	struct UCheatManager_Ghost_Params
	{	};

	/**
	 * Function Engine.CheatManager.FreezeFrame
	 */
	struct UCheatManager_FreezeFrame_Params
	{
	public:
		float                                                      Delay;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CheatManager.Fly
	 */
	struct UCheatManager_Fly_Params
	{	};

	/**
	 * Function Engine.CheatManager.FlushLog
	 */
	struct UCheatManager_FlushLog_Params
	{	};

	/**
	 * Function Engine.CheatManager.DumpVoiceMutingState
	 */
	struct UCheatManager_DumpVoiceMutingState_Params
	{	};

	/**
	 * Function Engine.CheatManager.DumpOnlineSessionState
	 */
	struct UCheatManager_DumpOnlineSessionState_Params
	{	};

	/**
	 * Function Engine.CheatManager.DestroyTarget
	 */
	struct UCheatManager_DestroyTarget_Params
	{	};

	/**
	 * Function Engine.CheatManager.DestroyPawns
	 */
	struct UCheatManager_DestroyPawns_Params
	{
	public:
		class UClass*                                              aClass;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CheatManager.DestroyAll
	 */
	struct UCheatManager_DestroyAll_Params
	{
	public:
		class UClass*                                              aClass;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bExactMatch;                                             // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CheatManager.DebugCapsuleSweepSize
	 */
	struct UCheatManager_DebugCapsuleSweepSize_Params
	{
	public:
		float                                                      HalfHeight;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CheatManager.DebugCapsuleSweepPawn
	 */
	struct UCheatManager_DebugCapsuleSweepPawn_Params
	{	};

	/**
	 * Function Engine.CheatManager.DebugCapsuleSweepComplex
	 */
	struct UCheatManager_DebugCapsuleSweepComplex_Params
	{
	public:
		bool                                                       bTraceComplex;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CheatManager.DebugCapsuleSweepClear
	 */
	struct UCheatManager_DebugCapsuleSweepClear_Params
	{	};

	/**
	 * Function Engine.CheatManager.DebugCapsuleSweepChannel
	 */
	struct UCheatManager_DebugCapsuleSweepChannel_Params
	{
	public:
		ECollisionChannel                                          Channel;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CheatManager.DebugCapsuleSweepCapture
	 */
	struct UCheatManager_DebugCapsuleSweepCapture_Params
	{	};

	/**
	 * Function Engine.CheatManager.DebugCapsuleSweep
	 */
	struct UCheatManager_DebugCapsuleSweep_Params
	{	};

	/**
	 * Function Engine.CheatManager.DamageTarget
	 */
	struct UCheatManager_DamageTarget_Params
	{
	public:
		float                                                      DamageAmount;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CheatManager.ChangeSize
	 */
	struct UCheatManager_ChangeSize_Params
	{
	public:
		float                                                      F;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CheatManager.BugItStringCreator
	 */
	struct UCheatManager_BugItStringCreator_Params
	{
	public:
		struct FVector                                             ViewLocation;                                            // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ViewRotation;                                            // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              GoString;                                                // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor)
		class FString                                              LocString;                                               // 0x0028(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function Engine.CheatManager.BugItGo
	 */
	struct UCheatManager_BugItGo_Params
	{
	public:
		float                                                      X;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Y;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Z;                                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Pitch;                                                   // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Yaw;                                                     // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Roll;                                                    // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CheatManager.BugIt
	 */
	struct UCheatManager_BugIt_Params
	{
	public:
		class FString                                              ScreenShotDescription;                                   // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.GameMode.ShouldSpawnAtStartSpot
	 */
	struct AGameMode_ShouldSpawnAtStartSpot_Params
	{
	public:
		class AController*                                         Player;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameMode.SetBandwidthLimit
	 */
	struct AGameMode_SetBandwidthLimit_Params
	{
	public:
		float                                                      AsyncIOBandwidthLimit;                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameMode.K2_PostLogin
	 */
	struct AGameMode_K2_PostLogin_Params
	{
	public:
		class APlayerController*                                   NewPlayer;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameMode.GetDefaultPawnClassForController
	 */
	struct AGameMode_GetDefaultPawnClassForController_Params
	{
	public:
		class AController*                                         InController;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameMode.ChoosePlayerStart
	 */
	struct AGameMode_ChoosePlayerStart_Params
	{
	public:
		class AController*                                         Player;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameInstance.DebugRemovePlayer
	 */
	struct UGameInstance_DebugRemovePlayer_Params
	{
	public:
		int32_t                                                    ControllerId;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameInstance.DebugCreatePlayer
	 */
	struct UGameInstance_DebugCreatePlayer_Params
	{
	public:
		int32_t                                                    ControllerId;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameState.Semaphore_TryGrab
	 */
	struct AGameState_Semaphore_TryGrab_Params
	{
	public:
		class FName                                                SemaphoreName;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              InObject;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      PriorityWeight;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MaxToAllocate;                                           // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameState.Semaphore_Release
	 */
	struct AGameState_Semaphore_Release_Params
	{
	public:
		class FName                                                SemaphoreName;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              InObject;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameState.PostProcessOverlapEvent__DelegateSignature
	 */
	struct AGameState_PostProcessOverlapEvent__DelegateSignature_Params
	{
	public:
		class APostProcessVolume*                                  PostProcessVolume;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APlayerController*                                   Controller;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsPrimaryPlayer;                                        // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameState.OnRep_SpectatorClass
	 */
	struct AGameState_OnRep_SpectatorClass_Params
	{	};

	/**
	 * Function Engine.GameState.OnRep_MatchState
	 */
	struct AGameState_OnRep_MatchState_Params
	{	};

	/**
	 * Function Engine.GameState.OnRep_GameModeClass
	 */
	struct AGameState_OnRep_GameModeClass_Params
	{	};

	/**
	 * Function Engine.GameState.BPNetSpawnActorAtLocation
	 */
	struct AGameState_BPNetSpawnActorAtLocation_Params
	{
	public:
		class UClass*                                              anActorClass;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtLocation;                                              // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            AtRotation;                                              // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              EffectOwnerToIgnore;                                     // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxRangeToReplicate;                                     // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_TEFD[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class USceneComponent*                                     attachToComponent;                                       // 0x0030(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    dataIndex;                                               // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                attachSocketName;                                        // 0x003C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOnlySendToEffectOwner;                                  // 0x0044(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameUserSettings.SaveSettings
	 */
	struct UGameUserSettings_SaveSettings_Params
	{	};

	/**
	 * Function Engine.GameViewportClient.SSSwapControllers
	 */
	struct UGameViewportClient_SSSwapControllers_Params
	{	};

	/**
	 * Function Engine.GameViewportClient.ShowTitleSafeArea
	 */
	struct UGameViewportClient_ShowTitleSafeArea_Params
	{	};

	/**
	 * Function Engine.GameViewportClient.SetConsoleTarget
	 */
	struct UGameViewportClient_SetConsoleTarget_Params
	{
	public:
		int32_t                                                    PlayerIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MaterialInterface.GetPhysicalMaterial
	 */
	struct UMaterialInterface_GetPhysicalMaterial_Params
	{
	public:
		class UPhysicalMaterial*                                   ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MaterialInterface.GetBaseMaterial
	 */
	struct UMaterialInterface_GetBaseMaterial_Params
	{
	public:
		class UMaterial*                                           ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.SetVectorParameter
	 */
	struct UParticleSystemComponent_SetVectorParameter_Params
	{
	public:
		class FName                                                ParameterName;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Param;                                                   // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.SetTrailSourceData
	 */
	struct UParticleSystemComponent_SetTrailSourceData_Params
	{
	public:
		class FName                                                InFirstSocketName;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                InSecondSocketName;                                      // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ETrailWidthMode                                            InWidthMode;                                             // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_B62H[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      InWidth;                                                 // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.SetTemplate
	 */
	struct UParticleSystemComponent_SetTemplate_Params
	{
	public:
		class UParticleSystem*                                     NewTemplate;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.SetMaterialParameter
	 */
	struct UParticleSystemComponent_SetMaterialParameter_Params
	{
	public:
		class FName                                                ParameterName;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialInterface*                                  Param;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.SetFloatParameter
	 */
	struct UParticleSystemComponent_SetFloatParameter_Params
	{
	public:
		class FName                                                ParameterName;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Param;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.SetEmitterEnable
	 */
	struct UParticleSystemComponent_SetEmitterEnable_Params
	{
	public:
		class FName                                                EmitterName;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bNewEnableState;                                         // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.SetColorParameter
	 */
	struct UParticleSystemComponent_SetColorParameter_Params
	{
	public:
		class FName                                                ParameterName;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        Param;                                                   // 0x0008(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.SetBeamTargetTangent
	 */
	struct UParticleSystemComponent_SetBeamTargetTangent_Params
	{
	public:
		int32_t                                                    EmitterIndex;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NewTangentPoint;                                         // 0x0004(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    TargetIndex;                                             // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.SetBeamTargetStrength
	 */
	struct UParticleSystemComponent_SetBeamTargetStrength_Params
	{
	public:
		int32_t                                                    EmitterIndex;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      NewTargetStrength;                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    TargetIndex;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.SetBeamTargetPoint
	 */
	struct UParticleSystemComponent_SetBeamTargetPoint_Params
	{
	public:
		int32_t                                                    EmitterIndex;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NewTargetPoint;                                          // 0x0004(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    TargetIndex;                                             // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.SetBeamSourceTangent
	 */
	struct UParticleSystemComponent_SetBeamSourceTangent_Params
	{
	public:
		int32_t                                                    EmitterIndex;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NewTangentPoint;                                         // 0x0004(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    SourceIndex;                                             // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.SetBeamSourceStrength
	 */
	struct UParticleSystemComponent_SetBeamSourceStrength_Params
	{
	public:
		int32_t                                                    EmitterIndex;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      NewSourceStrength;                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    SourceIndex;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.SetBeamSourcePoint
	 */
	struct UParticleSystemComponent_SetBeamSourcePoint_Params
	{
	public:
		int32_t                                                    EmitterIndex;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NewSourcePoint;                                          // 0x0004(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    SourceIndex;                                             // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.SetBeamEndPoint
	 */
	struct UParticleSystemComponent_SetBeamEndPoint_Params
	{
	public:
		int32_t                                                    EmitterIndex;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NewEndPoint;                                             // 0x0004(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.SetActorParameter
	 */
	struct UParticleSystemComponent_SetActorParameter_Params
	{
	public:
		class FName                                                ParameterName;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              Param;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.OnSystemFinished__DelegateSignature
	 */
	struct UParticleSystemComponent_OnSystemFinished__DelegateSignature_Params
	{
	public:
		class UParticleSystemComponent*                            PSystem;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.GetVectorParameter
	 */
	struct UParticleSystemComponent_GetVectorParameter_Params
	{
	public:
		class FName                                                InName;                                                  // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             OutVector;                                               // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.GetNumActiveParticles
	 */
	struct UParticleSystemComponent_GetNumActiveParticles_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.GetNamedMaterial
	 */
	struct UParticleSystemComponent_GetNamedMaterial_Params
	{
	public:
		class FName                                                InName;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialInterface*                                  ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.GetMaterialParameter
	 */
	struct UParticleSystemComponent_GetMaterialParameter_Params
	{
	public:
		class FName                                                InName;                                                  // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialInterface*                                  OutMaterial;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.GetFloatParameter
	 */
	struct UParticleSystemComponent_GetFloatParameter_Params
	{
	public:
		class FName                                                InName;                                                  // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OutFloat;                                                // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.GetColorParameter
	 */
	struct UParticleSystemComponent_GetColorParameter_Params
	{
	public:
		class FName                                                InName;                                                  // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        outColor;                                                // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.GetActorParameter
	 */
	struct UParticleSystemComponent_GetActorParameter_Params
	{
	public:
		class FName                                                InName;                                                  // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              OutActor;                                                // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.GenerateParticleEvent
	 */
	struct UParticleSystemComponent_GenerateParticleEvent_Params
	{
	public:
		class FName                                                InEventName;                                             // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InEmitterTime;                                           // 0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             InLocation;                                              // 0x000C(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             InDirection;                                             // 0x0018(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             InVelocity;                                              // 0x0024(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.EndTrails
	 */
	struct UParticleSystemComponent_EndTrails_Params
	{	};

	/**
	 * Function Engine.ParticleSystemComponent.CreateNamedDynamicMaterialInstance
	 */
	struct UParticleSystemComponent_CreateNamedDynamicMaterialInstance_Params
	{
	public:
		class FName                                                InName;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialInterface*                                  SourceMaterial;                                          // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialInstanceDynamic*                            ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystemComponent.BeginTrails
	 */
	struct UParticleSystemComponent_BeginTrails_Params
	{
	public:
		class FName                                                InFirstSocketName;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                InSecondSocketName;                                      // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ETrailWidthMode                                            InWidthMode;                                             // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7UQT[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      InWidth;                                                 // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DefaultPawn.TurnAtRate
	 */
	struct ADefaultPawn_TurnAtRate_Params
	{
	public:
		float                                                      Rate;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DefaultPawn.Turn
	 */
	struct ADefaultPawn_Turn_Params
	{
	public:
		float                                                      val;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DefaultPawn.MoveUp_World
	 */
	struct ADefaultPawn_MoveUp_World_Params
	{
	public:
		float                                                      val;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DefaultPawn.MoveRight
	 */
	struct ADefaultPawn_MoveRight_Params
	{
	public:
		float                                                      val;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DefaultPawn.MoveForward
	 */
	struct ADefaultPawn_MoveForward_Params
	{
	public:
		float                                                      val;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DefaultPawn.LookUpAtRate
	 */
	struct ADefaultPawn_LookUpAtRate_Params
	{
	public:
		float                                                      Rate;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DefaultPawn.LookUp
	 */
	struct ADefaultPawn_LookUp_Params
	{
	public:
		float                                                      val;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsVolume.GetVolumeZAtPosition2D
	 */
	struct APhysicsVolume_GetVolumeZAtPosition2D_Params
	{
	public:
		struct FVector2D                                           Position;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AmbientSound.Stop
	 */
	struct AAmbientSound_Stop_Params
	{	};

	/**
	 * Function Engine.AmbientSound.Play
	 */
	struct AAmbientSound_Play_Params
	{
	public:
		float                                                      StartTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AmbientSound.FadeOut
	 */
	struct AAmbientSound_FadeOut_Params
	{
	public:
		float                                                      FadeOutDuration;                                         // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      FadeVolumeLevel;                                         // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AmbientSound.FadeIn
	 */
	struct AAmbientSound_FadeIn_Params
	{
	public:
		float                                                      FadeInDuration;                                          // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      FadeVolumeLevel;                                         // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AmbientSound.AdjustVolume
	 */
	struct AAmbientSound_AdjustVolume_Params
	{
	public:
		float                                                      AdjustVolumeDuration;                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      AdjustVolumeLevel;                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.World.IsActuallyUsingTrueSkyActor
	 */
	struct UWorld_IsActuallyUsingTrueSkyActor_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.World.GetWorldSettings
	 */
	struct UWorld_GetWorldSettings_Params
	{
	public:
		bool                                                       bCheckStreamingPesistent;                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bChecked;                                                // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_PRZU[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AWorldSettings*                                      ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.World.GetFirstPlayerController
	 */
	struct UWorld_GetFirstPlayerController_Params
	{
	public:
		class APlayerController*                                   ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.BlockingVolume.OnInterpToggle
	 */
	struct ABlockingVolume_OnInterpToggle_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.BlockingVolume.DoToggle
	 */
	struct ABlockingVolume_DoToggle_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PostProcessVolume.PostprocessVolumeLeftSignature__DelegateSignature
	 */
	struct APostProcessVolume_PostprocessVolumeLeftSignature__DelegateSignature_Params
	{
	public:
		class APlayerController*                                   Controller;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsPrimaryPlayer;                                        // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PostProcessVolume.PostprocessVolumeEnteredSignature__DelegateSignature
	 */
	struct APostProcessVolume_PostprocessVolumeEnteredSignature__DelegateSignature_Params
	{
	public:
		class APlayerController*                                   Controller;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsPrimaryPlayer;                                        // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TileStreamingVolume.OnInterpToggle
	 */
	struct ATileStreamingVolume_OnInterpToggle_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TileStreamingVolume.DoToggle
	 */
	struct ATileStreamingVolume_DoToggle_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CameraActor.GetAutoActivatePlayerIndex
	 */
	struct ACameraActor_GetAutoActivatePlayerIndex_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InputComponent.WasControllerKeyJustReleased
	 */
	struct UInputComponent_WasControllerKeyJustReleased_Params
	{
	public:
		struct FKey                                                Key;                                                     // 0x0000(0x0018)  (Parm)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InputComponent.WasControllerKeyJustPressed
	 */
	struct UInputComponent_WasControllerKeyJustPressed_Params
	{
	public:
		struct FKey                                                Key;                                                     // 0x0000(0x0018)  (Parm)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InputComponent.IsControllerKeyDown
	 */
	struct UInputComponent_IsControllerKeyDown_Params
	{
	public:
		struct FKey                                                Key;                                                     // 0x0000(0x0018)  (Parm)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InputComponent.InputVectorAxisHandlerDynamicSignature__DelegateSignature
	 */
	struct UInputComponent_InputVectorAxisHandlerDynamicSignature__DelegateSignature_Params
	{
	public:
		struct FVector                                             AxisValue;                                               // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InputComponent.InputTouchHandlerDynamicSignature__DelegateSignature
	 */
	struct UInputComponent_InputTouchHandlerDynamicSignature__DelegateSignature_Params
	{
	public:
		ETouchIndex                                                FingerIndex;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_4D5F[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             Location;                                                // 0x0004(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InputComponent.InputGestureHandlerDynamicSignature__DelegateSignature
	 */
	struct UInputComponent_InputGestureHandlerDynamicSignature__DelegateSignature_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InputComponent.InputAxisHandlerDynamicSignature__DelegateSignature
	 */
	struct UInputComponent_InputAxisHandlerDynamicSignature__DelegateSignature_Params
	{
	public:
		float                                                      AxisValue;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InputComponent.InputActionHandlerDynamicSignature__DelegateSignature
	 */
	struct UInputComponent_InputActionHandlerDynamicSignature__DelegateSignature_Params
	{	};

	/**
	 * Function Engine.InputComponent.GetTouchState
	 */
	struct UInputComponent_GetTouchState_Params
	{
	public:
		int32_t                                                    FingerIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      LocationX;                                               // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      LocationY;                                               // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsCurrentlyPressed;                                     // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InputComponent.GetControllerVectorKeyState
	 */
	struct UInputComponent_GetControllerVectorKeyState_Params
	{
	public:
		struct FKey                                                Key;                                                     // 0x0000(0x0018)  (Parm)
		struct FVector                                             ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InputComponent.GetControllerMouseDelta
	 */
	struct UInputComponent_GetControllerMouseDelta_Params
	{
	public:
		float                                                      DeltaX;                                                  // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaY;                                                  // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InputComponent.GetControllerKeyTimeDown
	 */
	struct UInputComponent_GetControllerKeyTimeDown_Params
	{
	public:
		struct FKey                                                Key;                                                     // 0x0000(0x0018)  (Parm)
		float                                                      ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InputComponent.GetControllerAnalogStickState
	 */
	struct UInputComponent_GetControllerAnalogStickState_Params
	{
	public:
		EControllerAnalogStick                                     WhichStick;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_SW0I[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      StickX;                                                  // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      StickY;                                                  // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InputComponent.GetControllerAnalogKeyState
	 */
	struct UInputComponent_GetControllerAnalogKeyState_Params
	{
	public:
		struct FKey                                                Key;                                                     // 0x0000(0x0018)  (Parm)
		float                                                      ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DebugCameraController.ShowDebugSelectedInfo
	 */
	struct ADebugCameraController_ShowDebugSelectedInfo_Params
	{	};

	/**
	 * Function Engine.DecalActor.SetDecalMaterial
	 */
	struct ADecalActor_SetDecalMaterial_Params
	{
	public:
		class UMaterialInterface*                                  NewDecalMaterial;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DecalActor.GetDecalMaterial
	 */
	struct ADecalActor_GetDecalMaterial_Params
	{
	public:
		class UMaterialInterface*                                  ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DecalActor.CreateDynamicMaterialInstance
	 */
	struct ADecalActor_CreateDynamicMaterialInstance_Params
	{
	public:
		class UMaterialInstanceDynamic*                            ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ExponentialHeightFog.OnRep_bEnabled
	 */
	struct AExponentialHeightFog_OnRep_bEnabled_Params
	{	};

	/**
	 * Function Engine.SkyLight.OnRep_bEnabled
	 */
	struct ASkyLight_OnRep_bEnabled_Params
	{	};

	/**
	 * Function Engine.InstancedFoliageActor.BPGetInstancedFoliageActorForCurrentLevel
	 */
	struct AInstancedFoliageActor_BPGetInstancedFoliageActorForCurrentLevel_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AInstancedFoliageActor*                              ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InstancedFoliageActor.BPConvertStaticMeshActorsToFoliage
	 */
	struct AInstancedFoliageActor_BPConvertStaticMeshActorsToFoliage_Params
	{
	public:
		TArray<class AStaticMeshActor*>                            actors;                                                  // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class AStaticMeshActor*>                            ConvertedActors;                                         // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function Engine.LandscapeProxy.ChangeLODDistanceFactor
	 */
	struct ALandscapeProxy_ChangeLODDistanceFactor_Params
	{
	public:
		float                                                      InLODDistanceFactor;                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.LevelScriptActor.WorldOriginLocationChanged
	 */
	struct ALevelScriptActor_WorldOriginLocationChanged_Params
	{
	public:
		struct FIntVector                                          OldOriginLocation;                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FIntVector                                          NewOriginLocation;                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.LevelScriptActor.SetCinematicMode
	 */
	struct ALevelScriptActor_SetCinematicMode_Params
	{
	public:
		bool                                                       bCinematicMode;                                          // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bHidePlayer;                                             // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAffectsHUD;                                             // 0x0002(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAffectsMovement;                                        // 0x0003(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAffectsTurning;                                         // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.LevelScriptActor.RemoteEvent
	 */
	struct ALevelScriptActor_RemoteEvent_Params
	{
	public:
		class FName                                                EventName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.LevelScriptActor.OnGameStateReady
	 */
	struct ALevelScriptActor_OnGameStateReady_Params
	{
	public:
		class AGameState*                                          GameState;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.LevelScriptActor.LevelReset
	 */
	struct ALevelScriptActor_LevelReset_Params
	{	};

	/**
	 * Function Engine.PointLight.SetRadius
	 */
	struct APointLight_SetRadius_Params
	{
	public:
		float                                                      NewRadius;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PointLight.SetLightFalloffExponent
	 */
	struct APointLight_SetLightFalloffExponent_Params
	{
	public:
		float                                                      NewLightFalloffExponent;                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SpotLight.SetOuterConeAngle
	 */
	struct ASpotLight_SetOuterConeAngle_Params
	{
	public:
		float                                                      NewOuterConeAngle;                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SpotLight.SetInnerConeAngle
	 */
	struct ASpotLight_SetInnerConeAngle_Params
	{
	public:
		float                                                      NewInnerConeAngle;                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MatineeActor.Stop
	 */
	struct AMatineeActor_Stop_Params
	{	};

	/**
	 * Function Engine.MatineeActor.SetPosition
	 */
	struct AMatineeActor_SetPosition_Params
	{
	public:
		float                                                      NewPosition;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bJump;                                                   // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceJumpFromBeginningForEvents;                        // 0x0005(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSkipMatineeUpdate;                                      // 0x0006(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MatineeActor.SetLoopingState
	 */
	struct AMatineeActor_SetLoopingState_Params
	{
	public:
		bool                                                       bNewLooping;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MatineeActor.Reverse
	 */
	struct AMatineeActor_Reverse_Params
	{	};

	/**
	 * Function Engine.MatineeActor.Play
	 */
	struct AMatineeActor_Play_Params
	{
	public:
		float                                                      OverrideSetPosition;                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOverridePositionJump;                                   // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MatineeActor.Pause
	 */
	struct AMatineeActor_Pause_Params
	{	};

	/**
	 * Function Engine.MatineeActor.OnMatineeEvent__DelegateSignature
	 */
	struct AMatineeActor_OnMatineeEvent__DelegateSignature_Params
	{	};

	/**
	 * Function Engine.MatineeActor.InitClientMatinee
	 */
	struct AMatineeActor_InitClientMatinee_Params
	{	};

	/**
	 * Function Engine.MatineeActor.ChangePlaybackDirection
	 */
	struct AMatineeActor_ChangePlaybackDirection_Params
	{	};

	/**
	 * Function Engine.MatineeActor.AddActorToGroup
	 */
	struct AMatineeActor_AddActorToGroup_Params
	{
	public:
		class FName                                                GroupName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              TheGroupActor;                                           // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavLinkProxy.SmartLinkReachedSignature__DelegateSignature
	 */
	struct ANavLinkProxy_SmartLinkReachedSignature__DelegateSignature_Params
	{
	public:
		class AActor*                                              MovingActor;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             DestinationPoint;                                        // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavLinkProxy.SetSmartLinkEnabled
	 */
	struct ANavLinkProxy_SetSmartLinkEnabled_Params
	{
	public:
		bool                                                       bEnabled;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavLinkProxy.ResumePathFollowing
	 */
	struct ANavLinkProxy_ResumePathFollowing_Params
	{
	public:
		class AActor*                                              Agent;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavLinkProxy.ReceiveSmartLinkReached
	 */
	struct ANavLinkProxy_ReceiveSmartLinkReached_Params
	{
	public:
		class AActor*                                              Agent;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Destination;                                             // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavLinkProxy.IsSmartLinkEnabled
	 */
	struct ANavLinkProxy_IsSmartLinkEnabled_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavLinkProxy.HasMovingAgents
	 */
	struct ANavLinkProxy_HasMovingAgents_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.BoxReflectionCapture.GetBoxCaptureComponent
	 */
	struct ABoxReflectionCapture_GetBoxCaptureComponent_Params
	{
	public:
		class UBoxReflectionCaptureComponent*                      ReturnValue;                                             // 0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SphereReflectionCapture.GetSphereCaptureComponent
	 */
	struct ASphereReflectionCapture_GetSphereCaptureComponent_Params
	{
	public:
		class USphereReflectionCaptureComponent*                   ReturnValue;                                             // 0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.RadialForceActor.ToggleForce
	 */
	struct ARadialForceActor_ToggleForce_Params
	{	};

	/**
	 * Function Engine.RadialForceActor.FireImpulse
	 */
	struct ARadialForceActor_FireImpulse_Params
	{	};

	/**
	 * Function Engine.RadialForceActor.EnableForce
	 */
	struct ARadialForceActor_EnableForce_Params
	{	};

	/**
	 * Function Engine.RadialForceActor.DisableForce
	 */
	struct ARadialForceActor_DisableForce_Params
	{	};

	/**
	 * Function Engine.SceneCapture2D.OnInterpToggle
	 */
	struct ASceneCapture2D_OnInterpToggle_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneCaptureCube.OnInterpToggle
	 */
	struct ASceneCaptureCube_OnInterpToggle_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsConstraintComponent.SetLinearZLimit
	 */
	struct UPhysicsConstraintComponent_SetLinearZLimit_Params
	{
	public:
		ELinearConstraintMotion                                    ConstraintType;                                          // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_D7AQ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      LimitSize;                                               // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsConstraintComponent.SetLinearYLimit
	 */
	struct UPhysicsConstraintComponent_SetLinearYLimit_Params
	{
	public:
		ELinearConstraintMotion                                    ConstraintType;                                          // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KC6K[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      LimitSize;                                               // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsConstraintComponent.SetLinearXLimit
	 */
	struct UPhysicsConstraintComponent_SetLinearXLimit_Params
	{
	public:
		ELinearConstraintMotion                                    ConstraintType;                                          // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_DNM4[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      LimitSize;                                               // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsConstraintComponent.SetLinearVelocityTarget
	 */
	struct UPhysicsConstraintComponent_SetLinearVelocityTarget_Params
	{
	public:
		struct FVector                                             InVelTarget;                                             // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsConstraintComponent.SetLinearVelocityDrive
	 */
	struct UPhysicsConstraintComponent_SetLinearVelocityDrive_Params
	{
	public:
		bool                                                       bEnableDriveX;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEnableDriveY;                                           // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEnableDriveZ;                                           // 0x0002(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsConstraintComponent.SetLinearPositionTarget
	 */
	struct UPhysicsConstraintComponent_SetLinearPositionTarget_Params
	{
	public:
		struct FVector                                             InPosTarget;                                             // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsConstraintComponent.SetLinearPositionDrive
	 */
	struct UPhysicsConstraintComponent_SetLinearPositionDrive_Params
	{
	public:
		bool                                                       bEnableDriveX;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEnableDriveY;                                           // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEnableDriveZ;                                           // 0x0002(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsConstraintComponent.SetLinearDriveParams
	 */
	struct UPhysicsConstraintComponent_SetLinearDriveParams_Params
	{
	public:
		float                                                      InSpring;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InDamping;                                               // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InForceLimit;                                            // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsConstraintComponent.SetDisableCollision
	 */
	struct UPhysicsConstraintComponent_SetDisableCollision_Params
	{
	public:
		bool                                                       bDisableCollision;                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsConstraintComponent.SetConstraintReferencePosition
	 */
	struct UPhysicsConstraintComponent_SetConstraintReferencePosition_Params
	{
	public:
		EConstraintFrame                                           Frame;                                                   // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_M0FK[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             RefPosition;                                             // 0x0004(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsConstraintComponent.SetConstraintReferenceOrientation
	 */
	struct UPhysicsConstraintComponent_SetConstraintReferenceOrientation_Params
	{
	public:
		EConstraintFrame                                           Frame;                                                   // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_9DQX[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             PriAxis;                                                 // 0x0004(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             SecAxis;                                                 // 0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsConstraintComponent.SetConstraintReferenceFrame
	 */
	struct UPhysicsConstraintComponent_SetConstraintReferenceFrame_Params
	{
	public:
		EConstraintFrame                                           Frame;                                                   // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XQ5T[0xF];                                   // 0x0001(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          RefFrame;                                                // 0x0010(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsConstraintComponent.SetConstrainedComponents
	 */
	struct UPhysicsConstraintComponent_SetConstrainedComponents_Params
	{
	public:
		class UPrimitiveComponent*                                 Component1;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                BoneName1;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 Component2;                                              // 0x0010(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                BoneName2;                                               // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsConstraintComponent.SetAngularVelocityTarget
	 */
	struct UPhysicsConstraintComponent_SetAngularVelocityTarget_Params
	{
	public:
		struct FVector                                             InVelTarget;                                             // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsConstraintComponent.SetAngularVelocityDrive
	 */
	struct UPhysicsConstraintComponent_SetAngularVelocityDrive_Params
	{
	public:
		bool                                                       bEnableSwingDrive;                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEnableTwistDrive;                                       // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsConstraintComponent.SetAngularTwistLimit
	 */
	struct UPhysicsConstraintComponent_SetAngularTwistLimit_Params
	{
	public:
		EAngularConstraintMotion                                   ConstraintType;                                          // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JXHL[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      TwistLimitAngle;                                         // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsConstraintComponent.SetAngularSwing2Limit
	 */
	struct UPhysicsConstraintComponent_SetAngularSwing2Limit_Params
	{
	public:
		EAngularConstraintMotion                                   MotionType;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZJKE[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      Swing2LimitAngle;                                        // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsConstraintComponent.SetAngularSwing1Limit
	 */
	struct UPhysicsConstraintComponent_SetAngularSwing1Limit_Params
	{
	public:
		EAngularConstraintMotion                                   MotionType;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5HAU[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      Swing1LimitAngle;                                        // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsConstraintComponent.SetAngularOrientationTarget
	 */
	struct UPhysicsConstraintComponent_SetAngularOrientationTarget_Params
	{
	public:
		struct FRotator                                            InPosTarget;                                             // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsConstraintComponent.SetAngularOrientationDrive
	 */
	struct UPhysicsConstraintComponent_SetAngularOrientationDrive_Params
	{
	public:
		bool                                                       bEnableSwingDrive;                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEnableTwistDrive;                                       // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsConstraintComponent.SetAngularDriveParams
	 */
	struct UPhysicsConstraintComponent_SetAngularDriveParams_Params
	{
	public:
		float                                                      InSpring;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InDamping;                                               // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InForceLimit;                                            // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsConstraintComponent.GetConstraintForce
	 */
	struct UPhysicsConstraintComponent_GetConstraintForce_Params
	{
	public:
		struct FVector                                             OutLinearForce;                                          // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             OutAngularForce;                                         // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsConstraintComponent.ConstraintBrokenSignature__DelegateSignature
	 */
	struct UPhysicsConstraintComponent_ConstraintBrokenSignature__DelegateSignature_Params
	{
	public:
		int32_t                                                    ConstraintIndex;                                         // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsConstraintComponent.BreakConstraint
	 */
	struct UPhysicsConstraintComponent_BreakConstraint_Params
	{	};

	/**
	 * Function Engine.SkeletalMeshComponent.Stop
	 */
	struct USkeletalMeshComponent_Stop_Params
	{	};

	/**
	 * Function Engine.SkeletalMeshComponent.SetupBetweenAnimationBlueprintBlending
	 */
	struct USkeletalMeshComponent_SetupBetweenAnimationBlueprintBlending_Params
	{	};

	/**
	 * Function Engine.SkeletalMeshComponent.SetPosition
	 */
	struct USkeletalMeshComponent_SetPosition_Params
	{
	public:
		float                                                      InPos;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFireNotifies;                                           // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.SetPlayRate
	 */
	struct USkeletalMeshComponent_SetPlayRate_Params
	{
	public:
		float                                                      Rate;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.SetPhysicsBlendWeight
	 */
	struct USkeletalMeshComponent_SetPhysicsBlendWeight_Params
	{
	public:
		float                                                      PhysicsBlendWeight;                                      // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.SetMorphTarget
	 */
	struct USkeletalMeshComponent_SetMorphTarget_Params
	{
	public:
		class FName                                                MorphTargetName;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Value;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.SetEnablePhysicsBlending
	 */
	struct USkeletalMeshComponent_SetEnablePhysicsBlending_Params
	{
	public:
		bool                                                       bNewBlendPhysics;                                        // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.SetClothMaxDistanceScale
	 */
	struct USkeletalMeshComponent_SetClothMaxDistanceScale_Params
	{
	public:
		float                                                      Scale;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.SetAnimInstanceClass
	 */
	struct USkeletalMeshComponent_SetAnimInstanceClass_Params
	{
	public:
		class UClass*                                              NewClass;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.SetAnimationMode
	 */
	struct USkeletalMeshComponent_SetAnimationMode_Params
	{
	public:
		EAnimationMode                                             InAnimationMode;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.SetAnimation
	 */
	struct USkeletalMeshComponent_SetAnimation_Params
	{
	public:
		class UAnimationAsset*                                     NewAnimToPlay;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.SetAllBodiesSimulatePhysics
	 */
	struct USkeletalMeshComponent_SetAllBodiesSimulatePhysics_Params
	{
	public:
		bool                                                       bNewSimulate;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.SetAllBodiesPhysicsBlendWeight
	 */
	struct USkeletalMeshComponent_SetAllBodiesPhysicsBlendWeight_Params
	{
	public:
		float                                                      PhysicsBlendWeight;                                      // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSkipCustomPhysicsType;                                  // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.SetAllBodiesBelowSimulatePhysics
	 */
	struct USkeletalMeshComponent_SetAllBodiesBelowSimulatePhysics_Params
	{
	public:
		class FName                                                InBoneName;                                              // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bNewSimulate;                                            // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.SetAllBodiesBelowPhysicsBlendWeight
	 */
	struct USkeletalMeshComponent_SetAllBodiesBelowPhysicsBlendWeight_Params
	{
	public:
		class FName                                                InBoneName;                                              // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      PhysicsBlendWeight;                                      // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSkipCustomPhysicsType;                                  // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.ResetClothTeleportMode
	 */
	struct USkeletalMeshComponent_ResetClothTeleportMode_Params
	{	};

	/**
	 * Function Engine.SkeletalMeshComponent.ResetAllBodiesSimulatePhysics
	 */
	struct USkeletalMeshComponent_ResetAllBodiesSimulatePhysics_Params
	{	};

	/**
	 * Function Engine.SkeletalMeshComponent.PlayAnimation
	 */
	struct USkeletalMeshComponent_PlayAnimation_Params
	{
	public:
		class UAnimationAsset*                                     NewAnimToPlay;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bLooping;                                                // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.Play
	 */
	struct USkeletalMeshComponent_Play_Params
	{
	public:
		bool                                                       bLooping;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.IsPlayingMontage
	 */
	struct USkeletalMeshComponent_IsPlayingMontage_Params
	{
	public:
		class UAnimMontage*                                        Montage;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TimeFromEndToConsiderFinished;                           // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.IsPlayingAnimationMontagesOnSlotName
	 */
	struct USkeletalMeshComponent_IsPlayingAnimationMontagesOnSlotName_Params
	{
	public:
		class FName                                                SlotName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.IsPlaying
	 */
	struct USkeletalMeshComponent_IsPlaying_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.IncrementIKLegMute
	 */
	struct USkeletalMeshComponent_IncrementIKLegMute_Params
	{
	public:
		int32_t                                                    LegIndex;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.GetTrueBasedPawns
	 */
	struct USkeletalMeshComponent_GetTrueBasedPawns_Params
	{
	public:
		TArray<class APawn*>                                       ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.GetPosition
	 */
	struct USkeletalMeshComponent_GetPosition_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.GetPlayRate
	 */
	struct USkeletalMeshComponent_GetPlayRate_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.GetMorphTarget
	 */
	struct USkeletalMeshComponent_GetMorphTarget_Params
	{
	public:
		class FName                                                MorphTargetName;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.GetFirstBoneWithChildren
	 */
	struct USkeletalMeshComponent_GetFirstBoneWithChildren_Params
	{
	public:
		class FName                                                ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.GetClothMaxDistanceScale
	 */
	struct USkeletalMeshComponent_GetClothMaxDistanceScale_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.GetAnimInstance
	 */
	struct USkeletalMeshComponent_GetAnimInstance_Params
	{
	public:
		class UAnimInstance*                                       ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.GetAnimationMode
	 */
	struct USkeletalMeshComponent_GetAnimationMode_Params
	{
	public:
		EAnimationMode                                             ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.ForceClothNextUpdateTeleportAndReset
	 */
	struct USkeletalMeshComponent_ForceClothNextUpdateTeleportAndReset_Params
	{	};

	/**
	 * Function Engine.SkeletalMeshComponent.ForceClothNextUpdateTeleport
	 */
	struct USkeletalMeshComponent_ForceClothNextUpdateTeleport_Params
	{	};

	/**
	 * Function Engine.SkeletalMeshComponent.FlushMorphTargets
	 */
	struct USkeletalMeshComponent_FlushMorphTargets_Params
	{	};

	/**
	 * Function Engine.SkeletalMeshComponent.DecrementIKLegMute
	 */
	struct USkeletalMeshComponent_DecrementIKLegMute_Params
	{
	public:
		int32_t                                                    LegIndex;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.ClearMorphTargets
	 */
	struct USkeletalMeshComponent_ClearMorphTargets_Params
	{	};

	/**
	 * Function Engine.SkeletalMeshComponent.BPValidBoneToUnhide
	 */
	struct USkeletalMeshComponent_BPValidBoneToUnhide_Params
	{
	public:
		int32_t                                                    BoneIndex;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.BPTickPose
	 */
	struct USkeletalMeshComponent_BPTickPose_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.BPSetBoneModifiers
	 */
	struct USkeletalMeshComponent_BPSetBoneModifiers_Params
	{
	public:
		TArray<struct FBoneModifierNamed>                          NamedBoneModifiers;                                      // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function Engine.SkeletalMeshComponent.BPRefreshBoneTransforms
	 */
	struct USkeletalMeshComponent_BPRefreshBoneTransforms_Params
	{	};

	/**
	 * Function Engine.SkeletalMeshComponent.AccumulateAllBodiesBelowPhysicsBlendWeight
	 */
	struct USkeletalMeshComponent_AccumulateAllBodiesBelowPhysicsBlendWeight_Params
	{
	public:
		class FName                                                InBoneName;                                              // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      AddPhysicsBlendWeight;                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSkipCustomPhysicsType;                                  // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshActor.OnRep_ReplicatedPhysAsset
	 */
	struct ASkeletalMeshActor_OnRep_ReplicatedPhysAsset_Params
	{	};

	/**
	 * Function Engine.SkeletalMeshActor.OnRep_ReplicatedMesh
	 */
	struct ASkeletalMeshActor_OnRep_ReplicatedMesh_Params
	{	};

	/**
	 * Function Engine.SkeletalMeshActor.OnRep_ReplicatedMaterial1
	 */
	struct ASkeletalMeshActor_OnRep_ReplicatedMaterial1_Params
	{	};

	/**
	 * Function Engine.SkeletalMeshActor.OnRep_ReplicatedMaterial0
	 */
	struct ASkeletalMeshActor_OnRep_ReplicatedMaterial0_Params
	{	};

	/**
	 * Function Engine.InteractiveFoliageActor.CapsuleTouched
	 */
	struct AInteractiveFoliageActor_CapsuleTouched_Params
	{
	public:
		class AActor*                                              Other;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    OtherBodyIndex;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFromSweep;                                              // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_RCVZ[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          OverlapInfo;                                             // 0x0018(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function Engine.ApplicationLifecycleComponent.ApplicationLifetimeDelegate__DelegateSignature
	 */
	struct UApplicationLifecycleComponent_ApplicationLifetimeDelegate__DelegateSignature_Params
	{	};

	/**
	 * Function Engine.NavigationSystem.SimpleMoveToLocation
	 */
	struct UNavigationSystem_SimpleMoveToLocation_Params
	{
	public:
		class AController*                                         Controller;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Goal;                                                    // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavigationSystem.SimpleMoveToActor
	 */
	struct UNavigationSystem_SimpleMoveToActor_Params
	{
	public:
		class AController*                                         Controller;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              Goal;                                                    // 0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavigationSystem.ProjectPointToNavigationEx
	 */
	struct UNavigationSystem_ProjectPointToNavigationEx_Params
	{
	public:
		class UObject*                                             WorldContext;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Point;                                                   // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             Extent;                                                  // 0x0014(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class ANavigationData*                                     NavData;                                                 // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              FilterClass;                                             // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0030(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavigationSystem.ProjectPointToNavigation
	 */
	struct UNavigationSystem_ProjectPointToNavigation_Params
	{
	public:
		class UObject*                                             WorldContext;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Point;                                                   // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_K2IZ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class ANavigationData*                                     NavData;                                                 // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              FilterClass;                                             // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0028(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavigationSystem.OnNavDataRegistered__DelegateSignature
	 */
	struct UNavigationSystem_OnNavDataRegistered__DelegateSignature_Params
	{
	public:
		class ANavigationData*                                     NavData;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavigationSystem.NavigationRaycast
	 */
	struct UNavigationSystem_NavigationRaycast_Params
	{
	public:
		class UObject*                                             WorldContext;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             RayStart;                                                // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             RayEnd;                                                  // 0x0014(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             HitLocation;                                             // 0x0020(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_PWZG[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              FilterClass;                                             // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AController*                                         Querier;                                                 // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0040(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavigationSystem.IsNavigationBeingBuilt
	 */
	struct UNavigationSystem_IsNavigationBeingBuilt_Params
	{
	public:
		class UObject*                                             WorldContext;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavigationSystem.GetRandomReachablePointInMinMaxRadius
	 */
	struct UNavigationSystem_GetRandomReachablePointInMinMaxRadius_Params
	{
	public:
		class UObject*                                             WorldContext;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Origin;                                                  // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      MinRadius;                                               // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxRadius;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRandomStream                                       RandStream;                                              // 0x001C(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FVector                                             PathDirection;                                           // 0x0024(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DotLimit;                                                // 0x0030(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KC1H[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class ANavigationData*                                     NavData;                                                 // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              FilterClass;                                             // 0x0040(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0048(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavigationSystem.GetRandomPointInRadius
	 */
	struct UNavigationSystem_GetRandomPointInRadius_Params
	{
	public:
		class UObject*                                             WorldContext;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Origin;                                                  // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class ANavigationData*                                     NavData;                                                 // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              FilterClass;                                             // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0028(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavigationSystem.GetRandomPoint
	 */
	struct UNavigationSystem_GetRandomPoint_Params
	{
	public:
		class UObject*                                             WorldContext;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class ANavigationData*                                     NavData;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              FilterClass;                                             // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavigationSystem.GetPathLength
	 */
	struct UNavigationSystem_GetPathLength_Params
	{
	public:
		class UObject*                                             WorldContext;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             PathStart;                                               // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             PathEnd;                                                 // 0x0014(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      PathLength;                                              // 0x0020(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_IQGG[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class ANavigationData*                                     NavData;                                                 // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              FilterClass;                                             // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ENavigationQueryResult                                     ReturnValue;                                             // 0x0038(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavigationSystem.GetPathCost
	 */
	struct UNavigationSystem_GetPathCost_Params
	{
	public:
		class UObject*                                             WorldContext;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             PathStart;                                               // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             PathEnd;                                                 // 0x0014(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      PathCost;                                                // 0x0020(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_H6XQ[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class ANavigationData*                                     NavData;                                                 // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              FilterClass;                                             // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ENavigationQueryResult                                     ReturnValue;                                             // 0x0038(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavigationSystem.FindPathToLocationSynchronously
	 */
	struct UNavigationSystem_FindPathToLocationSynchronously_Params
	{
	public:
		class UObject*                                             WorldContext;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             PathStart;                                               // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             PathEnd;                                                 // 0x0014(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class AActor*                                              PathfindingContext;                                      // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              FilterClass;                                             // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UNavigationPath*                                     ReturnValue;                                             // 0x0030(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavigationSystem.FindPathToActorSynchronously
	 */
	struct UNavigationSystem_FindPathToActorSynchronously_Params
	{
	public:
		class UObject*                                             WorldContext;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             PathStart;                                               // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_WWVQ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              GoalActor;                                               // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TetherDistance;                                          // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_N7CC[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              PathfindingContext;                                      // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              FilterClass;                                             // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UNavigationPath*                                     ReturnValue;                                             // 0x0038(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.WheeledVehicleMovementComponent.SetUseAutoGears
	 */
	struct UWheeledVehicleMovementComponent_SetUseAutoGears_Params
	{
	public:
		bool                                                       bUseAuto;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.WheeledVehicleMovementComponent.SetThrottleInput
	 */
	struct UWheeledVehicleMovementComponent_SetThrottleInput_Params
	{
	public:
		float                                                      Throttle;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.WheeledVehicleMovementComponent.SetTargetGear
	 */
	struct UWheeledVehicleMovementComponent_SetTargetGear_Params
	{
	public:
		int32_t                                                    GearNum;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bImmediate;                                              // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.WheeledVehicleMovementComponent.SetSteeringInput
	 */
	struct UWheeledVehicleMovementComponent_SetSteeringInput_Params
	{
	public:
		float                                                      Steering;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.WheeledVehicleMovementComponent.SetHandbrakeInput
	 */
	struct UWheeledVehicleMovementComponent_SetHandbrakeInput_Params
	{
	public:
		bool                                                       bNewHandbrake;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.WheeledVehicleMovementComponent.SetGearUp
	 */
	struct UWheeledVehicleMovementComponent_SetGearUp_Params
	{
	public:
		bool                                                       bNewGearUp;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.WheeledVehicleMovementComponent.SetGearDown
	 */
	struct UWheeledVehicleMovementComponent_SetGearDown_Params
	{
	public:
		bool                                                       bNewGearDown;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.WheeledVehicleMovementComponent.ServerUpdateState
	 */
	struct UWheeledVehicleMovementComponent_ServerUpdateState_Params
	{
	public:
		float                                                      InSteeringInput;                                         // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InThrottleInput;                                         // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InBrakeInput;                                            // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InHandbrakeInput;                                        // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    CurrentGear;                                             // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.WheeledVehicleMovementComponent.GetUseAutoGears
	 */
	struct UWheeledVehicleMovementComponent_GetUseAutoGears_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.WheeledVehicleMovementComponent.GetThrottleInput
	 */
	struct UWheeledVehicleMovementComponent_GetThrottleInput_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.WheeledVehicleMovementComponent.GetTargetGear
	 */
	struct UWheeledVehicleMovementComponent_GetTargetGear_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.WheeledVehicleMovementComponent.GetForwardSpeed
	 */
	struct UWheeledVehicleMovementComponent_GetForwardSpeed_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.WheeledVehicleMovementComponent.GetEngineRotationSpeed
	 */
	struct UWheeledVehicleMovementComponent_GetEngineRotationSpeed_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.WheeledVehicleMovementComponent.GetEngineMaxRotationSpeed
	 */
	struct UWheeledVehicleMovementComponent_GetEngineMaxRotationSpeed_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.WheeledVehicleMovementComponent.GetCurrentGear
	 */
	struct UWheeledVehicleMovementComponent_GetCurrentGear_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ProjectileMovementComponent.StopSimulating
	 */
	struct UProjectileMovementComponent_StopSimulating_Params
	{
	public:
		struct FHitResult                                          HitResult;                                               // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function Engine.ProjectileMovementComponent.SetVelocityInLocalSpace
	 */
	struct UProjectileMovementComponent_SetVelocityInLocalSpace_Params
	{
	public:
		struct FVector                                             NewVelocity;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ProjectileMovementComponent.OnProjectileStopDelegate__DelegateSignature
	 */
	struct UProjectileMovementComponent_OnProjectileStopDelegate__DelegateSignature_Params
	{
	public:
		struct FHitResult                                          ImpactResult;                                            // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function Engine.ProjectileMovementComponent.OnProjectileBounceDelegate__DelegateSignature
	 */
	struct UProjectileMovementComponent_OnProjectileBounceDelegate__DelegateSignature_Params
	{
	public:
		struct FHitResult                                          ImpactResult;                                            // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector                                             ImpactVelocity;                                          // 0x0088(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ProjectileMovementComponent.LimitVelocity
	 */
	struct UProjectileMovementComponent_LimitVelocity_Params
	{
	public:
		struct FVector                                             NewVelocity;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavRelevantComponent.SetNavigationRelevancy
	 */
	struct UNavRelevantComponent_SetNavigationRelevancy_Params
	{
	public:
		bool                                                       bRelevant;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PawnNoiseEmitterComponent.MakeNoise
	 */
	struct UPawnNoiseEmitterComponent_MakeNoise_Params
	{
	public:
		class AActor*                                              NoiseMaker;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Loudness;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NoiseLocation;                                           // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsHandleComponent.SetTargetRotation
	 */
	struct UPhysicsHandleComponent_SetTargetRotation_Params
	{
	public:
		struct FRotator                                            NewRotation;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsHandleComponent.SetTargetLocationAndRotation
	 */
	struct UPhysicsHandleComponent_SetTargetLocationAndRotation_Params
	{
	public:
		struct FVector                                             NewLocation;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            NewRotation;                                             // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsHandleComponent.SetTargetLocation
	 */
	struct UPhysicsHandleComponent_SetTargetLocation_Params
	{
	public:
		struct FVector                                             NewLocation;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsHandleComponent.ReleaseComponent
	 */
	struct UPhysicsHandleComponent_ReleaseComponent_Params
	{	};

	/**
	 * Function Engine.PhysicsHandleComponent.GrabComponent
	 */
	struct UPhysicsHandleComponent_GrabComponent_Params
	{
	public:
		class UPrimitiveComponent*                                 Component;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                InBoneName;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             GrabLocation;                                            // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bConstrainRotation;                                      // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PhysicsHandleComponent.GetTargetLocationAndRotation
	 */
	struct UPhysicsHandleComponent_GetTargetLocationAndRotation_Params
	{
	public:
		struct FVector                                             TargetLocation;                                          // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            TargetRotation;                                          // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AtmosphericFogComponent.StartPrecompute
	 */
	struct UAtmosphericFogComponent_StartPrecompute_Params
	{	};

	/**
	 * Function Engine.AtmosphericFogComponent.SetSunMultiplier
	 */
	struct UAtmosphericFogComponent_SetSunMultiplier_Params
	{
	public:
		float                                                      NewSunMultiplier;                                        // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AtmosphericFogComponent.SetStartDistance
	 */
	struct UAtmosphericFogComponent_SetStartDistance_Params
	{
	public:
		float                                                      NewStartDistance;                                        // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AtmosphericFogComponent.SetPrecomputeParams
	 */
	struct UAtmosphericFogComponent_SetPrecomputeParams_Params
	{
	public:
		float                                                      DensityHeight;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MaxScatteringOrder;                                      // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    InscatterAltitudeSampleNum;                              // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AtmosphericFogComponent.SetFogTexturesDirectly
	 */
	struct UAtmosphericFogComponent_SetFogTexturesDirectly_Params
	{
	public:
		class UTexture2D*                                          ScatterTexture0;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTexture2D*                                          ScatterTexture1;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTexture2D*                                          LossTexture0;                                            // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTexture2D*                                          LossTexture1;                                            // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InInterpolation;                                         // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AtmosphericFogComponent.SetFogOverTimeIndices
	 */
	struct UAtmosphericFogComponent_SetFogOverTimeIndices_Params
	{
	public:
		int32_t                                                    Texture0;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Texture1;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InInterpolation;                                         // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AtmosphericFogComponent.SetFogMultiplier
	 */
	struct UAtmosphericFogComponent_SetFogMultiplier_Params
	{
	public:
		float                                                      NewFogMultiplier;                                        // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AtmosphericFogComponent.SetDistanceScale
	 */
	struct UAtmosphericFogComponent_SetDistanceScale_Params
	{
	public:
		float                                                      NewDistanceScale;                                        // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AtmosphericFogComponent.SetDistanceOffset
	 */
	struct UAtmosphericFogComponent_SetDistanceOffset_Params
	{
	public:
		float                                                      NewDistanceOffset;                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AtmosphericFogComponent.SetDensityOffset
	 */
	struct UAtmosphericFogComponent_SetDensityOffset_Params
	{
	public:
		float                                                      NewDensityOffset;                                        // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AtmosphericFogComponent.SetDensityMultiplier
	 */
	struct UAtmosphericFogComponent_SetDensityMultiplier_Params
	{
	public:
		float                                                      NewDensityMultiplier;                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AtmosphericFogComponent.SetDefaultLightColor
	 */
	struct UAtmosphericFogComponent_SetDefaultLightColor_Params
	{
	public:
		struct FLinearColor                                        NewLightColor;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AtmosphericFogComponent.SetDefaultBrightness
	 */
	struct UAtmosphericFogComponent_SetDefaultBrightness_Params
	{
	public:
		float                                                      NewBrightness;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AtmosphericFogComponent.SetAltitudeScale
	 */
	struct UAtmosphericFogComponent_SetAltitudeScale_Params
	{
	public:
		float                                                      NewAltitudeScale;                                        // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AtmosphericFogComponent.DisableSunDisk
	 */
	struct UAtmosphericFogComponent_DisableSunDisk_Params
	{
	public:
		bool                                                       NewSunDisk;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AtmosphericFogComponent.DisableGroundScattering
	 */
	struct UAtmosphericFogComponent_DisableGroundScattering_Params
	{
	public:
		bool                                                       NewGroundScattering;                                     // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AudioComponent.Stop
	 */
	struct UAudioComponent_Stop_Params
	{	};

	/**
	 * Function Engine.AudioComponent.SetWaveParameter
	 */
	struct UAudioComponent_SetWaveParameter_Params
	{
	public:
		class FName                                                InName;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USoundWave*                                          InWave;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AudioComponent.SetVolumeMultiplier
	 */
	struct UAudioComponent_SetVolumeMultiplier_Params
	{
	public:
		float                                                      NewVolumeMultiplier;                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AudioComponent.SetUISound
	 */
	struct UAudioComponent_SetUISound_Params
	{
	public:
		bool                                                       bInUISound;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AudioComponent.SetSound
	 */
	struct UAudioComponent_SetSound_Params
	{
	public:
		class USoundBase*                                          NewSound;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AudioComponent.SetPitchMultiplier
	 */
	struct UAudioComponent_SetPitchMultiplier_Params
	{
	public:
		float                                                      NewPitchMultiplier;                                      // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AudioComponent.SetIntParameter
	 */
	struct UAudioComponent_SetIntParameter_Params
	{
	public:
		class FName                                                InName;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    InInt;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AudioComponent.SetFloatParameter
	 */
	struct UAudioComponent_SetFloatParameter_Params
	{
	public:
		class FName                                                InName;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InFloat;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AudioComponent.SetBoolParameter
	 */
	struct UAudioComponent_SetBoolParameter_Params
	{
	public:
		class FName                                                InName;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       InBool;                                                  // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AudioComponent.Play
	 */
	struct UAudioComponent_Play_Params
	{
	public:
		float                                                      StartTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AudioComponent.OnQueueSubtitles__DelegateSignature
	 */
	struct UAudioComponent_OnQueueSubtitles__DelegateSignature_Params
	{
	public:
		TArray<struct FSubtitleCue>                                Subtitles;                                               // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		float                                                      CueDuration;                                             // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AudioComponent.OnAudioFinished__DelegateSignature
	 */
	struct UAudioComponent_OnAudioFinished__DelegateSignature_Params
	{	};

	/**
	 * Function Engine.AudioComponent.IsPlaying
	 */
	struct UAudioComponent_IsPlaying_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AudioComponent.FadeOut
	 */
	struct UAudioComponent_FadeOut_Params
	{
	public:
		float                                                      FadeOutDuration;                                         // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      FadeVolumeLevel;                                         // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AudioComponent.FadeIn
	 */
	struct UAudioComponent_FadeIn_Params
	{
	public:
		float                                                      FadeInDuration;                                          // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      FadeVolumeLevel;                                         // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      StartTime;                                               // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AudioComponent.AdjustVolume
	 */
	struct UAudioComponent_AdjustVolume_Params
	{
	public:
		float                                                      AdjustVolumeDuration;                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      AdjustVolumeLevel;                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AudioComponent.AdjustAttenuation
	 */
	struct UAudioComponent_AdjustAttenuation_Params
	{
	public:
		struct FAttenuationSettings                                InAttenuationSettings;                                   // 0x0000(0x0034)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function Engine.CameraComponent.GetCameraView
	 */
	struct UCameraComponent_GetCameraView_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_GPRN[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FMinimalViewInfo                                    DesiredView;                                             // 0x0008(0x0398)  (Parm, OutParm)
	};

	/**
	 * Function Engine.DecalComponent.SetSortOrder
	 */
	struct UDecalComponent_SetSortOrder_Params
	{
	public:
		int32_t                                                    Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DecalComponent.SetDecalMaterial
	 */
	struct UDecalComponent_SetDecalMaterial_Params
	{
	public:
		class UMaterialInterface*                                  NewDecalMaterial;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DecalComponent.GetDecalMaterial
	 */
	struct UDecalComponent_GetDecalMaterial_Params
	{
	public:
		class UMaterialInterface*                                  ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DecalComponent.CreateDynamicMaterialInstance
	 */
	struct UDecalComponent_CreateDynamicMaterialInstance_Params
	{
	public:
		class UMaterialInstanceDynamic*                            ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DecalComponent.CheckDestructionFirst
	 */
	struct UDecalComponent_CheckDestructionFirst_Params
	{	};

	/**
	 * Function Engine.DecalComponent.CheckDestruction
	 */
	struct UDecalComponent_CheckDestruction_Params
	{	};

	/**
	 * Function Engine.ExponentialHeightFogComponent.SetStartDistance
	 */
	struct UExponentialHeightFogComponent_SetStartDistance_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ExponentialHeightFogComponent.SetFogMaxOpacity
	 */
	struct UExponentialHeightFogComponent_SetFogMaxOpacity_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ExponentialHeightFogComponent.SetFogInscatteringColor
	 */
	struct UExponentialHeightFogComponent_SetFogInscatteringColor_Params
	{
	public:
		struct FLinearColor                                        Value;                                                   // 0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ExponentialHeightFogComponent.SetFogHeightFalloff
	 */
	struct UExponentialHeightFogComponent_SetFogHeightFalloff_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ExponentialHeightFogComponent.SetFogDensity
	 */
	struct UExponentialHeightFogComponent_SetFogDensity_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ExponentialHeightFogComponent.SetDirectionalInscatteringStartDistance
	 */
	struct UExponentialHeightFogComponent_SetDirectionalInscatteringStartDistance_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ExponentialHeightFogComponent.SetDirectionalInscatteringExponent
	 */
	struct UExponentialHeightFogComponent_SetDirectionalInscatteringExponent_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ExponentialHeightFogComponent.SetDirectionalInscatteringColor
	 */
	struct UExponentialHeightFogComponent_SetDirectionalInscatteringColor_Params
	{
	public:
		struct FLinearColor                                        Value;                                                   // 0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ExponentialHeightFogComponent.SetAdditionalStartDistance
	 */
	struct UExponentialHeightFogComponent_SetAdditionalStartDistance_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.LightComponent.SetShadowDistanceFade
	 */
	struct ULightComponent_SetShadowDistanceFade_Params
	{
	public:
		float                                                      NewFadeFraction;                                         // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.LightComponent.SetLightFunctionScale
	 */
	struct ULightComponent_SetLightFunctionScale_Params
	{
	public:
		struct FVector                                             NewLightFunctionScale;                                   // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.LightComponent.SetLightFunctionMaterial
	 */
	struct ULightComponent_SetLightFunctionMaterial_Params
	{
	public:
		class UMaterialInterface*                                  NewLightFunctionMaterial;                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.LightComponent.SetLightFunctionFadeDistance
	 */
	struct ULightComponent_SetLightFunctionFadeDistance_Params
	{
	public:
		float                                                      NewLightFunctionFadeDistance;                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.LightComponent.SetLightColor
	 */
	struct ULightComponent_SetLightColor_Params
	{
	public:
		struct FLinearColor                                        NewLightColor;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.LightComponent.SetIntensity
	 */
	struct ULightComponent_SetIntensity_Params
	{
	public:
		float                                                      NewIntensity;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.LightComponent.SetIESTexture
	 */
	struct ULightComponent_SetIESTexture_Params
	{
	public:
		class UTextureLightProfile*                                newValue;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.LightComponent.SetEnableLightShaftBloom
	 */
	struct ULightComponent_SetEnableLightShaftBloom_Params
	{
	public:
		bool                                                       bNewValue;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.LightComponent.SetCastShadows
	 */
	struct ULightComponent_SetCastShadows_Params
	{
	public:
		bool                                                       bNewValue;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.LightComponent.SetBloomTint
	 */
	struct ULightComponent_SetBloomTint_Params
	{
	public:
		struct FColor                                              newValue;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.LightComponent.SetBloomThreshold
	 */
	struct ULightComponent_SetBloomThreshold_Params
	{
	public:
		float                                                      newValue;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.LightComponent.SetBloomScale
	 */
	struct ULightComponent_SetBloomScale_Params
	{
	public:
		float                                                      newValue;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.LightComponent.SetAffectTranslucentLighting
	 */
	struct ULightComponent_SetAffectTranslucentLighting_Params
	{
	public:
		bool                                                       bNewValue;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.LightComponent.SetAffectDynamicIndirectLighting
	 */
	struct ULightComponent_SetAffectDynamicIndirectLighting_Params
	{
	public:
		bool                                                       bNewValue;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DirectionalLightComponent.SetShadowDistanceFadeoutFraction
	 */
	struct UDirectionalLightComponent_SetShadowDistanceFadeoutFraction_Params
	{
	public:
		float                                                      newValue;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DirectionalLightComponent.SetOcclusionMaskDarkness
	 */
	struct UDirectionalLightComponent_SetOcclusionMaskDarkness_Params
	{
	public:
		float                                                      newValue;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DirectionalLightComponent.SetLightShaftOverrideDirection
	 */
	struct UDirectionalLightComponent_SetLightShaftOverrideDirection_Params
	{
	public:
		struct FVector                                             newValue;                                                // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DirectionalLightComponent.SetEnableLightShaftOcclusion
	 */
	struct UDirectionalLightComponent_SetEnableLightShaftOcclusion_Params
	{
	public:
		bool                                                       bNewValue;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DirectionalLightComponent.SetDynamicShadowDistanceStationaryLight
	 */
	struct UDirectionalLightComponent_SetDynamicShadowDistanceStationaryLight_Params
	{
	public:
		float                                                      newValue;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DirectionalLightComponent.SetDynamicShadowDistanceMovableLight
	 */
	struct UDirectionalLightComponent_SetDynamicShadowDistanceMovableLight_Params
	{
	public:
		float                                                      newValue;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DirectionalLightComponent.SetDynamicShadowCascades
	 */
	struct UDirectionalLightComponent_SetDynamicShadowCascades_Params
	{
	public:
		int32_t                                                    newValue;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DirectionalLightComponent.SetCascadeTransitionFraction
	 */
	struct UDirectionalLightComponent_SetCascadeTransitionFraction_Params
	{
	public:
		float                                                      newValue;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DirectionalLightComponent.SetCascadeDistributionExponent
	 */
	struct UDirectionalLightComponent_SetCascadeDistributionExponent_Params
	{
	public:
		float                                                      newValue;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PointLightComponent.SetSourceRadius
	 */
	struct UPointLightComponent_SetSourceRadius_Params
	{
	public:
		float                                                      bNewValue;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PointLightComponent.SetLightFalloffExponent
	 */
	struct UPointLightComponent_SetLightFalloffExponent_Params
	{
	public:
		float                                                      NewLightFalloffExponent;                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PointLightComponent.SetAttenuationRadius
	 */
	struct UPointLightComponent_SetAttenuationRadius_Params
	{
	public:
		float                                                      NewRadius;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SpotLightComponent.SetOuterConeAngle
	 */
	struct USpotLightComponent_SetOuterConeAngle_Params
	{
	public:
		float                                                      NewOuterConeAngle;                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SpotLightComponent.SetInnerConeAngle
	 */
	struct USpotLightComponent_SetInnerConeAngle_Params
	{
	public:
		float                                                      NewInnerConeAngle;                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkyLightComponent.SetOcclusionTint
	 */
	struct USkyLightComponent_SetOcclusionTint_Params
	{
	public:
		struct FColor                                              InTint;                                                  // 0x0000(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkyLightComponent.SetMinOcclusion
	 */
	struct USkyLightComponent_SetMinOcclusion_Params
	{
	public:
		float                                                      InMinOcclusion;                                          // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkyLightComponent.SetLightColor
	 */
	struct USkyLightComponent_SetLightColor_Params
	{
	public:
		struct FLinearColor                                        NewLightColor;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkyLightComponent.SetIntensity
	 */
	struct USkyLightComponent_SetIntensity_Params
	{
	public:
		float                                                      NewIntensity;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkyLightComponent.SetCubemap
	 */
	struct USkyLightComponent_SetCubemap_Params
	{
	public:
		class UTextureCube*                                        NewCubemap;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkyLightComponent.RecaptureSky
	 */
	struct USkyLightComponent_RecaptureSky_Params
	{	};

	/**
	 * Function Engine.ArrowComponent.SetArrowColor_New
	 */
	struct UArrowComponent_SetArrowColor_New_Params
	{
	public:
		struct FLinearColor                                        NewColor;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ArrowComponent.SetArrowColor_DEPRECATED
	 */
	struct UArrowComponent_SetArrowColor_DEPRECATED_Params
	{
	public:
		struct FColor                                              NewColor;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.BillboardComponent.SetUV
	 */
	struct UBillboardComponent_SetUV_Params
	{
	public:
		int32_t                                                    NewU;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NewUL;                                                   // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NewV;                                                    // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NewVL;                                                   // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.BillboardComponent.SetSpriteAndUV
	 */
	struct UBillboardComponent_SetSpriteAndUV_Params
	{
	public:
		class UTexture2D*                                          NewSprite;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NewU;                                                    // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NewUL;                                                   // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NewV;                                                    // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NewVL;                                                   // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.BillboardComponent.SetSprite
	 */
	struct UBillboardComponent_SetSprite_Params
	{
	public:
		class UTexture2D*                                          NewSprite;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.BrushComponent.GetBoxBrushXYZ
	 */
	struct UBrushComponent_GetBoxBrushXYZ_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MaterialBillboardComponent.AddElement
	 */
	struct UMaterialBillboardComponent_AddElement_Params
	{
	public:
		class UMaterialInterface*                                  Material;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UCurveFloat*                                         DistanceToOpacityCurve;                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSizeIsInScreenSpace;                                    // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_WNP2[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      BaseSizeX;                                               // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BaseSizeY;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_D0M6[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UCurveFloat*                                         DistanceToSizeCurve;                                     // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DestructibleComponent.SetDestructibleMesh
	 */
	struct UDestructibleComponent_SetDestructibleMesh_Params
	{
	public:
		class UDestructibleMesh*                                   NewMesh;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DestructibleComponent.GetDestructibleMesh
	 */
	struct UDestructibleComponent_GetDestructibleMesh_Params
	{
	public:
		class UDestructibleMesh*                                   ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DestructibleComponent.ComponentFractureSignature__DelegateSignature
	 */
	struct UDestructibleComponent_ComponentFractureSignature__DelegateSignature_Params
	{
	public:
		struct FVector                                             HitPoint;                                                // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             HitDirection;                                            // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DestructibleComponent.ApplyRadiusDamage
	 */
	struct UDestructibleComponent_ApplyRadiusDamage_Params
	{
	public:
		float                                                      BaseDamage;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             HurtOrigin;                                              // 0x0004(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      DamageRadius;                                            // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ImpulseStrength;                                         // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFullDamage;                                             // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DestructibleComponent.ApplyDamage
	 */
	struct UDestructibleComponent_ApplyDamage_Params
	{
	public:
		float                                                      DamageAmount;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             HitLocation;                                             // 0x0004(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ImpulseDir;                                              // 0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      ImpulseStrength;                                         // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PoseableMeshComponent.SetBoneTransformByName
	 */
	struct UPoseableMeshComponent_SetBoneTransformByName_Params
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_F4YY[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          InTransform;                                             // 0x0010(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		EBoneSpaces                                                BoneSpace;                                               // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PoseableMeshComponent.SetBoneScaleByName
	 */
	struct UPoseableMeshComponent_SetBoneScaleByName_Params
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             InScale3D;                                               // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EBoneSpaces                                                BoneSpace;                                               // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PoseableMeshComponent.SetBoneRotationByName
	 */
	struct UPoseableMeshComponent_SetBoneRotationByName_Params
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            InRotation;                                              // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EBoneSpaces                                                BoneSpace;                                               // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PoseableMeshComponent.SetBoneLocationByName
	 */
	struct UPoseableMeshComponent_SetBoneLocationByName_Params
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             InLocation;                                              // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EBoneSpaces                                                BoneSpace;                                               // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PoseableMeshComponent.ResetBoneTransformByName
	 */
	struct UPoseableMeshComponent_ResetBoneTransformByName_Params
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PoseableMeshComponent.GetBoneTransformByName
	 */
	struct UPoseableMeshComponent_GetBoneTransformByName_Params
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EBoneSpaces                                                BoneSpace;                                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_Z47V[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          ReturnValue;                                             // 0x0010(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PoseableMeshComponent.GetBoneScaleByName
	 */
	struct UPoseableMeshComponent_GetBoneScaleByName_Params
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EBoneSpaces                                                BoneSpace;                                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_6CZX[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PoseableMeshComponent.GetBoneRotationByName
	 */
	struct UPoseableMeshComponent_GetBoneRotationByName_Params
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EBoneSpaces                                                BoneSpace;                                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_3GPG[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRotator                                            ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PoseableMeshComponent.GetBoneLocationByName
	 */
	struct UPoseableMeshComponent_GetBoneLocationByName_Params
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EBoneSpaces                                                BoneSpace;                                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_X6VO[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.StaticMeshComponent.SetStaticMesh
	 */
	struct UStaticMeshComponent_SetStaticMesh_Params
	{
	public:
		class UStaticMesh*                                         NewMesh;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.StaticMeshComponent.OnRep_StaticMesh
	 */
	struct UStaticMeshComponent_OnRep_StaticMesh_Params
	{
	public:
		class UStaticMesh*                                         OldStaticMesh;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.StaticMeshComponent.GetLocalBounds
	 */
	struct UStaticMeshComponent_GetLocalBounds_Params
	{
	public:
		struct FVector                                             Min;                                                     // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Max;                                                     // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InstancedStaticMeshComponent.UpdateInstanceTransform
	 */
	struct UInstancedStaticMeshComponent_UpdateInstanceTransform_Params
	{
	public:
		int32_t                                                    InstanceIndex;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CY9Y[0xC];                                   // 0x0004(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          NewInstanceTransform;                                    // 0x0010(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bWorldSpace;                                             // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0041(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InstancedStaticMeshComponent.ShowInstance
	 */
	struct UInstancedStaticMeshComponent_ShowInstance_Params
	{
	public:
		int32_t                                                    originalIndex;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InstancedStaticMeshComponent.SetCullDistances
	 */
	struct UInstancedStaticMeshComponent_SetCullDistances_Params
	{
	public:
		int32_t                                                    StartCullDistance;                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    EndCullDistance;                                         // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InstancedStaticMeshComponent.RemoveInstance
	 */
	struct UInstancedStaticMeshComponent_RemoveInstance_Params
	{
	public:
		int32_t                                                    InstanceIndex;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             HitDirection;                                            // 0x0004(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InstancedStaticMeshComponent.MulticastShowInstances
	 */
	struct UInstancedStaticMeshComponent_MulticastShowInstances_Params
	{
	public:
		TArray<int32_t>                                            Indices;                                                 // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
		bool                                                       bMarkRenderStateDirty;                                   // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InstancedStaticMeshComponent.MulticastShowInstance
	 */
	struct UInstancedStaticMeshComponent_MulticastShowInstance_Params
	{
	public:
		int32_t                                                    originalIndex;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InstancedStaticMeshComponent.MulticastHideInstance
	 */
	struct UInstancedStaticMeshComponent_MulticastHideInstance_Params
	{
	public:
		int32_t                                                    originalIndex;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             HitDirection;                                            // 0x0004(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InstancedStaticMeshComponent.GetPositionOfInstance
	 */
	struct UInstancedStaticMeshComponent_GetPositionOfInstance_Params
	{
	public:
		int32_t                                                    index;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0004(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InstancedStaticMeshComponent.GetInstanceTransform
	 */
	struct UInstancedStaticMeshComponent_GetInstanceTransform_Params
	{
	public:
		int32_t                                                    InstanceIndex;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_B5D7[0xC];                                   // 0x0004(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          OutInstanceTransform;                                    // 0x0010(0x0030)  (Parm, OutParm, IsPlainOldData, NoDestructor)
		bool                                                       bWorldSpace;                                             // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0041(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InstancedStaticMeshComponent.GetInstanceCount
	 */
	struct UInstancedStaticMeshComponent_GetInstanceCount_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InstancedStaticMeshComponent.DealDirectDamage
	 */
	struct UInstancedStaticMeshComponent_DealDirectDamage_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DamageAmount;                                            // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NGFB[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              DamageTypeClass;                                         // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    HitBodyIndex;                                            // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InstancedStaticMeshComponent.ClearInstances
	 */
	struct UInstancedStaticMeshComponent_ClearInstances_Params
	{	};

	/**
	 * Function Engine.InstancedStaticMeshComponent.AddInstanceWorldSpace
	 */
	struct UInstancedStaticMeshComponent_AddInstanceWorldSpace_Params
	{
	public:
		struct FTransform                                          WorldTransform;                                          // 0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0030(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.InstancedStaticMeshComponent.AddInstance
	 */
	struct UInstancedStaticMeshComponent_AddInstance_Params
	{
	public:
		struct FTransform                                          InstanceTransform;                                       // 0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0030(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineMeshComponent.SetStartTangent
	 */
	struct USplineMeshComponent_SetStartTangent_Params
	{
	public:
		struct FVector                                             StartTangent;                                            // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineMeshComponent.SetStartScale
	 */
	struct USplineMeshComponent_SetStartScale_Params
	{
	public:
		struct FVector2D                                           StartScale;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineMeshComponent.SetStartRoll
	 */
	struct USplineMeshComponent_SetStartRoll_Params
	{
	public:
		float                                                      StartRoll;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineMeshComponent.SetStartPosition
	 */
	struct USplineMeshComponent_SetStartPosition_Params
	{
	public:
		struct FVector                                             StartPos;                                                // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineMeshComponent.SetStartOffset
	 */
	struct USplineMeshComponent_SetStartOffset_Params
	{
	public:
		struct FVector2D                                           StartOffset;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineMeshComponent.SetStartAndEnd
	 */
	struct USplineMeshComponent_SetStartAndEnd_Params
	{
	public:
		struct FVector                                             StartPos;                                                // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             StartTangent;                                            // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             EndPos;                                                  // 0x0018(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             EndTangent;                                              // 0x0024(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineMeshComponent.SetEndTangent
	 */
	struct USplineMeshComponent_SetEndTangent_Params
	{
	public:
		struct FVector                                             EndTangent;                                              // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineMeshComponent.SetEndScale
	 */
	struct USplineMeshComponent_SetEndScale_Params
	{
	public:
		struct FVector2D                                           EndScale;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineMeshComponent.SetEndRoll
	 */
	struct USplineMeshComponent_SetEndRoll_Params
	{
	public:
		float                                                      EndRoll;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineMeshComponent.SetEndPosition
	 */
	struct USplineMeshComponent_SetEndPosition_Params
	{
	public:
		struct FVector                                             EndPos;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineMeshComponent.SetEndOffset
	 */
	struct USplineMeshComponent_SetEndOffset_Params
	{
	public:
		struct FVector2D                                           EndOffset;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineMeshComponent.GetStartTangent
	 */
	struct USplineMeshComponent_GetStartTangent_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineMeshComponent.GetStartScale
	 */
	struct USplineMeshComponent_GetStartScale_Params
	{
	public:
		struct FVector2D                                           ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineMeshComponent.GetStartRoll
	 */
	struct USplineMeshComponent_GetStartRoll_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineMeshComponent.GetStartPosition
	 */
	struct USplineMeshComponent_GetStartPosition_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineMeshComponent.GetStartOffset
	 */
	struct USplineMeshComponent_GetStartOffset_Params
	{
	public:
		struct FVector2D                                           ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineMeshComponent.GetEndTangent
	 */
	struct USplineMeshComponent_GetEndTangent_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineMeshComponent.GetEndScale
	 */
	struct USplineMeshComponent_GetEndScale_Params
	{
	public:
		struct FVector2D                                           ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineMeshComponent.GetEndRoll
	 */
	struct USplineMeshComponent_GetEndRoll_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineMeshComponent.GetEndPosition
	 */
	struct USplineMeshComponent_GetEndPosition_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineMeshComponent.GetEndOffset
	 */
	struct USplineMeshComponent_GetEndOffset_Params
	{
	public:
		struct FVector2D                                           ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ParticleSystem.ContainsEmitterType
	 */
	struct UParticleSystem_ContainsEmitterType_Params
	{
	public:
		class UClass*                                              TypeData;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.BoxComponent.SetBoxExtent
	 */
	struct UBoxComponent_SetBoxExtent_Params
	{
	public:
		struct FVector                                             InBoxExtent;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bUpdateOverlaps;                                         // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.BoxComponent.GetUnscaledBoxExtent
	 */
	struct UBoxComponent_GetUnscaledBoxExtent_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.BoxComponent.GetScaledBoxExtent
	 */
	struct UBoxComponent_GetScaledBoxExtent_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CapsuleComponent.SetCapsuleSize
	 */
	struct UCapsuleComponent_SetCapsuleSize_Params
	{
	public:
		float                                                      InRadius;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InHalfHeight;                                            // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bUpdateOverlaps;                                         // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CapsuleComponent.SetCapsuleRadius
	 */
	struct UCapsuleComponent_SetCapsuleRadius_Params
	{
	public:
		float                                                      Radius;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bUpdateOverlaps;                                         // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CapsuleComponent.SetCapsuleHalfHeight
	 */
	struct UCapsuleComponent_SetCapsuleHalfHeight_Params
	{
	public:
		float                                                      HalfHeight;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bUpdateOverlaps;                                         // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CapsuleComponent.GetUnscaledCapsuleSize
	 */
	struct UCapsuleComponent_GetUnscaledCapsuleSize_Params
	{
	public:
		float                                                      outRadius;                                               // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OutHalfHeight;                                           // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CapsuleComponent.GetUnscaledCapsuleRadius
	 */
	struct UCapsuleComponent_GetUnscaledCapsuleRadius_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CapsuleComponent.GetUnscaledCapsuleHalfHeight
	 */
	struct UCapsuleComponent_GetUnscaledCapsuleHalfHeight_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CapsuleComponent.GetShapeScale
	 */
	struct UCapsuleComponent_GetShapeScale_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CapsuleComponent.GetScaledCapsuleSize
	 */
	struct UCapsuleComponent_GetScaledCapsuleSize_Params
	{
	public:
		float                                                      outRadius;                                               // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OutHalfHeight;                                           // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CapsuleComponent.GetScaledCapsuleRadius
	 */
	struct UCapsuleComponent_GetScaledCapsuleRadius_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CapsuleComponent.GetScaledCapsuleHalfHeight
	 */
	struct UCapsuleComponent_GetScaledCapsuleHalfHeight_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SphereComponent.SetSphereRadius
	 */
	struct USphereComponent_SetSphereRadius_Params
	{
	public:
		float                                                      InSphereRadius;                                          // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bUpdateOverlaps;                                         // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SphereComponent.GetUnscaledSphereRadius
	 */
	struct USphereComponent_GetUnscaledSphereRadius_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SphereComponent.GetShapeScale
	 */
	struct USphereComponent_GetShapeScale_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SphereComponent.GetScaledSphereRadius
	 */
	struct USphereComponent_GetScaledSphereRadius_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TextRenderComponent.SetYScale
	 */
	struct UTextRenderComponent_SetYScale_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TextRenderComponent.SetXScale
	 */
	struct UTextRenderComponent_SetXScale_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TextRenderComponent.SetWorldSize
	 */
	struct UTextRenderComponent_SetWorldSize_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TextRenderComponent.SetVerticalAlignment
	 */
	struct UTextRenderComponent_SetVerticalAlignment_Params
	{
	public:
		EVerticalTextAligment                                      Value;                                                   // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TextRenderComponent.SetTextRenderColor
	 */
	struct UTextRenderComponent_SetTextRenderColor_Params
	{
	public:
		struct FColor                                              Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TextRenderComponent.SetTextMaterial
	 */
	struct UTextRenderComponent_SetTextMaterial_Params
	{
	public:
		class UMaterialInterface*                                  Material;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TextRenderComponent.SetText
	 */
	struct UTextRenderComponent_SetText_Params
	{
	public:
		class FString                                              Value;                                                   // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.TextRenderComponent.SetHorizSpacingAdjust
	 */
	struct UTextRenderComponent_SetHorizSpacingAdjust_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TextRenderComponent.SetHorizontalAlignment
	 */
	struct UTextRenderComponent_SetHorizontalAlignment_Params
	{
	public:
		EHorizTextAligment                                         Value;                                                   // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TextRenderComponent.SetFont
	 */
	struct UTextRenderComponent_SetFont_Params
	{
	public:
		class UFont*                                               Value;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TextRenderComponent.GetTextWorldSize
	 */
	struct UTextRenderComponent_GetTextWorldSize_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TextRenderComponent.GetTextLocalSize
	 */
	struct UTextRenderComponent_GetTextLocalSize_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.VectorFieldComponent.SetIntensity
	 */
	struct UVectorFieldComponent_SetIntensity_Params
	{
	public:
		float                                                      NewIntensity;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.RadialForceComponent.RemoveObjectTypeToAffect
	 */
	struct URadialForceComponent_RemoveObjectTypeToAffect_Params
	{
	public:
		EObjectTypeQuery                                           ObjectType;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.RadialForceComponent.FireImpulse
	 */
	struct URadialForceComponent_FireImpulse_Params
	{	};

	/**
	 * Function Engine.RadialForceComponent.AddObjectTypeToAffect
	 */
	struct URadialForceComponent_AddObjectTypeToAffect_Params
	{
	public:
		EObjectTypeQuery                                           ObjectType;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ReflectionCaptureComponent.SetBrightness
	 */
	struct UReflectionCaptureComponent_SetBrightness_Params
	{
	public:
		float                                                      NewBrightness;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.ReflectionCaptureComponent.ForceUpdateReflectionCapture
	 */
	struct UReflectionCaptureComponent_ForceUpdateReflectionCapture_Params
	{	};

	/**
	 * Function Engine.SceneCaptureComponent.HideComponent
	 */
	struct USceneCaptureComponent_HideComponent_Params
	{
	public:
		class UPrimitiveComponent*                                 InComponent;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SceneCaptureComponent.HideActorComponents
	 */
	struct USceneCaptureComponent_HideActorComponents_Params
	{
	public:
		class AActor*                                              InActor;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineComponent.SetWorldSplinePointsAndType
	 */
	struct USplineComponent_SetWorldSplinePointsAndType_Params
	{
	public:
		TArray<struct FVector>                                     Points;                                                  // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		ESplinePointType                                           Type;                                                    // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineComponent.SetWorldLocationAtSplinePoint
	 */
	struct USplineComponent_SetWorldLocationAtSplinePoint_Params
	{
	public:
		int32_t                                                    PointIndex;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             InLocation;                                              // 0x0004(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineComponent.SetTangentAtSplinePoint
	 */
	struct USplineComponent_SetTangentAtSplinePoint_Params
	{
	public:
		int32_t                                                    PointIndex;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             InTangent;                                               // 0x0004(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		ESplineCoordinateSpace                                     CoordinateSpace;                                         // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineComponent.SetSplineWorldPoints
	 */
	struct USplineComponent_SetSplineWorldPoints_Params
	{
	public:
		TArray<struct FVector>                                     Points;                                                  // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function Engine.SplineComponent.SetSplinePointTypeAllPoints
	 */
	struct USplineComponent_SetSplinePointTypeAllPoints_Params
	{
	public:
		ESplinePointType                                           Type;                                                    // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineComponent.SetSplinePointType
	 */
	struct USplineComponent_SetSplinePointType_Params
	{
	public:
		int32_t                                                    PointIndex;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ESplinePointType                                           Type;                                                    // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineComponent.SetSplineLocalPoints
	 */
	struct USplineComponent_SetSplineLocalPoints_Params
	{
	public:
		TArray<struct FVector>                                     Points;                                                  // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function Engine.SplineComponent.GetWorldTangentAtDistanceAlongSpline
	 */
	struct USplineComponent_GetWorldTangentAtDistanceAlongSpline_Params
	{
	public:
		float                                                      Distance;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0004(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineComponent.GetWorldRotationAtTime
	 */
	struct USplineComponent_GetWorldRotationAtTime_Params
	{
	public:
		float                                                      Time;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bUseConstantVelocity;                                    // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_VSAI[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRotator                                            ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineComponent.GetWorldRotationAtDistanceAlongSpline
	 */
	struct USplineComponent_GetWorldRotationAtDistanceAlongSpline_Params
	{
	public:
		float                                                      Distance;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0004(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineComponent.GetWorldLocationAtTime
	 */
	struct USplineComponent_GetWorldLocationAtTime_Params
	{
	public:
		float                                                      Time;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bUseConstantVelocity;                                    // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZD7C[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineComponent.GetWorldLocationAtSplinePoint
	 */
	struct USplineComponent_GetWorldLocationAtSplinePoint_Params
	{
	public:
		int32_t                                                    PointIndex;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0004(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineComponent.GetWorldLocationAtDistanceAlongSpline
	 */
	struct USplineComponent_GetWorldLocationAtDistanceAlongSpline_Params
	{
	public:
		float                                                      Distance;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0004(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineComponent.GetWorldDirectionAtTime
	 */
	struct USplineComponent_GetWorldDirectionAtTime_Params
	{
	public:
		float                                                      Time;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bUseConstantVelocity;                                    // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_34Q0[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineComponent.GetWorldDirectionAtDistanceAlongSpline
	 */
	struct USplineComponent_GetWorldDirectionAtDistanceAlongSpline_Params
	{
	public:
		float                                                      Distance;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0004(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineComponent.GetSplinePointType
	 */
	struct USplineComponent_GetSplinePointType_Params
	{
	public:
		int32_t                                                    PointIndex;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ESplinePointType                                           ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineComponent.GetSplineLength
	 */
	struct USplineComponent_GetSplineLength_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineComponent.GetNumSplinePoints
	 */
	struct USplineComponent_GetNumSplinePoints_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineComponent.GetLocalLocationAndTangentAtSplinePoint
	 */
	struct USplineComponent_GetLocalLocationAndTangentAtSplinePoint_Params
	{
	public:
		int32_t                                                    PointIndex;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             LocalLocation;                                           // 0x0004(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             LocalTangent;                                            // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineComponent.GetInputKeyAtDistanceAlongSpline
	 */
	struct USplineComponent_GetInputKeyAtDistanceAlongSpline_Params
	{
	public:
		float                                                      Distance;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineComponent.GetDistanceAlongSplineAtSplinePoint
	 */
	struct USplineComponent_GetDistanceAlongSplineAtSplinePoint_Params
	{
	public:
		int32_t                                                    PointIndex;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineComponent.FindLocationClosestToWorldLocation
	 */
	struct USplineComponent_FindLocationClosestToWorldLocation_Params
	{
	public:
		struct FVector                                             WorldLocation;                                           // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		ESplineCoordinateSpace                                     CoordinateSpace;                                         // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7H3A[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             ReturnValue;                                             // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineComponent.FindInputKeyClosestToWorldLocation
	 */
	struct USplineComponent_FindInputKeyClosestToWorldLocation_Params
	{
	public:
		struct FVector                                             WorldLocation;                                           // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineComponent.FindDirectionClosestToWorldLocation
	 */
	struct USplineComponent_FindDirectionClosestToWorldLocation_Params
	{
	public:
		struct FVector                                             WorldLocation;                                           // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		ESplineCoordinateSpace                                     CoordinateSpace;                                         // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZMLF[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             ReturnValue;                                             // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineComponent.ClearSplinePoints
	 */
	struct USplineComponent_ClearSplinePoints_Params
	{	};

	/**
	 * Function Engine.SplineComponent.AddSplineWorldPoint
	 */
	struct USplineComponent_AddSplineWorldPoint_Params
	{
	public:
		struct FVector                                             Position;                                                // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SplineComponent.AddSplineLocalPoint
	 */
	struct USplineComponent_AddSplineLocalPoint_Params
	{
	public:
		struct FVector                                             Position;                                                // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TimelineComponent.Stop
	 */
	struct UTimelineComponent_Stop_Params
	{	};

	/**
	 * Function Engine.TimelineComponent.SetTimelineLengthMode
	 */
	struct UTimelineComponent_SetTimelineLengthMode_Params
	{
	public:
		ETimelineLengthMode                                        NewLengthMode;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TimelineComponent.SetTimelineLength
	 */
	struct UTimelineComponent_SetTimelineLength_Params
	{
	public:
		float                                                      NewLength;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TimelineComponent.SetPlayRate
	 */
	struct UTimelineComponent_SetPlayRate_Params
	{
	public:
		float                                                      NewRate;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TimelineComponent.SetPlaybackPosition
	 */
	struct UTimelineComponent_SetPlaybackPosition_Params
	{
	public:
		float                                                      NewPosition;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFireEvents;                                             // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TimelineComponent.SetNewTime
	 */
	struct UTimelineComponent_SetNewTime_Params
	{
	public:
		float                                                      NewTime;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TimelineComponent.SetLooping
	 */
	struct UTimelineComponent_SetLooping_Params
	{
	public:
		bool                                                       bNewLooping;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TimelineComponent.ReverseFromEnd
	 */
	struct UTimelineComponent_ReverseFromEnd_Params
	{	};

	/**
	 * Function Engine.TimelineComponent.Reverse
	 */
	struct UTimelineComponent_Reverse_Params
	{	};

	/**
	 * Function Engine.TimelineComponent.PlayFromStart
	 */
	struct UTimelineComponent_PlayFromStart_Params
	{	};

	/**
	 * Function Engine.TimelineComponent.Play
	 */
	struct UTimelineComponent_Play_Params
	{	};

	/**
	 * Function Engine.TimelineComponent.OnTimelineVector__DelegateSignature
	 */
	struct UTimelineComponent_OnTimelineVector__DelegateSignature_Params
	{
	public:
		struct FVector                                             Output;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TimelineComponent.OnTimelineLinearColor__DelegateSignature
	 */
	struct UTimelineComponent_OnTimelineLinearColor__DelegateSignature_Params
	{
	public:
		struct FLinearColor                                        Output;                                                  // 0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TimelineComponent.OnTimelineFloat__DelegateSignature
	 */
	struct UTimelineComponent_OnTimelineFloat__DelegateSignature_Params
	{
	public:
		float                                                      Output;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TimelineComponent.OnTimelineEvent__DelegateSignature
	 */
	struct UTimelineComponent_OnTimelineEvent__DelegateSignature_Params
	{	};

	/**
	 * Function Engine.TimelineComponent.OnRep_Timeline
	 */
	struct UTimelineComponent_OnRep_Timeline_Params
	{	};

	/**
	 * Function Engine.TimelineComponent.IsReversing
	 */
	struct UTimelineComponent_IsReversing_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TimelineComponent.IsPlaying
	 */
	struct UTimelineComponent_IsPlaying_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TimelineComponent.IsLooping
	 */
	struct UTimelineComponent_IsLooping_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TimelineComponent.GetTimelineLength
	 */
	struct UTimelineComponent_GetTimelineLength_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TimelineComponent.GetPlayRate
	 */
	struct UTimelineComponent_GetPlayRate_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TimelineComponent.GetPlaybackPosition
	 */
	struct UTimelineComponent_GetPlaybackPosition_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimSingleNodeInstance.StopAnim
	 */
	struct UAnimSingleNodeInstance_StopAnim_Params
	{	};

	/**
	 * Function Engine.AnimSingleNodeInstance.SetVertexAnimation
	 */
	struct UAnimSingleNodeInstance_SetVertexAnimation_Params
	{
	public:
		class UVertexAnimation*                                    NewVertexAnim;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsLooping;                                              // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_RES5[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      InPlayRate;                                              // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimSingleNodeInstance.SetReverse
	 */
	struct UAnimSingleNodeInstance_SetReverse_Params
	{
	public:
		bool                                                       bInReverse;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimSingleNodeInstance.SetPosition
	 */
	struct UAnimSingleNodeInstance_SetPosition_Params
	{
	public:
		float                                                      InPosition;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFireNotifies;                                           // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReallyFireNotifies;                                     // 0x0005(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimSingleNodeInstance.SetPlayRate
	 */
	struct UAnimSingleNodeInstance_SetPlayRate_Params
	{
	public:
		float                                                      InPlayRate;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimSingleNodeInstance.SetPlaying
	 */
	struct UAnimSingleNodeInstance_SetPlaying_Params
	{
	public:
		bool                                                       bIsPlaying;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimSingleNodeInstance.SetLooping
	 */
	struct UAnimSingleNodeInstance_SetLooping_Params
	{
	public:
		bool                                                       bIsLooping;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimSingleNodeInstance.SetBlendSpaceInput
	 */
	struct UAnimSingleNodeInstance_SetBlendSpaceInput_Params
	{
	public:
		struct FVector                                             InBlendInput;                                            // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimSingleNodeInstance.SetAnimationAsset
	 */
	struct UAnimSingleNodeInstance_SetAnimationAsset_Params
	{
	public:
		class UAnimationAsset*                                     NewAsset;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsLooping;                                              // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_06M9[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      InPlayRate;                                              // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimSingleNodeInstance.PostEvaluateAnimEvent__DelegateSignature
	 */
	struct UAnimSingleNodeInstance_PostEvaluateAnimEvent__DelegateSignature_Params
	{	};

	/**
	 * Function Engine.AnimSingleNodeInstance.PlayAnim
	 */
	struct UAnimSingleNodeInstance_PlayAnim_Params
	{
	public:
		bool                                                       bIsLooping;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_IT6X[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      InPlayRate;                                              // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InStartPosition;                                         // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AnimSingleNodeInstance.GetLength
	 */
	struct UAnimSingleNodeInstance_GetLength_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.VehicleAnimInstance.GetVehicle
	 */
	struct UVehicleAnimInstance_GetVehicle_Params
	{
	public:
		class AWheeledVehicle*                                     ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AvoidanceManager.RegisterMovementComponent
	 */
	struct UAvoidanceManager_RegisterMovementComponent_Params
	{
	public:
		class UCharacterMovementComponent*                         MovementComp;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		float                                                      AvoidanceWeight;                                         // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AvoidanceManager.GetObjectCount
	 */
	struct UAvoidanceManager_GetObjectCount_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AvoidanceManager.GetNewAvoidanceUID
	 */
	struct UAvoidanceManager_GetNewAvoidanceUID_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AvoidanceManager.GetAvoidanceVelocityIgnoringUID
	 */
	struct UAvoidanceManager_GetAvoidanceVelocityIgnoringUID_Params
	{
	public:
		struct FNavAvoidanceData                                   AvoidanceData;                                           // 0x0000(0x0038)  (ConstParm, Parm, OutParm, ReferenceParm)
		float                                                      DeltaTime;                                               // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    IgnoreThisUID;                                           // 0x003C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0040(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.AvoidanceManager.GetAvoidanceVelocity
	 */
	struct UAvoidanceManager_GetAvoidanceVelocity_Params
	{
	public:
		struct FNavAvoidanceData                                   AvoidanceData;                                           // 0x0000(0x0038)  (ConstParm, Parm, OutParm, ReferenceParm)
		float                                                      DeltaTime;                                               // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x003C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DataTableFunctionLibrary.GetDataTableRowFromName
	 */
	struct UDataTableFunctionLibrary_GetDataTableRowFromName_Params
	{
	public:
		class UDataTable*                                          Table;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                RowName;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FTableRowBase                                       OutRow;                                                  // 0x0010(0x0001)  (Parm, OutParm)
		bool                                                       ReturnValue;                                             // 0x0011(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.DataTableFunctionLibrary.EvaluateCurveTableRow
	 */
	struct UDataTableFunctionLibrary_EvaluateCurveTableRow_Params
	{
	public:
		class UCurveTable*                                         CurveTable;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                RowName;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InXY;                                                    // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EEvaluateCurveTableResult                                  OutResult;                                               // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_N29Z[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      OutXY;                                                   // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.UnloadStreamLevel
	 */
	struct UGameplayStatics_UnloadStreamLevel_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                LevelName;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLatentActionInfo                                   LatentInfo;                                              // 0x0010(0x0018)  (Parm)
	};

	/**
	 * Function Engine.GameplayStatics.SpawnEmitterAttached
	 */
	struct UGameplayStatics_SpawnEmitterAttached_Params
	{
	public:
		class UParticleSystem*                                     EmitterTemplate;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USceneComponent*                                     attachToComponent;                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                AttachPointName;                                         // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x0018(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x0024(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EAttachLocation                                            LocationType;                                            // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAutoDestroy;                                            // 0x0031(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDontSpawnOutOfView;                                     // 0x0032(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAllowSpawnLoopingFX;                                    // 0x0033(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OverrideSecondsBeforeInactive;                           // 0x0034(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UParticleSystemComponent*                            ReturnValue;                                             // 0x0038(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.SpawnEmitterAtLocation
	 */
	struct UGameplayStatics_SpawnEmitterAtLocation_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UParticleSystem*                                     EmitterTemplate;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x001C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAutoDestroy;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDontSpawnOutOfView;                                     // 0x0029(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_HK1H[0x2];                                   // 0x002A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      DontSpawnOutOfViewCheckRadius;                           // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAllowSpawnLoopingFX;                                    // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XPYV[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      OverrideSecondsBeforeInactive;                           // 0x0034(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UParticleSystemComponent*                            ReturnValue;                                             // 0x0038(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.SpawnDecalAttached
	 */
	struct UGameplayStatics_SpawnDecalAttached_Params
	{
	public:
		class UMaterialInterface*                                  DecalMaterial;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             DecalSize;                                               // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_65J5[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class USceneComponent*                                     attachToComponent;                                       // 0x0018(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                AttachPointName;                                         // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x0028(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x0034(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EAttachLocation                                            LocationType;                                            // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_0NYP[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      LifeSpan;                                                // 0x0044(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UDecalComponent*                                     ReturnValue;                                             // 0x0048(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.SpawnDecalAtLocation
	 */
	struct UGameplayStatics_SpawnDecalAtLocation_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialInterface*                                  DecalMaterial;                                           // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             DecalSize;                                               // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x001C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x0028(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      LifeSpan;                                                // 0x0034(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UDecalComponent*                                     ReturnValue;                                             // 0x0038(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.SetWorldOriginLocation
	 */
	struct UGameplayStatics_SetWorldOriginLocation_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FIntVector                                          NewLocation;                                             // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.SetSoundMode
	 */
	struct UGameplayStatics_SetSoundMode_Params
	{
	public:
		class FName                                                SoundModeName;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.SetGlobalTimeDilation
	 */
	struct UGameplayStatics_SetGlobalTimeDilation_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TimeDilation;                                            // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.SetGamePaused
	 */
	struct UGameplayStatics_SetGamePaused_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPaused;                                                 // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.SetBaseSoundMix
	 */
	struct UGameplayStatics_SetBaseSoundMix_Params
	{
	public:
		class USoundMix*                                           InSoundMix;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.SaveGameToSlot
	 */
	struct UGameplayStatics_SaveGameToSlot_Params
	{
	public:
		class USaveGame*                                           SaveGameObject;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              SlotName;                                                // 0x0008(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    UserIndex;                                               // 0x0018(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x001C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.PushSoundMixModifier
	 */
	struct UGameplayStatics_PushSoundMixModifier_Params
	{
	public:
		class USoundMix*                                           InSoundMixModifier;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.PopSoundMixModifier
	 */
	struct UGameplayStatics_PopSoundMixModifier_Params
	{
	public:
		class USoundMix*                                           InSoundMixModifier;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.PlayWorldCameraShake
	 */
	struct UGameplayStatics_PlayWorldCameraShake_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              Shake;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Epicenter;                                               // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InnerRadius;                                             // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OuterRadius;                                             // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Falloff;                                                 // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOrientShakeTowardsEpicenter;                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1HWG[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ScaleMultiplier;                                         // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.PlaySoundAttached
	 */
	struct UGameplayStatics_PlaySoundAttached_Params
	{
	public:
		class USoundBase*                                          Sound;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USceneComponent*                                     attachToComponent;                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                AttachPointName;                                         // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		struct FVector                                             Location;                                                // 0x0018(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		EAttachLocation                                            LocationType;                                            // 0x0024(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bStopWhenAttachedToDestroyed;                            // 0x0025(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_YFQY[0x2];                                   // 0x0026(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      VolumeMultiplier;                                        // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		float                                                      PitchMultiplier;                                         // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		float                                                      StartTime;                                               // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_HC9S[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class USoundAttenuation*                                   AttenuationSettings;                                     // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bAlwaysPlay;                                             // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_J17Y[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UAudioComponent*                                     ReturnValue;                                             // 0x0048(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.PlaySoundAtLocation
	 */
	struct UGameplayStatics_PlaySoundAtLocation_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USoundBase*                                          Sound;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      VolumeMultiplier;                                        // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		float                                                      PitchMultiplier;                                         // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		float                                                      StartTime;                                               // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		class USoundAttenuation*                                   AttenuationSettings;                                     // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bAlwaysPlay;                                             // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	};

	/**
	 * Function Engine.GameplayStatics.PlaySound
	 */
	struct UGameplayStatics_PlaySound_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USoundCue*                                           InSoundCue;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USceneComponent*                                     AttachComponent;                                         // 0x0010(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                AttachName;                                              // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFollow;                                                 // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_2CX8[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      VolumeMultiplier;                                        // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      PitchMultiplier;                                         // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.PlayDialogueAttached
	 */
	struct UGameplayStatics_PlayDialogueAttached_Params
	{
	public:
		class UDialogueWave*                                       Dialogue;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FDialogueContext                                    Context;                                                 // 0x0008(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		class USceneComponent*                                     attachToComponent;                                       // 0x0020(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, AdvancedDisplay)
		class FName                                                AttachPointName;                                         // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		struct FVector                                             Location;                                                // 0x0030(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		EAttachLocation                                            LocationType;                                            // 0x003C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bStopWhenAttachedToDestroyed;                            // 0x003D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_A228[0x2];                                   // 0x003E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      VolumeMultiplier;                                        // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		float                                                      PitchMultiplier;                                         // 0x0044(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		float                                                      StartTime;                                               // 0x0048(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_NHS1[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class USoundAttenuation*                                   AttenuationSettings;                                     // 0x0050(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		class UAudioComponent*                                     ReturnValue;                                             // 0x0058(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.PlayDialogueAtLocation
	 */
	struct UGameplayStatics_PlayDialogueAtLocation_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UDialogueWave*                                       Dialogue;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FDialogueContext                                    Context;                                                 // 0x0010(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector                                             Location;                                                // 0x0028(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		float                                                      VolumeMultiplier;                                        // 0x0034(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		float                                                      PitchMultiplier;                                         // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		float                                                      StartTime;                                               // 0x003C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		class USoundAttenuation*                                   AttenuationSettings;                                     // 0x0040(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	};

	/**
	 * Function Engine.GameplayStatics.OpenLevel
	 */
	struct UGameplayStatics_OpenLevel_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                LevelName;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAbsolute;                                               // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_KB48[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Options;                                                 // 0x0018(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
	};

	/**
	 * Function Engine.GameplayStatics.LoadStreamLevel
	 */
	struct UGameplayStatics_LoadStreamLevel_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                LevelName;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bMakeVisibleAfterLoad;                                   // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bShouldBlockOnLoad;                                      // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7QZ3[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FLatentActionInfo                                   LatentInfo;                                              // 0x0018(0x0018)  (Parm)
	};

	/**
	 * Function Engine.GameplayStatics.LoadGameFromSlot
	 */
	struct UGameplayStatics_LoadGameFromSlot_Params
	{
	public:
		class FString                                              SlotName;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    UserIndex;                                               // 0x0010(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ELGZ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class USaveGame*                                           ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.IsGameWorld
	 */
	struct UGameplayStatics_IsGameWorld_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.IsGamePaused
	 */
	struct UGameplayStatics_IsGamePaused_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.GetWorldOriginLocation
	 */
	struct UGameplayStatics_GetWorldOriginLocation_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FIntVector                                          ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.GetWorldDeltaSeconds
	 */
	struct UGameplayStatics_GetWorldDeltaSeconds_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.GetSurfaceType
	 */
	struct UGameplayStatics_GetSurfaceType_Params
	{
	public:
		struct FHitResult                                          Hit;                                                     // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		EPhysicalSurface                                           ReturnValue;                                             // 0x0088(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.GetStreamingLevel
	 */
	struct UGameplayStatics_GetStreamingLevel_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                PackageName;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class ULevelStreaming*                                     ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.GetRealTimeSeconds
	 */
	struct UGameplayStatics_GetRealTimeSeconds_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.GetPlayerPawn
	 */
	struct UGameplayStatics_GetPlayerPawn_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    PlayerIndex;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_8RBC[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APawn*                                               ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.GetPlayerController
	 */
	struct UGameplayStatics_GetPlayerController_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    PlayerIndex;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZIES[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APlayerController*                                   ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.GetPlayerCharacter
	 */
	struct UGameplayStatics_GetPlayerCharacter_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    PlayerIndex;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_J3WE[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class ACharacter*                                          ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.GetPlayerCameraManager
	 */
	struct UGameplayStatics_GetPlayerCameraManager_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    PlayerIndex;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_WBJ2[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APlayerCameraManager*                                ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.GetPlatformName
	 */
	struct UGameplayStatics_GetPlatformName_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.GameplayStatics.GetObjectClass
	 */
	struct UGameplayStatics_GetObjectClass_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.GetGlobalTimeDilation
	 */
	struct UGameplayStatics_GetGlobalTimeDilation_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.GetGameState
	 */
	struct UGameplayStatics_GetGameState_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AGameState*                                          ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.GetGameMode
	 */
	struct UGameplayStatics_GetGameMode_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AGameMode*                                           ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.GetGameInstance
	 */
	struct UGameplayStatics_GetGameInstance_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGameInstance*                                       ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.GetAudioTimeSeconds
	 */
	struct UGameplayStatics_GetAudioTimeSeconds_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.GetAllActorsWithInterface
	 */
	struct UGameplayStatics_GetAllActorsWithInterface_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              Interface;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      OutActors;                                               // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function Engine.GameplayStatics.GetAllActorsOfClass
	 */
	struct UGameplayStatics_GetAllActorsOfClass_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ActorClass;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      OutActors;                                               // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function Engine.GameplayStatics.GetActorArrayBounds
	 */
	struct UGameplayStatics_GetActorArrayBounds_Params
	{
	public:
		TArray<class AActor*>                                      actors;                                                  // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bOnlyCollidingComponents;                                // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NWE5[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             Center;                                                  // 0x0014(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             BoxExtent;                                               // 0x0020(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.GetActorArrayAverageLocation
	 */
	struct UGameplayStatics_GetActorArrayAverageLocation_Params
	{
	public:
		TArray<class AActor*>                                      actors;                                                  // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FVector                                             ReturnValue;                                             // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.GetAccurateRealTime
	 */
	struct UGameplayStatics_GetAccurateRealTime_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Seconds;                                                 // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      PartialSeconds;                                          // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.FinishSpawningActor
	 */
	struct UGameplayStatics_FinishSpawningActor_Params
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5H8J[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          SpawnTransform;                                          // 0x0010(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		class AActor*                                              ReturnValue;                                             // 0x0040(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.EnableLiveStreaming
	 */
	struct UGameplayStatics_EnableLiveStreaming_Params
	{
	public:
		bool                                                       Enable;                                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.DoesSaveGameExist
	 */
	struct UGameplayStatics_DoesSaveGameExist_Params
	{
	public:
		class FString                                              SlotName;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    UserIndex;                                               // 0x0010(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.DeleteGameInSlot
	 */
	struct UGameplayStatics_DeleteGameInSlot_Params
	{
	public:
		class FString                                              SlotName;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    UserIndex;                                               // 0x0010(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.DeactivateReverbEffect
	 */
	struct UGameplayStatics_DeactivateReverbEffect_Params
	{
	public:
		class FName                                                TagName;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.CreateSaveGameObjectFromBlueprint
	 */
	struct UGameplayStatics_CreateSaveGameObjectFromBlueprint_Params
	{
	public:
		class UBlueprint*                                          SaveGameBlueprint;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USaveGame*                                           ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.CreateSaveGameObject
	 */
	struct UGameplayStatics_CreateSaveGameObject_Params
	{
	public:
		class UClass*                                              SaveGameClass;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USaveGame*                                           ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.CreatePlayer
	 */
	struct UGameplayStatics_CreatePlayer_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ControllerId;                                            // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSpawnPawn;                                              // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_9ZGR[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APlayerController*                                   ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.ClearSoundMixModifiers
	 */
	struct UGameplayStatics_ClearSoundMixModifiers_Params
	{	};

	/**
	 * Function Engine.GameplayStatics.BreakHitResult_OLD
	 */
	struct UGameplayStatics_BreakHitResult_OLD_Params
	{
	public:
		struct FHitResult                                          Hit;                                                     // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector                                             Location;                                                // 0x0088(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Normal;                                                  // 0x0094(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ImpactPoint;                                             // 0x00A0(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ImpactNormal;                                            // 0x00AC(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPhysicalMaterial*                                   PhysMat;                                                 // 0x00B8(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              HitActor;                                                // 0x00C0(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 HitComponent;                                            // 0x00C8(0x0008)  (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                HitBoneName;                                             // 0x00D0(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    HitItem;                                                 // 0x00D8(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.BreakHitResult
	 */
	struct UGameplayStatics_BreakHitResult_Params
	{
	public:
		struct FHitResult                                          Hit;                                                     // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector                                             Location;                                                // 0x0088(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Normal;                                                  // 0x0094(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ImpactPoint;                                             // 0x00A0(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ImpactNormal;                                            // 0x00AC(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPhysicalMaterial*                                   PhysMat;                                                 // 0x00B8(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              HitActor;                                                // 0x00C0(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 HitComponent;                                            // 0x00C8(0x0008)  (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                HitBoneName;                                             // 0x00D0(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    HitItem;                                                 // 0x00D8(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       BlockingHit;                                             // 0x00DC(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.BPPointPlaneProject
	 */
	struct UGameplayStatics_BPPointPlaneProject_Params
	{
	public:
		struct FVector                                             Point;                                                   // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             PlaneBase;                                               // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             PlaneNorm;                                               // 0x0018(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0024(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.BPPointPlaneDist
	 */
	struct UGameplayStatics_BPPointPlaneDist_Params
	{
	public:
		struct FVector                                             Point;                                                   // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             PlaneBase;                                               // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             PlaneNorm;                                               // 0x0018(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0024(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.BlueprintSuggestProjectileVelocity
	 */
	struct UGameplayStatics_BlueprintSuggestProjectileVelocity_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             TossVelocity;                                            // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             StartLocation;                                           // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             EndLocation;                                             // 0x0020(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      LaunchSpeed;                                             // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OverrideGravityZ;                                        // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ESuggestProjVelocityTraceOption                            TraceOption;                                             // 0x0034(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NU95[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      CollisionRadius;                                         // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFavorHighArc;                                           // 0x003C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDrawDebug;                                              // 0x003D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x003E(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.BeginSpawningActorFromClass
	 */
	struct UGameplayStatics_BeginSpawningActorFromClass_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ActorClass;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FTransform                                          SpawnTransform;                                          // 0x0010(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bNoCollisionFail;                                        // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CO50[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              ReturnValue;                                             // 0x0048(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.BeginSpawningActorFromBlueprint
	 */
	struct UGameplayStatics_BeginSpawningActorFromBlueprint_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UBlueprint*                                          Blueprint;                                               // 0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FTransform                                          SpawnTransform;                                          // 0x0010(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bNoCollisionFail;                                        // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_EDJT[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              ReturnValue;                                             // 0x0048(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.AreAnyListenersWithinRange
	 */
	struct UGameplayStatics_AreAnyListenersWithinRange_Params
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaximumRange;                                            // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.ApplyRadialDamageIgnoreDamageActors
	 */
	struct UGameplayStatics_ApplyRadialDamageIgnoreDamageActors_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BaseDamage;                                              // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Origin;                                                  // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      DamageRadius;                                            // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_8H79[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              DamageTypeClass;                                         // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      IgnoreActors;                                            // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class AActor*>                                      IgnoreDamageActors;                                      // 0x0038(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class AActor*                                              DamageCauser;                                            // 0x0048(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AController*                                         InstigatedByController;                                  // 0x0050(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDoFullDamage;                                           // 0x0058(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          DamagePreventionChannel;                                 // 0x0059(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_SFK8[0x2];                                   // 0x005A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      Impulse;                                                 // 0x005C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0060(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.ApplyRadialDamage
	 */
	struct UGameplayStatics_ApplyRadialDamage_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BaseDamage;                                              // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Origin;                                                  // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      DamageRadius;                                            // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_VKHC[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              DamageTypeClass;                                         // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      IgnoreActors;                                            // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class AActor*                                              DamageCauser;                                            // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AController*                                         InstigatedByController;                                  // 0x0040(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDoFullDamage;                                           // 0x0048(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          DamagePreventionChannel;                                 // 0x0049(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ATI1[0x2];                                   // 0x004A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      Impulse;                                                 // 0x004C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0050(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.ApplyPointDamage
	 */
	struct UGameplayStatics_ApplyPointDamage_Params
	{
	public:
		class AActor*                                              DamagedActor;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BaseDamage;                                              // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             HitFromDirection;                                        // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FHitResult                                          HitInfo;                                                 // 0x0018(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AController*                                         EventInstigator;                                         // 0x00A0(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x00A8(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              DamageTypeClass;                                         // 0x00B0(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Impulse;                                                 // 0x00B8(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceCollisionCheck;                                    // 0x00BC(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          ForceCollisionCheckTraceChannel;                         // 0x00BD(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.ApplyDamage
	 */
	struct UGameplayStatics_ApplyDamage_Params
	{
	public:
		class AActor*                                              DamagedActor;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BaseDamage;                                              // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_E5PL[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AController*                                         EventInstigator;                                         // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              DamageTypeClass;                                         // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Impulse;                                                 // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.GameplayStatics.ActivateReverbEffect
	 */
	struct UGameplayStatics_ActivateReverbEffect_Params
	{
	public:
		class UReverbEffect*                                       ReverbEffect;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                TagName;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Priority;                                                // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		float                                                      Volume;                                                  // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		float                                                      FadeTime;                                                // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	};

	/**
	 * Function Engine.HeadMountedDisplayFunctionLibrary.ResetOrientationAndPosition
	 */
	struct UHeadMountedDisplayFunctionLibrary_ResetOrientationAndPosition_Params
	{
	public:
		float                                                      Yaw;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HeadMountedDisplayFunctionLibrary.IsInLowPersistenceMode
	 */
	struct UHeadMountedDisplayFunctionLibrary_IsInLowPersistenceMode_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HeadMountedDisplayFunctionLibrary.IsHeadMountedDisplayEnabled
	 */
	struct UHeadMountedDisplayFunctionLibrary_IsHeadMountedDisplayEnabled_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HeadMountedDisplayFunctionLibrary.HasValidTrackingPosition
	 */
	struct UHeadMountedDisplayFunctionLibrary_HasValidTrackingPosition_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HeadMountedDisplayFunctionLibrary.GetScreenPercentage
	 */
	struct UHeadMountedDisplayFunctionLibrary_GetScreenPercentage_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HeadMountedDisplayFunctionLibrary.GetPositionalTrackingCameraParameters
	 */
	struct UHeadMountedDisplayFunctionLibrary_GetPositionalTrackingCameraParameters_Params
	{
	public:
		struct FVector                                             CameraOrigin;                                            // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            CameraRotation;                                          // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HFOV;                                                    // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      VFOV;                                                    // 0x001C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CameraDistance;                                          // 0x0020(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      NearPlane;                                               // 0x0024(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      FarPlane;                                                // 0x0028(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HeadMountedDisplayFunctionLibrary.GetOrientationAndPosition
	 */
	struct UHeadMountedDisplayFunctionLibrary_GetOrientationAndPosition_Params
	{
	public:
		struct FRotator                                            DeviceRotation;                                          // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             DevicePosition;                                          // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.HeadMountedDisplayFunctionLibrary.EnableLowPersistenceMode
	 */
	struct UHeadMountedDisplayFunctionLibrary_EnableLowPersistenceMode_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetArrayLibrary.SetArrayPropertyByName
	 */
	struct UKismetArrayLibrary_SetArrayPropertyByName_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                PropertyName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<int32_t>                                            Value;                                                   // 0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function Engine.KismetArrayLibrary.FilterArray
	 */
	struct UKismetArrayLibrary_FilterArray_Params
	{
	public:
		TArray<class AActor*>                                      TargetArray;                                             // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UClass*                                              FilterClass;                                             // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      FilteredArray;                                           // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function Engine.KismetArrayLibrary.Array_Shuffle
	 */
	struct UKismetArrayLibrary_Array_Shuffle_Params
	{
	public:
		TArray<int32_t>                                            TargetArray;                                             // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UArrayProperty*                                      ArrayProperty;                                           // 0x0010(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetArrayLibrary.Array_Set
	 */
	struct UKismetArrayLibrary_Array_Set_Params
	{
	public:
		TArray<int32_t>                                            TargetArray;                                             // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UArrayProperty*                                      ArrayProperty;                                           // 0x0010(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    index;                                                   // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Item;                                                    // 0x001C(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bSizeToFit;                                              // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetArrayLibrary.Array_Resize
	 */
	struct UKismetArrayLibrary_Array_Resize_Params
	{
	public:
		TArray<int32_t>                                            TargetArray;                                             // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UArrayProperty*                                      ArrayProperty;                                           // 0x0010(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Size;                                                    // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetArrayLibrary.Array_RemoveItem
	 */
	struct UKismetArrayLibrary_Array_RemoveItem_Params
	{
	public:
		TArray<int32_t>                                            TargetArray;                                             // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UArrayProperty*                                      ArrayProperty;                                           // 0x0010(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Item;                                                    // 0x0018(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x001C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetArrayLibrary.Array_Remove
	 */
	struct UKismetArrayLibrary_Array_Remove_Params
	{
	public:
		TArray<int32_t>                                            TargetArray;                                             // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UArrayProperty*                                      ArrayProperty;                                           // 0x0010(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    IndexToRemove;                                           // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetArrayLibrary.Array_Length
	 */
	struct UKismetArrayLibrary_Array_Length_Params
	{
	public:
		TArray<int32_t>                                            TargetArray;                                             // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UArrayProperty*                                      ArrayProperty;                                           // 0x0010(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetArrayLibrary.Array_LastIndex
	 */
	struct UKismetArrayLibrary_Array_LastIndex_Params
	{
	public:
		TArray<int32_t>                                            TargetArray;                                             // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UArrayProperty*                                      ArrayProperty;                                           // 0x0010(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetArrayLibrary.Array_IsValidIndex
	 */
	struct UKismetArrayLibrary_Array_IsValidIndex_Params
	{
	public:
		TArray<int32_t>                                            TargetArray;                                             // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    IndexToTest;                                             // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetArrayLibrary.Array_Insert
	 */
	struct UKismetArrayLibrary_Array_Insert_Params
	{
	public:
		TArray<int32_t>                                            TargetArray;                                             // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UArrayProperty*                                      ArrayProperty;                                           // 0x0010(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    newItem;                                                 // 0x0018(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		int32_t                                                    index;                                                   // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetArrayLibrary.Array_Get
	 */
	struct UKismetArrayLibrary_Array_Get_Params
	{
	public:
		TArray<int32_t>                                            TargetArray;                                             // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UArrayProperty*                                      ArrayProperty;                                           // 0x0010(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    index;                                                   // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Item;                                                    // 0x001C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetArrayLibrary.Array_Find
	 */
	struct UKismetArrayLibrary_Array_Find_Params
	{
	public:
		TArray<int32_t>                                            TargetArray;                                             // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UArrayProperty*                                      ArrayProperty;                                           // 0x0010(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ItemToFind;                                              // 0x0018(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x001C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetArrayLibrary.Array_Contains
	 */
	struct UKismetArrayLibrary_Array_Contains_Params
	{
	public:
		TArray<int32_t>                                            TargetArray;                                             // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UArrayProperty*                                      ArrayProperty;                                           // 0x0010(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ItemToFind;                                              // 0x0018(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x001C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetArrayLibrary.Array_Clear
	 */
	struct UKismetArrayLibrary_Array_Clear_Params
	{
	public:
		TArray<int32_t>                                            TargetArray;                                             // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UArrayProperty*                                      ArrayProperty;                                           // 0x0010(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetArrayLibrary.Array_Append
	 */
	struct UKismetArrayLibrary_Array_Append_Params
	{
	public:
		TArray<int32_t>                                            TargetArray;                                             // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UArrayProperty*                                      TargetArrayProperty;                                     // 0x0010(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<int32_t>                                            SourceArray;                                             // 0x0018(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UArrayProperty*                                      SourceArrayProperty;                                     // 0x0028(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetArrayLibrary.Array_AddUnique
	 */
	struct UKismetArrayLibrary_Array_AddUnique_Params
	{
	public:
		TArray<int32_t>                                            TargetArray;                                             // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UArrayProperty*                                      ArrayProperty;                                           // 0x0010(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    newItem;                                                 // 0x0018(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x001C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetArrayLibrary.Array_Add
	 */
	struct UKismetArrayLibrary_Array_Add_Params
	{
	public:
		TArray<int32_t>                                            TargetArray;                                             // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UArrayProperty*                                      ArrayProperty;                                           // 0x0010(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    newItem;                                                 // 0x0018(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x001C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.PointerEvent_IsTouchEvent
	 */
	struct UKismetInputLibrary_PointerEvent_IsTouchEvent_Params
	{
	public:
		struct FPointerEvent                                       Input;                                                   // 0x0000(0x0078)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0078(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.PointerEvent_IsMouseButtonDown
	 */
	struct UKismetInputLibrary_PointerEvent_IsMouseButtonDown_Params
	{
	public:
		struct FPointerEvent                                       Input;                                                   // 0x0000(0x0078)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FKey                                                MouseButton;                                             // 0x0078(0x0018)  (Parm)
		bool                                                       ReturnValue;                                             // 0x0090(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.PointerEvent_GetWheelDelta
	 */
	struct UKismetInputLibrary_PointerEvent_GetWheelDelta_Params
	{
	public:
		struct FPointerEvent                                       Input;                                                   // 0x0000(0x0078)  (ConstParm, Parm, OutParm, ReferenceParm)
		float                                                      ReturnValue;                                             // 0x0078(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.PointerEvent_GetUserIndex
	 */
	struct UKismetInputLibrary_PointerEvent_GetUserIndex_Params
	{
	public:
		struct FPointerEvent                                       Input;                                                   // 0x0000(0x0078)  (ConstParm, Parm, OutParm, ReferenceParm)
		int32_t                                                    ReturnValue;                                             // 0x0078(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.PointerEvent_GetTouchpadIndex
	 */
	struct UKismetInputLibrary_PointerEvent_GetTouchpadIndex_Params
	{
	public:
		struct FPointerEvent                                       Input;                                                   // 0x0000(0x0078)  (ConstParm, Parm, OutParm, ReferenceParm)
		int32_t                                                    ReturnValue;                                             // 0x0078(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.PointerEvent_GetScreenSpacePosition
	 */
	struct UKismetInputLibrary_PointerEvent_GetScreenSpacePosition_Params
	{
	public:
		struct FPointerEvent                                       Input;                                                   // 0x0000(0x0078)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector2D                                           ReturnValue;                                             // 0x0078(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.PointerEvent_GetPointerIndex
	 */
	struct UKismetInputLibrary_PointerEvent_GetPointerIndex_Params
	{
	public:
		struct FPointerEvent                                       Input;                                                   // 0x0000(0x0078)  (ConstParm, Parm, OutParm, ReferenceParm)
		int32_t                                                    ReturnValue;                                             // 0x0078(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.PointerEvent_GetLastScreenSpacePosition
	 */
	struct UKismetInputLibrary_PointerEvent_GetLastScreenSpacePosition_Params
	{
	public:
		struct FPointerEvent                                       Input;                                                   // 0x0000(0x0078)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector2D                                           ReturnValue;                                             // 0x0078(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.PointerEvent_GetGestureDelta
	 */
	struct UKismetInputLibrary_PointerEvent_GetGestureDelta_Params
	{
	public:
		struct FPointerEvent                                       Input;                                                   // 0x0000(0x0078)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector2D                                           ReturnValue;                                             // 0x0078(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.PointerEvent_GetEffectingButton
	 */
	struct UKismetInputLibrary_PointerEvent_GetEffectingButton_Params
	{
	public:
		struct FPointerEvent                                       Input;                                                   // 0x0000(0x0078)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FKey                                                ReturnValue;                                             // 0x0078(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function Engine.KismetInputLibrary.PointerEvent_GetCursorDelta
	 */
	struct UKismetInputLibrary_PointerEvent_GetCursorDelta_Params
	{
	public:
		struct FPointerEvent                                       Input;                                                   // 0x0000(0x0078)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector2D                                           ReturnValue;                                             // 0x0078(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.InputEvent_IsShiftDown
	 */
	struct UKismetInputLibrary_InputEvent_IsShiftDown_Params
	{
	public:
		struct FInputEvent                                         Input;                                                   // 0x0000(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.InputEvent_IsRightShiftDown
	 */
	struct UKismetInputLibrary_InputEvent_IsRightShiftDown_Params
	{
	public:
		struct FInputEvent                                         Input;                                                   // 0x0000(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.InputEvent_IsRightControlDown
	 */
	struct UKismetInputLibrary_InputEvent_IsRightControlDown_Params
	{
	public:
		struct FInputEvent                                         Input;                                                   // 0x0000(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.InputEvent_IsRightCommandDown
	 */
	struct UKismetInputLibrary_InputEvent_IsRightCommandDown_Params
	{
	public:
		struct FInputEvent                                         Input;                                                   // 0x0000(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.InputEvent_IsRightAltDown
	 */
	struct UKismetInputLibrary_InputEvent_IsRightAltDown_Params
	{
	public:
		struct FInputEvent                                         Input;                                                   // 0x0000(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.InputEvent_IsRepeat
	 */
	struct UKismetInputLibrary_InputEvent_IsRepeat_Params
	{
	public:
		struct FInputEvent                                         Input;                                                   // 0x0000(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.InputEvent_IsLeftShiftDown
	 */
	struct UKismetInputLibrary_InputEvent_IsLeftShiftDown_Params
	{
	public:
		struct FInputEvent                                         Input;                                                   // 0x0000(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.InputEvent_IsLeftControlDown
	 */
	struct UKismetInputLibrary_InputEvent_IsLeftControlDown_Params
	{
	public:
		struct FInputEvent                                         Input;                                                   // 0x0000(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.InputEvent_IsLeftCommandDown
	 */
	struct UKismetInputLibrary_InputEvent_IsLeftCommandDown_Params
	{
	public:
		struct FInputEvent                                         Input;                                                   // 0x0000(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.InputEvent_IsLeftAltDown
	 */
	struct UKismetInputLibrary_InputEvent_IsLeftAltDown_Params
	{
	public:
		struct FInputEvent                                         Input;                                                   // 0x0000(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.InputEvent_IsControlDown
	 */
	struct UKismetInputLibrary_InputEvent_IsControlDown_Params
	{
	public:
		struct FInputEvent                                         Input;                                                   // 0x0000(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.InputEvent_IsCommandDown
	 */
	struct UKismetInputLibrary_InputEvent_IsCommandDown_Params
	{
	public:
		struct FInputEvent                                         Input;                                                   // 0x0000(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.InputEvent_IsAltDown
	 */
	struct UKismetInputLibrary_InputEvent_IsAltDown_Params
	{
	public:
		struct FInputEvent                                         Input;                                                   // 0x0000(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.GetKey
	 */
	struct UKismetInputLibrary_GetKey_Params
	{
	public:
		struct FKeyboardEvent                                      Input;                                                   // 0x0000(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FKey                                                ReturnValue;                                             // 0x0040(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function Engine.KismetInputLibrary.EqualEqual_KeyKey
	 */
	struct UKismetInputLibrary_EqualEqual_KeyKey_Params
	{
	public:
		struct FKey                                                A;                                                       // 0x0000(0x0018)  (Parm)
		struct FKey                                                B;                                                       // 0x0018(0x0018)  (Parm)
		bool                                                       ReturnValue;                                             // 0x0030(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.ControllerEvent_GetUserIndex
	 */
	struct UKismetInputLibrary_ControllerEvent_GetUserIndex_Params
	{
	public:
		struct FControllerEvent                                    Input;                                                   // 0x0000(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm)
		int32_t                                                    ReturnValue;                                             // 0x0040(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.ControllerEvent_GetEffectingButton
	 */
	struct UKismetInputLibrary_ControllerEvent_GetEffectingButton_Params
	{
	public:
		struct FControllerEvent                                    Input;                                                   // 0x0000(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FKey                                                ReturnValue;                                             // 0x0040(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function Engine.KismetInputLibrary.ControllerEvent_GetAnalogValue
	 */
	struct UKismetInputLibrary_ControllerEvent_GetAnalogValue_Params
	{
	public:
		struct FControllerEvent                                    Input;                                                   // 0x0000(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm)
		float                                                      ReturnValue;                                             // 0x0040(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetInputLibrary.CalibrateTilt
	 */
	struct UKismetInputLibrary_CalibrateTilt_Params
	{	};

	/**
	 * Function Engine.KismetMaterialLibrary.SetVectorParameterValue
	 */
	struct UKismetMaterialLibrary_SetVectorParameterValue_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialParameterCollection*                        Collection;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ParameterName;                                           // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        ParameterValue;                                          // 0x0018(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMaterialLibrary.SetScalarParameterValue
	 */
	struct UKismetMaterialLibrary_SetScalarParameterValue_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialParameterCollection*                        Collection;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ParameterName;                                           // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ParameterValue;                                          // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMaterialLibrary.ResetMaterialParameterCollectionInstance
	 */
	struct UKismetMaterialLibrary_ResetMaterialParameterCollectionInstance_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialParameterCollection*                        Collection;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMaterialLibrary.GetVectorParameterValue
	 */
	struct UKismetMaterialLibrary_GetVectorParameterValue_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialParameterCollection*                        Collection;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ParameterName;                                           // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMaterialLibrary.GetScalarParameterValue
	 */
	struct UKismetMaterialLibrary_GetScalarParameterValue_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialParameterCollection*                        Collection;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ParameterName;                                           // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMaterialLibrary.CreateDynamicMaterialInstance
	 */
	struct UKismetMaterialLibrary_CreateDynamicMaterialInstance_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialInterface*                                  Parent;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialInstanceDynamic*                            ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Xor_IntInt
	 */
	struct UKismetMathLibrary_Xor_IntInt_Params
	{
	public:
		int32_t                                                    A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.WrapAngle
	 */
	struct UKismetMathLibrary_WrapAngle_Params
	{
	public:
		float                                                      degrees;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.VSizeSquared2D
	 */
	struct UKismetMathLibrary_VSizeSquared2D_Params
	{
	public:
		struct FVector2D                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.VSizeSquared
	 */
	struct UKismetMathLibrary_VSizeSquared_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.VSize2D
	 */
	struct UKismetMathLibrary_VSize2D_Params
	{
	public:
		struct FVector2D                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.VSize
	 */
	struct UKismetMathLibrary_VSize_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.VLerp
	 */
	struct UKismetMathLibrary_VLerp_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Alpha;                                                   // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x001C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.VInterpTo_SnapWithinDist
	 */
	struct UKismetMathLibrary_VInterpTo_SnapWithinDist_Params
	{
	public:
		struct FVector                                             current;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Target;                                                  // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeed;                                             // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SnapWithinDist;                                          // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0024(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.VInterpTo_SnapPastDist
	 */
	struct UKismetMathLibrary_VInterpTo_SnapPastDist_Params
	{
	public:
		struct FVector                                             current;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Target;                                                  // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeed;                                             // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SnapPastDist;                                            // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0024(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.VInterpTo_Constant_SnapWithinDist
	 */
	struct UKismetMathLibrary_VInterpTo_Constant_SnapWithinDist_Params
	{
	public:
		struct FVector                                             current;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Target;                                                  // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeed;                                             // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SnapWithinDist;                                          // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0024(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.VInterpTo_Constant_SnapPastDist
	 */
	struct UKismetMathLibrary_VInterpTo_Constant_SnapPastDist_Params
	{
	public:
		struct FVector                                             current;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Target;                                                  // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeed;                                             // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SnapPastDist;                                            // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0024(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.VInterpTo_Constant_ClampDist
	 */
	struct UKismetMathLibrary_VInterpTo_Constant_ClampDist_Params
	{
	public:
		struct FVector                                             current;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Target;                                                  // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeed;                                             // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ClampDist;                                               // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0024(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.VInterpTo_Constant
	 */
	struct UKismetMathLibrary_VInterpTo_Constant_Params
	{
	public:
		struct FVector                                             current;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Target;                                                  // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeed;                                             // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0020(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.VInterpTo_ClampDist
	 */
	struct UKismetMathLibrary_VInterpTo_ClampDist_Params
	{
	public:
		struct FVector                                             current;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Target;                                                  // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeed;                                             // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ClampDist;                                               // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0024(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.VInterpTo
	 */
	struct UKismetMathLibrary_VInterpTo_Params
	{
	public:
		struct FVector                                             current;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Target;                                                  // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeed;                                             // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0020(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.VEase
	 */
	struct UKismetMathLibrary_VEase_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Alpha;                                                   // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EEasingFunc                                                EasingFunc;                                              // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1YMK[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      BlendExp;                                                // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Steps;                                                   // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0028(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.UtcNow
	 */
	struct UKismetMathLibrary_UtcNow_Params
	{
	public:
		struct FDateTime                                           ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetMathLibrary.TransformLocation
	 */
	struct UKismetMathLibrary_TransformLocation_Params
	{
	public:
		struct FTransform                                          T;                                                       // 0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x0030(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x003C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.TransformDirection
	 */
	struct UKismetMathLibrary_TransformDirection_Params
	{
	public:
		struct FTransform                                          T;                                                       // 0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             Direction;                                               // 0x0030(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x003C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Today
	 */
	struct UKismetMathLibrary_Today_Params
	{
	public:
		struct FDateTime                                           ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetMathLibrary.TLerp
	 */
	struct UKismetMathLibrary_TLerp_Params
	{
	public:
		struct FTransform                                          A;                                                       // 0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FTransform                                          B;                                                       // 0x0030(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      Alpha;                                                   // 0x0060(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NDY0[0xC];                                   // 0x0064(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          ReturnValue;                                             // 0x0070(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.TInterpTo
	 */
	struct UKismetMathLibrary_TInterpTo_Params
	{
	public:
		struct FTransform                                          current;                                                 // 0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FTransform                                          Target;                                                  // 0x0030(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0060(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeed;                                             // 0x0064(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_VCSF[0x8];                                   // 0x0068(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          ReturnValue;                                             // 0x0070(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.TimespanZeroValue
	 */
	struct UKismetMathLibrary_TimespanZeroValue_Params
	{
	public:
		struct FTimespan                                           ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetMathLibrary.TimespanRatio
	 */
	struct UKismetMathLibrary_TimespanRatio_Params
	{
	public:
		struct FTimespan                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		struct FTimespan                                           B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor)
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.TimespanMinValue
	 */
	struct UKismetMathLibrary_TimespanMinValue_Params
	{
	public:
		struct FTimespan                                           ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetMathLibrary.TimespanMaxValue
	 */
	struct UKismetMathLibrary_TimespanMaxValue_Params
	{
	public:
		struct FTimespan                                           ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetMathLibrary.TEase
	 */
	struct UKismetMathLibrary_TEase_Params
	{
	public:
		struct FTransform                                          A;                                                       // 0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FTransform                                          B;                                                       // 0x0030(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      Alpha;                                                   // 0x0060(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EEasingFunc                                                EasingFunc;                                              // 0x0064(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_PLPM[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      BlendExp;                                                // 0x0068(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Steps;                                                   // 0x006C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FTransform                                          ReturnValue;                                             // 0x0070(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Tan
	 */
	struct UKismetMathLibrary_Tan_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Subtract_VectorVector
	 */
	struct UKismetMathLibrary_Subtract_VectorVector_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Subtract_VectorFloat
	 */
	struct UKismetMathLibrary_Subtract_VectorFloat_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Subtract_Vector2DVector2D
	 */
	struct UKismetMathLibrary_Subtract_Vector2DVector2D_Params
	{
	public:
		struct FVector2D                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Subtract_Vector2DFloat
	 */
	struct UKismetMathLibrary_Subtract_Vector2DFloat_Params
	{
	public:
		struct FVector2D                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ReturnValue;                                             // 0x000C(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Subtract_TimespanTimespan
	 */
	struct UKismetMathLibrary_Subtract_TimespanTimespan_Params
	{
	public:
		struct FTimespan                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		struct FTimespan                                           B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor)
		struct FTimespan                                           ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetMathLibrary.Subtract_IntInt
	 */
	struct UKismetMathLibrary_Subtract_IntInt_Params
	{
	public:
		int32_t                                                    A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Subtract_FloatFloat
	 */
	struct UKismetMathLibrary_Subtract_FloatFloat_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Subtract_DoubleFloat
	 */
	struct UKismetMathLibrary_Subtract_DoubleFloat_Params
	{
	public:
		double                                                     A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_BDSN[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		double                                                     ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Subtract_DoubleDouble
	 */
	struct UKismetMathLibrary_Subtract_DoubleDouble_Params
	{
	public:
		double                                                     A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Subtract_DateTimeTimespan
	 */
	struct UKismetMathLibrary_Subtract_DateTimeTimespan_Params
	{
	public:
		struct FDateTime                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		struct FTimespan                                           B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor)
		struct FDateTime                                           ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetMathLibrary.Subtract_ByteByte
	 */
	struct UKismetMathLibrary_Subtract_ByteByte_Params
	{
	public:
		unsigned char                                              A;                                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              B;                                                       // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Square
	 */
	struct UKismetMathLibrary_Square_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Sqrt
	 */
	struct UKismetMathLibrary_Sqrt_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Sin
	 */
	struct UKismetMathLibrary_Sin_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.SignOfInteger
	 */
	struct UKismetMathLibrary_SignOfInteger_Params
	{
	public:
		int32_t                                                    A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.SignOfFloat
	 */
	struct UKismetMathLibrary_SignOfFloat_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.SetRandomStreamSeed
	 */
	struct UKismetMathLibrary_SetRandomStreamSeed_Params
	{
	public:
		struct FRandomStream                                       Stream;                                                  // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    NewSeed;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.SelectVector
	 */
	struct UKismetMathLibrary_SelectVector_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPickA;                                                  // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_D6Z3[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             ReturnValue;                                             // 0x001C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.SelectTransform
	 */
	struct UKismetMathLibrary_SelectTransform_Params
	{
	public:
		struct FTransform                                          A;                                                       // 0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FTransform                                          B;                                                       // 0x0030(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bPickA;                                                  // 0x0060(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZSIZ[0xF];                                   // 0x0061(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          ReturnValue;                                             // 0x0070(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.SelectString
	 */
	struct UKismetMathLibrary_SelectString_Params
	{
	public:
		class FString                                              A;                                                       // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              B;                                                       // 0x0010(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bPickA;                                                  // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_2BC2[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0028(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetMathLibrary.SelectRotator
	 */
	struct UKismetMathLibrary_SelectRotator_Params
	{
	public:
		struct FRotator                                            A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPickA;                                                  // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_4GHT[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRotator                                            ReturnValue;                                             // 0x001C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.SelectObject
	 */
	struct UKismetMathLibrary_SelectObject_Params
	{
	public:
		class UObject*                                             A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObject*                                             B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSelectA;                                                // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_4KGL[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UObject*                                             ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.SelectInt
	 */
	struct UKismetMathLibrary_SelectInt_Params
	{
	public:
		int32_t                                                    A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPickA;                                                  // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_GRMM[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.SelectFloat
	 */
	struct UKismetMathLibrary_SelectFloat_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPickA;                                                  // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XP6L[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.SelectColor
	 */
	struct UKismetMathLibrary_SelectColor_Params
	{
	public:
		struct FLinearColor                                        A;                                                       // 0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        B;                                                       // 0x0010(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPickA;                                                  // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_F2V9[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FLinearColor                                        ReturnValue;                                             // 0x0024(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.SeedRandomStream
	 */
	struct UKismetMathLibrary_SeedRandomStream_Params
	{
	public:
		struct FRandomStream                                       Stream;                                                  // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function Engine.KismetMathLibrary.Round
	 */
	struct UKismetMathLibrary_Round_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RotatorFromAxisAndAngle
	 */
	struct UKismetMathLibrary_RotatorFromAxisAndAngle_Params
	{
	public:
		struct FVector                                             Axis;                                                    // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Angle;                                                   // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RotateAngleAxis
	 */
	struct UKismetMathLibrary_RotateAngleAxis_Params
	{
	public:
		struct FVector                                             InVect;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      AngleDeg;                                                // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Axis;                                                    // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x001C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RLerp
	 */
	struct UKismetMathLibrary_RLerp_Params
	{
	public:
		struct FRotator                                            A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Alpha;                                                   // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bShortestPath;                                           // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7PMG[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRotator                                            ReturnValue;                                             // 0x0020(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RInterpTo_PerAxis
	 */
	struct UKismetMathLibrary_RInterpTo_PerAxis_Params
	{
	public:
		struct FRotator                                            current;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Target;                                                  // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            InterpSpeedPerAxis;                                      // 0x001C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0028(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RInterpTo_Constant_PerAxis
	 */
	struct UKismetMathLibrary_RInterpTo_Constant_PerAxis_Params
	{
	public:
		struct FRotator                                            current;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Target;                                                  // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            InterpSpeedPerAxis;                                      // 0x001C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0028(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RInterpTo_Constant
	 */
	struct UKismetMathLibrary_RInterpTo_Constant_Params
	{
	public:
		struct FRotator                                            current;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Target;                                                  // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeed;                                             // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0020(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RInterpTo
	 */
	struct UKismetMathLibrary_RInterpTo_Params
	{
	public:
		struct FRotator                                            current;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Target;                                                  // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeed;                                             // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0020(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RGBToHSV_Vector
	 */
	struct UKismetMathLibrary_RGBToHSV_Vector_Params
	{
	public:
		struct FLinearColor                                        RGB;                                                     // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        HSV;                                                     // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RGBToHSV
	 */
	struct UKismetMathLibrary_RGBToHSV_Params
	{
	public:
		struct FLinearColor                                        InColor;                                                 // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      H;                                                       // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      S;                                                       // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      V;                                                       // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      A;                                                       // 0x001C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.ResetRandomStream
	 */
	struct UKismetMathLibrary_ResetRandomStream_Params
	{
	public:
		struct FRandomStream                                       Stream;                                                  // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function Engine.KismetMathLibrary.REase
	 */
	struct UKismetMathLibrary_REase_Params
	{
	public:
		struct FRotator                                            A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Alpha;                                                   // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bShortestPath;                                           // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EEasingFunc                                                EasingFunc;                                              // 0x001D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_AYJO[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      BlendExp;                                                // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Steps;                                                   // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0028(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RandomUnitVectorInCone
	 */
	struct UKismetMathLibrary_RandomUnitVectorInCone_Params
	{
	public:
		struct FVector                                             ConeDir;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ConeHalfAngle;                                           // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RandomUnitVectorFromStream
	 */
	struct UKismetMathLibrary_RandomUnitVectorFromStream_Params
	{
	public:
		struct FRandomStream                                       Stream;                                                  // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FVector                                             ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RandomUnitVector
	 */
	struct UKismetMathLibrary_RandomUnitVector_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RandomRotatorFromStream
	 */
	struct UKismetMathLibrary_RandomRotatorFromStream_Params
	{
	public:
		bool                                                       bRoll;                                                   // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_8QFC[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRandomStream                                       Stream;                                                  // 0x0004(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FRotator                                            ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RandomRotator
	 */
	struct UKismetMathLibrary_RandomRotator_Params
	{
	public:
		bool                                                       bRoll;                                                   // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_3EMI[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRotator                                            ReturnValue;                                             // 0x0004(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RandomPointInBoundingBox
	 */
	struct UKismetMathLibrary_RandomPointInBoundingBox_Params
	{
	public:
		struct FVector                                             Origin;                                                  // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             BoxExtent;                                               // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RandomIntegerInRangeFromStream
	 */
	struct UKismetMathLibrary_RandomIntegerInRangeFromStream_Params
	{
	public:
		int32_t                                                    Min;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Max;                                                     // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRandomStream                                       Stream;                                                  // 0x0008(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RandomIntegerInRange
	 */
	struct UKismetMathLibrary_RandomIntegerInRange_Params
	{
	public:
		int32_t                                                    Min;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Max;                                                     // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RandomIntegerFromStream
	 */
	struct UKismetMathLibrary_RandomIntegerFromStream_Params
	{
	public:
		int32_t                                                    Max;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRandomStream                                       Stream;                                                  // 0x0004(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RandomInteger
	 */
	struct UKismetMathLibrary_RandomInteger_Params
	{
	public:
		int32_t                                                    Max;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RandomFloatInRangeFromStream
	 */
	struct UKismetMathLibrary_RandomFloatInRangeFromStream_Params
	{
	public:
		float                                                      Min;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Max;                                                     // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRandomStream                                       Stream;                                                  // 0x0008(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RandomFloatInRange
	 */
	struct UKismetMathLibrary_RandomFloatInRange_Params
	{
	public:
		float                                                      Min;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Max;                                                     // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RandomFloatFromStream
	 */
	struct UKismetMathLibrary_RandomFloatFromStream_Params
	{
	public:
		struct FRandomStream                                       Stream;                                                  // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RandomFloat
	 */
	struct UKismetMathLibrary_RandomFloat_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RandomBoolFromStream
	 */
	struct UKismetMathLibrary_RandomBoolFromStream_Params
	{
	public:
		struct FRandomStream                                       Stream;                                                  // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RandomBool
	 */
	struct UKismetMathLibrary_RandomBool_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.RadiansToDegrees
	 */
	struct UKismetMathLibrary_RadiansToDegrees_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.QInterpTo
	 */
	struct UKismetMathLibrary_QInterpTo_Params
	{
	public:
		struct FRotator                                            current;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Target;                                                  // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeed;                                             // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0020(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.ProjectVectorOnToPlane
	 */
	struct UKismetMathLibrary_ProjectVectorOnToPlane_Params
	{
	public:
		struct FVector                                             V;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             PlaneNormal;                                             // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.ProjectOnTo
	 */
	struct UKismetMathLibrary_ProjectOnTo_Params
	{
	public:
		struct FVector                                             X;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Y;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.PointsAreCoplanar
	 */
	struct UKismetMathLibrary_PointsAreCoplanar_Params
	{
	public:
		TArray<struct FVector>                                     Points;                                                  // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		float                                                      Tolerance;                                               // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Percent_IntInt
	 */
	struct UKismetMathLibrary_Percent_IntInt_Params
	{
	public:
		int32_t                                                    A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Percent_FloatFloat
	 */
	struct UKismetMathLibrary_Percent_FloatFloat_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Percent_DoubleDouble
	 */
	struct UKismetMathLibrary_Percent_DoubleDouble_Params
	{
	public:
		double                                                     A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Percent_ByteByte
	 */
	struct UKismetMathLibrary_Percent_ByteByte_Params
	{
	public:
		unsigned char                                              A;                                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              B;                                                       // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Or_IntInt
	 */
	struct UKismetMathLibrary_Or_IntInt_Params
	{
	public:
		int32_t                                                    A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Now
	 */
	struct UKismetMathLibrary_Now_Params
	{
	public:
		struct FDateTime                                           ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetMathLibrary.NotEqual_VectorVector
	 */
	struct UKismetMathLibrary_NotEqual_VectorVector_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.NotEqual_TimespanTimespan
	 */
	struct UKismetMathLibrary_NotEqual_TimespanTimespan_Params
	{
	public:
		struct FTimespan                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		struct FTimespan                                           B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.NotEqual_RotatorRotator
	 */
	struct UKismetMathLibrary_NotEqual_RotatorRotator_Params
	{
	public:
		struct FRotator                                            A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.NotEqual_ObjectObject
	 */
	struct UKismetMathLibrary_NotEqual_ObjectObject_Params
	{
	public:
		class UObject*                                             A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObject*                                             B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.NotEqual_NameName
	 */
	struct UKismetMathLibrary_NotEqual_NameName_Params
	{
	public:
		class FName                                                A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.NotEqual_IntInt
	 */
	struct UKismetMathLibrary_NotEqual_IntInt_Params
	{
	public:
		int32_t                                                    A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.NotEqual_FloatFloat
	 */
	struct UKismetMathLibrary_NotEqual_FloatFloat_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.NotEqual_DoubleDouble
	 */
	struct UKismetMathLibrary_NotEqual_DoubleDouble_Params
	{
	public:
		double                                                     A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.NotEqual_DateTimeDateTime
	 */
	struct UKismetMathLibrary_NotEqual_DateTimeDateTime_Params
	{
	public:
		struct FDateTime                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		struct FDateTime                                           B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.NotEqual_ClassClass
	 */
	struct UKismetMathLibrary_NotEqual_ClassClass_Params
	{
	public:
		class UClass*                                              A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.NotEqual_ByteByte
	 */
	struct UKismetMathLibrary_NotEqual_ByteByte_Params
	{
	public:
		unsigned char                                              A;                                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              B;                                                       // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.NotEqual_BoolBool
	 */
	struct UKismetMathLibrary_NotEqual_BoolBool_Params
	{
	public:
		bool                                                       A;                                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       B;                                                       // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Not_PreBool
	 */
	struct UKismetMathLibrary_Not_PreBool_Params
	{
	public:
		bool                                                       A;                                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Not_Int
	 */
	struct UKismetMathLibrary_Not_Int_Params
	{
	public:
		int32_t                                                    A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.NormalizeToRange
	 */
	struct UKismetMathLibrary_NormalizeToRange_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      RangeMin;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      RangeMax;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.NormalizedDeltaRotator
	 */
	struct UKismetMathLibrary_NormalizedDeltaRotator_Params
	{
	public:
		struct FRotator                                            A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Normal2D
	 */
	struct UKismetMathLibrary_Normal2D_Params
	{
	public:
		struct FVector2D                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Normal
	 */
	struct UKismetMathLibrary_Normal_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.NegateVector
	 */
	struct UKismetMathLibrary_NegateVector_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.NegateRotator
	 */
	struct UKismetMathLibrary_NegateRotator_Params
	{
	public:
		struct FRotator                                            A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.NearlyEqual_VectorVector
	 */
	struct UKismetMathLibrary_NearlyEqual_VectorVector_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ErrorTolerance;                                          // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x001C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.NearlyEqual_FloatFloat
	 */
	struct UKismetMathLibrary_NearlyEqual_FloatFloat_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ErrorTolerance;                                          // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.NearlyEqual_DoubleDouble
	 */
	struct UKismetMathLibrary_NearlyEqual_DoubleDouble_Params
	{
	public:
		double                                                     A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ErrorTolerance;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MultiplyMultiply_IntInt
	 */
	struct UKismetMathLibrary_MultiplyMultiply_IntInt_Params
	{
	public:
		int32_t                                                    Base;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Exp;                                                     // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MultiplyMultiply_FloatFloat
	 */
	struct UKismetMathLibrary_MultiplyMultiply_FloatFloat_Params
	{
	public:
		float                                                      Base;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Exp;                                                     // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MultiplyByPi
	 */
	struct UKismetMathLibrary_MultiplyByPi_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Multiply_VectorVector
	 */
	struct UKismetMathLibrary_Multiply_VectorVector_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Multiply_VectorFloat
	 */
	struct UKismetMathLibrary_Multiply_VectorFloat_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Multiply_Vector2DFloat
	 */
	struct UKismetMathLibrary_Multiply_Vector2DFloat_Params
	{
	public:
		struct FVector2D                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ReturnValue;                                             // 0x000C(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Multiply_TimespanFloat
	 */
	struct UKismetMathLibrary_Multiply_TimespanFloat_Params
	{
	public:
		struct FTimespan                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		float                                                      Scalar;                                                  // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_Q7OO[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTimespan                                           ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetMathLibrary.Multiply_RotatorFloat
	 */
	struct UKismetMathLibrary_Multiply_RotatorFloat_Params
	{
	public:
		struct FRotator                                            A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Multiply_LinearColorLinearColor
	 */
	struct UKismetMathLibrary_Multiply_LinearColorLinearColor_Params
	{
	public:
		struct FLinearColor                                        A;                                                       // 0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        B;                                                       // 0x0010(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        ReturnValue;                                             // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Multiply_LinearColorFloat
	 */
	struct UKismetMathLibrary_Multiply_LinearColorFloat_Params
	{
	public:
		struct FLinearColor                                        A;                                                       // 0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        ReturnValue;                                             // 0x0014(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Multiply_IntInt
	 */
	struct UKismetMathLibrary_Multiply_IntInt_Params
	{
	public:
		int32_t                                                    A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Multiply_IntFloat
	 */
	struct UKismetMathLibrary_Multiply_IntFloat_Params
	{
	public:
		int32_t                                                    A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Multiply_FloatFloat
	 */
	struct UKismetMathLibrary_Multiply_FloatFloat_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Multiply_DoubleFloat
	 */
	struct UKismetMathLibrary_Multiply_DoubleFloat_Params
	{
	public:
		double                                                     A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_BG4N[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		double                                                     ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Multiply_DoubleDouble
	 */
	struct UKismetMathLibrary_Multiply_DoubleDouble_Params
	{
	public:
		double                                                     A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Multiply_ByteByte
	 */
	struct UKismetMathLibrary_Multiply_ByteByte_Params
	{
	public:
		unsigned char                                              A;                                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              B;                                                       // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MirrorVectorByNormal
	 */
	struct UKismetMathLibrary_MirrorVectorByNormal_Params
	{
	public:
		struct FVector                                             InVect;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             InNormal;                                                // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MinOfIntArray
	 */
	struct UKismetMathLibrary_MinOfIntArray_Params
	{
	public:
		TArray<int32_t>                                            IntArray;                                                // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    IndexOfMinValue;                                         // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MinValue;                                                // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MinOfFloatArray
	 */
	struct UKismetMathLibrary_MinOfFloatArray_Params
	{
	public:
		TArray<float>                                              FloatArray;                                              // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    IndexOfMinValue;                                         // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MinValue;                                                // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MinOfByteArray
	 */
	struct UKismetMathLibrary_MinOfByteArray_Params
	{
	public:
		TArray<unsigned char>                                      ByteArray;                                               // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    IndexOfMinValue;                                         // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              MinValue;                                                // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MinimumAreaRectangle
	 */
	struct UKismetMathLibrary_MinimumAreaRectangle_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FVector>                                     InVerts;                                                 // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FVector                                             SampleSurfaceNormal;                                     // 0x0018(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             OutRectCenter;                                           // 0x0024(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            OutRectRotation;                                         // 0x0030(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OutSideLengthX;                                          // 0x003C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OutSideLengthY;                                          // 0x0040(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDebugDraw;                                              // 0x0044(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Min
	 */
	struct UKismetMathLibrary_Min_Params
	{
	public:
		int32_t                                                    A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MaxOfIntArray
	 */
	struct UKismetMathLibrary_MaxOfIntArray_Params
	{
	public:
		TArray<int32_t>                                            IntArray;                                                // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    IndexOfMaxValue;                                         // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MaxValue;                                                // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MaxOfFloatArray
	 */
	struct UKismetMathLibrary_MaxOfFloatArray_Params
	{
	public:
		TArray<float>                                              FloatArray;                                              // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    IndexOfMaxValue;                                         // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxValue;                                                // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MaxOfByteArray
	 */
	struct UKismetMathLibrary_MaxOfByteArray_Params
	{
	public:
		TArray<unsigned char>                                      ByteArray;                                               // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    IndexOfMaxValue;                                         // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              MaxValue;                                                // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Max
	 */
	struct UKismetMathLibrary_Max_Params
	{
	public:
		int32_t                                                    A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MapRange
	 */
	struct UKismetMathLibrary_MapRange_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InRangeA;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InRangeB;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OutRangeA;                                               // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OutRangeB;                                               // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MakeVector2D
	 */
	struct UKismetMathLibrary_MakeVector2D_Params
	{
	public:
		float                                                      X;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Y;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MakeVector
	 */
	struct UKismetMathLibrary_MakeVector_Params
	{
	public:
		float                                                      X;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Y;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Z;                                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MakeTransform
	 */
	struct UKismetMathLibrary_MakeTransform_Params
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Scale;                                                   // 0x0018(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JW5C[0xC];                                   // 0x0024(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          ReturnValue;                                             // 0x0030(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MakeRotFromZY
	 */
	struct UKismetMathLibrary_MakeRotFromZY_Params
	{
	public:
		struct FVector                                             Z;                                                       // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             Y;                                                       // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MakeRotFromZX
	 */
	struct UKismetMathLibrary_MakeRotFromZX_Params
	{
	public:
		struct FVector                                             Z;                                                       // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             X;                                                       // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MakeRotFromZ
	 */
	struct UKismetMathLibrary_MakeRotFromZ_Params
	{
	public:
		struct FVector                                             Z;                                                       // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MakeRotFromYZ
	 */
	struct UKismetMathLibrary_MakeRotFromYZ_Params
	{
	public:
		struct FVector                                             Y;                                                       // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             Z;                                                       // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MakeRotFromYX
	 */
	struct UKismetMathLibrary_MakeRotFromYX_Params
	{
	public:
		struct FVector                                             Y;                                                       // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             X;                                                       // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MakeRotFromY
	 */
	struct UKismetMathLibrary_MakeRotFromY_Params
	{
	public:
		struct FVector                                             Y;                                                       // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MakeRotFromXZ
	 */
	struct UKismetMathLibrary_MakeRotFromXZ_Params
	{
	public:
		struct FVector                                             X;                                                       // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             Z;                                                       // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MakeRotFromXY
	 */
	struct UKismetMathLibrary_MakeRotFromXY_Params
	{
	public:
		struct FVector                                             X;                                                       // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             Y;                                                       // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MakeRotFromX
	 */
	struct UKismetMathLibrary_MakeRotFromX_Params
	{
	public:
		struct FVector                                             X;                                                       // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MakeRotationFromAxes
	 */
	struct UKismetMathLibrary_MakeRotationFromAxes_Params
	{
	public:
		struct FVector                                             Forward;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Right;                                                   // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Up;                                                      // 0x0018(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0024(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MakeRot
	 */
	struct UKismetMathLibrary_MakeRot_Params
	{
	public:
		float                                                      Pitch;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Yaw;                                                     // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Roll;                                                    // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.MakeColor
	 */
	struct UKismetMathLibrary_MakeColor_Params
	{
	public:
		float                                                      R;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      G;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      A;                                                       // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Loge
	 */
	struct UKismetMathLibrary_Loge_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.LinePlaneIntersection_OriginNormal
	 */
	struct UKismetMathLibrary_LinePlaneIntersection_OriginNormal_Params
	{
	public:
		struct FVector                                             LineStart;                                               // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             LineEnd;                                                 // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             PlaneOrigin;                                             // 0x0018(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             PlaneNormal;                                             // 0x0024(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      T;                                                       // 0x0030(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Intersection;                                            // 0x0034(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0040(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.LinePlaneIntersection
	 */
	struct UKismetMathLibrary_LinePlaneIntersection_Params
	{
	public:
		struct FVector                                             LineStart;                                               // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             LineEnd;                                                 // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_PLA5[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FPlane                                              APlane;                                                  // 0x0020(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      T;                                                       // 0x0030(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Intersection;                                            // 0x0034(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0040(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.LinearColorLerp
	 */
	struct UKismetMathLibrary_LinearColorLerp_Params
	{
	public:
		struct FLinearColor                                        A;                                                       // 0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        B;                                                       // 0x0010(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Alpha;                                                   // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        ReturnValue;                                             // 0x0024(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.LessLess_VectorRotator
	 */
	struct UKismetMathLibrary_LessLess_VectorRotator_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.LessEqual_TimespanTimespan
	 */
	struct UKismetMathLibrary_LessEqual_TimespanTimespan_Params
	{
	public:
		struct FTimespan                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		struct FTimespan                                           B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.LessEqual_IntInt
	 */
	struct UKismetMathLibrary_LessEqual_IntInt_Params
	{
	public:
		int32_t                                                    A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.LessEqual_FloatFloat
	 */
	struct UKismetMathLibrary_LessEqual_FloatFloat_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.LessEqual_DoubleDouble
	 */
	struct UKismetMathLibrary_LessEqual_DoubleDouble_Params
	{
	public:
		double                                                     A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.LessEqual_DateTimeDateTime
	 */
	struct UKismetMathLibrary_LessEqual_DateTimeDateTime_Params
	{
	public:
		struct FDateTime                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		struct FDateTime                                           B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.LessEqual_ByteByte
	 */
	struct UKismetMathLibrary_LessEqual_ByteByte_Params
	{
	public:
		unsigned char                                              A;                                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              B;                                                       // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Less_TimespanTimespan
	 */
	struct UKismetMathLibrary_Less_TimespanTimespan_Params
	{
	public:
		struct FTimespan                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		struct FTimespan                                           B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Less_IntInt
	 */
	struct UKismetMathLibrary_Less_IntInt_Params
	{
	public:
		int32_t                                                    A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Less_FloatFloat
	 */
	struct UKismetMathLibrary_Less_FloatFloat_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Less_DoubleDouble
	 */
	struct UKismetMathLibrary_Less_DoubleDouble_Params
	{
	public:
		double                                                     A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Less_DateTimeDateTime
	 */
	struct UKismetMathLibrary_Less_DateTimeDateTime_Params
	{
	public:
		struct FDateTime                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		struct FDateTime                                           B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Less_ByteByte
	 */
	struct UKismetMathLibrary_Less_ByteByte_Params
	{
	public:
		unsigned char                                              A;                                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              B;                                                       // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.LerpAngle
	 */
	struct UKismetMathLibrary_LerpAngle_Params
	{
	public:
		float                                                      startDegrees;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      endDegrees;                                              // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Alpha;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Lerp
	 */
	struct UKismetMathLibrary_Lerp_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Alpha;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.IsRotatorInfiniteOrNaN
	 */
	struct UKismetMathLibrary_IsRotatorInfiniteOrNaN_Params
	{
	public:
		struct FRotator                                            A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.IsPointInBox
	 */
	struct UKismetMathLibrary_IsPointInBox_Params
	{
	public:
		struct FVector                                             Point;                                                   // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             BoxOrigin;                                               // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             BoxExtent;                                               // 0x0018(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0024(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.IsMorning
	 */
	struct UKismetMathLibrary_IsMorning_Params
	{
	public:
		struct FDateTime                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.IsLeapYear
	 */
	struct UKismetMathLibrary_IsLeapYear_Params
	{
	public:
		int32_t                                                    Year;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.IsInfiniteOrNaN
	 */
	struct UKismetMathLibrary_IsInfiniteOrNaN_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.IsAfternoon
	 */
	struct UKismetMathLibrary_IsAfternoon_Params
	{
	public:
		struct FDateTime                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.InverseTransformLocation
	 */
	struct UKismetMathLibrary_InverseTransformLocation_Params
	{
	public:
		struct FTransform                                          T;                                                       // 0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x0030(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x003C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.InverseTransformDirection
	 */
	struct UKismetMathLibrary_InverseTransformDirection_Params
	{
	public:
		struct FTransform                                          T;                                                       // 0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             Direction;                                               // 0x0030(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x003C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.InRange_FloatFloat
	 */
	struct UKismetMathLibrary_InRange_FloatFloat_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Min;                                                     // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Max;                                                     // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       InclusiveMin;                                            // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       InclusiveMax;                                            // 0x000D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000E(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.HSVToRGB_Vector
	 */
	struct UKismetMathLibrary_HSVToRGB_Vector_Params
	{
	public:
		struct FLinearColor                                        HSV;                                                     // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        RGB;                                                     // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.HSVToRGB
	 */
	struct UKismetMathLibrary_HSVToRGB_Params
	{
	public:
		float                                                      H;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      S;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      V;                                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      A;                                                       // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GreaterGreater_VectorRotator
	 */
	struct UKismetMathLibrary_GreaterGreater_VectorRotator_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GreaterEqual_TimespanTimespan
	 */
	struct UKismetMathLibrary_GreaterEqual_TimespanTimespan_Params
	{
	public:
		struct FTimespan                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		struct FTimespan                                           B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GreaterEqual_IntInt
	 */
	struct UKismetMathLibrary_GreaterEqual_IntInt_Params
	{
	public:
		int32_t                                                    A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GreaterEqual_FloatFloat
	 */
	struct UKismetMathLibrary_GreaterEqual_FloatFloat_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GreaterEqual_DoubleDouble
	 */
	struct UKismetMathLibrary_GreaterEqual_DoubleDouble_Params
	{
	public:
		double                                                     A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GreaterEqual_DateTimeDateTime
	 */
	struct UKismetMathLibrary_GreaterEqual_DateTimeDateTime_Params
	{
	public:
		struct FDateTime                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		struct FDateTime                                           B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GreaterEqual_ByteByte
	 */
	struct UKismetMathLibrary_GreaterEqual_ByteByte_Params
	{
	public:
		unsigned char                                              A;                                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              B;                                                       // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Greater_TimespanTimespan
	 */
	struct UKismetMathLibrary_Greater_TimespanTimespan_Params
	{
	public:
		struct FTimespan                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		struct FTimespan                                           B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Greater_IntInt
	 */
	struct UKismetMathLibrary_Greater_IntInt_Params
	{
	public:
		int32_t                                                    A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Greater_FloatFloat
	 */
	struct UKismetMathLibrary_Greater_FloatFloat_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Greater_DoubleDouble
	 */
	struct UKismetMathLibrary_Greater_DoubleDouble_Params
	{
	public:
		double                                                     A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Greater_DateTimeDateTime
	 */
	struct UKismetMathLibrary_Greater_DateTimeDateTime_Params
	{
	public:
		struct FDateTime                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		struct FDateTime                                           B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Greater_ByteByte
	 */
	struct UKismetMathLibrary_Greater_ByteByte_Params
	{
	public:
		unsigned char                                              A;                                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              B;                                                       // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetYear
	 */
	struct UKismetMathLibrary_GetYear_Params
	{
	public:
		struct FDateTime                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetVectorArrayAverage
	 */
	struct UKismetMathLibrary_GetVectorArrayAverage_Params
	{
	public:
		TArray<struct FVector>                                     Vectors;                                                 // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FVector                                             ReturnValue;                                             // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetUpVector
	 */
	struct UKismetMathLibrary_GetUpVector_Params
	{
	public:
		struct FRotator                                            InRot;                                                   // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetTotalSeconds
	 */
	struct UKismetMathLibrary_GetTotalSeconds_Params
	{
	public:
		struct FTimespan                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetTotalMinutes
	 */
	struct UKismetMathLibrary_GetTotalMinutes_Params
	{
	public:
		struct FTimespan                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetTotalMilliseconds
	 */
	struct UKismetMathLibrary_GetTotalMilliseconds_Params
	{
	public:
		struct FTimespan                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetTotalHours
	 */
	struct UKismetMathLibrary_GetTotalHours_Params
	{
	public:
		struct FTimespan                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetTotalDays
	 */
	struct UKismetMathLibrary_GetTotalDays_Params
	{
	public:
		struct FTimespan                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetTimeOfDay
	 */
	struct UKismetMathLibrary_GetTimeOfDay_Params
	{
	public:
		struct FDateTime                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		struct FTimespan                                           ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetSeconds
	 */
	struct UKismetMathLibrary_GetSeconds_Params
	{
	public:
		struct FTimespan                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetSecond
	 */
	struct UKismetMathLibrary_GetSecond_Params
	{
	public:
		struct FDateTime                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetRightVector
	 */
	struct UKismetMathLibrary_GetRightVector_Params
	{
	public:
		struct FRotator                                            InRot;                                                   // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetPI
	 */
	struct UKismetMathLibrary_GetPI_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetMonth
	 */
	struct UKismetMathLibrary_GetMonth_Params
	{
	public:
		struct FDateTime                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetMinutes
	 */
	struct UKismetMathLibrary_GetMinutes_Params
	{
	public:
		struct FTimespan                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetMinute
	 */
	struct UKismetMathLibrary_GetMinute_Params
	{
	public:
		struct FDateTime                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetMinElement
	 */
	struct UKismetMathLibrary_GetMinElement_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetMilliseconds
	 */
	struct UKismetMathLibrary_GetMilliseconds_Params
	{
	public:
		struct FTimespan                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetMillisecond
	 */
	struct UKismetMathLibrary_GetMillisecond_Params
	{
	public:
		struct FDateTime                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetMaxElement
	 */
	struct UKismetMathLibrary_GetMaxElement_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetHours
	 */
	struct UKismetMathLibrary_GetHours_Params
	{
	public:
		struct FTimespan                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetHour12
	 */
	struct UKismetMathLibrary_GetHour12_Params
	{
	public:
		struct FDateTime                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetHour
	 */
	struct UKismetMathLibrary_GetHour_Params
	{
	public:
		struct FDateTime                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetForwardVector
	 */
	struct UKismetMathLibrary_GetForwardVector_Params
	{
	public:
		struct FRotator                                            InRot;                                                   // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetDuration
	 */
	struct UKismetMathLibrary_GetDuration_Params
	{
	public:
		struct FTimespan                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		struct FTimespan                                           ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetDirectionVector
	 */
	struct UKismetMathLibrary_GetDirectionVector_Params
	{
	public:
		struct FVector                                             From;                                                    // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             To;                                                      // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetDays
	 */
	struct UKismetMathLibrary_GetDays_Params
	{
	public:
		struct FTimespan                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetDayOfYear
	 */
	struct UKismetMathLibrary_GetDayOfYear_Params
	{
	public:
		struct FDateTime                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetDay
	 */
	struct UKismetMathLibrary_GetDay_Params
	{
	public:
		struct FDateTime                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetDate
	 */
	struct UKismetMathLibrary_GetDate_Params
	{
	public:
		struct FDateTime                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		struct FDateTime                                           ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetMathLibrary.GetAxes
	 */
	struct UKismetMathLibrary_GetAxes_Params
	{
	public:
		struct FRotator                                            A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             X;                                                       // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Y;                                                       // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Z;                                                       // 0x0024(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.FromSeconds
	 */
	struct UKismetMathLibrary_FromSeconds_Params
	{
	public:
		float                                                      Seconds;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_95TL[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTimespan                                           ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetMathLibrary.FromMinutes
	 */
	struct UKismetMathLibrary_FromMinutes_Params
	{
	public:
		float                                                      Minutes;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_2ESJ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTimespan                                           ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetMathLibrary.FromMilliseconds
	 */
	struct UKismetMathLibrary_FromMilliseconds_Params
	{
	public:
		float                                                      Milliseconds;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_MGIM[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTimespan                                           ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetMathLibrary.FromHours
	 */
	struct UKismetMathLibrary_FromHours_Params
	{
	public:
		float                                                      Hours;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KN4C[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTimespan                                           ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetMathLibrary.FromDays
	 */
	struct UKismetMathLibrary_FromDays_Params
	{
	public:
		float                                                      Days;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_91L1[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTimespan                                           ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetMathLibrary.Fraction
	 */
	struct UKismetMathLibrary_Fraction_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.FMod
	 */
	struct UKismetMathLibrary_FMod_Params
	{
	public:
		float                                                      Dividend;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Divisor;                                                 // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Remainder;                                               // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.FMin
	 */
	struct UKismetMathLibrary_FMin_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.FMax
	 */
	struct UKismetMathLibrary_FMax_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.FlattenVectorNormal
	 */
	struct UKismetMathLibrary_FlattenVectorNormal_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.FlattenVector
	 */
	struct UKismetMathLibrary_FlattenVector_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.FInterpTo_Constant
	 */
	struct UKismetMathLibrary_FInterpTo_Constant_Params
	{
	public:
		float                                                      current;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Target;                                                  // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeed;                                             // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.FInterpTo
	 */
	struct UKismetMathLibrary_FInterpTo_Params
	{
	public:
		float                                                      current;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Target;                                                  // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeed;                                             // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.FInterpEaseInOut
	 */
	struct UKismetMathLibrary_FInterpEaseInOut_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Alpha;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Exponent;                                                // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.FindLookAtRotation
	 */
	struct UKismetMathLibrary_FindLookAtRotation_Params
	{
	public:
		struct FVector                                             Start;                                                   // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             Target;                                                  // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.FFloor
	 */
	struct UKismetMathLibrary_FFloor_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.FClamp
	 */
	struct UKismetMathLibrary_FClamp_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Min;                                                     // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Max;                                                     // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.FCeil
	 */
	struct UKismetMathLibrary_FCeil_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.FAngleInterpTo
	 */
	struct UKismetMathLibrary_FAngleInterpTo_Params
	{
	public:
		float                                                      CurrentDegrees;                                          // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TargetDegrees;                                           // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeed;                                             // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.FAngleInterpEaseOut
	 */
	struct UKismetMathLibrary_FAngleInterpEaseOut_Params
	{
	public:
		float                                                      startAngle;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      endAngle;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Alpha;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BlendExp;                                                // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.FAngleInterpEaseInOut
	 */
	struct UKismetMathLibrary_FAngleInterpEaseInOut_Params
	{
	public:
		float                                                      startAngle;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      endAngle;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Alpha;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BlendExp;                                                // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.FAngleInterpEaseIn
	 */
	struct UKismetMathLibrary_FAngleInterpEaseIn_Params
	{
	public:
		float                                                      startAngle;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      endAngle;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Alpha;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BlendExp;                                                // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Exp
	 */
	struct UKismetMathLibrary_Exp_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.EqualEqual_VectorVector
	 */
	struct UKismetMathLibrary_EqualEqual_VectorVector_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.EqualEqual_TimespanTimespan
	 */
	struct UKismetMathLibrary_EqualEqual_TimespanTimespan_Params
	{
	public:
		struct FTimespan                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		struct FTimespan                                           B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.EqualEqual_RotatorRotator
	 */
	struct UKismetMathLibrary_EqualEqual_RotatorRotator_Params
	{
	public:
		struct FRotator                                            A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.EqualEqual_ObjectObject
	 */
	struct UKismetMathLibrary_EqualEqual_ObjectObject_Params
	{
	public:
		class UObject*                                             A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObject*                                             B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.EqualEqual_NameName
	 */
	struct UKismetMathLibrary_EqualEqual_NameName_Params
	{
	public:
		class FName                                                A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.EqualEqual_IntInt
	 */
	struct UKismetMathLibrary_EqualEqual_IntInt_Params
	{
	public:
		int32_t                                                    A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.EqualEqual_FloatFloat
	 */
	struct UKismetMathLibrary_EqualEqual_FloatFloat_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.EqualEqual_DoubleDouble
	 */
	struct UKismetMathLibrary_EqualEqual_DoubleDouble_Params
	{
	public:
		double                                                     A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.EqualEqual_DateTimeDateTime
	 */
	struct UKismetMathLibrary_EqualEqual_DateTimeDateTime_Params
	{
	public:
		struct FDateTime                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		struct FDateTime                                           B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.EqualEqual_ClassClass
	 */
	struct UKismetMathLibrary_EqualEqual_ClassClass_Params
	{
	public:
		class UClass*                                              A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.EqualEqual_ByteByte
	 */
	struct UKismetMathLibrary_EqualEqual_ByteByte_Params
	{
	public:
		unsigned char                                              A;                                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              B;                                                       // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.EqualEqual_BoolBool
	 */
	struct UKismetMathLibrary_EqualEqual_BoolBool_Params
	{
	public:
		bool                                                       A;                                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       B;                                                       // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.EaseAngle
	 */
	struct UKismetMathLibrary_EaseAngle_Params
	{
	public:
		float                                                      startAngle;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      endAngle;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Alpha;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EEasingFunc                                                EasingFunc;                                              // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_OZV8[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      BlendExp;                                                // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Steps;                                                   // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Ease
	 */
	struct UKismetMathLibrary_Ease_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Alpha;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EEasingFunc                                                EasingFunc;                                              // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_DZCB[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      BlendExp;                                                // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Steps;                                                   // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Dot_VectorVector
	 */
	struct UKismetMathLibrary_Dot_VectorVector_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Divide_VectorVector
	 */
	struct UKismetMathLibrary_Divide_VectorVector_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Divide_VectorFloat
	 */
	struct UKismetMathLibrary_Divide_VectorFloat_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Divide_Vector2DFloat
	 */
	struct UKismetMathLibrary_Divide_Vector2DFloat_Params
	{
	public:
		struct FVector2D                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ReturnValue;                                             // 0x000C(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Divide_IntInt
	 */
	struct UKismetMathLibrary_Divide_IntInt_Params
	{
	public:
		int32_t                                                    A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Divide_FloatFloat
	 */
	struct UKismetMathLibrary_Divide_FloatFloat_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Divide_DoubleFloat
	 */
	struct UKismetMathLibrary_Divide_DoubleFloat_Params
	{
	public:
		double                                                     A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_UNDW[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		double                                                     ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Divide_DoubleDouble
	 */
	struct UKismetMathLibrary_Divide_DoubleDouble_Params
	{
	public:
		double                                                     A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Divide_ByteByte
	 */
	struct UKismetMathLibrary_Divide_ByteByte_Params
	{
	public:
		unsigned char                                              A;                                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              B;                                                       // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.DegTan
	 */
	struct UKismetMathLibrary_DegTan_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.DegSin
	 */
	struct UKismetMathLibrary_DegSin_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.DegreesToRadians
	 */
	struct UKismetMathLibrary_DegreesToRadians_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.DegCos
	 */
	struct UKismetMathLibrary_DegCos_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.DegAtan2
	 */
	struct UKismetMathLibrary_DegAtan2_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.DegAsin
	 */
	struct UKismetMathLibrary_DegAsin_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.DegAcos
	 */
	struct UKismetMathLibrary_DegAcos_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.DaysInYear
	 */
	struct UKismetMathLibrary_DaysInYear_Params
	{
	public:
		int32_t                                                    Year;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.DaysInMonth
	 */
	struct UKismetMathLibrary_DaysInMonth_Params
	{
	public:
		int32_t                                                    Year;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Month;                                                   // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.DateTimeMinValue
	 */
	struct UKismetMathLibrary_DateTimeMinValue_Params
	{
	public:
		struct FDateTime                                           ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetMathLibrary.DateTimeMaxValue
	 */
	struct UKismetMathLibrary_DateTimeMaxValue_Params
	{
	public:
		struct FDateTime                                           ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetMathLibrary.Cross_VectorVector
	 */
	struct UKismetMathLibrary_Cross_VectorVector_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Cos
	 */
	struct UKismetMathLibrary_Cos_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.ConvertTransformToRelative
	 */
	struct UKismetMathLibrary_ConvertTransformToRelative_Params
	{
	public:
		struct FTransform                                          WorldTransform;                                          // 0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FTransform                                          LocalTransform;                                          // 0x0030(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FTransform                                          ReturnValue;                                             // 0x0060(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Conv_VectorToVector2D
	 */
	struct UKismetMathLibrary_Conv_VectorToVector2D_Params
	{
	public:
		struct FVector                                             InVector;                                                // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ReturnValue;                                             // 0x000C(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Conv_VectorToTransform
	 */
	struct UKismetMathLibrary_Conv_VectorToTransform_Params
	{
	public:
		struct FVector                                             InLocation;                                              // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_DEXZ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          ReturnValue;                                             // 0x0010(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Conv_VectorToRotator
	 */
	struct UKismetMathLibrary_Conv_VectorToRotator_Params
	{
	public:
		struct FVector                                             inVec;                                                   // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Conv_VectorToLinearColor
	 */
	struct UKismetMathLibrary_Conv_VectorToLinearColor_Params
	{
	public:
		struct FVector                                             inVec;                                                   // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        ReturnValue;                                             // 0x000C(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Conv_Vector2DToVector
	 */
	struct UKismetMathLibrary_Conv_Vector2DToVector_Params
	{
	public:
		struct FVector2D                                           InVector2D;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Z;                                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Conv_RotatorToVector
	 */
	struct UKismetMathLibrary_Conv_RotatorToVector_Params
	{
	public:
		struct FRotator                                            InRot;                                                   // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Conv_LinearColorToVector
	 */
	struct UKismetMathLibrary_Conv_LinearColorToVector_Params
	{
	public:
		struct FLinearColor                                        InLinearColor;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Conv_LinearColorToColor
	 */
	struct UKismetMathLibrary_Conv_LinearColorToColor_Params
	{
	public:
		struct FLinearColor                                        InLinearColor;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FColor                                              ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Conv_IntToFloat
	 */
	struct UKismetMathLibrary_Conv_IntToFloat_Params
	{
	public:
		int32_t                                                    InInt;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Conv_IntToByte
	 */
	struct UKismetMathLibrary_Conv_IntToByte_Params
	{
	public:
		int32_t                                                    InInt;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Conv_IntToBool
	 */
	struct UKismetMathLibrary_Conv_IntToBool_Params
	{
	public:
		int32_t                                                    InInt;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Conv_FloatToVector
	 */
	struct UKismetMathLibrary_Conv_FloatToVector_Params
	{
	public:
		float                                                      InFloat;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0004(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Conv_FloatToLinearColor
	 */
	struct UKismetMathLibrary_Conv_FloatToLinearColor_Params
	{
	public:
		float                                                      InFloat;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        ReturnValue;                                             // 0x0004(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Conv_FloatToDouble
	 */
	struct UKismetMathLibrary_Conv_FloatToDouble_Params
	{
	public:
		float                                                      InFloat;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_G4VL[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		double                                                     ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Conv_DoubleToFloat
	 */
	struct UKismetMathLibrary_Conv_DoubleToFloat_Params
	{
	public:
		double                                                     InDouble;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Conv_ColorToLinearColor
	 */
	struct UKismetMathLibrary_Conv_ColorToLinearColor_Params
	{
	public:
		struct FColor                                              InColor;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        ReturnValue;                                             // 0x0004(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Conv_ByteToInt
	 */
	struct UKismetMathLibrary_Conv_ByteToInt_Params
	{
	public:
		unsigned char                                              InByte;                                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_4ZCO[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Conv_ByteToFloat
	 */
	struct UKismetMathLibrary_Conv_ByteToFloat_Params
	{
	public:
		unsigned char                                              InByte;                                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NVEF[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Conv_BoolToInt
	 */
	struct UKismetMathLibrary_Conv_BoolToInt_Params
	{
	public:
		bool                                                       InBool;                                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7RL2[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Conv_BoolToFloat
	 */
	struct UKismetMathLibrary_Conv_BoolToFloat_Params
	{
	public:
		bool                                                       InBool;                                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_TCM9[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Conv_BoolToByte
	 */
	struct UKismetMathLibrary_Conv_BoolToByte_Params
	{
	public:
		bool                                                       InBool;                                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.ComposeTransforms
	 */
	struct UKismetMathLibrary_ComposeTransforms_Params
	{
	public:
		struct FTransform                                          A;                                                       // 0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FTransform                                          B;                                                       // 0x0030(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FTransform                                          ReturnValue;                                             // 0x0060(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.ComposeRotators
	 */
	struct UKismetMathLibrary_ComposeRotators_Params
	{
	public:
		struct FRotator                                            A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.ClassIsChildOf
	 */
	struct UKismetMathLibrary_ClassIsChildOf_Params
	{
	public:
		class UClass*                                              TestClass;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ParentClass;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.ClampVectorSize
	 */
	struct UKismetMathLibrary_ClampVectorSize_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Min;                                                     // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Max;                                                     // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0014(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.ClampAngle
	 */
	struct UKismetMathLibrary_ClampAngle_Params
	{
	public:
		float                                                      AngleDegrees;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MinAngleDegrees;                                         // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxAngleDegrees;                                         // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Clamp
	 */
	struct UKismetMathLibrary_Clamp_Params
	{
	public:
		int32_t                                                    Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Min;                                                     // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Max;                                                     // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.CInterpTo
	 */
	struct UKismetMathLibrary_CInterpTo_Params
	{
	public:
		struct FLinearColor                                        current;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        Target;                                                  // 0x0010(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeed;                                             // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        ReturnValue;                                             // 0x0028(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.BreakVector2D
	 */
	struct UKismetMathLibrary_BreakVector2D_Params
	{
	public:
		struct FVector2D                                           inVec;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      X;                                                       // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Y;                                                       // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.BreakVector
	 */
	struct UKismetMathLibrary_BreakVector_Params
	{
	public:
		struct FVector                                             inVec;                                                   // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      X;                                                       // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Y;                                                       // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Z;                                                       // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.BreakTransform
	 */
	struct UKismetMathLibrary_BreakTransform_Params
	{
	public:
		struct FTransform                                          InTransform;                                             // 0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x0030(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x003C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Scale;                                                   // 0x0048(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.BreakRotIntoAxes
	 */
	struct UKismetMathLibrary_BreakRotIntoAxes_Params
	{
	public:
		struct FRotator                                            InRot;                                                   // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             X;                                                       // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Y;                                                       // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Z;                                                       // 0x0024(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.BreakRot
	 */
	struct UKismetMathLibrary_BreakRot_Params
	{
	public:
		struct FRotator                                            InRot;                                                   // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Pitch;                                                   // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Yaw;                                                     // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Roll;                                                    // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.BreakColor
	 */
	struct UKismetMathLibrary_BreakColor_Params
	{
	public:
		struct FLinearColor                                        InColor;                                                 // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      R;                                                       // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      G;                                                       // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      A;                                                       // 0x001C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.BoundToCube
	 */
	struct UKismetMathLibrary_BoundToCube_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.BooleanXOR
	 */
	struct UKismetMathLibrary_BooleanXOR_Params
	{
	public:
		bool                                                       A;                                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       B;                                                       // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.BooleanOR
	 */
	struct UKismetMathLibrary_BooleanOR_Params
	{
	public:
		bool                                                       A;                                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       B;                                                       // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.BooleanAND
	 */
	struct UKismetMathLibrary_BooleanAND_Params
	{
	public:
		bool                                                       A;                                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       B;                                                       // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Atan2
	 */
	struct UKismetMathLibrary_Atan2_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Asin
	 */
	struct UKismetMathLibrary_Asin_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.And_IntInt
	 */
	struct UKismetMathLibrary_And_IntInt_Params
	{
	public:
		int32_t                                                    A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Add_VectorVector
	 */
	struct UKismetMathLibrary_Add_VectorVector_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Add_VectorFloat
	 */
	struct UKismetMathLibrary_Add_VectorFloat_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Add_Vector2DVector2D
	 */
	struct UKismetMathLibrary_Add_Vector2DVector2D_Params
	{
	public:
		struct FVector2D                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Add_Vector2DFloat
	 */
	struct UKismetMathLibrary_Add_Vector2DFloat_Params
	{
	public:
		struct FVector2D                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ReturnValue;                                             // 0x000C(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Add_TimespanTimespan
	 */
	struct UKismetMathLibrary_Add_TimespanTimespan_Params
	{
	public:
		struct FTimespan                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		struct FTimespan                                           B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor)
		struct FTimespan                                           ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetMathLibrary.Add_IntInt
	 */
	struct UKismetMathLibrary_Add_IntInt_Params
	{
	public:
		int32_t                                                    A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Add_FloatFloat
	 */
	struct UKismetMathLibrary_Add_FloatFloat_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Add_DoubleFloat
	 */
	struct UKismetMathLibrary_Add_DoubleFloat_Params
	{
	public:
		double                                                     A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KIA3[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		double                                                     ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Add_DoubleDouble
	 */
	struct UKismetMathLibrary_Add_DoubleDouble_Params
	{
	public:
		double                                                     A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Add_DateTimeTimespan
	 */
	struct UKismetMathLibrary_Add_DateTimeTimespan_Params
	{
	public:
		struct FDateTime                                           A;                                                       // 0x0000(0x0008)  (Parm, ZeroConstructor)
		struct FTimespan                                           B;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor)
		struct FDateTime                                           ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetMathLibrary.Add_ByteByte
	 */
	struct UKismetMathLibrary_Add_ByteByte_Params
	{
	public:
		unsigned char                                              A;                                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              B;                                                       // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Acos
	 */
	struct UKismetMathLibrary_Acos_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Abs_Int
	 */
	struct UKismetMathLibrary_Abs_Int_Params
	{
	public:
		int32_t                                                    A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetMathLibrary.Abs
	 */
	struct UKismetMathLibrary_Abs_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetNodeHelperLibrary.MarkBit
	 */
	struct UKismetNodeHelperLibrary_MarkBit_Params
	{
	public:
		int32_t                                                    Data;                                                    // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    index;                                                   // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetNodeHelperLibrary.HasUnmarkedBit
	 */
	struct UKismetNodeHelperLibrary_HasUnmarkedBit_Params
	{
	public:
		int32_t                                                    Data;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumBits;                                                 // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetNodeHelperLibrary.HasMarkedBit
	 */
	struct UKismetNodeHelperLibrary_HasMarkedBit_Params
	{
	public:
		int32_t                                                    Data;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumBits;                                                 // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetNodeHelperLibrary.GetValidIndex
	 */
	struct UKismetNodeHelperLibrary_GetValidIndex_Params
	{
	public:
		class UEnum*                                               Enum;                                                    // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              EnumeratorIndex;                                         // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ReturnValue;                                             // 0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetNodeHelperLibrary.GetUnmarkedBit
	 */
	struct UKismetNodeHelperLibrary_GetUnmarkedBit_Params
	{
	public:
		int32_t                                                    Data;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    StartIdx;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumBits;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRandom;                                                 // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ASGT[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetNodeHelperLibrary.GetRandomUnmarkedBit
	 */
	struct UKismetNodeHelperLibrary_GetRandomUnmarkedBit_Params
	{
	public:
		int32_t                                                    Data;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    StartIdx;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumBits;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetNodeHelperLibrary.GetFirstUnmarkedBit
	 */
	struct UKismetNodeHelperLibrary_GetFirstUnmarkedBit_Params
	{
	public:
		int32_t                                                    Data;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    StartIdx;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumBits;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetNodeHelperLibrary.GetEnumeratorUserFriendlyName
	 */
	struct UKismetNodeHelperLibrary_GetEnumeratorUserFriendlyName_Params
	{
	public:
		class UEnum*                                               Enum;                                                    // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              EnumeratorIndex;                                         // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_LTIY[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetNodeHelperLibrary.GetEnumeratorName
	 */
	struct UKismetNodeHelperLibrary_GetEnumeratorName_Params
	{
	public:
		class UEnum*                                               Enum;                                                    // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              EnumeratorIndex;                                         // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_YOOI[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FName                                                ReturnValue;                                             // 0x000C(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetNodeHelperLibrary.ClearBit
	 */
	struct UKismetNodeHelperLibrary_ClearBit_Params
	{
	public:
		int32_t                                                    Data;                                                    // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    index;                                                   // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetNodeHelperLibrary.ClearAllBits
	 */
	struct UKismetNodeHelperLibrary_ClearAllBits_Params
	{
	public:
		int32_t                                                    Data;                                                    // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetNodeHelperLibrary.BitIsMarked
	 */
	struct UKismetNodeHelperLibrary_BitIsMarked_Params
	{
	public:
		int32_t                                                    Data;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    index;                                                   // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetRenderingLibrary.RenderTargetCreateStaticTexture2DEditorOnly
	 */
	struct UKismetRenderingLibrary_RenderTargetCreateStaticTexture2DEditorOnly_Params
	{
	public:
		class UTextureRenderTarget2D*                              RenderTarget;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              Name;                                                    // 0x0008(0x0010)  (Parm, ZeroConstructor)
		ETextureCompressionSettings                                CompressionSettings;                                     // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ETextureMipGenSettings                                     MipSettings;                                             // 0x0019(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_S47M[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UTexture2D*                                          ReturnValue;                                             // 0x0020(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetRenderingLibrary.ReleaseRenderTarget2D
	 */
	struct UKismetRenderingLibrary_ReleaseRenderTarget2D_Params
	{
	public:
		class UTextureRenderTarget2D*                              TextureRenderTarget;                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetRenderingLibrary.ReadRenderTargetUV
	 */
	struct UKismetRenderingLibrary_ReadRenderTargetUV_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTextureRenderTarget2D*                              TextureRenderTarget;                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      U;                                                       // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      V;                                                       // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FColor                                              ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetRenderingLibrary.ReadRenderTargetRawUV
	 */
	struct UKismetRenderingLibrary_ReadRenderTargetRawUV_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTextureRenderTarget2D*                              TextureRenderTarget;                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      U;                                                       // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      V;                                                       // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetRenderingLibrary.ReadRenderTargetRawPixel
	 */
	struct UKismetRenderingLibrary_ReadRenderTargetRawPixel_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTextureRenderTarget2D*                              TextureRenderTarget;                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    X;                                                       // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Y;                                                       // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetRenderingLibrary.ReadRenderTargetPixel
	 */
	struct UKismetRenderingLibrary_ReadRenderTargetPixel_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTextureRenderTarget2D*                              TextureRenderTarget;                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    X;                                                       // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Y;                                                       // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FColor                                              ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetRenderingLibrary.ImportFileAsTexture2D
	 */
	struct UKismetRenderingLibrary_ImportFileAsTexture2D_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              filename;                                                // 0x0008(0x0010)  (Parm, ZeroConstructor)
		class UTexture2D*                                          ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetRenderingLibrary.ExportTexture2D
	 */
	struct UKismetRenderingLibrary_ExportTexture2D_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTexture2D*                                          Texture;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              FilePath;                                                // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class FString                                              filename;                                                // 0x0020(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.KismetRenderingLibrary.ExportRenderTarget
	 */
	struct UKismetRenderingLibrary_ExportRenderTarget_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTextureRenderTarget2D*                              TextureRenderTarget;                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              FilePath;                                                // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class FString                                              filename;                                                // 0x0020(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.KismetRenderingLibrary.EndDrawCanvasToRenderTarget
	 */
	struct UKismetRenderingLibrary_EndDrawCanvasToRenderTarget_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FDrawToRenderTargetContext                          Context;                                                 // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function Engine.KismetRenderingLibrary.DrawMaterialToRenderTarget
	 */
	struct UKismetRenderingLibrary_DrawMaterialToRenderTarget_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTextureRenderTarget2D*                              TextureRenderTarget;                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialInterface*                                  Material;                                                // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetRenderingLibrary.CreateRenderTarget2D
	 */
	struct UKismetRenderingLibrary_CreateRenderTarget2D_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Width;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Height;                                                  // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ETextureRenderTargetFormat                                 Format;                                                  // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_GK0M[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UTextureRenderTarget2D*                              ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetRenderingLibrary.ConvertRenderTargetToTexture2DEditorOnly
	 */
	struct UKismetRenderingLibrary_ConvertRenderTargetToTexture2DEditorOnly_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTextureRenderTarget2D*                              RenderTarget;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTexture2D*                                          Texture;                                                 // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetRenderingLibrary.ClearRenderTarget2D
	 */
	struct UKismetRenderingLibrary_ClearRenderTarget2D_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTextureRenderTarget2D*                              TextureRenderTarget;                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        ClearColor;                                              // 0x0010(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetRenderingLibrary.BeginDrawCanvasToRenderTarget
	 */
	struct UKismetRenderingLibrary_BeginDrawCanvasToRenderTarget_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTextureRenderTarget2D*                              TextureRenderTarget;                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UCanvas*                                             Canvas;                                                  // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           Size;                                                    // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FDrawToRenderTargetContext                          Context;                                                 // 0x0020(0x0010)  (Parm, OutParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.TrimTrailing
	 */
	struct UKismetStringLibrary_TrimTrailing_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.Trim
	 */
	struct UKismetStringLibrary_Trim_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.ToUpper
	 */
	struct UKismetStringLibrary_ToUpper_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.ToLower
	 */
	struct UKismetStringLibrary_ToLower_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.StartsWith
	 */
	struct UKismetStringLibrary_StartsWith_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              InPrefix;                                                // 0x0010(0x0010)  (Parm, ZeroConstructor)
		ESearchCase                                                SearchCase;                                              // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0021(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetStringLibrary.Split
	 */
	struct UKismetStringLibrary_Split_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              InStr;                                                   // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class FString                                              LeftS;                                                   // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor)
		class FString                                              RightS;                                                  // 0x0030(0x0010)  (Parm, OutParm, ZeroConstructor)
		ESearchCase                                                SearchCase;                                              // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ESearchDir                                                 SearchDir;                                               // 0x0041(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0042(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetStringLibrary.RightPad
	 */
	struct UKismetStringLibrary_RightPad_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    ChCount;                                                 // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_01DR[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.RightChop
	 */
	struct UKismetStringLibrary_RightChop_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    Count;                                                   // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_V90B[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.Right
	 */
	struct UKismetStringLibrary_Right_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    Count;                                                   // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_F5BS[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.Reverse
	 */
	struct UKismetStringLibrary_Reverse_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.ReplaceInline
	 */
	struct UKismetStringLibrary_ReplaceInline_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
		class FString                                              SearchText;                                              // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReplacementText;                                         // 0x0020(0x0010)  (Parm, ZeroConstructor)
		ESearchCase                                                SearchCase;                                              // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_RE3H[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x0034(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetStringLibrary.Replace
	 */
	struct UKismetStringLibrary_Replace_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              From;                                                    // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class FString                                              To;                                                      // 0x0020(0x0010)  (Parm, ZeroConstructor)
		ESearchCase                                                SearchCase;                                              // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7DD0[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0038(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.ParseIntoArray
	 */
	struct UKismetStringLibrary_ParseIntoArray_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Delimiter;                                               // 0x0010(0x0010)  (Parm, ZeroConstructor)
		bool                                                       CullEmptyStrings;                                        // 0x0020(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ISNL[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class FString>                                      ReturnValue;                                             // 0x0028(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.NotEqual_StrStr
	 */
	struct UKismetStringLibrary_NotEqual_StrStr_Params
	{
	public:
		class FString                                              A;                                                       // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              B;                                                       // 0x0010(0x0010)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetStringLibrary.NotEqual_StriStri
	 */
	struct UKismetStringLibrary_NotEqual_StriStri_Params
	{
	public:
		class FString                                              A;                                                       // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              B;                                                       // 0x0010(0x0010)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetStringLibrary.Mid
	 */
	struct UKismetStringLibrary_Mid_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    Start;                                                   // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Count;                                                   // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.MatchesWildcard
	 */
	struct UKismetStringLibrary_MatchesWildcard_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Wildcard;                                                // 0x0010(0x0010)  (Parm, ZeroConstructor)
		ESearchCase                                                SearchCase;                                              // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0021(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetStringLibrary.Len
	 */
	struct UKismetStringLibrary_Len_Params
	{
	public:
		class FString                                              S;                                                       // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetStringLibrary.LeftPad
	 */
	struct UKismetStringLibrary_LeftPad_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    ChCount;                                                 // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_8W0W[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.LeftChop
	 */
	struct UKismetStringLibrary_LeftChop_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    Count;                                                   // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CNG4[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.Left
	 */
	struct UKismetStringLibrary_Left_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    Count;                                                   // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_F7RR[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.JoinStringArray
	 */
	struct UKismetStringLibrary_JoinStringArray_Params
	{
	public:
		TArray<class FString>                                      SourceArray;                                             // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class FString                                              Separator;                                               // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.IsNumeric
	 */
	struct UKismetStringLibrary_IsNumeric_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetStringLibrary.GetSubstring
	 */
	struct UKismetStringLibrary_GetSubstring_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    StartIndex;                                              // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Length;                                                  // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.GetCharacterAsNumber
	 */
	struct UKismetStringLibrary_GetCharacterAsNumber_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    index;                                                   // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetStringLibrary.GetCharacterArrayFromString
	 */
	struct UKismetStringLibrary_GetCharacterArrayFromString_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<class FString>                                      ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.FindSubstring
	 */
	struct UKismetStringLibrary_FindSubstring_Params
	{
	public:
		class FString                                              SearchIn;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Substring;                                               // 0x0010(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bUseCase;                                                // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSearchFromEnd;                                          // 0x0021(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_V4VD[0x2];                                   // 0x0022(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    StartPosition;                                           // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0028(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetStringLibrary.EqualEqual_StrStr
	 */
	struct UKismetStringLibrary_EqualEqual_StrStr_Params
	{
	public:
		class FString                                              A;                                                       // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              B;                                                       // 0x0010(0x0010)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetStringLibrary.EqualEqual_StriStri
	 */
	struct UKismetStringLibrary_EqualEqual_StriStri_Params
	{
	public:
		class FString                                              A;                                                       // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              B;                                                       // 0x0010(0x0010)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetStringLibrary.EndsWith
	 */
	struct UKismetStringLibrary_EndsWith_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              InSuffix;                                                // 0x0010(0x0010)  (Parm, ZeroConstructor)
		ESearchCase                                                SearchCase;                                              // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0021(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetStringLibrary.CullArray
	 */
	struct UKismetStringLibrary_CullArray_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<class FString>                                      InArray;                                                 // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		int32_t                                                    ReturnValue;                                             // 0x0020(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetStringLibrary.Conv_VectorToString
	 */
	struct UKismetStringLibrary_Conv_VectorToString_Params
	{
	public:
		struct FVector                                             inVec;                                                   // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_GU3M[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.Conv_Vector2dToString
	 */
	struct UKismetStringLibrary_Conv_Vector2dToString_Params
	{
	public:
		struct FVector2D                                           inVec;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.Conv_TransformToString
	 */
	struct UKismetStringLibrary_Conv_TransformToString_Params
	{
	public:
		struct FTransform                                          InTrans;                                                 // 0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0030(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.Conv_StringToName
	 */
	struct UKismetStringLibrary_Conv_StringToName_Params
	{
	public:
		class FString                                              InString;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FName                                                ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetStringLibrary.Conv_StringToInt
	 */
	struct UKismetStringLibrary_Conv_StringToInt_Params
	{
	public:
		class FString                                              InString;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetStringLibrary.Conv_StringToFloat
	 */
	struct UKismetStringLibrary_Conv_StringToFloat_Params
	{
	public:
		class FString                                              InString;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetStringLibrary.Conv_StringToDouble
	 */
	struct UKismetStringLibrary_Conv_StringToDouble_Params
	{
	public:
		class FString                                              InString;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		double                                                     ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetStringLibrary.Conv_RotatorToString
	 */
	struct UKismetStringLibrary_Conv_RotatorToString_Params
	{
	public:
		struct FRotator                                            InRot;                                                   // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_RU79[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.Conv_ObjectToString
	 */
	struct UKismetStringLibrary_Conv_ObjectToString_Params
	{
	public:
		class UObject*                                             InObj;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.Conv_NameToString
	 */
	struct UKismetStringLibrary_Conv_NameToString_Params
	{
	public:
		class FName                                                InName;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.Conv_IntToString
	 */
	struct UKismetStringLibrary_Conv_IntToString_Params
	{
	public:
		int32_t                                                    InInt;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NZPH[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.Conv_FloatToString
	 */
	struct UKismetStringLibrary_Conv_FloatToString_Params
	{
	public:
		float                                                      InFloat;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_D964[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.Conv_DoubleToString
	 */
	struct UKismetStringLibrary_Conv_DoubleToString_Params
	{
	public:
		double                                                     InDouble;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.Conv_ColorToString
	 */
	struct UKismetStringLibrary_Conv_ColorToString_Params
	{
	public:
		struct FLinearColor                                        InColor;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.Conv_ByteToString
	 */
	struct UKismetStringLibrary_Conv_ByteToString_Params
	{
	public:
		unsigned char                                              InByte;                                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_HRZ1[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.Conv_BoolToString
	 */
	struct UKismetStringLibrary_Conv_BoolToString_Params
	{
	public:
		bool                                                       InBool;                                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QNTC[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.Concat_StrStr
	 */
	struct UKismetStringLibrary_Concat_StrStr_Params
	{
	public:
		class FString                                              A;                                                       // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              B;                                                       // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.BuildString_Vector2d
	 */
	struct UKismetStringLibrary_BuildString_Vector2d_Params
	{
	public:
		class FString                                              AppendTo;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Prefix;                                                  // 0x0010(0x0010)  (Parm, ZeroConstructor)
		struct FVector2D                                           InVector2D;                                              // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              Suffix;                                                  // 0x0028(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0038(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.BuildString_Vector
	 */
	struct UKismetStringLibrary_BuildString_Vector_Params
	{
	public:
		class FString                                              AppendTo;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Prefix;                                                  // 0x0010(0x0010)  (Parm, ZeroConstructor)
		struct FVector                                             InVector;                                                // 0x0020(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_K1MZ[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Suffix;                                                  // 0x0030(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0040(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.BuildString_Rotator
	 */
	struct UKismetStringLibrary_BuildString_Rotator_Params
	{
	public:
		class FString                                              AppendTo;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Prefix;                                                  // 0x0010(0x0010)  (Parm, ZeroConstructor)
		struct FRotator                                            InRot;                                                   // 0x0020(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_DWSN[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Suffix;                                                  // 0x0030(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0040(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.BuildString_Object
	 */
	struct UKismetStringLibrary_BuildString_Object_Params
	{
	public:
		class FString                                              AppendTo;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Prefix;                                                  // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class UObject*                                             InObj;                                                   // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              Suffix;                                                  // 0x0028(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0038(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.BuildString_Name
	 */
	struct UKismetStringLibrary_BuildString_Name_Params
	{
	public:
		class FString                                              AppendTo;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Prefix;                                                  // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class FName                                                InName;                                                  // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              Suffix;                                                  // 0x0028(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0038(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.BuildString_Int
	 */
	struct UKismetStringLibrary_BuildString_Int_Params
	{
	public:
		class FString                                              AppendTo;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Prefix;                                                  // 0x0010(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    InInt;                                                   // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_E6GE[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Suffix;                                                  // 0x0028(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0038(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.BuildString_Float
	 */
	struct UKismetStringLibrary_BuildString_Float_Params
	{
	public:
		class FString                                              AppendTo;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Prefix;                                                  // 0x0010(0x0010)  (Parm, ZeroConstructor)
		float                                                      InFloat;                                                 // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_HCJN[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Suffix;                                                  // 0x0028(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0038(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.BuildString_Color
	 */
	struct UKismetStringLibrary_BuildString_Color_Params
	{
	public:
		class FString                                              AppendTo;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Prefix;                                                  // 0x0010(0x0010)  (Parm, ZeroConstructor)
		struct FLinearColor                                        InColor;                                                 // 0x0020(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              Suffix;                                                  // 0x0030(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0040(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetStringLibrary.BuildString_Bool
	 */
	struct UKismetStringLibrary_BuildString_Bool_Params
	{
	public:
		class FString                                              AppendTo;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Prefix;                                                  // 0x0010(0x0010)  (Parm, ZeroConstructor)
		bool                                                       InBool;                                                  // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_MH4B[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Suffix;                                                  // 0x0028(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0038(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SwitchNetworkMode
	 */
	struct UKismetSystemLibrary_SwitchNetworkMode_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ENetModeBP                                                 OutNetworkMode;                                          // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.StackTrace
	 */
	struct UKismetSystemLibrary_StackTrace_Params
	{	};

	/**
	 * Function Engine.KismetSystemLibrary.SphereTraceSingleForObjects
	 */
	struct UKismetSystemLibrary_SphereTraceSingleForObjects_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_G9WQ[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<EObjectTypeQuery>                                   ObjectTypes;                                             // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bTraceComplex;                                           // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_SJLZ[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0040(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ABUX[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          OutHit;                                                  // 0x0058(0x0088)  (Parm, OutParm)
		bool                                                       bIgnoreSelf;                                             // 0x00E0(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x00E1(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SphereTraceSingleByObject_DEPRECATED
	 */
	struct UKismetSystemLibrary_SphereTraceSingleByObject_DEPRECATED_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5TFQ[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<ECollisionChannel>                                  ObjectsToTrace;                                          // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bTraceComplex;                                           // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_K1N5[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0040(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_530A[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          OutHit;                                                  // 0x0058(0x0088)  (Parm, OutParm)
		bool                                                       bIgnoreSelf;                                             // 0x00E0(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x00E1(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SphereTraceSingle_NEW
	 */
	struct UKismetSystemLibrary_SphereTraceSingle_NEW_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ETraceTypeQuery                                            TraceChannel;                                            // 0x0024(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x0025(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_MEIK[0x2];                                   // 0x0026(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_0YI2[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          OutHit;                                                  // 0x0040(0x0088)  (Parm, OutParm)
		bool                                                       bIgnoreSelf;                                             // 0x00C8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x00C9(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SphereTraceSingle_DEPRECATED
	 */
	struct UKismetSystemLibrary_SphereTraceSingle_DEPRECATED_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          TraceChannel;                                            // 0x0024(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x0025(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_R811[0x2];                                   // 0x0026(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_4L34[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          OutHit;                                                  // 0x0040(0x0088)  (Parm, OutParm)
		bool                                                       bIgnoreSelf;                                             // 0x00C8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x00C9(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SphereTraceMultiForObjects
	 */
	struct UKismetSystemLibrary_SphereTraceMultiForObjects_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_87GG[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<EObjectTypeQuery>                                   ObjectTypes;                                             // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bTraceComplex;                                           // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QVIH[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0040(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_DQKX[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FHitResult>                                  OutHits;                                                 // 0x0058(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bIgnoreSelf;                                             // 0x0068(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0069(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SphereTraceMultiByObject_DEPRECATED
	 */
	struct UKismetSystemLibrary_SphereTraceMultiByObject_DEPRECATED_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XH3K[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<ECollisionChannel>                                  ObjectsToTrace;                                          // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bTraceComplex;                                           // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_IIV7[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0040(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_08PR[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FHitResult>                                  OutHits;                                                 // 0x0058(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bIgnoreSelf;                                             // 0x0068(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0069(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SphereTraceMulti_NEW
	 */
	struct UKismetSystemLibrary_SphereTraceMulti_NEW_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ETraceTypeQuery                                            TraceChannel;                                            // 0x0024(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x0025(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_EJ4W[0x2];                                   // 0x0026(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1UN4[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FHitResult>                                  OutHits;                                                 // 0x0040(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bIgnoreSelf;                                             // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0051(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SphereTraceMulti_DEPRECATED
	 */
	struct UKismetSystemLibrary_SphereTraceMulti_DEPRECATED_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          TraceChannel;                                            // 0x0024(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x0025(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_2FT8[0x2];                                   // 0x0026(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_Y4RV[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FHitResult>                                  OutHits;                                                 // 0x0040(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bIgnoreSelf;                                             // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0051(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SphereOverlapComponents_NEW
	 */
	struct UKismetSystemLibrary_SphereOverlapComponents_NEW_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             SpherePos;                                               // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SphereRadius;                                            // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<EObjectTypeQuery>                                   ObjectTypes;                                             // 0x0018(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UClass*                                              ComponentClassFilter;                                    // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0030(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class UPrimitiveComponent*>                         OutComponents;                                           // 0x0040(0x0010)  (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
		bool                                                       ReturnValue;                                             // 0x0050(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SphereOverlapComponents_DEPRECATED
	 */
	struct UKismetSystemLibrary_SphereOverlapComponents_DEPRECATED_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             SpherePos;                                               // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SphereRadius;                                            // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EOverlapFilterOption                                       Filter;                                                  // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_GWVB[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              ComponentClassFilter;                                    // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class UPrimitiveComponent*>                         OutComponents;                                           // 0x0038(0x0010)  (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
		bool                                                       ReturnValue;                                             // 0x0048(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SphereOverlapActorsSimple
	 */
	struct UKismetSystemLibrary_SphereOverlapActorsSimple_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             SpherePos;                                               // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SphereRadius;                                            // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EObjectTypeQuery                                           ObjectType;                                              // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_STA3[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              ActorClassFilter;                                        // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class AActor*>                                      OutActors;                                               // 0x0038(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0048(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SphereOverlapActors_NEW
	 */
	struct UKismetSystemLibrary_SphereOverlapActors_NEW_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             SpherePos;                                               // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SphereRadius;                                            // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<EObjectTypeQuery>                                   ObjectTypes;                                             // 0x0018(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UClass*                                              ActorClassFilter;                                        // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0030(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class AActor*>                                      OutActors;                                               // 0x0040(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0050(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SphereOverlapActors_DEPRECATED
	 */
	struct UKismetSystemLibrary_SphereOverlapActors_DEPRECATED_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             SpherePos;                                               // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SphereRadius;                                            // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EOverlapFilterOption                                       Filter;                                                  // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_PKH3[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              ActorClassFilter;                                        // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class AActor*>                                      OutActors;                                               // 0x0038(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0048(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.ShowPlatformSpecificLeaderboardScreen
	 */
	struct UKismetSystemLibrary_ShowPlatformSpecificLeaderboardScreen_Params
	{
	public:
		class FString                                              CategoryName;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.ShowPlatformSpecificAchievementsScreen
	 */
	struct UKismetSystemLibrary_ShowPlatformSpecificAchievementsScreen_Params
	{
	public:
		class APlayerController*                                   SpecificPlayer;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.ShowAdBanner
	 */
	struct UKismetSystemLibrary_ShowAdBanner_Params
	{
	public:
		bool                                                       bShowOnBottomOfScreen;                                   // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SetVectorPropertyByName
	 */
	struct UKismetSystemLibrary_SetVectorPropertyByName_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                PropertyName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Value;                                                   // 0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SetTransformPropertyByName
	 */
	struct UKismetSystemLibrary_SetTransformPropertyByName_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                PropertyName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FTransform                                          Value;                                                   // 0x0010(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SetTextPropertyByName
	 */
	struct UKismetSystemLibrary_SetTextPropertyByName_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                PropertyName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FText                                                Value;                                                   // 0x0010(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SetSupressViewportTransitionMessage
	 */
	struct UKismetSystemLibrary_SetSupressViewportTransitionMessage_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bState;                                                  // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SetStructurePropertyByName
	 */
	struct UKismetSystemLibrary_SetStructurePropertyByName_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                PropertyName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FGenericStruct                                      Value;                                                   // 0x0010(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SetStringPropertyByName
	 */
	struct UKismetSystemLibrary_SetStringPropertyByName_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                PropertyName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              Value;                                                   // 0x0010(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SetRotatorPropertyByName
	 */
	struct UKismetSystemLibrary_SetRotatorPropertyByName_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                PropertyName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Value;                                                   // 0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SetObjectPropertyByName
	 */
	struct UKismetSystemLibrary_SetObjectPropertyByName_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                PropertyName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObject*                                             Value;                                                   // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SetNamePropertyByName
	 */
	struct UKismetSystemLibrary_SetNamePropertyByName_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                PropertyName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Value;                                                   // 0x0010(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SetLinearColorPropertyByName
	 */
	struct UKismetSystemLibrary_SetLinearColorPropertyByName_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                PropertyName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        Value;                                                   // 0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SetIntPropertyByName
	 */
	struct UKismetSystemLibrary_SetIntPropertyByName_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                PropertyName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Value;                                                   // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SetFloatPropertyByName
	 */
	struct UKismetSystemLibrary_SetFloatPropertyByName_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                PropertyName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Value;                                                   // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SetDoublePropertyByName
	 */
	struct UKismetSystemLibrary_SetDoublePropertyByName_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                PropertyName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     Value;                                                   // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SetClassPropertyByName
	 */
	struct UKismetSystemLibrary_SetClassPropertyByName_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                PropertyName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              Value;                                                   // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SetBytePropertyByName
	 */
	struct UKismetSystemLibrary_SetBytePropertyByName_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                PropertyName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              Value;                                                   // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.SetBoolPropertyByName
	 */
	struct UKismetSystemLibrary_SetBoolPropertyByName_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                PropertyName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       Value;                                                   // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.RetriggerableDelay
	 */
	struct UKismetSystemLibrary_RetriggerableDelay_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_UI3C[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FLatentActionInfo                                   LatentInfo;                                              // 0x0010(0x0018)  (Parm)
	};

	/**
	 * Function Engine.KismetSystemLibrary.QuitGame
	 */
	struct UKismetSystemLibrary_QuitGame_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APlayerController*                                   SpecificPlayer;                                          // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EQuitPreference                                            QuitPreference;                                          // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.PrintWarning
	 */
	struct UKismetSystemLibrary_PrintWarning_Params
	{
	public:
		class FString                                              InString;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.PrintString
	 */
	struct UKismetSystemLibrary_PrintString_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              InString;                                                // 0x0008(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bPrintToScreen;                                          // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bPrintToLog;                                             // 0x0019(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_IYWN[0x2];                                   // 0x001A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FLinearColor                                        TextColor;                                               // 0x001C(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		float                                                      Duration;                                                // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		int32_t                                                    AtIndex;                                                 // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	};

	/**
	 * Function Engine.KismetSystemLibrary.MoveComponentTo
	 */
	struct UKismetSystemLibrary_MoveComponentTo_Params
	{
	public:
		class USceneComponent*                                     Component;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FVector                                             TargetRelativeLocation;                                  // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            TargetRelativeRotation;                                  // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEaseOut;                                                // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEaseIn;                                                 // 0x0021(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KDKT[0x2];                                   // 0x0022(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      OverTime;                                                // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EMoveComponentAction                                       MoveAction;                                              // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_Y9ZR[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FLatentActionInfo                                   LatentInfo;                                              // 0x0030(0x0018)  (Parm)
		bool                                                       bSweep;                                                  // 0x0048(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.MakeLiteralText
	 */
	struct UKismetSystemLibrary_MakeLiteralText_Params
	{
	public:
		class FText                                                Value;                                                   // 0x0000(0x0018)  (Parm)
		class FText                                                ReturnValue;                                             // 0x0028(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function Engine.KismetSystemLibrary.MakeLiteralString
	 */
	struct UKismetSystemLibrary_MakeLiteralString_Params
	{
	public:
		class FString                                              Value;                                                   // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetSystemLibrary.MakeLiteralName
	 */
	struct UKismetSystemLibrary_MakeLiteralName_Params
	{
	public:
		class FName                                                Value;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.MakeLiteralInt
	 */
	struct UKismetSystemLibrary_MakeLiteralInt_Params
	{
	public:
		int32_t                                                    Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.MakeLiteralFloat
	 */
	struct UKismetSystemLibrary_MakeLiteralFloat_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.MakeLiteralByte
	 */
	struct UKismetSystemLibrary_MakeLiteralByte_Params
	{
	public:
		unsigned char                                              Value;                                                   // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.MakeLiteralBool
	 */
	struct UKismetSystemLibrary_MakeLiteralBool_Params
	{
	public:
		bool                                                       Value;                                                   // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.LineTraceSingleForObjects
	 */
	struct UKismetSystemLibrary_LineTraceSingleForObjects_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<EObjectTypeQuery>                                   ObjectTypes;                                             // 0x0020(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bTraceComplex;                                           // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NF4P[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0038(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0048(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_W3YY[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          OutHit;                                                  // 0x0050(0x0088)  (Parm, OutParm)
		bool                                                       bIgnoreSelf;                                             // 0x00D8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x00D9(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.LineTraceSingleByObject_DEPRECATED
	 */
	struct UKismetSystemLibrary_LineTraceSingleByObject_DEPRECATED_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<ECollisionChannel>                                  ObjectsToTrace;                                          // 0x0020(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bTraceComplex;                                           // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_HTC3[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0038(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0048(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_O11H[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          OutHit;                                                  // 0x0050(0x0088)  (Parm, OutParm)
		bool                                                       bIgnoreSelf;                                             // 0x00D8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x00D9(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.LineTraceSingle_NEW
	 */
	struct UKismetSystemLibrary_LineTraceSingle_NEW_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          TraceChannel;                                            // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x0021(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_J1O1[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7BJG[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          OutHit;                                                  // 0x0040(0x0088)  (Parm, OutParm)
		bool                                                       bIgnoreSelf;                                             // 0x00C8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x00C9(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.LineTraceSingle_DEPRECATED
	 */
	struct UKismetSystemLibrary_LineTraceSingle_DEPRECATED_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          TraceChannel;                                            // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x0021(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_AX3J[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_G26Y[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          OutHit;                                                  // 0x0040(0x0088)  (Parm, OutParm)
		bool                                                       bIgnoreSelf;                                             // 0x00C8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x00C9(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.LineTraceMultiForObjects
	 */
	struct UKismetSystemLibrary_LineTraceMultiForObjects_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<EObjectTypeQuery>                                   ObjectTypes;                                             // 0x0020(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bTraceComplex;                                           // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_6BR4[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0038(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0048(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_PDQT[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FHitResult>                                  OutHits;                                                 // 0x0050(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bIgnoreSelf;                                             // 0x0060(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0061(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.LineTraceMultiByObject_DEPRECATED
	 */
	struct UKismetSystemLibrary_LineTraceMultiByObject_DEPRECATED_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<ECollisionChannel>                                  ObjectsToTrace;                                          // 0x0020(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bTraceComplex;                                           // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_4HHO[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0038(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0048(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_0HIR[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FHitResult>                                  OutHits;                                                 // 0x0050(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bIgnoreSelf;                                             // 0x0060(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0061(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.LineTraceMulti_NEW
	 */
	struct UKismetSystemLibrary_LineTraceMulti_NEW_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ETraceTypeQuery                                            TraceChannel;                                            // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x0021(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_K09W[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_VUXH[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FHitResult>                                  OutHits;                                                 // 0x0040(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bIgnoreSelf;                                             // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0051(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.LineTraceMulti_DEPRECATED
	 */
	struct UKismetSystemLibrary_LineTraceMulti_DEPRECATED_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          TraceChannel;                                            // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x0021(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_IEFR[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_RTF6[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FHitResult>                                  OutHits;                                                 // 0x0040(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bIgnoreSelf;                                             // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0051(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.LaunchURL
	 */
	struct UKismetSystemLibrary_LaunchURL_Params
	{
	public:
		class FString                                              URL;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.K2_UnPauseTimer
	 */
	struct UKismetSystemLibrary_K2_UnPauseTimer_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              FunctionName;                                            // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.K2_TimerExists
	 */
	struct UKismetSystemLibrary_K2_TimerExists_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              FunctionName;                                            // 0x0008(0x0010)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.K2_SetTimerForNextTickDelegate
	 */
	struct UKismetSystemLibrary_K2_SetTimerForNextTickDelegate_Params
	{
	public:
		class FScriptDelegate                                      Delegate;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor, NoDestructor)
		bool                                                       bLooping;                                                // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.K2_SetTimerForNextTick
	 */
	struct UKismetSystemLibrary_K2_SetTimerForNextTick_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              FunctionName;                                            // 0x0008(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bLooping;                                                // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.K2_SetTimerDelegate
	 */
	struct UKismetSystemLibrary_K2_SetTimerDelegate_Params
	{
	public:
		class FScriptDelegate                                      Delegate;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor, NoDestructor)
		float                                                      Time;                                                    // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bLooping;                                                // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.K2_SetTimer
	 */
	struct UKismetSystemLibrary_K2_SetTimer_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              FunctionName;                                            // 0x0008(0x0010)  (Parm, ZeroConstructor)
		float                                                      Time;                                                    // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bLooping;                                                // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.K2_PauseTimer
	 */
	struct UKismetSystemLibrary_K2_PauseTimer_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              FunctionName;                                            // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.K2_IsTimerPaused
	 */
	struct UKismetSystemLibrary_K2_IsTimerPaused_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              FunctionName;                                            // 0x0008(0x0010)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.K2_IsTimerActive
	 */
	struct UKismetSystemLibrary_K2_IsTimerActive_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              FunctionName;                                            // 0x0008(0x0010)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.K2_GetTimerRemainingTime
	 */
	struct UKismetSystemLibrary_K2_GetTimerRemainingTime_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              FunctionName;                                            // 0x0008(0x0010)  (Parm, ZeroConstructor)
		float                                                      ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.K2_GetTimerElapsedTime
	 */
	struct UKismetSystemLibrary_K2_GetTimerElapsedTime_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              FunctionName;                                            // 0x0008(0x0010)  (Parm, ZeroConstructor)
		float                                                      ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.K2_ClearTimer
	 */
	struct UKismetSystemLibrary_K2_ClearTimer_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              FunctionName;                                            // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.IsValid
	 */
	struct UKismetSystemLibrary_IsValid_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.IsStandalone
	 */
	struct UKismetSystemLibrary_IsStandalone_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.IsServer
	 */
	struct UKismetSystemLibrary_IsServer_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.IsRunningOnServer
	 */
	struct UKismetSystemLibrary_IsRunningOnServer_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ENetworkModeResult                                         OutNetworkMode;                                          // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.IsPackagedForDistribution
	 */
	struct UKismetSystemLibrary_IsPackagedForDistribution_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.IsListenServer
	 */
	struct UKismetSystemLibrary_IsListenServer_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.IsDedicatedServer
	 */
	struct UKismetSystemLibrary_IsDedicatedServer_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.IsClient
	 */
	struct UKismetSystemLibrary_IsClient_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.HideAdBanner
	 */
	struct UKismetSystemLibrary_HideAdBanner_Params
	{	};

	/**
	 * Function Engine.KismetSystemLibrary.GetUniqueDeviceId
	 */
	struct UKismetSystemLibrary_GetUniqueDeviceId_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetSystemLibrary.GetRenderingMaterialQualityLevel
	 */
	struct UKismetSystemLibrary_GetRenderingMaterialQualityLevel_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.GetRenderingDetailMode
	 */
	struct UKismetSystemLibrary_GetRenderingDetailMode_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.GetPlatformUserName
	 */
	struct UKismetSystemLibrary_GetPlatformUserName_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetSystemLibrary.GetGameTimeInSeconds
	 */
	struct UKismetSystemLibrary_GetGameTimeInSeconds_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.GetGameName
	 */
	struct UKismetSystemLibrary_GetGameName_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetSystemLibrary.GetEngineVersion
	 */
	struct UKismetSystemLibrary_GetEngineVersion_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetSystemLibrary.GetDisplayName
	 */
	struct UKismetSystemLibrary_GetDisplayName_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetSystemLibrary.GetComponentBounds
	 */
	struct UKismetSystemLibrary_GetComponentBounds_Params
	{
	public:
		class USceneComponent*                                     Component;                                               // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FVector                                             Origin;                                                  // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             BoxExtent;                                               // 0x0014(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SphereRadius;                                            // 0x0020(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.GetClassDisplayName
	 */
	struct UKismetSystemLibrary_GetClassDisplayName_Params
	{
	public:
		class UClass*                                              Class;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetSystemLibrary.GetActorListFromComponentList
	 */
	struct UKismetSystemLibrary_GetActorListFromComponentList_Params
	{
	public:
		TArray<class UPrimitiveComponent*>                         ComponentList;                                           // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
		class UClass*                                              ActorClassFilter;                                        // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      OutActorList;                                            // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.GetActorBounds
	 */
	struct UKismetSystemLibrary_GetActorBounds_Params
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Origin;                                                  // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             BoxExtent;                                               // 0x0014(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.ForceCloseAdBanner
	 */
	struct UKismetSystemLibrary_ForceCloseAdBanner_Params
	{	};

	/**
	 * Function Engine.KismetSystemLibrary.FlushPersistentDebugLines
	 */
	struct UKismetSystemLibrary_FlushPersistentDebugLines_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.FlushDebugStrings
	 */
	struct UKismetSystemLibrary_FlushDebugStrings_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.ExecuteConsoleCommand
	 */
	struct UKismetSystemLibrary_ExecuteConsoleCommand_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              Command;                                                 // 0x0008(0x0010)  (Parm, ZeroConstructor)
		class APlayerController*                                   SpecificPlayer;                                          // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.DrawDebugString
	 */
	struct UKismetSystemLibrary_DrawDebugString_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             TextLocation;                                            // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7L1F[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Text;                                                    // 0x0018(0x0010)  (Parm, ZeroConstructor)
		class AActor*                                              TestBaseActor;                                           // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        TextColor;                                               // 0x0030(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.DrawDebugSphere
	 */
	struct UKismetSystemLibrary_DrawDebugSphere_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Center;                                                  // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Segments;                                                // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x001C(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPersistent;                                             // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.DrawDebugPoint
	 */
	struct UKismetSystemLibrary_DrawDebugPoint_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Position;                                                // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Size;                                                    // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        PointColor;                                              // 0x0018(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPersistent;                                             // 0x002C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.DrawDebugPlane
	 */
	struct UKismetSystemLibrary_DrawDebugPlane_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_MBJX[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FPlane                                              PlaneCoordinates;                                        // 0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x0020(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Size;                                                    // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        PlaneColor;                                              // 0x0030(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPersistent;                                             // 0x0044(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.DrawDebugLineTraceHitResult
	 */
	struct UKismetSystemLibrary_DrawDebugLineTraceHitResult_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FHitResult                                          Hit;                                                     // 0x0008(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector                                             TraceStart;                                              // 0x0090(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             TraceEnd;                                                // 0x009C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        StartColor;                                              // 0x00A8(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        HitColor;                                                // 0x00B8(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      LineThickness;                                           // 0x00C8(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HitSize;                                                 // 0x00CC(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDrawHitNormal;                                          // 0x00D0(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_4YPM[0x3];                                   // 0x00D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FLinearColor                                        HitNormalColor;                                          // 0x00D4(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HitNormalLength;                                         // 0x00E4(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x00E8(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPersistent;                                             // 0x00EC(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.DrawDebugLine
	 */
	struct UKismetSystemLibrary_DrawDebugLine_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             LineStart;                                               // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             LineEnd;                                                 // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x0020(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Thickness;                                               // 0x0034(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPersistent;                                             // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.DrawDebugFrustum
	 */
	struct UKismetSystemLibrary_DrawDebugFrustum_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_4U86[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          FrustumTransform;                                        // 0x0010(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        FrustumColor;                                            // 0x0040(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0050(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPersistent;                                             // 0x0054(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.DrawDebugFloatHistoryTransform
	 */
	struct UKismetSystemLibrary_DrawDebugFloatHistoryTransform_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FDebugFloatHistory                                  FloatHistory;                                            // 0x0008(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		unsigned char                                              UnknownData_5ANY[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          DrawTransform;                                           // 0x0030(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector2D                                           DrawSize;                                                // 0x0060(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        DrawColor;                                               // 0x0068(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0078(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPersistent;                                             // 0x007C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.DrawDebugFloatHistoryLocation
	 */
	struct UKismetSystemLibrary_DrawDebugFloatHistoryLocation_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FDebugFloatHistory                                  FloatHistory;                                            // 0x0008(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector                                             DrawLocation;                                            // 0x0028(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           DrawSize;                                                // 0x0034(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        DrawColor;                                               // 0x003C(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x004C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPersistent;                                             // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.DrawDebugCylinder
	 */
	struct UKismetSystemLibrary_DrawDebugCylinder_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Segments;                                                // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPersistent;                                             // 0x003C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.DrawDebugCoordinateSystem
	 */
	struct UKismetSystemLibrary_DrawDebugCoordinateSystem_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AxisLoc;                                                 // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            AxisRot;                                                 // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Scale;                                                   // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Thickness;                                               // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPersistent;                                             // 0x002C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.DrawDebugConeInDegrees
	 */
	struct UKismetSystemLibrary_DrawDebugConeInDegrees_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Origin;                                                  // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Direction;                                               // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Length;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      AngleWidth;                                              // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      AngleHeight;                                             // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumSides;                                                // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x0030(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPersistent;                                             // 0x0044(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.DrawDebugCone
	 */
	struct UKismetSystemLibrary_DrawDebugCone_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Origin;                                                  // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Direction;                                               // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Length;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      AngleWidth;                                              // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      AngleHeight;                                             // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumSides;                                                // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x0030(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      LifeTime;                                                // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPersistent;                                             // 0x0044(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.DrawDebugCircle
	 */
	struct UKismetSystemLibrary_DrawDebugCircle_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Center;                                                  // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Segments;                                                // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPersistent;                                             // 0x003C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.DrawDebugCapsuleWithExtents
	 */
	struct UKismetSystemLibrary_DrawDebugCapsuleWithExtents_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Top;                                                     // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Bottom;                                                  // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x0024(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0034(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPersistent;                                             // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.DrawDebugCapsule
	 */
	struct UKismetSystemLibrary_DrawDebugCapsule_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Center;                                                  // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HalfHeight;                                              // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x001C(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPersistent;                                             // 0x003C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.DrawDebugCamera
	 */
	struct UKismetSystemLibrary_DrawDebugCamera_Params
	{
	public:
		class ACameraActor*                                        CameraActor;                                             // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        CameraColor;                                             // 0x0008(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPersistent;                                             // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.DrawDebugBox
	 */
	struct UKismetSystemLibrary_DrawDebugBox_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Center;                                                  // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Extent;                                                  // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x0020(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x0030(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x003C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPersistent;                                             // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.DrawDebugArrow
	 */
	struct UKismetSystemLibrary_DrawDebugArrow_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             LineStart;                                               // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             LineEnd;                                                 // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ArrowSize;                                               // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x0024(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0034(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPersistent;                                             // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.DoesImplementInterface
	 */
	struct UKismetSystemLibrary_DoesImplementInterface_Params
	{
	public:
		class UObject*                                             TestObject;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              Interface;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.Delay
	 */
	struct UKismetSystemLibrary_Delay_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_YUU7[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FLatentActionInfo                                   LatentInfo;                                              // 0x0010(0x0018)  (Parm)
	};

	/**
	 * Function Engine.KismetSystemLibrary.CreateCopyForUndoBuffer
	 */
	struct UKismetSystemLibrary_CreateCopyForUndoBuffer_Params
	{
	public:
		class UObject*                                             ObjectToModify;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.Conv_InterfaceToObject
	 */
	struct UKismetSystemLibrary_Conv_InterfaceToObject_Params
	{
	public:
		unsigned char                                              UnknownData_1QIK[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UObject*                                             ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.ControlScreensaver
	 */
	struct UKismetSystemLibrary_ControlScreensaver_Params
	{
	public:
		bool                                                       bAllowScreenSaver;                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.ComponentOverlapComponents_NEW
	 */
	struct UKismetSystemLibrary_ComponentOverlapComponents_NEW_Params
	{
	public:
		class UPrimitiveComponent*                                 Component;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_RSTJ[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          ComponentTransform;                                      // 0x0010(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		TArray<EObjectTypeQuery>                                   ObjectTypes;                                             // 0x0040(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UClass*                                              ComponentClassFilter;                                    // 0x0050(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0058(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class UPrimitiveComponent*>                         OutComponents;                                           // 0x0068(0x0010)  (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
		bool                                                       ReturnValue;                                             // 0x0078(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.ComponentOverlapComponents_DEPRECATED
	 */
	struct UKismetSystemLibrary_ComponentOverlapComponents_DEPRECATED_Params
	{
	public:
		class UPrimitiveComponent*                                 Component;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_TXK1[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          ComponentTransform;                                      // 0x0010(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		EOverlapFilterOption                                       Filter;                                                  // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_VOC6[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              ComponentClassFilter;                                    // 0x0048(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0050(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class UPrimitiveComponent*>                         OutComponents;                                           // 0x0060(0x0010)  (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
		bool                                                       ReturnValue;                                             // 0x0070(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.ComponentOverlapActors_NEW
	 */
	struct UKismetSystemLibrary_ComponentOverlapActors_NEW_Params
	{
	public:
		class UPrimitiveComponent*                                 Component;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CMJE[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          ComponentTransform;                                      // 0x0010(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		TArray<EObjectTypeQuery>                                   ObjectTypes;                                             // 0x0040(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UClass*                                              ActorClassFilter;                                        // 0x0050(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0058(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class AActor*>                                      OutActors;                                               // 0x0068(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0078(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.ComponentOverlapActors_DEPRECATED
	 */
	struct UKismetSystemLibrary_ComponentOverlapActors_DEPRECATED_Params
	{
	public:
		class UPrimitiveComponent*                                 Component;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NKSL[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          ComponentTransform;                                      // 0x0010(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		EOverlapFilterOption                                       Filter;                                                  // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KM9O[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              ActorClassFilter;                                        // 0x0048(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0050(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class AActor*>                                      OutActors;                                               // 0x0060(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0070(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.CollectGarbage
	 */
	struct UKismetSystemLibrary_CollectGarbage_Params
	{	};

	/**
	 * Function Engine.KismetSystemLibrary.CapsuleTraceSingleForObjects
	 */
	struct UKismetSystemLibrary_CapsuleTraceSingleForObjects_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HalfHeight;                                              // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<EObjectTypeQuery>                                   ObjectTypes;                                             // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bTraceComplex;                                           // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QST0[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0040(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CMT7[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          OutHit;                                                  // 0x0058(0x0088)  (Parm, OutParm)
		bool                                                       bIgnoreSelf;                                             // 0x00E0(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x00E1(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.CapsuleTraceSingleByObject_DEPRECATED
	 */
	struct UKismetSystemLibrary_CapsuleTraceSingleByObject_DEPRECATED_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HalfHeight;                                              // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<ECollisionChannel>                                  ObjectsToTrace;                                          // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bTraceComplex;                                           // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_M12I[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0040(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_SICB[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          OutHit;                                                  // 0x0058(0x0088)  (Parm, OutParm)
		bool                                                       bIgnoreSelf;                                             // 0x00E0(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x00E1(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.CapsuleTraceSingle_NEW
	 */
	struct UKismetSystemLibrary_CapsuleTraceSingle_NEW_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HalfHeight;                                              // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ETraceTypeQuery                                            TraceChannel;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x0029(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_RO4H[0x6];                                   // 0x002A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0030(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_YMMH[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          OutHit;                                                  // 0x0048(0x0088)  (Parm, OutParm)
		bool                                                       bIgnoreSelf;                                             // 0x00D0(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x00D1(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.CapsuleTraceSingle_DEPRECATED
	 */
	struct UKismetSystemLibrary_CapsuleTraceSingle_DEPRECATED_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HalfHeight;                                              // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          TraceChannel;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x0029(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CU5Z[0x6];                                   // 0x002A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0030(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JY8O[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          OutHit;                                                  // 0x0048(0x0088)  (Parm, OutParm)
		bool                                                       bIgnoreSelf;                                             // 0x00D0(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x00D1(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.CapsuleTraceMultiForObjects
	 */
	struct UKismetSystemLibrary_CapsuleTraceMultiForObjects_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HalfHeight;                                              // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<EObjectTypeQuery>                                   ObjectTypes;                                             // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bTraceComplex;                                           // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_P1PA[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0040(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_GNM8[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FHitResult>                                  OutHits;                                                 // 0x0058(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bIgnoreSelf;                                             // 0x0068(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0069(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.CapsuleTraceMultiByObject_DEPRECATED
	 */
	struct UKismetSystemLibrary_CapsuleTraceMultiByObject_DEPRECATED_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HalfHeight;                                              // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<ECollisionChannel>                                  ObjectsToTrace;                                          // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bTraceComplex;                                           // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_16P0[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0040(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_OTHR[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FHitResult>                                  OutHits;                                                 // 0x0058(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bIgnoreSelf;                                             // 0x0068(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0069(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.CapsuleTraceMulti_NEW
	 */
	struct UKismetSystemLibrary_CapsuleTraceMulti_NEW_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HalfHeight;                                              // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ETraceTypeQuery                                            TraceChannel;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x0029(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_8L6C[0x6];                                   // 0x002A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0030(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_6X9X[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FHitResult>                                  OutHits;                                                 // 0x0048(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bIgnoreSelf;                                             // 0x0058(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0059(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.CapsuleTraceMulti_DEPRECATED
	 */
	struct UKismetSystemLibrary_CapsuleTraceMulti_DEPRECATED_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HalfHeight;                                              // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          TraceChannel;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x0029(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_Z984[0x6];                                   // 0x002A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0030(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_OM3F[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FHitResult>                                  OutHits;                                                 // 0x0048(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bIgnoreSelf;                                             // 0x0058(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0059(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.CapsuleOverlapComponents_NEW
	 */
	struct UKismetSystemLibrary_CapsuleOverlapComponents_NEW_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             CapsulePos;                                              // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HalfHeight;                                              // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_3X46[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<EObjectTypeQuery>                                   ObjectTypes;                                             // 0x0020(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UClass*                                              ComponentClassFilter;                                    // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0038(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class UPrimitiveComponent*>                         OutComponents;                                           // 0x0048(0x0010)  (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
		bool                                                       ReturnValue;                                             // 0x0058(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.CapsuleOverlapComponents_DEPRECATED
	 */
	struct UKismetSystemLibrary_CapsuleOverlapComponents_DEPRECATED_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             CapsulePos;                                              // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HalfHeight;                                              // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EOverlapFilterOption                                       Filter;                                                  // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_Q96B[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              ComponentClassFilter;                                    // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class UPrimitiveComponent*>                         OutComponents;                                           // 0x0038(0x0010)  (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
		bool                                                       ReturnValue;                                             // 0x0048(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.CapsuleOverlapActors_NEW
	 */
	struct UKismetSystemLibrary_CapsuleOverlapActors_NEW_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             CapsulePos;                                              // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HalfHeight;                                              // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_3TQT[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<EObjectTypeQuery>                                   ObjectTypes;                                             // 0x0020(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UClass*                                              ActorClassFilter;                                        // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0038(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class AActor*>                                      OutActors;                                               // 0x0048(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0058(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.CapsuleOverlapActors_DEPRECATED
	 */
	struct UKismetSystemLibrary_CapsuleOverlapActors_DEPRECATED_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             CapsulePos;                                              // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HalfHeight;                                              // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EOverlapFilterOption                                       Filter;                                                  // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_3CD8[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              ActorClassFilter;                                        // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class AActor*>                                      OutActors;                                               // 0x0038(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0048(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.CanRunCosmeticEvents
	 */
	struct UKismetSystemLibrary_CanRunCosmeticEvents_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ENetworkModeResult                                         OutNetworkMode;                                          // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.BoxTraceSingleForObjects
	 */
	struct UKismetSystemLibrary_BoxTraceSingleForObjects_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             HalfSize;                                                // 0x0020(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Orientation;                                             // 0x002C(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<EObjectTypeQuery>                                   ObjectTypes;                                             // 0x0038(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bTraceComplex;                                           // 0x0048(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_YU09[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0050(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0060(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_FCRK[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          OutHit;                                                  // 0x0068(0x0088)  (Parm, OutParm)
		bool                                                       bIgnoreSelf;                                             // 0x00F0(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x00F1(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.BoxTraceSingle
	 */
	struct UKismetSystemLibrary_BoxTraceSingle_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             HalfSize;                                                // 0x0020(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Orientation;                                             // 0x002C(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ETraceTypeQuery                                            TraceChannel;                                            // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x0039(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_9FU9[0x6];                                   // 0x003A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0040(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_3X59[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          OutHit;                                                  // 0x0058(0x0088)  (Parm, OutParm)
		bool                                                       bIgnoreSelf;                                             // 0x00E0(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x00E1(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.BoxTraceMultiForObjects
	 */
	struct UKismetSystemLibrary_BoxTraceMultiForObjects_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             HalfSize;                                                // 0x0020(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Orientation;                                             // 0x002C(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<EObjectTypeQuery>                                   ObjectTypes;                                             // 0x0038(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bTraceComplex;                                           // 0x0048(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_VOB0[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0050(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0060(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_YB0X[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FHitResult>                                  OutHits;                                                 // 0x0068(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bIgnoreSelf;                                             // 0x0078(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0079(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.BoxTraceMulti
	 */
	struct UKismetSystemLibrary_BoxTraceMulti_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             HalfSize;                                                // 0x0020(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Orientation;                                             // 0x002C(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ETraceTypeQuery                                            TraceChannel;                                            // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x0039(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_T764[0x6];                                   // 0x003A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0040(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EDrawDebugTrace                                            DrawDebugType;                                           // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JADJ[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FHitResult>                                  OutHits;                                                 // 0x0058(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bIgnoreSelf;                                             // 0x0068(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0069(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.BoxOverlapComponents_NEW
	 */
	struct UKismetSystemLibrary_BoxOverlapComponents_NEW_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             BoxPos;                                                  // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Extent;                                                  // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<EObjectTypeQuery>                                   ObjectTypes;                                             // 0x0020(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UClass*                                              ComponentClassFilter;                                    // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0038(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class UPrimitiveComponent*>                         OutComponents;                                           // 0x0048(0x0010)  (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
		bool                                                       ReturnValue;                                             // 0x0058(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.BoxOverlapComponents_DEPRECATED
	 */
	struct UKismetSystemLibrary_BoxOverlapComponents_DEPRECATED_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             BoxPos;                                                  // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Extent;                                                  // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EOverlapFilterOption                                       Filter;                                                  // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_B9K5[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              ComponentClassFilter;                                    // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0030(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class UPrimitiveComponent*>                         OutComponents;                                           // 0x0040(0x0010)  (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
		bool                                                       ReturnValue;                                             // 0x0050(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.BoxOverlapActors_NEW
	 */
	struct UKismetSystemLibrary_BoxOverlapActors_NEW_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             BoxPos;                                                  // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             BoxExtent;                                               // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<EObjectTypeQuery>                                   ObjectTypes;                                             // 0x0020(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UClass*                                              ActorClassFilter;                                        // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0038(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class AActor*>                                      OutActors;                                               // 0x0048(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0058(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.BoxOverlapActors_DEPRECATED
	 */
	struct UKismetSystemLibrary_BoxOverlapActors_DEPRECATED_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             BoxPos;                                                  // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             BoxExtent;                                               // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EOverlapFilterOption                                       Filter;                                                  // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_GGVW[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              ActorClassFilter;                                        // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0030(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class AActor*>                                      OutActors;                                               // 0x0040(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0050(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetSystemLibrary.BlueprintTimerDynamicDelegate__DelegateSignature
	 */
	struct UKismetSystemLibrary_BlueprintTimerDynamicDelegate__DelegateSignature_Params
	{	};

	/**
	 * Function Engine.KismetSystemLibrary.AddFloatHistorySample
	 */
	struct UKismetSystemLibrary_AddFloatHistorySample_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_RWKI[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDebugFloatHistory                                  FloatHistory;                                            // 0x0008(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FDebugFloatHistory                                  ReturnValue;                                             // 0x0028(0x0020)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function Engine.KismetTextLibrary.TextTrimTrailing
	 */
	struct UKismetTextLibrary_TextTrimTrailing_Params
	{
	public:
		class FText                                                InText;                                                  // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		class FText                                                ReturnValue;                                             // 0x0028(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function Engine.KismetTextLibrary.TextTrimPrecedingAndTrailing
	 */
	struct UKismetTextLibrary_TextTrimPrecedingAndTrailing_Params
	{
	public:
		class FText                                                InText;                                                  // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		class FText                                                ReturnValue;                                             // 0x0028(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function Engine.KismetTextLibrary.TextTrimPreceding
	 */
	struct UKismetTextLibrary_TextTrimPreceding_Params
	{
	public:
		class FText                                                InText;                                                  // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		class FText                                                ReturnValue;                                             // 0x0028(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function Engine.KismetTextLibrary.TextIsTransient
	 */
	struct UKismetTextLibrary_TextIsTransient_Params
	{
	public:
		class FText                                                InText;                                                  // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0028(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetTextLibrary.TextIsEmpty
	 */
	struct UKismetTextLibrary_TextIsEmpty_Params
	{
	public:
		class FText                                                InText;                                                  // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0028(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetTextLibrary.TextIsCultureInvariant
	 */
	struct UKismetTextLibrary_TextIsCultureInvariant_Params
	{
	public:
		class FText                                                InText;                                                  // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0028(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetTextLibrary.NotEqual_TextText
	 */
	struct UKismetTextLibrary_NotEqual_TextText_Params
	{
	public:
		class FText                                                A;                                                       // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		class FText                                                B;                                                       // 0x0028(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0050(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetTextLibrary.NotEqual_IgnoreCase_TextText
	 */
	struct UKismetTextLibrary_NotEqual_IgnoreCase_TextText_Params
	{
	public:
		class FText                                                A;                                                       // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		class FText                                                B;                                                       // 0x0028(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0050(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetTextLibrary.GetEmptyText
	 */
	struct UKismetTextLibrary_GetEmptyText_Params
	{
	public:
		class FText                                                ReturnValue;                                             // 0x0000(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function Engine.KismetTextLibrary.Format
	 */
	struct UKismetTextLibrary_Format_Params
	{
	public:
		class FText                                                InPattern;                                               // 0x0000(0x0018)  (Parm)
		TArray<struct FFormatTextArgument>                         InArgs;                                                  // 0x0028(0x0010)  (Parm, ZeroConstructor)
		class FText                                                ReturnValue;                                             // 0x0038(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function Engine.KismetTextLibrary.FindTextInLocalizationTable
	 */
	struct UKismetTextLibrary_FindTextInLocalizationTable_Params
	{
	public:
		class FString                                              Namespace;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Key;                                                     // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class FText                                                OutText;                                                 // 0x0020(0x0018)  (Parm, OutParm)
		bool                                                       ReturnValue;                                             // 0x0048(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetTextLibrary.EqualEqual_TextText
	 */
	struct UKismetTextLibrary_EqualEqual_TextText_Params
	{
	public:
		class FText                                                A;                                                       // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		class FText                                                B;                                                       // 0x0028(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0050(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetTextLibrary.EqualEqual_IgnoreCase_TextText
	 */
	struct UKismetTextLibrary_EqualEqual_IgnoreCase_TextText_Params
	{
	public:
		class FText                                                A;                                                       // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		class FText                                                B;                                                       // 0x0028(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0050(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.KismetTextLibrary.Conv_TextToString
	 */
	struct UKismetTextLibrary_Conv_TextToString_Params
	{
	public:
		class FText                                                InText;                                                  // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		class FString                                              ReturnValue;                                             // 0x0028(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.KismetTextLibrary.Conv_StringToText
	 */
	struct UKismetTextLibrary_Conv_StringToText_Params
	{
	public:
		class FString                                              InString;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FText                                                ReturnValue;                                             // 0x0010(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function Engine.KismetTextLibrary.Conv_NameToText
	 */
	struct UKismetTextLibrary_Conv_NameToText_Params
	{
	public:
		class FName                                                InName;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FText                                                ReturnValue;                                             // 0x0008(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function Engine.KismetTextLibrary.Conv_IntToText
	 */
	struct UKismetTextLibrary_Conv_IntToText_Params
	{
	public:
		int32_t                                                    Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bUseGrouping;                                            // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_T3Y4[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    MinimumIntegralDigits;                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		int32_t                                                    MaximumIntegralDigits;                                   // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		class FText                                                ReturnValue;                                             // 0x0010(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function Engine.KismetTextLibrary.Conv_FloatToText
	 */
	struct UKismetTextLibrary_Conv_FloatToText_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ERoundingMode                                              RoundingMode;                                            // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bUseGrouping;                                            // 0x0005(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_ET0G[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    MinimumIntegralDigits;                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		int32_t                                                    MaximumIntegralDigits;                                   // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		int32_t                                                    MinimumFractionalDigits;                                 // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		int32_t                                                    MaximumFractionalDigits;                                 // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		class FText                                                ReturnValue;                                             // 0x0018(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function Engine.KismetTextLibrary.Conv_ByteToText
	 */
	struct UKismetTextLibrary_Conv_ByteToText_Params
	{
	public:
		unsigned char                                              Value;                                                   // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_SHOL[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FText                                                ReturnValue;                                             // 0x0008(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function Engine.KismetTextLibrary.Conv_BoolToText
	 */
	struct UKismetTextLibrary_Conv_BoolToText_Params
	{
	public:
		bool                                                       InBool;                                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_HKSZ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FText                                                ReturnValue;                                             // 0x0008(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function Engine.KismetTextLibrary.AsTimespan_Timespan
	 */
	struct UKismetTextLibrary_AsTimespan_Timespan_Params
	{
	public:
		struct FTimespan                                           InTimespan;                                              // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class FText                                                ReturnValue;                                             // 0x0008(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function Engine.KismetTextLibrary.AsTime_DateTime
	 */
	struct UKismetTextLibrary_AsTime_DateTime_Params
	{
	public:
		struct FDateTime                                           In;                                                      // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class FText                                                ReturnValue;                                             // 0x0008(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function Engine.KismetTextLibrary.AsPercent_Float
	 */
	struct UKismetTextLibrary_AsPercent_Float_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ERoundingMode                                              RoundingMode;                                            // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bUseGrouping;                                            // 0x0005(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_DMH9[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    MinimumIntegralDigits;                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		int32_t                                                    MaximumIntegralDigits;                                   // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		int32_t                                                    MinimumFractionalDigits;                                 // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		int32_t                                                    MaximumFractionalDigits;                                 // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		class FText                                                ReturnValue;                                             // 0x0018(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function Engine.KismetTextLibrary.AsDateTime_DateTime
	 */
	struct UKismetTextLibrary_AsDateTime_DateTime_Params
	{
	public:
		struct FDateTime                                           In;                                                      // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class FText                                                ReturnValue;                                             // 0x0008(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function Engine.KismetTextLibrary.AsDate_DateTime
	 */
	struct UKismetTextLibrary_AsDate_DateTime_Params
	{
	public:
		struct FDateTime                                           InDateTime;                                              // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class FText                                                ReturnValue;                                             // 0x0008(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function Engine.KismetTextLibrary.AsCurrency_Integer
	 */
	struct UKismetTextLibrary_AsCurrency_Integer_Params
	{
	public:
		int32_t                                                    Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ERoundingMode                                              RoundingMode;                                            // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bUseGrouping;                                            // 0x0005(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_0BIY[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    MinimumIntegralDigits;                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		int32_t                                                    MaximumIntegralDigits;                                   // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		int32_t                                                    MinimumFractionalDigits;                                 // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		int32_t                                                    MaximumFractionalDigits;                                 // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		class FString                                              CurrencyCode;                                            // 0x0018(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
		class FText                                                ReturnValue;                                             // 0x0028(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function Engine.KismetTextLibrary.AsCurrency_Float
	 */
	struct UKismetTextLibrary_AsCurrency_Float_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ERoundingMode                                              RoundingMode;                                            // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bUseGrouping;                                            // 0x0005(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_XRB9[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    MinimumIntegralDigits;                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		int32_t                                                    MaximumIntegralDigits;                                   // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		int32_t                                                    MinimumFractionalDigits;                                 // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		int32_t                                                    MaximumFractionalDigits;                                 // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		class FString                                              CurrencyCode;                                            // 0x0018(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
		class FText                                                ReturnValue;                                             // 0x0028(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function Engine.CameraAnimInst.Stop
	 */
	struct UCameraAnimInst_Stop_Params
	{
	public:
		bool                                                       bImmediate;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CameraAnimInst.SetDuration
	 */
	struct UCameraAnimInst_SetDuration_Params
	{
	public:
		float                                                      NewDuration;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Canvas.SetDrawColor
	 */
	struct UCanvas_SetDrawColor_Params
	{
	public:
		struct FColor                                              C;                                                       // 0x0000(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Canvas.K2_TextSize
	 */
	struct UCanvas_K2_TextSize_Params
	{
	public:
		class UFont*                                               RenderFont;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              RenderText;                                              // 0x0008(0x0010)  (Parm, ZeroConstructor)
		struct FVector2D                                           Scale;                                                   // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ReturnValue;                                             // 0x0020(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Canvas.K2_StrLen
	 */
	struct UCanvas_K2_StrLen_Params
	{
	public:
		class UFont*                                               RenderFont;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              RenderText;                                              // 0x0008(0x0010)  (Parm, ZeroConstructor)
		struct FVector2D                                           ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Canvas.K2_Project
	 */
	struct UCanvas_K2_Project_Params
	{
	public:
		struct FVector                                             WorldLocation;                                           // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Canvas.K2_DrawTriangle
	 */
	struct UCanvas_K2_DrawTriangle_Params
	{
	public:
		class UTexture*                                            RenderTexture;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FCanvasUVTri>                                Triangles;                                               // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.Canvas.K2_DrawTexture
	 */
	struct UCanvas_K2_DrawTexture_Params
	{
	public:
		class UTexture*                                            RenderTexture;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ScreenPosition;                                          // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ScreenSize;                                              // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           CoordinatePosition;                                      // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           CoordinateSize;                                          // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        RenderColor;                                             // 0x0028(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EBlendMode                                                 BlendMode;                                               // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_I5CD[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      Rotation;                                                // 0x003C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           PivotPoint;                                              // 0x0040(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Canvas.K2_DrawText
	 */
	struct UCanvas_K2_DrawText_Params
	{
	public:
		class UFont*                                               RenderFont;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              RenderText;                                              // 0x0008(0x0010)  (Parm, ZeroConstructor)
		struct FVector2D                                           ScreenPosition;                                          // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        RenderColor;                                             // 0x0020(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Kerning;                                                 // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        ShadowColor;                                             // 0x0034(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ShadowOffset;                                            // 0x0044(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCentreX;                                                // 0x004C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCentreY;                                                // 0x004D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOutlined;                                               // 0x004E(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_YVE2[0x1];                                   // 0x004F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FLinearColor                                        OutlineColor;                                            // 0x0050(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Canvas.K2_DrawPolygon
	 */
	struct UCanvas_K2_DrawPolygon_Params
	{
	public:
		class UTexture*                                            RenderTexture;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ScreenPosition;                                          // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           Radius;                                                  // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumberOfSides;                                           // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        RenderColor;                                             // 0x001C(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Canvas.K2_DrawMaterial
	 */
	struct UCanvas_K2_DrawMaterial_Params
	{
	public:
		class UMaterialInterface*                                  RenderMaterial;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ScreenPosition;                                          // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ScreenSize;                                              // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           CoordinatePosition;                                      // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           CoordinateSize;                                          // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Rotation;                                                // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           PivotPoint;                                              // 0x002C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Canvas.K2_DrawLine
	 */
	struct UCanvas_K2_DrawLine_Params
	{
	public:
		struct FVector2D                                           ScreenPositionA;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ScreenPositionB;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Thickness;                                               // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        RenderColor;                                             // 0x0014(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Canvas.K2_DrawBoxEx
	 */
	struct UCanvas_K2_DrawBoxEx_Params
	{
	public:
		struct FVector2D                                           ScreenPosition;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ScreenSize;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Thickness;                                               // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        RenderColor;                                             // 0x0014(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EBlendMode                                                 BlendMode;                                               // 0x0024(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Canvas.K2_DrawBox
	 */
	struct UCanvas_K2_DrawBox_Params
	{
	public:
		struct FVector2D                                           ScreenPosition;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ScreenSize;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Thickness;                                               // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Canvas.K2_DrawBorder
	 */
	struct UCanvas_K2_DrawBorder_Params
	{
	public:
		class UTexture*                                            BorderTexture;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTexture*                                            BackgroundTexture;                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTexture*                                            LeftBorderTexture;                                       // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTexture*                                            RightBorderTexture;                                      // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTexture*                                            TopBorderTexture;                                        // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTexture*                                            BottomBorderTexture;                                     // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ScreenPosition;                                          // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ScreenSize;                                              // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           CoordinatePosition;                                      // 0x0040(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           CoordinateSize;                                          // 0x0048(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        RenderColor;                                             // 0x0050(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           BorderScale;                                             // 0x0060(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           BackgroundScale;                                         // 0x0068(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Rotation;                                                // 0x0070(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           PivotPoint;                                              // 0x0074(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           CornerSize;                                              // 0x007C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Canvas.K2_Deproject
	 */
	struct UCanvas_K2_Deproject_Params
	{
	public:
		struct FVector2D                                           ScreenPosition;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             WorldOrigin;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             WorldDirection;                                          // 0x0014(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Canvas.IsPositionInFrontOfViewport
	 */
	struct UCanvas_IsPositionInFrontOfViewport_Params
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Canvas.BPDrawTextWrapped
	 */
	struct UCanvas_BPDrawTextWrapped_Params
	{
	public:
		class UFont*                                               InFont;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              InText;                                                  // 0x0008(0x0010)  (Parm, ZeroConstructor)
		float                                                      X;                                                       // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Y;                                                       // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      XWidth;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      YWidth;                                                  // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      XScale;                                                  // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      YScale;                                                  // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDoCenterX;                                              // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDoCenterY;                                              // 0x0031(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_8WSF[0x2];                                   // 0x0032(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector2D                                           SpacingAdjust;                                           // 0x0034(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x003C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Canvas.BPDrawTextCentered
	 */
	struct UCanvas_BPDrawTextCentered_Params
	{
	public:
		class UFont*                                               InFont;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              InText;                                                  // 0x0008(0x0010)  (Parm, ZeroConstructor)
		float                                                      X;                                                       // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Y;                                                       // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      XScale;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      YScale;                                                  // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDoCenterX;                                              // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDoCenterY;                                              // 0x0029(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_22KI[0x2];                                   // 0x002A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x002C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CurveLinearColor.GetLinearColorValue
	 */
	struct UCurveLinearColor_GetLinearColorValue_Params
	{
	public:
		float                                                      InTime;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        ReturnValue;                                             // 0x0004(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CurveVector.GetVectorValue
	 */
	struct UCurveVector_GetVectorValue_Params
	{
	public:
		float                                                      InTime;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0004(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerInput.SetMouseSensitivityToDefault
	 */
	struct UPlayerInput_SetMouseSensitivityToDefault_Params
	{	};

	/**
	 * Function Engine.PlayerInput.SetMouseSensitivity
	 */
	struct UPlayerInput_SetMouseSensitivity_Params
	{
	public:
		float                                                      Sensitivity;                                             // 0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerInput.SetBind
	 */
	struct UPlayerInput_SetBind_Params
	{
	public:
		class FName                                                BindName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              Command;                                                 // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function Engine.PlayerInput.InvertMouse
	 */
	struct UPlayerInput_InvertMouse_Params
	{	};

	/**
	 * Function Engine.PlayerInput.InvertAxisKey
	 */
	struct UPlayerInput_InvertAxisKey_Params
	{
	public:
		struct FKey                                                AxisKey;                                                 // 0x0000(0x0018)  (ConstParm, Parm)
	};

	/**
	 * Function Engine.PlayerInput.InvertAxis
	 */
	struct UPlayerInput_InvertAxis_Params
	{
	public:
		class FName                                                AxisName;                                                // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlayerInput.ClearSmoothing
	 */
	struct UPlayerInput_ClearSmoothing_Params
	{	};

	/**
	 * Function Engine.LevelStreaming.LevelStreamingVisibilityStatus__DelegateSignature
	 */
	struct ULevelStreaming_LevelStreamingVisibilityStatus__DelegateSignature_Params
	{	};

	/**
	 * Function Engine.LevelStreaming.LevelStreamingLoadedStatus__DelegateSignature
	 */
	struct ULevelStreaming_LevelStreamingLoadedStatus__DelegateSignature_Params
	{	};

	/**
	 * Function Engine.LevelStreaming.IsTileStreamingEnabled
	 */
	struct ULevelStreaming_IsTileStreamingEnabled_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.LevelStreaming.IsLevelVisible
	 */
	struct ULevelStreaming_IsLevelVisible_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.LevelStreaming.IsLevelLoaded
	 */
	struct ULevelStreaming_IsLevelLoaded_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.LevelStreaming.CreateInstance
	 */
	struct ULevelStreaming_CreateInstance_Params
	{
	public:
		class FString                                              UniqueInstanceName;                                      // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class ULevelStreaming*                                     ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.LevelStreaming.BPSetLevelVisibility
	 */
	struct ULevelStreaming_BPSetLevelVisibility_Params
	{
	public:
		bool                                                       bVisible;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsLowMemory;                                            // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.LevelStreaming.BPGetPackageName
	 */
	struct ULevelStreaming_BPGetPackageName_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.MaterialInstanceDynamic.SetVectorParameterValue
	 */
	struct UMaterialInstanceDynamic_SetVectorParameterValue_Params
	{
	public:
		class FName                                                ParameterName;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        Value;                                                   // 0x0008(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MaterialInstanceDynamic.SetTextureParameterValue
	 */
	struct UMaterialInstanceDynamic_SetTextureParameterValue_Params
	{
	public:
		class FName                                                ParameterName;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTexture*                                            Value;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MaterialInstanceDynamic.SetScalarParameterValue
	 */
	struct UMaterialInstanceDynamic_SetScalarParameterValue_Params
	{
	public:
		class FName                                                ParameterName;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Value;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MaterialInstanceDynamic.K2_InterpolateMaterialInstanceParams
	 */
	struct UMaterialInstanceDynamic_K2_InterpolateMaterialInstanceParams_Params
	{
	public:
		class UMaterialInstance*                                   MaterialA;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialInstance*                                   MaterialB;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Alpha;                                                   // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MaterialInstanceDynamic.K2_GetVectorParameterValue
	 */
	struct UMaterialInstanceDynamic_K2_GetVectorParameterValue_Params
	{
	public:
		class FName                                                ParameterName;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MaterialInstanceDynamic.K2_GetTextureParameterValue
	 */
	struct UMaterialInstanceDynamic_K2_GetTextureParameterValue_Params
	{
	public:
		class FName                                                ParameterName;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTexture*                                            ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MaterialInstanceDynamic.K2_GetScalarParameterValue
	 */
	struct UMaterialInstanceDynamic_K2_GetScalarParameterValue_Params
	{
	public:
		class FName                                                ParameterName;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MaterialInstanceDynamic.K2_CopyMaterialInstanceParameters
	 */
	struct UMaterialInstanceDynamic_K2_CopyMaterialInstanceParameters_Params
	{
	public:
		class UMaterialInterface*                                  SourceMaterialToCopyFrom;                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.MaterialInstanceDynamic.CopyParameterOverrides
	 */
	struct UMaterialInstanceDynamic_CopyParameterOverrides_Params
	{
	public:
		class UMaterialInstance*                                   MaterialInstance;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavigationPath.OnNavigationPathUpdated__DelegateSignature
	 */
	struct UNavigationPath_OnNavigationPathUpdated__DelegateSignature_Params
	{
	public:
		class UNavigationPath*                                     AffectedPath;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ENavPathEvent                                              PathEvent;                                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavigationPath.IsValid
	 */
	struct UNavigationPath_IsValid_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavigationPath.IsStringPulled
	 */
	struct UNavigationPath_IsStringPulled_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavigationPath.IsPartial
	 */
	struct UNavigationPath_IsPartial_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavigationPath.GetPathLength
	 */
	struct UNavigationPath_GetPathLength_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavigationPath.GetPathCost
	 */
	struct UNavigationPath_GetPathCost_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavigationPath.GetDebugString
	 */
	struct UNavigationPath_GetDebugString_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.NavigationPath.EnableRecalculationOnInvalidation
	 */
	struct UNavigationPath_EnableRecalculationOnInvalidation_Params
	{
	public:
		ENavigationOptionFlag                                      DoRecalculation;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.NavigationPath.EnableDebugDrawing
	 */
	struct UNavigationPath_EnableDebugDrawing_Params
	{
	public:
		bool                                                       bShouldDrawDebugData;                                    // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CITW[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FLinearColor                                        PathColor;                                               // 0x0004(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlatformInterfaceBase.PlatformInterfaceDelegate__DelegateSignature
	 */
	struct UPlatformInterfaceBase_PlatformInterfaceDelegate__DelegateSignature_Params
	{
	public:
		struct FPlatformInterfaceDelegateResult                    Result;                                                  // 0x0000(0x0038)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function Engine.InGameAdManager.OnUserClosedAdvertisement__DelegateSignature
	 */
	struct UInGameAdManager_OnUserClosedAdvertisement__DelegateSignature_Params
	{	};

	/**
	 * Function Engine.InGameAdManager.OnUserClickedBanner__DelegateSignature
	 */
	struct UInGameAdManager_OnUserClickedBanner__DelegateSignature_Params
	{	};

	/**
	 * Function Engine.TwitterIntegrationBase.TwitterRequest
	 */
	struct UTwitterIntegrationBase_TwitterRequest_Params
	{
	public:
		class FString                                              URL;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<class FString>                                      ParamKeysAndValues;                                      // 0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		ETwitterRequestMethod                                      RequestMethod;                                           // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_W3ON[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    AccountIndex;                                            // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0028(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TwitterIntegrationBase.ShowTweetUI
	 */
	struct UTwitterIntegrationBase_ShowTweetUI_Params
	{
	public:
		class FString                                              InitialMessage;                                          // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              URL;                                                     // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Picture;                                                 // 0x0020(0x0010)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0030(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TwitterIntegrationBase.Init
	 */
	struct UTwitterIntegrationBase_Init_Params
	{	};

	/**
	 * Function Engine.TwitterIntegrationBase.GetNumAccounts
	 */
	struct UTwitterIntegrationBase_GetNumAccounts_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TwitterIntegrationBase.GetAccountName
	 */
	struct UTwitterIntegrationBase_GetAccountName_Params
	{
	public:
		int32_t                                                    AccountIndex;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_0Z8O[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.TwitterIntegrationBase.CanShowTweetUI
	 */
	struct UTwitterIntegrationBase_CanShowTweetUI_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.TwitterIntegrationBase.AuthorizeAccounts
	 */
	struct UTwitterIntegrationBase_AuthorizeAccounts_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlatformInterfaceWebResponse.GetNumHeaders
	 */
	struct UPlatformInterfaceWebResponse_GetNumHeaders_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.PlatformInterfaceWebResponse.GetHeaderValue
	 */
	struct UPlatformInterfaceWebResponse_GetHeaderValue_Params
	{
	public:
		class FString                                              HeaderName;                                              // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function Engine.PlatformInterfaceWebResponse.GetHeader
	 */
	struct UPlatformInterfaceWebResponse_GetHeader_Params
	{
	public:
		int32_t                                                    HeaderIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_PAMM[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Header;                                                  // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		class FString                                              Value;                                                   // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function Engine.SkeletalMeshSocket.InitializeSocketFromLocation
	 */
	struct USkeletalMeshSocket_InitializeSocketFromLocation_Params
	{
	public:
		class USkeletalMeshComponent*                              SkelComp;                                                // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FVector                                             WorldLocation;                                           // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             WorldNormal;                                             // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SkeletalMeshSocket.GetSocketLocation
	 */
	struct USkeletalMeshSocket_GetSocketLocation_Params
	{
	public:
		class USkeletalMeshComponent*                              SkelComp;                                                // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.SoundBase.GetDuration
	 */
	struct USoundBase_GetDuration_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Texture2D.Blueprint_GetSizeY
	 */
	struct UTexture2D_Blueprint_GetSizeY_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.Texture2D.Blueprint_GetSizeX
	 */
	struct UTexture2D_Blueprint_GetSizeX_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CanvasRenderTarget2D.UpdateResource
	 */
	struct UCanvasRenderTarget2D_UpdateResource_Params
	{	};

	/**
	 * Function Engine.CanvasRenderTarget2D.ReceiveUpdate
	 */
	struct UCanvasRenderTarget2D_ReceiveUpdate_Params
	{
	public:
		class UCanvas*                                             Canvas;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Width;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Height;                                                  // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CanvasRenderTarget2D.OnCanvasRenderTargetUpdate__DelegateSignature
	 */
	struct UCanvasRenderTarget2D_OnCanvasRenderTargetUpdate__DelegateSignature_Params
	{
	public:
		class UCanvas*                                             Canvas;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Width;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Height;                                                  // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CanvasRenderTarget2D.GetSize
	 */
	struct UCanvasRenderTarget2D_GetSize_Params
	{
	public:
		int32_t                                                    Width;                                                   // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Height;                                                  // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.CanvasRenderTarget2D.CreateCanvasRenderTarget2D
	 */
	struct UCanvasRenderTarget2D_CreateCanvasRenderTarget2D_Params
	{
	public:
		class UClass*                                              CanvasRenderTarget2DClass;                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Width;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Height;                                                  // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UCanvasRenderTarget2D*                               ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.VehicleWheel.GetSuspensionOffset
	 */
	struct UVehicleWheel_GetSuspensionOffset_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.VehicleWheel.GetSteerAngle
	 */
	struct UVehicleWheel_GetSteerAngle_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function Engine.VehicleWheel.GetRotationAngle
	 */
	struct UVehicleWheel_GetRotationAngle_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
