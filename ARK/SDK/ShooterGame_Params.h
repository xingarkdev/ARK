#pragma once

/**
 * Name: ARK
 * Version: 1.0.1
 */

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace CG
{
	// --------------------------------------------------
	// # Structs
	// --------------------------------------------------
	/**
	 * Function ShooterGame.PrimalDinoAIController.WantsAttackPriority
	 */
	struct APrimalDinoAIController_WantsAttackPriority_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.UpdateAggro
	 */
	struct APrimalDinoAIController_UpdateAggro_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.StopBrainComponent
	 */
	struct APrimalDinoAIController_StopBrainComponent_Params
	{
	public:
		class FString                                              Reason;                                                  // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.StaticGetRandomWanderDestination
	 */
	struct APrimalDinoAIController_StaticGetRandomWanderDestination_Params
	{
	public:
		class APrimalDinoCharacter*                                TargetCharacter;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalDinoAIController*                             TargetAIController;                                      // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             locOverride;                                             // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      randomOffsetMultiplier;                                  // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bUseRandomNegativeXDir;                                  // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOrientRandOffsetByRotation;                             // 0x0021(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KDMS[0x2];                                   // 0x0022(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRotator                                            orientRandOffsetByRotation;                              // 0x0024(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      GroundCheckSpreadOverride;                               // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0034(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.ShouldForceRunWhenAttacking
	 */
	struct APrimalDinoAIController_ShouldForceRunWhenAttacking_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.SetTarget
	 */
	struct APrimalDinoAIController_SetTarget_Params
	{
	public:
		class AActor*                                              InTarget;                                                // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDontAddAggro;                                           // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOverlapFoundTarget;                                     // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.SetHasAttackPriority
	 */
	struct APrimalDinoAIController_SetHasAttackPriority_Params
	{
	public:
		bool                                                       Value;                                                   // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.SetAttackRotationRate
	 */
	struct APrimalDinoAIController_SetAttackRotationRate_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.SetAttackGroundSpeed
	 */
	struct APrimalDinoAIController_SetAttackGroundSpeed_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.ResumeBrainComponent
	 */
	struct APrimalDinoAIController_ResumeBrainComponent_Params
	{
	public:
		class FString                                              Reason;                                                  // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.RestartBrainComponent
	 */
	struct APrimalDinoAIController_RestartBrainComponent_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.ResetRotationUseAcceleration
	 */
	struct APrimalDinoAIController_ResetRotationUseAcceleration_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.ResetRotationRate
	 */
	struct APrimalDinoAIController_ResetRotationRate_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.ResetGroundSpeed
	 */
	struct APrimalDinoAIController_ResetGroundSpeed_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.ResetAccelerationFollowsRotation
	 */
	struct APrimalDinoAIController_ResetAccelerationFollowsRotation_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.RecoverMovement
	 */
	struct APrimalDinoAIController_RecoverMovement_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.RebootBrainComponent
	 */
	struct APrimalDinoAIController_RebootBrainComponent_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.PlayStartledAnim
	 */
	struct APrimalDinoAIController_PlayStartledAnim_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.PauseBrainComponent
	 */
	struct APrimalDinoAIController_PauseBrainComponent_Params
	{
	public:
		class FString                                              Reason;                                                  // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.OrderedToLand
	 */
	struct APrimalDinoAIController_OrderedToLand_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.OnLosingTargetEvent
	 */
	struct APrimalDinoAIController_OnLosingTargetEvent_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.IsWithinAttackRangeAndCalculateBestAttack
	 */
	struct APrimalDinoAIController_IsWithinAttackRangeAndCalculateBestAttack_Params
	{
	public:
		class AActor*                                              Other;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAttackChanged;                                          // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.IsWithinAttackRange
	 */
	struct APrimalDinoAIController_IsWithinAttackRange_Params
	{
	public:
		class AActor*                                              Other;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceUseLastAttackIndex;                                // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.IsLogicPaused
	 */
	struct APrimalDinoAIController_IsLogicPaused_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.IsForceTargetDinoRider
	 */
	struct APrimalDinoAIController_IsForceTargetDinoRider_Params
	{
	public:
		class AShooterCharacter*                                   playerTarget;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.GetWanderAroundActorDestination
	 */
	struct APrimalDinoAIController_GetWanderAroundActorDestination_Params
	{
	public:
		class APrimalDinoCharacter*                                DinoCharacter;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             originalDestination;                                     // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0014(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.GetTarget
	 */
	struct APrimalDinoAIController_GetTarget_Params
	{
	public:
		class AActor*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.GetRandomWanderDestination
	 */
	struct APrimalDinoAIController_GetRandomWanderDestination_Params
	{
	public:
		struct FVector                                             locOverride;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      randomOffsetMultiplier;                                  // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bUseRandomNegativeXDir;                                  // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOrientRandOffsetByRotation;                             // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_Y4EI[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRotator                                            orientRandOffsetByRotation;                              // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0020(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.GetMinAttackRange
	 */
	struct APrimalDinoAIController_GetMinAttackRange_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.GetLandingLocation
	 */
	struct APrimalDinoAIController_GetLandingLocation_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.GetHasAttackPriority
	 */
	struct APrimalDinoAIController_GetHasAttackPriority_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.GetCurrentAttackIndex
	 */
	struct APrimalDinoAIController_GetCurrentAttackIndex_Params
	{
	public:
		unsigned char                                              ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.GetControllerPawn
	 */
	struct APrimalDinoAIController_GetControllerPawn_Params
	{
	public:
		class APawn*                                               ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.GetControlledDino
	 */
	struct APrimalDinoAIController_GetControlledDino_Params
	{
	public:
		class APrimalDinoCharacter*                                ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.GetClosestTree
	 */
	struct APrimalDinoAIController_GetClosestTree_Params
	{
	public:
		struct FOverlapResult                                      OutHit;                                                  // 0x0000(0x0018)  (Parm, OutParm)
		class UStaticMeshComponent*                                ReturnValue;                                             // 0x0018(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.GetAttackRotationRate
	 */
	struct APrimalDinoAIController_GetAttackRotationRate_Params
	{
	public:
		struct FRotator                                            ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.GetAttackRotationRangeDegrees
	 */
	struct APrimalDinoAIController_GetAttackRotationRangeDegrees_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.GetAttackRotationGroundSpeedMultiplier
	 */
	struct APrimalDinoAIController_GetAttackRotationGroundSpeedMultiplier_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.GetAttackRange
	 */
	struct APrimalDinoAIController_GetAttackRange_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.GetAttackInterval
	 */
	struct APrimalDinoAIController_GetAttackInterval_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.GetAggroNotifyNeighborsRange
	 */
	struct APrimalDinoAIController_GetAggroNotifyNeighborsRange_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.GetAggroEntry
	 */
	struct APrimalDinoAIController_GetAggroEntry_Params
	{
	public:
		int32_t                                                    index;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_OJUM[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              OutAttacker;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OutAggroFactor;                                          // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_FUH4[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		double                                                     OutLastAggroHitTime;                                     // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.GetAggroEntriesCount
	 */
	struct APrimalDinoAIController_GetAggroEntriesCount_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.GetAggroEntriesAttackerAtIndex
	 */
	struct APrimalDinoAIController_GetAggroEntriesAttackerAtIndex_Params
	{
	public:
		int32_t                                                    index;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_J924[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.GetAggroDesirability
	 */
	struct APrimalDinoAIController_GetAggroDesirability_Params
	{
	public:
		class AActor*                                              InTarget;                                                // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.FindTarget
	 */
	struct APrimalDinoAIController_FindTarget_Params
	{
	public:
		bool                                                       bDontSet;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_PSJF[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.FindNewTarget
	 */
	struct APrimalDinoAIController_FindNewTarget_Params
	{
	public:
		bool                                                       bDontSet;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_9FEO[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.ClearAggroEntries
	 */
	struct APrimalDinoAIController_ClearAggroEntries_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.ChangedAITarget
	 */
	struct APrimalDinoAIController_ChangedAITarget_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.CanLand
	 */
	struct APrimalDinoAIController_CanLand_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.CalculateAndSetWonderingAIStateEvent
	 */
	struct APrimalDinoAIController_CalculateAndSetWonderingAIStateEvent_Params
	{
	public:
		bool                                                       StateChanged;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.CalculateAndSetWonderingAIState
	 */
	struct APrimalDinoAIController_CalculateAndSetWonderingAIState_Params
	{
	public:
		bool                                                       StateChanged;                                            // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.BPUpdateBestTarget
	 */
	struct APrimalDinoAIController_BPUpdateBestTarget_Params
	{
	public:
		class AActor*                                              bestTarget;                                              // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       dontSetIn;                                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       dontSetOut;                                              // 0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_MNRB[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.BPShouldNotifyNeighbor
	 */
	struct APrimalDinoAIController_BPShouldNotifyNeighbor_Params
	{
	public:
		class APrimalDinoCharacter*                                neighbor;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.BPShouldNotifyAnyNeighbor
	 */
	struct APrimalDinoAIController_BPShouldNotifyAnyNeighbor_Params
	{
	public:
		class APrimalDinoCharacter*                                neighbor;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.BPSetupFindTarget
	 */
	struct APrimalDinoAIController_BPSetupFindTarget_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.BPOverrideLandingLocation
	 */
	struct APrimalDinoAIController_BPOverrideLandingLocation_Params
	{
	public:
		float                                                      outRadius;                                               // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0004(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.BPOverrideIgnoredByWildDino
	 */
	struct APrimalDinoAIController_BPOverrideIgnoredByWildDino_Params
	{
	public:
		class AActor*                                              wildDinoToIgnore;                                        // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.BPOnFleeEvent
	 */
	struct APrimalDinoAIController_BPOnFleeEvent_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.BPNotifyTargetSet
	 */
	struct APrimalDinoAIController_BPNotifyTargetSet_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.BPGetTargetingDesire
	 */
	struct APrimalDinoAIController_BPGetTargetingDesire_Params
	{
	public:
		class AActor*                                              forTarget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ForTargetingDesireValue;                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.BPForceTargetDinoRider
	 */
	struct APrimalDinoAIController_BPForceTargetDinoRider_Params
	{
	public:
		class AShooterCharacter*                                   playerTarget;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.BP_TamedOverrideHorizontalLandingRange
	 */
	struct APrimalDinoAIController_BP_TamedOverrideHorizontalLandingRange_Params
	{
	public:
		struct FVector2D                                           ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.AvoidOutOfWater
	 */
	struct APrimalDinoAIController_AvoidOutOfWater_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.AvoidGenericToPoint
	 */
	struct APrimalDinoAIController_AvoidGenericToPoint_Params
	{
	public:
		struct FVector                                             TargetDestination;                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoAIController.AddToAggro
	 */
	struct APrimalDinoAIController_AddToAggro_Params
	{
	public:
		class AActor*                                              Attacker;                                                // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DamagePercent;                                           // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bNotifyNeighbors;                                        // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       SetValue;                                                // 0x000D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsFromDamage;                                           // 0x000E(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       skipTeamCheck;                                           // 0x000F(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.AIAttackCoordinator.UpdateAttackGroup
	 */
	struct AAIAttackCoordinator_UpdateAttackGroup_Params
	{
	public:
		TArray<class APrimalDinoAIController*>                     AttackGroup;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.AIAttackCoordinator.RemoveAttacker
	 */
	struct AAIAttackCoordinator_RemoveAttacker_Params
	{
	public:
		class APrimalDinoAIController*                             Controller;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.AIAttackCoordinator.GetNumAttackersWithPriorityForTarget
	 */
	struct AAIAttackCoordinator_GetNumAttackersWithPriorityForTarget_Params
	{
	public:
		class AActor*                                              Target;                                                  // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.AIAttackCoordinator.GetNumAttackersForTarget
	 */
	struct AAIAttackCoordinator_GetNumAttackersForTarget_Params
	{
	public:
		class AActor*                                              Target;                                                  // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.AIAttackCoordinator.ClearAllAttackers
	 */
	struct AAIAttackCoordinator_ClearAllAttackers_Params
	{	};

	/**
	 * Function ShooterGame.AIAttackCoordinator.CalculateAttackerPriorityWeight
	 */
	struct AAIAttackCoordinator_CalculateAttackerPriorityWeight_Params
	{
	public:
		class APrimalDinoAIController*                             Attacker;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.AIAttackCoordinator.AddAttackerCharacter
	 */
	struct AAIAttackCoordinator_AddAttackerCharacter_Params
	{
	public:
		class APrimalDinoCharacter*                                Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.AIAttackCoordinator.AddAttacker
	 */
	struct AAIAttackCoordinator_AddAttacker_Params
	{
	public:
		class APrimalDinoAIController*                             Controller;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalGlobals.OnConfirmationDialogClosed
	 */
	struct UPrimalGlobals_OnConfirmationDialogClosed_Params
	{
	public:
		bool                                                       bAccept;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalGlobals.GetDayCycleManager
	 */
	struct UPrimalGlobals_GetDayCycleManager_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class ADayCycleManager*                                    ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalGlobals.FinishedLoadingGameMedia
	 */
	struct UPrimalGlobals_FinishedLoadingGameMedia_Params
	{	};

	/**
	 * Function ShooterGame.PrimalGameData.TickedWorld
	 */
	struct UPrimalGameData_TickedWorld_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalGameData.LocalIsPerMapExplorerNoteUnlocked
	 */
	struct UPrimalGameData_LocalIsPerMapExplorerNoteUnlocked_Params
	{
	public:
		int32_t                                                    ExplorerNoteIndex;                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalGameData.LocalIsGlobalExplorerNoteUnlocked
	 */
	struct UPrimalGameData_LocalIsGlobalExplorerNoteUnlocked_Params
	{
	public:
		int32_t                                                    ExplorerNoteIndex;                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalGameData.LoadedWorld
	 */
	struct UPrimalGameData_LoadedWorld_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalGameData.GetXPMax
	 */
	struct UPrimalGameData_GetXPMax_Params
	{
	public:
		ELevelExperienceRampType                                   levelType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZD43[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalGameData.GetRedirectedClassFromRedirector
	 */
	struct UPrimalGameData_GetRedirectedClassFromRedirector_Params
	{
	public:
		struct FInvalidReferenceRedirector                         Redirector;                                              // 0x0000(0x0038)  (ConstParm, Parm, OutParm, ReferenceParm)
		class UClass*                                              ReturnValue;                                             // 0x0038(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalGameData.GetRedirectedClass
	 */
	struct UPrimalGameData_GetRedirectedClass_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class UObject*                                             WorldContextObject;                                      // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalGameData.GetLevelXP
	 */
	struct UPrimalGameData_GetLevelXP_Params
	{
	public:
		ELevelExperienceRampType                                   levelType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_W9ZU[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    forLevel;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalGameData.GetLevelMax
	 */
	struct UPrimalGameData_GetLevelMax_Params
	{
	public:
		ELevelExperienceRampType                                   levelType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_OOTH[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalGameData.GetLevelExperienceRamp
	 */
	struct UPrimalGameData_GetLevelExperienceRamp_Params
	{
	public:
		ELevelExperienceRampType                                   levelType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_72NB[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FLevelExperienceRamp                                ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalGameData.GetGenericCombatMusic
	 */
	struct UPrimalGameData_GetGenericCombatMusic_Params
	{
	public:
		class APrimalCharacter*                                    forCharacter;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalCharacter*                                    forEnemy;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USoundBase*                                          ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalGameData.GetExplorerNoteDescription
	 */
	struct UPrimalGameData_GetExplorerNoteDescription_Params
	{
	public:
		int32_t                                                    ExplorerNoteIndex;                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_4PGU[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalGameData.GetDinoEntry
	 */
	struct UPrimalGameData_GetDinoEntry_Params
	{
	public:
		class UClass*                                              DinoClass;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalGameData.GetColorForDefinition
	 */
	struct UPrimalGameData_GetColorForDefinition_Params
	{
	public:
		int32_t                                                    DefinitionIndex;                                         // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        ReturnValue;                                             // 0x0004(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalGameData.GetBuffsForBitmask
	 */
	struct UPrimalGameData_GetBuffsForBitmask_Params
	{
	public:
		int32_t                                                    mask;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_2EM1[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class UClass*>                                      ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalGameData.GetBitmaskForBuffs
	 */
	struct UPrimalGameData_GetBitmaskForBuffs_Params
	{
	public:
		TArray<class APrimalBuff*>                                 ActiveBuffs;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalGameData.BPMergeModGameData
	 */
	struct UPrimalGameData_BPMergeModGameData_Params
	{
	public:
		class UPrimalGameData*                                     AnotherGameData;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalGameData.BPInitializeGameData
	 */
	struct UPrimalGameData_BPInitializeGameData_Params
	{	};

	/**
	 * Function ShooterGame.PrimalGameData.BPGetItemQualityIndex
	 */
	struct UPrimalGameData_BPGetItemQualityIndex_Params
	{
	public:
		float                                                      ItemRating;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalGameData.BPGetGameData
	 */
	struct UPrimalGameData_BPGetGameData_Params
	{
	public:
		class UPrimalGameData*                                     ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.UseItemOntoItem
	 */
	struct UPrimalItem_UseItemOntoItem_Params
	{
	public:
		class UPrimalItem*                                         DestinationItem;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    AdditionalData;                                          // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.Use
	 */
	struct UPrimalItem_Use_Params
	{
	public:
		bool                                                       bOverridePlayerInput;                                    // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.UpdatedItem
	 */
	struct UPrimalItem_UpdatedItem_Params
	{
	public:
		bool                                                       ResetUploadTime;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.UnequipWeapon
	 */
	struct UPrimalItem_UnequipWeapon_Params
	{
	public:
		bool                                                       bDelayedUnequip;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.StaticGetItemNameAndIcon
	 */
	struct UPrimalItem_StaticGetItemNameAndIcon_Params
	{
	public:
		class UClass*                                              ItemType;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              OutItemName;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		class UTexture2D*                                          OutItemIcon;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bShortName;                                              // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_FH12[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AShooterPlayerController*                            ForPC;                                                   // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0030(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.StaticGetDinoColorSetIndexForItemColorID
	 */
	struct UPrimalItem_StaticGetDinoColorSetIndexForItemColorID_Params
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.StaticGetColorForItemColorID
	 */
	struct UPrimalItem_StaticGetColorForItemColorID_Params
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        ReturnValue;                                             // 0x0004(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.SlottedTick
	 */
	struct UPrimalItem_SlottedTick_Params
	{
	public:
		float                                                      DeltaSeconds;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.SkinEquippedBlueprintTick
	 */
	struct UPrimalItem_SkinEquippedBlueprintTick_Params
	{
	public:
		class UPrimalItem*                                         OwnerItem;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaSeconds;                                            // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.SetUnreplicatedEggData
	 */
	struct UPrimalItem_SetUnreplicatedEggData_Params
	{
	public:
		struct FUnreplicatedEggData                                EggData;                                                 // 0x0000(0x0058)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalItem.SetQuantity
	 */
	struct UPrimalItem_SetQuantity_Params
	{
	public:
		int32_t                                                    NewQuantity;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ShowHUDNotification;                                     // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.SetItemStatValues
	 */
	struct UPrimalItem_SetItemStatValues_Params
	{
	public:
		int32_t                                                    idx;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    val;                                                     // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.SetItemStatInfo
	 */
	struct UPrimalItem_SetItemStatInfo_Params
	{
	public:
		int32_t                                                    idx;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FItemStatInfo                                       val;                                                     // 0x0004(0x0024)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalItem.SetItemColors
	 */
	struct UPrimalItem_SetItemColors_Params
	{
	public:
		TArray<int32_t>                                            ColorIDs;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.SetCustomItemData
	 */
	struct UPrimalItem_SetCustomItemData_Params
	{
	public:
		struct FCustomItemData                                     InData;                                                  // 0x0000(0x0078)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalItem.ServerUpdatedWeaponClipAmmo
	 */
	struct UPrimalItem_ServerUpdatedWeaponClipAmmo_Params
	{	};

	/**
	 * Function ShooterGame.PrimalItem.ServerSendItemExecCommandToPlayer
	 */
	struct UPrimalItem_ServerSendItemExecCommandToPlayer_Params
	{
	public:
		class AShooterPlayerController*                            ToPC;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                CommandName;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FBPNetExecParams                                    ExecParams;                                              // 0x0010(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       bIsReliable;                                             // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceSendToLocalPlayer;                                 // 0x0051(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreRelevancy;                                        // 0x0052(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.ServerSendItemExecCommandToEveryone
	 */
	struct UPrimalItem_ServerSendItemExecCommandToEveryone_Params
	{
	public:
		class FName                                                CommandName;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FBPNetExecParams                                    ExecParams;                                              // 0x0008(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       bIsReliable;                                             // 0x0048(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceSendToLocalPlayer;                                 // 0x0049(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreRelevancy;                                        // 0x004A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.ServerRemoveWeaponAccessoryOnly
	 */
	struct UPrimalItem_ServerRemoveWeaponAccessoryOnly_Params
	{	};

	/**
	 * Function ShooterGame.PrimalItem.ServerRemoveItemSkinOnly
	 */
	struct UPrimalItem_ServerRemoveItemSkinOnly_Params
	{	};

	/**
	 * Function ShooterGame.PrimalItem.ServerRemoveItemSkin
	 */
	struct UPrimalItem_ServerRemoveItemSkin_Params
	{	};

	/**
	 * Function ShooterGame.PrimalItem.SelectedCustomContextMenuItem
	 */
	struct UPrimalItem_SelectedCustomContextMenuItem_Params
	{
	public:
		class FName                                                ContextItem;                                             // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            ForPC;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.RepairItem
	 */
	struct UPrimalItem_RepairItem_Params
	{
	public:
		bool                                                       bIgnoreInventoryRequirement;                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_C65Y[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      UseNextRepairPercentage;                                 // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      RepairSpeedMultiplier;                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.RemoveWeaponAccessory
	 */
	struct UPrimalItem_RemoveWeaponAccessory_Params
	{	};

	/**
	 * Function ShooterGame.PrimalItem.RemoveFromSlot
	 */
	struct UPrimalItem_RemoveFromSlot_Params
	{
	public:
		bool                                                       bForce;                                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.RemovedSkinFromItem
	 */
	struct UPrimalItem_RemovedSkinFromItem_Params
	{
	public:
		class UPrimalItem*                                         FromOwnerItem;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsFirstTime;                                            // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.RemoveCustomItemData
	 */
	struct UPrimalItem_RemoveCustomItemData_Params
	{
	public:
		class FName                                                CustomDataName;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.RemoveClipAmmo
	 */
	struct UPrimalItem_RemoveClipAmmo_Params
	{
	public:
		bool                                                       bDontUpdateItem;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.RefreshAttachments
	 */
	struct UPrimalItem_RefreshAttachments_Params
	{
	public:
		bool                                                       bRefreshDefaultAttachments;                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       isShieldSpecificRefresh;                                 // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsFromUpdateItem;                                       // 0x0002(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.OverrideItemRating
	 */
	struct UPrimalItem_OverrideItemRating_Params
	{
	public:
		float                                                      rating;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.OverrideCrouchingSound
	 */
	struct UPrimalItem_OverrideCrouchingSound_Params
	{
	public:
		class USoundBase*                                          InSound;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsProne;                                                // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_6X6Q[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    soundState;                                              // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USoundBase*                                          ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.NotifyEditText
	 */
	struct UPrimalItem_NotifyEditText_Params
	{
	public:
		class AShooterPlayerController*                            PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.MergeCustomItemDatas
	 */
	struct UPrimalItem_MergeCustomItemDatas_Params
	{
	public:
		TArray<struct FCustomItemData>                             DataSet1;                                                // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<struct FCustomItemData>                             DataSet2;                                                // 0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<struct FCustomItemData>                             ReturnValue;                                             // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalItem.MeetRepairingRequirements
	 */
	struct UPrimalItem_MeetRepairingRequirements_Params
	{
	public:
		class UPrimalInventoryComponent*                           compareInventoryComp;                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       bIsForCraftQueueAddition;                                // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.MakeRepairingRequirementsString
	 */
	struct UPrimalItem_MakeRepairingRequirementsString_Params
	{
	public:
		class UPrimalInventoryComponent*                           compareInventoryComp;                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		TArray<struct FCraftingResourceRequirement>                InRepairingRequirements;                                 // 0x0008(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalItem.LocalUse
	 */
	struct UPrimalItem_LocalUse_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.IsValidForCrafting
	 */
	struct UPrimalItem_IsValidForCrafting_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.IsUsableConsumable
	 */
	struct UPrimalItem_IsUsableConsumable_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.IsOwnerInWater
	 */
	struct UPrimalItem_IsOwnerInWater_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.IsOwnerInNoPainWater
	 */
	struct UPrimalItem_IsOwnerInNoPainWater_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.IsCustomContextMenuItemEnabled
	 */
	struct UPrimalItem_IsCustomContextMenuItemEnabled_Params
	{
	public:
		class FName                                                ContextItem;                                             // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.IsCooldownReadyForUse
	 */
	struct UPrimalItem_IsCooldownReadyForUse_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.IsBroken
	 */
	struct UPrimalItem_IsBroken_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.IsActiveEventItem
	 */
	struct UPrimalItem_IsActiveEventItem_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.InitNewItem
	 */
	struct UPrimalItem_InitNewItem_Params
	{
	public:
		float                                                      ItemQuality;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_06GU[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimalInventoryComponent*                           toInventory;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		float                                                      MaxItemDifficultyClamp;                                  // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MinRandomQuality;                                        // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.InitializeItem
	 */
	struct UPrimalItem_InitializeItem_Params
	{
	public:
		bool                                                       bForceReinit;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_T041[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UWorld*                                              OptionalInitWorld;                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.IncrementItemQuantity
	 */
	struct UPrimalItem_IncrementItemQuantity_Params
	{
	public:
		int32_t                                                    amount;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRepicateToClient;                                       // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDontUpdateWeight;                                       // 0x0005(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsFromUseConsumption;                                   // 0x0006(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsArkTributeItem;                                       // 0x0007(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsFromCraftingConsumption;                              // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_50FD[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.HasCustomItemData
	 */
	struct UPrimalItem_HasCustomItemData_Params
	{
	public:
		class FName                                                CustomDataName;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.HasBuffToGiveOwnerWhenEquipped
	 */
	struct UPrimalItem_HasBuffToGiveOwnerWhenEquipped_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.HandleShieldDamageBlocking
	 */
	struct UPrimalItem_HandleShieldDamageBlocking_Params
	{
	public:
		class AShooterCharacter*                                   ForShooterCharacter;                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DamageIn;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_4TPT[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0010(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AController*                                         EventInstigator;                                         // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0040(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetWeaponTemplateMeleeDamageType
	 */
	struct UPrimalItem_GetWeaponTemplateMeleeDamageType_Params
	{
	public:
		class UClass*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetWeaponTemplateMeleeDamageAmount
	 */
	struct UPrimalItem_GetWeaponTemplateMeleeDamageAmount_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetWeaponTemplateHarvestDamageType
	 */
	struct UPrimalItem_GetWeaponTemplateHarvestDamageType_Params
	{
	public:
		class UClass*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetWeaponTemplateHarvestDamageMultiplier
	 */
	struct UPrimalItem_GetWeaponTemplateHarvestDamageMultiplier_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetWeaponTemplateDurabilityToConsumePerMeleeHit
	 */
	struct UPrimalItem_GetWeaponTemplateDurabilityToConsumePerMeleeHit_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetWeaponClipAmmo
	 */
	struct UPrimalItem_GetWeaponClipAmmo_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetUseItemAddCharacterStatusValue
	 */
	struct UPrimalItem_GetUseItemAddCharacterStatusValue_Params
	{
	public:
		EPrimalCharacterStatusValue                                ValueType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5ETO[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetUnreplicatedEggData
	 */
	struct UPrimalItem_GetUnreplicatedEggData_Params
	{
	public:
		struct FUnreplicatedEggData                                EggData;                                                 // 0x0000(0x0058)  (Parm, OutParm)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetSpoilingTime
	 */
	struct UPrimalItem_GetSpoilingTime_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetRepairingRequirementsString
	 */
	struct UPrimalItem_GetRepairingRequirementsString_Params
	{
	public:
		class UPrimalInventoryComponent*                           compareInventoryComp;                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       bUseBaseRequeriments;                                    // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZFNK[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      OverrideRepairPercent;                                   // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetRemainingCooldownTime
	 */
	struct UPrimalItem_GetRemainingCooldownTime_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetProjectileType
	 */
	struct UPrimalItem_GetProjectileType_Params
	{
	public:
		class UClass*                                              ItemType;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetOwnerPlayer
	 */
	struct UPrimalItem_GetOwnerPlayer_Params
	{
	public:
		class AShooterCharacter*                                   ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetOwnerActor
	 */
	struct UPrimalItem_GetOwnerActor_Params
	{
	public:
		class AActor*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetMaxItemQuantity
	 */
	struct UPrimalItem_GetMaxItemQuantity_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetMaximumAdditionalCrafting
	 */
	struct UPrimalItem_GetMaximumAdditionalCrafting_Params
	{
	public:
		class UPrimalInventoryComponent*                           forComp;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            PC;                                                      // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetItemWeight
	 */
	struct UPrimalItem_GetItemWeight_Params
	{
	public:
		bool                                                       bJustOneQuantity;                                        // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceNotBlueprintWeight;                                // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_VCYM[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetItemStatValues
	 */
	struct UPrimalItem_GetItemStatValues_Params
	{
	public:
		int32_t                                                    idx;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetItemStatString
	 */
	struct UPrimalItem_GetItemStatString_Params
	{
	public:
		EPrimalItemStat                                            statType;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_TEHU[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetItemStatModifier
	 */
	struct UPrimalItem_GetItemStatModifier_Params
	{
	public:
		EPrimalItemStat                                            statType;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_SFZJ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetItemStatInfo
	 */
	struct UPrimalItem_GetItemStatInfo_Params
	{
	public:
		int32_t                                                    idx;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FItemStatInfo                                       ReturnValue;                                             // 0x0004(0x0024)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetItemShortName
	 */
	struct UPrimalItem_GetItemShortName_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetItemNetInfo
	 */
	struct UPrimalItem_GetItemNetInfo_Params
	{
	public:
		bool                                                       bIsForSendingToClient;                                   // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_YHYX[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FItemNetInfo                                        ReturnValue;                                             // 0x0008(0x01B0)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetItemDyeColors
	 */
	struct UPrimalItem_GetItemDyeColors_Params
	{
	public:
		TArray<struct FLinearColor>                                ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetItemCustomColor
	 */
	struct UPrimalItem_GetItemCustomColor_Params
	{
	public:
		int32_t                                                    ColorRegion;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        outColor;                                                // 0x0004(0x0010)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetItemColorIDFromDyeItemID
	 */
	struct UPrimalItem_GetItemColorIDFromDyeItemID_Params
	{
	public:
		int32_t                                                    MasterItemListIndex;                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetItemColorID
	 */
	struct UPrimalItem_GetItemColorID_Params
	{
	public:
		int32_t                                                    theRegion;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetItemBytes
	 */
	struct UPrimalItem_GetItemBytes_Params
	{
	public:
		TArray<unsigned char>                                      Bytes;                                                   // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetInventoryIconDisplayText
	 */
	struct UPrimalItem_GetInventoryIconDisplayText_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetInitializeItemOwnerInventory
	 */
	struct UPrimalItem_GetInitializeItemOwnerInventory_Params
	{
	public:
		class UPrimalInventoryComponent*                           ReturnValue;                                             // 0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetHUDIconMaterial
	 */
	struct UPrimalItem_GetHUDIconMaterial_Params
	{
	public:
		class UMaterialInterface*                                  ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetEngramRequirementLevel
	 */
	struct UPrimalItem_GetEngramRequirementLevel_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetEggHatchTimeRemaining
	 */
	struct UPrimalItem_GetEggHatchTimeRemaining_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      additionalMultiplier;                                    // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetDurabilityPercentage
	 */
	struct UPrimalItem_GetDurabilityPercentage_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetCustomItemData
	 */
	struct UPrimalItem_GetCustomItemData_Params
	{
	public:
		class FName                                                CustomDataName;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FCustomItemData                                     OutData;                                                 // 0x0008(0x0078)  (Parm, OutParm)
		bool                                                       ReturnValue;                                             // 0x0080(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetCraftingResourceRequirement
	 */
	struct UPrimalItem_GetCraftingResourceRequirement_Params
	{
	public:
		int32_t                                                    CraftingResourceIndex;                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetCraftingRequirements
	 */
	struct UPrimalItem_GetCraftingRequirements_Params
	{
	public:
		TArray<struct FCraftingResourceRequirement>                CombinedRequirements;                                    // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		float                                                      Percent;                                                 // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_FKWH[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FCraftingResourceRequirement>                ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetComponentToAttach
	 */
	struct UPrimalItem_GetComponentToAttach_Params
	{
	public:
		int32_t                                                    attachmentIndex;                                         // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_W7L0[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              UseOtherActor;                                           // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UActorComponent*                                     ReturnValue;                                             // 0x0010(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetBuffToGiveOwnerWhenEquipped
	 */
	struct UPrimalItem_GetBuffToGiveOwnerWhenEquipped_Params
	{
	public:
		bool                                                       bForceResolveSoftRef;                                    // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_WNLH[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetAttachedComponentsNum
	 */
	struct UPrimalItem_GetAttachedComponentsNum_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetAttachedComponent
	 */
	struct UPrimalItem_GetAttachedComponent_Params
	{
	public:
		int32_t                                                    attachmentIndex;                                         // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_76VX[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              UseOtherActor;                                           // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UActorComponent*                                     ReturnValue;                                             // 0x0010(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.GetActualEquipmentType
	 */
	struct UPrimalItem_GetActualEquipmentType_Params
	{
	public:
		bool                                                       bGetBaseValue;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EPrimalEquipmentType                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.FinishRepairing
	 */
	struct UPrimalItem_FinishRepairing_Params
	{	};

	/**
	 * Function ShooterGame.PrimalItem.EquippedBlueprintTick
	 */
	struct UPrimalItem_EquippedBlueprintTick_Params
	{
	public:
		float                                                      DeltaSeconds;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.DoesItemUseColorRegion
	 */
	struct UPrimalItem_DoesItemUseColorRegion_Params
	{
	public:
		int32_t                                                    RegionIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.CreateItemFromNetInfo
	 */
	struct UPrimalItem_CreateItemFromNetInfo_Params
	{
	public:
		struct FItemNetInfo                                        newItemInfo;                                             // 0x0000(0x01B0)  (ConstParm, Parm, OutParm, ReferenceParm)
		class UPrimalItem*                                         ReturnValue;                                             // 0x01B0(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.CreateFromBytes
	 */
	struct UPrimalItem_CreateFromBytes_Params
	{
	public:
		TArray<unsigned char>                                      Bytes;                                                   // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UPrimalItem*                                         ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.Crafted
	 */
	struct UPrimalItem_Crafted_Params
	{
	public:
		bool                                                       bWasCraftedFromEngram;                                   // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.CraftBlueprint
	 */
	struct UPrimalItem_CraftBlueprint_Params
	{
	public:
		bool                                                       bConsumeResources;                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.ClientUpdatedWeaponClipAmmo
	 */
	struct UPrimalItem_ClientUpdatedWeaponClipAmmo_Params
	{	};

	/**
	 * Function ShooterGame.PrimalItem.ClampStats
	 */
	struct UPrimalItem_ClampStats_Params
	{
	public:
		class UPrimalInventoryComponent*                           inventory;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.CheckForInventoryDupes
	 */
	struct UPrimalItem_CheckForInventoryDupes_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.CanUseWithItemSource
	 */
	struct UPrimalItem_CanUseWithItemSource_Params
	{
	public:
		class UPrimalItem*                                         DestinationItem;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.CanUseWithItemDestination
	 */
	struct UPrimalItem_CanUseWithItemDestination_Params
	{
	public:
		class UPrimalItem*                                         SourceItem;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.CanUse
	 */
	struct UPrimalItem_CanUse_Params
	{
	public:
		bool                                                       bIgnoreCooldown;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.CanSpoil
	 */
	struct UPrimalItem_CanSpoil_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.CanRepair
	 */
	struct UPrimalItem_CanRepair_Params
	{
	public:
		bool                                                       bIgnoreInventoryRequirement;                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.CanFullyCraft
	 */
	struct UPrimalItem_CanFullyCraft_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.CanEquipWeapon
	 */
	struct UPrimalItem_CanEquipWeapon_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.CanDrop
	 */
	struct UPrimalItem_CanDrop_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.CanCraft
	 */
	struct UPrimalItem_CanCraft_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPUsedOntoItem
	 */
	struct UPrimalItem_BPUsedOntoItem_Params
	{
	public:
		class UPrimalItem*                                         DestinationItem;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    AdditionalData;                                          // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPTributeItemUploaded
	 */
	struct UPrimalItem_BPTributeItemUploaded_Params
	{
	public:
		class UObject*                                             ContextObject;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPTributeItemDownloaded
	 */
	struct UPrimalItem_BPTributeItemDownloaded_Params
	{
	public:
		class UObject*                                             ContextObject;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPSupportUseOntoItem
	 */
	struct UPrimalItem_BPSupportUseOntoItem_Params
	{
	public:
		class UPrimalItem*                                         DestinationItem;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPSetWeaponClipAmmo
	 */
	struct UPrimalItem_BPSetWeaponClipAmmo_Params
	{
	public:
		int32_t                                                    NewClipAmmo;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPSetupHUDIconMaterial
	 */
	struct UPrimalItem_BPSetupHUDIconMaterial_Params
	{
	public:
		class UMaterialInstanceDynamic*                            theMID;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPServerVerifyStructurePlacementData
	 */
	struct UPrimalItem_BPServerVerifyStructurePlacementData_Params
	{	};

	/**
	 * Function ShooterGame.PrimalItem.BPServerHandleItemNetExecCommand
	 */
	struct UPrimalItem_BPServerHandleItemNetExecCommand_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                CommandName;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FBPNetExecParams                                    ExecParams;                                              // 0x0010(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPProcessEditText
	 */
	struct UPrimalItem_BPProcessEditText_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              TextToUse;                                               // 0x0008(0x0010)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPPreventWeaponEquip
	 */
	struct UPrimalItem_BPPreventWeaponEquip_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPPreventUseOntoItem
	 */
	struct UPrimalItem_BPPreventUseOntoItem_Params
	{
	public:
		class UPrimalItem*                                         DestinationItem;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPPreventUpload
	 */
	struct UPrimalItem_BPPreventUpload_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPPreventEquip
	 */
	struct UPrimalItem_BPPreventEquip_Params
	{
	public:
		class UPrimalInventoryComponent*                           toInventory;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPPreUseItem
	 */
	struct UPrimalItem_BPPreUseItem_Params
	{	};

	/**
	 * Function ShooterGame.PrimalItem.BPPreInitializeItem
	 */
	struct UPrimalItem_BPPreInitializeItem_Params
	{
	public:
		class UWorld*                                              OptionalInitWorld;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPPostInitializeItem
	 */
	struct UPrimalItem_BPPostInitializeItem_Params
	{
	public:
		class UWorld*                                              OptionalInitWorld;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPPostAddBuffToGiveOwnerCharacter
	 */
	struct UPrimalItem_BPPostAddBuffToGiveOwnerCharacter_Params
	{
	public:
		class APrimalCharacter*                                    OwnerCharacter;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalBuff*                                         Buff;                                                    // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPOverrideProjectileType
	 */
	struct UPrimalItem_BPOverrideProjectileType_Params
	{
	public:
		class UClass*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPOverrideCraftingConsumption
	 */
	struct UPrimalItem_BPOverrideCraftingConsumption_Params
	{
	public:
		int32_t                                                    AmountToConsume;                                         // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPOnLocalUse
	 */
	struct UPrimalItem_BPOnLocalUse_Params
	{
	public:
		class AShooterCharacter*                                   forCharacter;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPOnItemConsumed
	 */
	struct UPrimalItem_BPOnItemConsumed_Params
	{
	public:
		class UPrimalInventoryComponent*                           inventory;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    remainingQuantity;                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPNotifyDropped
	 */
	struct UPrimalItem_BPNotifyDropped_Params
	{
	public:
		class APrimalCharacter*                                    FromCharacter;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bWasThrown;                                              // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPMatchesItemID
	 */
	struct UPrimalItem_BPMatchesItemID_Params
	{
	public:
		int32_t                                                    ItemID1;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ItemID2;                                                 // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPMakeItemID
	 */
	struct UPrimalItem_BPMakeItemID_Params
	{
	public:
		int32_t                                                    TheItemID1;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    TheItemID2;                                              // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPItemBroken
	 */
	struct UPrimalItem_BPItemBroken_Params
	{	};

	/**
	 * Function ShooterGame.PrimalItem.BPItemBelowDurabilityThreshold
	 */
	struct UPrimalItem_BPItemBelowDurabilityThreshold_Params
	{	};

	/**
	 * Function ShooterGame.PrimalItem.BPIsValidForCrafting
	 */
	struct UPrimalItem_BPIsValidForCrafting_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPInitItemColors
	 */
	struct UPrimalItem_BPInitItemColors_Params
	{
	public:
		TArray<int32_t>                                            ColorIDs;                                                // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPInitIconMaterial
	 */
	struct UPrimalItem_BPInitIconMaterial_Params
	{	};

	/**
	 * Function ShooterGame.PrimalItem.BPInitFromItemNetInfo
	 */
	struct UPrimalItem_BPInitFromItemNetInfo_Params
	{	};

	/**
	 * Function ShooterGame.PrimalItem.BPGetSkinnedCustomInventoryWidgetText
	 */
	struct UPrimalItem_BPGetSkinnedCustomInventoryWidgetText_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPGetMaxAmmo
	 */
	struct UPrimalItem_BPGetMaxAmmo_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPGetItemStatRandomValue
	 */
	struct UPrimalItem_BPGetItemStatRandomValue_Params
	{
	public:
		float                                                      QualityLevel;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    idx;                                                     // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPGetItemStatModifier
	 */
	struct UPrimalItem_BPGetItemStatModifier_Params
	{
	public:
		int32_t                                                    idx;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ItemStatValue;                                           // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPGetItemNetInfo
	 */
	struct UPrimalItem_BPGetItemNetInfo_Params
	{	};

	/**
	 * Function ShooterGame.PrimalItem.BPGetItemName
	 */
	struct UPrimalItem_BPGetItemName_Params
	{
	public:
		class FString                                              ItemNameIn;                                              // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class AShooterPlayerController*                            ForPC;                                                   // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPGetItemID
	 */
	struct UPrimalItem_BPGetItemID_Params
	{
	public:
		int32_t                                                    ItemID1;                                                 // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ItemID2;                                                 // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPGetItemIcon
	 */
	struct UPrimalItem_BPGetItemIcon_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTexture2D*                                          ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPGetItemDurabilityPercentage
	 */
	struct UPrimalItem_BPGetItemDurabilityPercentage_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPGetItemDescription
	 */
	struct UPrimalItem_BPGetItemDescription_Params
	{
	public:
		class FString                                              InDescription;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bGetLongDescription;                                     // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_GYPF[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AShooterPlayerController*                            ForPC;                                                   // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPGetFuelParticleSystemOverride
	 */
	struct UPrimalItem_BPGetFuelParticleSystemOverride_Params
	{
	public:
		class APrimalStructure*                                    ForStructure;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UParticleSystem*                                     ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPGetFuelAudioOverride
	 */
	struct UPrimalItem_BPGetFuelAudioOverride_Params
	{
	public:
		class APrimalStructure*                                    ForStructure;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USoundBase*                                          ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPGetCustomInventoryWidgetTextColor
	 */
	struct UPrimalItem_BPGetCustomInventoryWidgetTextColor_Params
	{
	public:
		struct FColor                                              ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPGetCustomInventoryWidgetText
	 */
	struct UPrimalItem_BPGetCustomInventoryWidgetText_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPGetCustomIconMaterialParent
	 */
	struct UPrimalItem_BPGetCustomIconMaterialParent_Params
	{
	public:
		class UMaterialInterface*                                  ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPGetCustomDurabilityTextColor
	 */
	struct UPrimalItem_BPGetCustomDurabilityTextColor_Params
	{
	public:
		struct FColor                                              ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPGetCustomDurabilityText
	 */
	struct UPrimalItem_BPGetCustomDurabilityText_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPGetCustomAutoDecreaseDurabilityPerInterval
	 */
	struct UPrimalItem_BPGetCustomAutoDecreaseDurabilityPerInterval_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPForceAllowRemoteAddToInventory
	 */
	struct UPrimalItem_BPForceAllowRemoteAddToInventory_Params
	{
	public:
		class UPrimalInventoryComponent*                           toInventory;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPEquippedItemOnXPEarning
	 */
	struct UPrimalItem_BPEquippedItemOnXPEarning_Params
	{
	public:
		class APrimalCharacter*                                    forChar;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      howMuchXP;                                               // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EXPType                                                    TheXPType;                                               // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPDrawItemIcon
	 */
	struct UPrimalItem_BPDrawItemIcon_Params
	{
	public:
		class UCanvas*                                             ItemCanvas;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ItemCanvasSize;                                          // 0x0008(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ItemCanvasScale;                                         // 0x0010(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bItemEnabled;                                            // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_RZRI[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FLinearColor                                        TheTintColor;                                            // 0x001C(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPCrafted
	 */
	struct UPrimalItem_BPCrafted_Params
	{	};

	/**
	 * Function ShooterGame.PrimalItem.BPConsumeProjectileImpact
	 */
	struct UPrimalItem_BPConsumeProjectileImpact_Params
	{
	public:
		class AShooterProjectile*                                  theProjectile;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FHitResult                                          HitResult;                                               // 0x0008(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0090(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPClientHandleItemNetExecCommand
	 */
	struct UPrimalItem_BPClientHandleItemNetExecCommand_Params
	{
	public:
		class FName                                                CommandName;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FBPNetExecParams                                    ExecParams;                                              // 0x0008(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AShooterPlayerController*                            ForPC;                                                   // 0x0048(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPCanUse
	 */
	struct UPrimalItem_BPCanUse_Params
	{
	public:
		bool                                                       bIgnoreCooldown;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPCanAddToInventory
	 */
	struct UPrimalItem_BPCanAddToInventory_Params
	{
	public:
		class UPrimalInventoryComponent*                           toInventory;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPBreakItemID
	 */
	struct UPrimalItem_BPBreakItemID_Params
	{
	public:
		struct FItemNetID                                          ItemNetID;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    TheItemID1;                                              // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    TheItemID2;                                              // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPAnimNotifyCustomState_End
	 */
	struct UPrimalItem_BPAnimNotifyCustomState_End_Params
	{
	public:
		class FName                                                CustomEventName;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USkeletalMeshComponent*                              MeshComp;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UAnimSequenceBase*                                   Animation;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UAnimNotifyState*                                    AnimNotifyObject;                                        // 0x0018(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPAnimNotifyCustomState_Begin
	 */
	struct UPrimalItem_BPAnimNotifyCustomState_Begin_Params
	{
	public:
		class FName                                                CustomEventName;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USkeletalMeshComponent*                              MeshComp;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UAnimSequenceBase*                                   Animation;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TotalDuration;                                           // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_J9L2[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UAnimNotifyState*                                    AnimNotifyObject;                                        // 0x0020(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPAnimNotifyCustomEvent
	 */
	struct UPrimalItem_BPAnimNotifyCustomEvent_Params
	{
	public:
		class FName                                                CustomEventName;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USkeletalMeshComponent*                              MeshComp;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UAnimSequenceBase*                                   Animation;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UAnimNotify*                                         AnimNotifyObject;                                        // 0x0018(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPAllowRemoteRemoveFromInventory
	 */
	struct UPrimalItem_BPAllowRemoteRemoveFromInventory_Params
	{
	public:
		class UPrimalInventoryComponent*                           invComp;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            ByPC;                                                    // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRequestedByPlayer;                                      // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0011(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPAllowRemoteAddToInventory
	 */
	struct UPrimalItem_BPAllowRemoteAddToInventory_Params
	{
	public:
		class UPrimalInventoryComponent*                           invComp;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            ByPC;                                                    // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRequestedByPlayer;                                      // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0011(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPAllowCrafting
	 */
	struct UPrimalItem_BPAllowCrafting_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalItem.BPAddedAttachments
	 */
	struct UPrimalItem_BPAddedAttachments_Params
	{	};

	/**
	 * Function ShooterGame.PrimalItem.BlueprintUsed
	 */
	struct UPrimalItem_BlueprintUsed_Params
	{	};

	/**
	 * Function ShooterGame.PrimalItem.BlueprintUnequipped
	 */
	struct UPrimalItem_BlueprintUnequipped_Params
	{	};

	/**
	 * Function ShooterGame.PrimalItem.BlueprintOwnerPosssessed
	 */
	struct UPrimalItem_BlueprintOwnerPosssessed_Params
	{
	public:
		class AController*                                         PossessedByController;                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.BlueprintEquipped
	 */
	struct UPrimalItem_BlueprintEquipped_Params
	{
	public:
		bool                                                       bIsFromSaveGame;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.ApplyingSkinOntoItem
	 */
	struct UPrimalItem_ApplyingSkinOntoItem_Params
	{
	public:
		class UPrimalItem*                                         ToOwnerItem;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsFirstTime;                                            // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.ApplyColorsToMesh
	 */
	struct UPrimalItem_ApplyColorsToMesh_Params
	{
	public:
		class UMeshComponent*                                      mComp;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.ApplyColorsFromStructure
	 */
	struct UPrimalItem_ApplyColorsFromStructure_Params
	{
	public:
		class APrimalStructure*                                    theStructure;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.AllowRemoteAddToInventory
	 */
	struct UPrimalItem_AllowRemoteAddToInventory_Params
	{
	public:
		class UPrimalInventoryComponent*                           invComp;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            ByPC;                                                    // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRequestedByPlayer;                                      // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0011(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.AllowEquipItem
	 */
	struct UPrimalItem_AllowEquipItem_Params
	{
	public:
		class UPrimalInventoryComponent*                           toInventory;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.AddToSlot
	 */
	struct UPrimalItem_AddToSlot_Params
	{
	public:
		int32_t                                                    theSlotIndex;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForce;                                                  // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.AddNewItem
	 */
	struct UPrimalItem_AddNewItem_Params
	{
	public:
		class UClass*                                              ItemArchetype;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalInventoryComponent*                           GiveToInventory;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       bEquipItem;                                              // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDontStack;                                              // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_F5GK[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ItemQuality;                                             // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceNoBlueprint;                                       // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_AG5W[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    quantityOverride;                                        // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceBlueprint;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_B9XX[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      MaxItemDifficultyClamp;                                  // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       CreateOnClient;                                          // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_G4NR[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              ApplyItemSkin;                                           // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MinRandomQuality;                                        // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ClampStats;                                              // 0x003C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreAbsoluteMaxInventory;                             // 0x003D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_BYX1[0x2];                                   // 0x003E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimalItem*                                         ReturnValue;                                             // 0x0040(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalItem.AddItemDurability
	 */
	struct UPrimalItem_AddItemDurability_Params
	{
	public:
		float                                                      durabilityToAdd;                                         // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.AllClustersInventory.OnSaveItemsFinished__DelegateSignature
	 */
	struct UAllClustersInventory_OnSaveItemsFinished__DelegateSignature_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_070N[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              UserId;                                                  // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.AllClustersInventory.OnRemoveAllClusterInventoryItemsFinished__DelegateSignature
	 */
	struct UAllClustersInventory_OnRemoveAllClusterInventoryItemsFinished__DelegateSignature_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_N902[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              UserId;                                                  // 0x0008(0x0010)  (Parm, ZeroConstructor)
		TArray<struct FItemNetID>                                  ItemsIds;                                                // 0x0018(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.AllClustersInventory.OnReadLockFinished__DelegateSignature
	 */
	struct UAllClustersInventory_OnReadLockFinished__DelegateSignature_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_OB66[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              UserId;                                                  // 0x0008(0x0010)  (Parm, ZeroConstructor)
		bool                                                       Locked;                                                  // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.AllClustersInventory.OnLoadItemsFinished__DelegateSignature
	 */
	struct UAllClustersInventory_OnLoadItemsFinished__DelegateSignature_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_50N0[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              UserId;                                                  // 0x0008(0x0010)  (Parm, ZeroConstructor)
		TArray<struct FItemNetInfo>                                Items;                                                   // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.AllClustersInventory.OnFinishedSaveForChangingItems
	 */
	struct UAllClustersInventory_OnFinishedSaveForChangingItems_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_Z2B2[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              UserId;                                                  // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.AllClustersInventory.OnFinishedReadLockForCreateLock
	 */
	struct UAllClustersInventory_OnFinishedReadLockForCreateLock_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_759F[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              UserId;                                                  // 0x0008(0x0010)  (Parm, ZeroConstructor)
		bool                                                       Locked;                                                  // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.AllClustersInventory.OnFinishedLoadForChangingItems
	 */
	struct UAllClustersInventory_OnFinishedLoadForChangingItems_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JRH4[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              UserId;                                                  // 0x0008(0x0010)  (Parm, ZeroConstructor)
		TArray<struct FItemNetInfo>                                ArkItems;                                                // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.AllClustersInventory.OnFinishedCreateLockForChangingItems
	 */
	struct UAllClustersInventory_OnFinishedCreateLockForChangingItems_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NL5N[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              UserId;                                                  // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.AllClustersInventory.OnFinishedClearLockForChangingItems
	 */
	struct UAllClustersInventory_OnFinishedClearLockForChangingItems_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7VHQ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              UserId;                                                  // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.AllClustersInventory.OnCreateLockFinished__DelegateSignature
	 */
	struct UAllClustersInventory_OnCreateLockFinished__DelegateSignature_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_35HQ[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              UserId;                                                  // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.AllClustersInventory.OnClearLockFinished__DelegateSignature
	 */
	struct UAllClustersInventory_OnClearLockFinished__DelegateSignature_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_VW0A[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              UserId;                                                  // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.AllClustersInventory.OnAddAllClustersInventoryItemsFinished__DelegateSignature
	 */
	struct UAllClustersInventory_OnAddAllClustersInventoryItemsFinished__DelegateSignature_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_GOHE[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              UserId;                                                  // 0x0008(0x0010)  (Parm, ZeroConstructor)
		TArray<int32_t>                                            MasterIndexNum;                                          // 0x0018(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalLocalProfile.SaveProfile
	 */
	struct UPrimalLocalProfile_SaveProfile_Params
	{
	public:
		bool                                                       bAllowForcedItemDownload;                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalLocalProfile.OnSaveArkTributeFinished__DelegateSignature
	 */
	struct UPrimalLocalProfile_OnSaveArkTributeFinished__DelegateSignature_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalLocalProfile.OnLoadArkTributePlayersDataFinished__DelegateSignature
	 */
	struct UPrimalLocalProfile_OnLoadArkTributePlayersDataFinished__DelegateSignature_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_WYPH[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FArkTributePlayerData>                       PlayersData;                                             // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    FailureResponseCode;                                     // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalLocalProfile.OnFinishedLoadingAllClustersItems
	 */
	struct UPrimalLocalProfile_OnFinishedLoadingAllClustersItems_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_AJCL[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              UserId;                                                  // 0x0008(0x0010)  (Parm, ZeroConstructor)
		TArray<struct FItemNetInfo>                                ArkItems;                                                // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalLocalProfile.OnAllClustersItemsRemoved
	 */
	struct UPrimalLocalProfile_OnAllClustersItemsRemoved_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1HOR[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              UserId;                                                  // 0x0008(0x0010)  (Parm, ZeroConstructor)
		TArray<struct FItemNetID>                                  ItemsIds;                                                // 0x0018(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.BaseBoxTrigger.OnTriggerEndOverlap
	 */
	struct ABaseBoxTrigger_OnTriggerEndOverlap_Params
	{
	public:
		class AActor*                                              OtherActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    OtherBodyIndex;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BaseBoxTrigger.OnTriggerBeginOverlap
	 */
	struct ABaseBoxTrigger_OnTriggerBeginOverlap_Params
	{
	public:
		class AActor*                                              OtherActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    OtherBodyIndex;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFromSweep;                                              // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_0348[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          SweepResult;                                             // 0x0018(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.BaseBoxTrigger.IsCharacterTouchingTrigger
	 */
	struct ABaseBoxTrigger_IsCharacterTouchingTrigger_Params
	{
	public:
		class APrimalCharacter*                                    Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BaseBoxTrigger.GetAllCharactersTouchingTrigger
	 */
	struct ABaseBoxTrigger_GetAllCharactersTouchingTrigger_Params
	{
	public:
		TArray<class APrimalCharacter*>                            OutCharacters;                                           // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.BaseBoxTrigger.BPOnTriggerEndOverlap
	 */
	struct ABaseBoxTrigger_BPOnTriggerEndOverlap_Params
	{
	public:
		class AActor*                                              OtherActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    OtherBodyIndex;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BaseBoxTrigger.BPOnTriggerBeginOverlap
	 */
	struct ABaseBoxTrigger_BPOnTriggerBeginOverlap_Params
	{
	public:
		class AActor*                                              OtherActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    OtherBodyIndex;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFromSweep;                                              // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_GB76[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          SweepResult;                                             // 0x0018(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.HazardTrigger.OnDeactivated
	 */
	struct AHazardTrigger_OnDeactivated_Params
	{	};

	/**
	 * Function ShooterGame.HazardTrigger.OnCharacterExit
	 */
	struct AHazardTrigger_OnCharacterExit_Params
	{
	public:
		class APrimalCharacter*                                    Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HazardTrigger.OnCharacterEnter
	 */
	struct AHazardTrigger_OnCharacterEnter_Params
	{
	public:
		class APrimalCharacter*                                    Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HazardTrigger.OnActivated
	 */
	struct AHazardTrigger_OnActivated_Params
	{	};

	/**
	 * Function ShooterGame.HazardTrigger.FindFloor
	 */
	struct AHazardTrigger_FindFloor_Params
	{
	public:
		struct FVector                                             TestLocation;                                            // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FFloorSlopeData                                     FloorSlope;                                              // 0x000C(0x0018)  (Parm, OutParm)
		float                                                      DepthOverride;                                           // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       UseActorNormal;                                          // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0029(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HazardTrigger.Deactivate
	 */
	struct AHazardTrigger_Deactivate_Params
	{	};

	/**
	 * Function ShooterGame.HazardTrigger.ClientActivation
	 */
	struct AHazardTrigger_ClientActivation_Params
	{
	public:
		bool                                                       bActivate;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HazardTrigger.CanActivate
	 */
	struct AHazardTrigger_CanActivate_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HazardTrigger.Activate
	 */
	struct AHazardTrigger_Activate_Params
	{	};

	/**
	 * Function ShooterGame.HazardTrigger_Slide.SpawnWarningFX
	 */
	struct AHazardTrigger_Slide_SpawnWarningFX_Params
	{	};

	/**
	 * Function ShooterGame.HazardTrigger_Slide.SpawnProjectile
	 */
	struct AHazardTrigger_Slide_SpawnProjectile_Params
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Heading;                                                 // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HazardTrigger_Slide.RebuildSplines
	 */
	struct AHazardTrigger_Slide_RebuildSplines_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStaticData.GetPrimalStaticData
	 */
	struct UPrimalStaticData_GetPrimalStaticData_Params
	{
	public:
		class UClass*                                              DataType;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalStaticData*                                   ReturnValue;                                             // 0x0008(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PointOfInterestInterface.ViewPoint
	 */
	struct UPointOfInterestInterface_ViewPoint_Params
	{
	public:
		class AActor*                                              ViewedByActor;                                           // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PointOfInterestInterface.UnviewPoint
	 */
	struct UPointOfInterestInterface_UnviewPoint_Params
	{
	public:
		class AActor*                                              UnviewedByActor;                                         // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PointOfInterestInterface.SetPointTagUniqueState
	 */
	struct UPointOfInterestInterface_SetPointTagUniqueState_Params
	{
	public:
		bool                                                       bNewUniqueState;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PointOfInterestInterface.GetPointOfInterestData
	 */
	struct UPointOfInterestInterface_GetPointOfInterestData_Params
	{
	public:
		struct FPointOfInterestData                                ReturnValue;                                             // 0x0000(0x0140)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.PointOfInterestInterface.GetPointCustomData
	 */
	struct UPointOfInterestInterface_GetPointCustomData_Params
	{
	public:
		class UClass*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PointOfInterestInterface.CanBeViewed
	 */
	struct UPointOfInterestInterface_CanBeViewed_Params
	{
	public:
		class AActor*                                              ByActor;                                                 // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PointOfInterestCompanionInterface.GetPointCompanionBehaviorData
	 */
	struct UPointOfInterestCompanionInterface_GetPointCompanionBehaviorData_Params
	{
	public:
		struct FPointOfInterestCompanionBehavior                   ReturnValue;                                             // 0x0000(0x02B0)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.MissionTrigger.IsPointOfInterestValid
	 */
	struct AMissionTrigger_IsPointOfInterestValid_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionTrigger.GetMyPointOfInterestData
	 */
	struct AMissionTrigger_GetMyPointOfInterestData_Params
	{
	public:
		struct FPointOfInterestData                                ReturnValue;                                             // 0x0000(0x0140)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.MissionTrigger.GetMyPointOfInterestCompanionBehavior
	 */
	struct AMissionTrigger_GetMyPointOfInterestCompanionBehavior_Params
	{
	public:
		struct FPointOfInterestCompanionBehavior                   ReturnValue;                                             // 0x0000(0x02B0)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.BasePlayerController.SimulateInputKey
	 */
	struct ABasePlayerController_SimulateInputKey_Params
	{
	public:
		struct FKey                                                Key;                                                     // 0x0000(0x0018)  (Parm)
		bool                                                       bPressed;                                                // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BasePlayerController.ServerCheat
	 */
	struct ABasePlayerController_ServerCheat_Params
	{
	public:
		class FString                                              Msg;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.BasePlayerController.Say
	 */
	struct ABasePlayerController_Say_Params
	{
	public:
		class FString                                              Msg;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.BasePlayerController.ClientStartOnlineGame
	 */
	struct ABasePlayerController_ClientStartOnlineGame_Params
	{	};

	/**
	 * Function ShooterGame.BasePlayerController.ClientSetSpectatorCamera
	 */
	struct ABasePlayerController_ClientSetSpectatorCamera_Params
	{
	public:
		struct FVector                                             CameraLocation;                                          // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            CameraRotation;                                          // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BasePlayerController.ClientSendRoundEndEvent
	 */
	struct ABasePlayerController_ClientSendRoundEndEvent_Params
	{
	public:
		bool                                                       bIsWinner;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZBZS[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ExpendedTimeInSeconds;                                   // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BasePlayerController.ClientGameStarted
	 */
	struct ABasePlayerController_ClientGameStarted_Params
	{	};

	/**
	 * Function ShooterGame.BasePlayerController.ClientEndOnlineGame
	 */
	struct ABasePlayerController_ClientEndOnlineGame_Params
	{	};

	/**
	 * Function ShooterGame.ShooterHUD.StartCustomWheelRadialSelector
	 */
	struct AShooterHUD_StartCustomWheelRadialSelector_Params
	{
	public:
		struct FCustomWheelSettings                                WheelSettings;                                           // 0x0000(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm)
		TArray<struct FCustomWheelEntry>                           Entries;                                                 // 0x0040(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bFromGamepad;                                            // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NU3Y[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UObject*                                             ForcedEntryTarget;                                       // 0x0058(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0060(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.ShowSpawnUI
	 */
	struct AShooterHUD_ShowSpawnUI_Params
	{
	public:
		class APrimalStructure*                                    FastTravelIgnoreBed;                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.ShowPinEntryUI
	 */
	struct AShooterHUD_ShowPinEntryUI_Params
	{
	public:
		class AActor*                                              aTargetable;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsSetting;                                              // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_OU6Q[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    CustomIndex;                                             // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.ShowMultiUseUIFor
	 */
	struct AShooterHUD_ShowMultiUseUIFor_Params
	{
	public:
		class AActor*                                              anActor;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFromGamepad;                                            // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.ShowMissionList
	 */
	struct AShooterHUD_ShowMissionList_Params
	{
	public:
		class UObject*                                             FromDispatcher;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UUI_MissionList*                                     ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.ShowMissionAlert
	 */
	struct AShooterHUD_ShowMissionAlert_Params
	{
	public:
		EMissionAlertType                                          AlertType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7DKA[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              AlertTitle;                                              // 0x0008(0x0010)  (Parm, ZeroConstructor)
		TArray<struct FMissionAlertEntry>                          AlertEntries;                                            // 0x0018(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		float                                                      DisplayTime;                                             // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_0THL[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class USoundBase*                                          SoundToPlay;                                             // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       FlyoutFromTop;                                           // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.ShowInventory
	 */
	struct AShooterHUD_ShowInventory_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UUI_Inventory*                                       ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.ShowEngramsMenu
	 */
	struct AShooterHUD_ShowEngramsMenu_Params
	{
	public:
		bool                                                       bInputDelay;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_V88O[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UUI_EngramsMenu*                                     ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.ShowChatBox
	 */
	struct AShooterHUD_ShowChatBox_Params
	{
	public:
		bool                                                       bShow;                                                   // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsFromNewChat;                                          // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.SetAllowShowChatBox
	 */
	struct AShooterHUD_SetAllowShowChatBox_Params
	{
	public:
		bool                                                       bAllow;                                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.ReplaceKeyboardControlsTextWithXboxControlIconPaths
	 */
	struct AShooterHUD_ReplaceKeyboardControlsTextWithXboxControlIconPaths_Params
	{
	public:
		class FString                                              ActionKey;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterHUD.NotifyOutOfAmmo
	 */
	struct AShooterHUD_NotifyOutOfAmmo_Params
	{	};

	/**
	 * Function ShooterGame.ShooterHUD.IsUsingCustomWheelRadialSelector
	 */
	struct AShooterHUD_IsUsingCustomWheelRadialSelector_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.IsMissionAlertVisible
	 */
	struct AShooterHUD_IsMissionAlertVisible_Params
	{
	public:
		bool                                                       bGetTopAlertVisibility;                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.IsChatBoxVisible
	 */
	struct AShooterHUD_IsChatBoxVisible_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.HideTopMissionAlert
	 */
	struct AShooterHUD_HideTopMissionAlert_Params
	{	};

	/**
	 * Function ShooterGame.ShooterHUD.HideMissionAlert
	 */
	struct AShooterHUD_HideMissionAlert_Params
	{	};

	/**
	 * Function ShooterGame.ShooterHUD.HideChatBox
	 */
	struct AShooterHUD_HideChatBox_Params
	{	};

	/**
	 * Function ShooterGame.ShooterHUD.GetSubtitlesWidget
	 */
	struct AShooterHUD_GetSubtitlesWidget_Params
	{
	public:
		class UUI_Subtitles*                                       ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.GetShooterPC
	 */
	struct AShooterHUD_GetShooterPC_Params
	{
	public:
		class AShooterPlayerController*                            ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.GetSelectedCustomWheelEntry
	 */
	struct AShooterHUD_GetSelectedCustomWheelEntry_Params
	{
	public:
		struct FCustomWheelEntry                                   SelectedEntry;                                           // 0x0000(0x0068)  (Parm, OutParm)
		bool                                                       ReturnValue;                                             // 0x0068(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.GetPlayerOwner
	 */
	struct AShooterHUD_GetPlayerOwner_Params
	{
	public:
		class APlayerController*                                   ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.GetMultiUseRadialSelection
	 */
	struct AShooterHUD_GetMultiUseRadialSelection_Params
	{
	public:
		struct FMultiUseEntry                                      SelectedEntry;                                           // 0x0000(0x0048)  (Parm, OutParm, ContainsInstancedReference)
		bool                                                       bIncludeTimedEntries;                                    // 0x0048(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0049(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.GetIconForKey
	 */
	struct AShooterHUD_GetIconForKey_Params
	{
	public:
		class FString                                              ActionKey;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class UTexture2D*                                          ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.GetCurrentCrosshairScreenLocation
	 */
	struct AShooterHUD_GetCurrentCrosshairScreenLocation_Params
	{
	public:
		struct FVector2D                                           ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.GetChatBoxWidget
	 */
	struct AShooterHUD_GetChatBoxWidget_Params
	{
	public:
		class UUI_ChatBox*                                         ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.GetAdditionalExplorerNoteDynamicMaterialParams
	 */
	struct AShooterHUD_GetAdditionalExplorerNoteDynamicMaterialParams_Params
	{
	public:
		struct FExplorerNoteEntry                                  ExplorerNote;                                            // 0x0000(0x00A8)  (ConstParm, Parm, OutParm, ReferenceParm)
		TArray<struct FNameScalarPair>                             ScalarMaterialParams;                                    // 0x00A8(0x0010)  (Parm, OutParm, ZeroConstructor)
		TArray<struct FNameColorPair>                              ColorMaterialParams;                                     // 0x00B8(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.FormatTextureAsRichText
	 */
	struct AShooterHUD_FormatTextureAsRichText_Params
	{
	public:
		class UTexture2D*                                          InTexture;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterHUD.FormatRichTextWithKeyBindings
	 */
	struct AShooterHUD_FormatRichTextWithKeyBindings_Params
	{
	public:
		class FString                                              InText;                                                  // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bIgnoreMarkup;                                           // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CDZ7[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterHUD.FormatRichTextWithColor
	 */
	struct AShooterHUD_FormatRichTextWithColor_Params
	{
	public:
		class FString                                              InText;                                                  // 0x0000(0x0010)  (Parm, ZeroConstructor)
		struct FLinearColor                                        InColor;                                                 // 0x0010(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterHUD.ForceHUDHidden
	 */
	struct AShooterHUD_ForceHUDHidden_Params
	{
	public:
		bool                                                       bForcedHidden;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.EndMultiUseRadialSelector
	 */
	struct AShooterHUD_EndMultiUseRadialSelector_Params
	{	};

	/**
	 * Function ShooterGame.ShooterHUD.EndCustomWheelRadialSelector
	 */
	struct AShooterHUD_EndCustomWheelRadialSelector_Params
	{	};

	/**
	 * Function ShooterGame.ShooterHUD.DrawCrosshairOnScreen
	 */
	struct AShooterHUD_DrawCrosshairOnScreen_Params
	{
	public:
		struct FVector2D                                           AtScreenLocation;                                        // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      WithCrossSpread;                                         // 0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FColor                                              WithDrawColor;                                           // 0x000C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      WithAlphaPercent;                                        // 0x0010(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.CancelCustomWheelRadialSelector
	 */
	struct AShooterHUD_CancelCustomWheelRadialSelector_Params
	{	};

	/**
	 * Function ShooterGame.ShooterHUD.BPUpdateHUDRichTextOverlaysByInstigator
	 */
	struct AShooterHUD_BPUpdateHUDRichTextOverlaysByInstigator_Params
	{
	public:
		class AActor*                                              ByInstigator;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.BPUpdateHUDRichTextOverlayAtIndex
	 */
	struct AShooterHUD_BPUpdateHUDRichTextOverlayAtIndex_Params
	{
	public:
		struct FHUDRichTextOverlayData                             InOverlay;                                               // 0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm)
		int32_t                                                    index;                                                   // 0x0060(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.BPUpdateHUDRichTextOverlay
	 */
	struct AShooterHUD_BPUpdateHUDRichTextOverlay_Params
	{
	public:
		struct FHUDRichTextOverlayData                             InOverlay;                                               // 0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.ShooterHUD.BPUpdateAllHUDRichTextOverlays
	 */
	struct AShooterHUD_BPUpdateAllHUDRichTextOverlays_Params
	{
	public:
		TArray<struct FHUDRichTextOverlayData>                     InOverlayData;                                           // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.ShooterHUD.BPSimulateHit
	 */
	struct AShooterHUD_BPSimulateHit_Params
	{
	public:
		float                                                      DamageTaken;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NN0W[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0008(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class APawn*                                               PawnInstigator;                                          // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.BPShowUIScene
	 */
	struct AShooterHUD_BPShowUIScene_Params
	{
	public:
		class UClass*                                              UISceneTemplate;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObject*                                             AssociatedObject1;                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObject*                                             AssociatedObject2;                                       // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ExtraID1;                                                // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ExtraID2;                                                // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalUI*                                           ReturnValue;                                             // 0x0020(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayVerticalWidgetAlignment
	 */
	struct AShooterHUD_BPSetHUDRichTextOverlayVerticalWidgetAlignment_Params
	{
	public:
		struct FHUDRichTextOverlayData                             InOverlay;                                               // 0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm)
		EVerticalAlignment                                         InAlignV;                                                // 0x0060(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_LYS0[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHUDRichTextOverlayData                             OutOverlay;                                              // 0x0068(0x0060)  (Parm, OutParm)
		bool                                                       bUpdateAfterSetting;                                     // 0x00C8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayVerticalScreenAnchor
	 */
	struct AShooterHUD_BPSetHUDRichTextOverlayVerticalScreenAnchor_Params
	{
	public:
		struct FHUDRichTextOverlayData                             InOverlay;                                               // 0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm)
		EVerticalAlignment                                         InAnchorV;                                               // 0x0060(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_BKLY[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHUDRichTextOverlayData                             OutOverlay;                                              // 0x0068(0x0060)  (Parm, OutParm)
		bool                                                       bUpdateAfterSetting;                                     // 0x00C8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayUseAutoWrap
	 */
	struct AShooterHUD_BPSetHUDRichTextOverlayUseAutoWrap_Params
	{
	public:
		struct FHUDRichTextOverlayData                             InOverlay;                                               // 0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       InAutoWrap;                                              // 0x0060(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KWEW[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHUDRichTextOverlayData                             OutOverlay;                                              // 0x0068(0x0060)  (Parm, OutParm)
		bool                                                       bUpdateAfterSetting;                                     // 0x00C8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayScale
	 */
	struct AShooterHUD_BPSetHUDRichTextOverlayScale_Params
	{
	public:
		struct FHUDRichTextOverlayData                             InOverlay;                                               // 0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm)
		float                                                      InScale;                                                 // 0x0060(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7KG4[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHUDRichTextOverlayData                             OutOverlay;                                              // 0x0068(0x0060)  (Parm, OutParm)
		bool                                                       bUpdateAfterSetting;                                     // 0x00C8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayPosition
	 */
	struct AShooterHUD_BPSetHUDRichTextOverlayPosition_Params
	{
	public:
		struct FHUDRichTextOverlayData                             InOverlay;                                               // 0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector2D                                           InPosition;                                              // 0x0060(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FHUDRichTextOverlayData                             OutOverlay;                                              // 0x0068(0x0060)  (Parm, OutParm)
		bool                                                       bUpdateAfterSetting;                                     // 0x00C8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayInstigator
	 */
	struct AShooterHUD_BPSetHUDRichTextOverlayInstigator_Params
	{
	public:
		struct FHUDRichTextOverlayData                             InOverlay;                                               // 0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AActor*                                              InInstigator;                                            // 0x0060(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FHUDRichTextOverlayData                             OutOverlay;                                              // 0x0068(0x0060)  (Parm, OutParm)
		bool                                                       bUpdateAfterSetting;                                     // 0x00C8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayHorizontalWidgetAlignment
	 */
	struct AShooterHUD_BPSetHUDRichTextOverlayHorizontalWidgetAlignment_Params
	{
	public:
		struct FHUDRichTextOverlayData                             InOverlay;                                               // 0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm)
		EHorizontalAlignment                                       InAlignH;                                                // 0x0060(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_D284[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHUDRichTextOverlayData                             OutOverlay;                                              // 0x0068(0x0060)  (Parm, OutParm)
		bool                                                       bUpdateAfterSetting;                                     // 0x00C8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayHorizontalScreenAnchor
	 */
	struct AShooterHUD_BPSetHUDRichTextOverlayHorizontalScreenAnchor_Params
	{
	public:
		struct FHUDRichTextOverlayData                             InOverlay;                                               // 0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm)
		EHorizontalAlignment                                       InAnchorH;                                               // 0x0060(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5H37[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHUDRichTextOverlayData                             OutOverlay;                                              // 0x0068(0x0060)  (Parm, OutParm)
		bool                                                       bUpdateAfterSetting;                                     // 0x00C8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayDisplayText
	 */
	struct AShooterHUD_BPSetHUDRichTextOverlayDisplayText_Params
	{
	public:
		struct FHUDRichTextOverlayData                             InOverlay;                                               // 0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm)
		class FString                                              InString;                                                // 0x0060(0x0010)  (Parm, ZeroConstructor)
		struct FHUDRichTextOverlayData                             OutOverlay;                                              // 0x0070(0x0060)  (Parm, OutParm)
		bool                                                       bUpdateAfterSetting;                                     // 0x00D0(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.BPSetHUDRichTextOverlayDefaultTextColor
	 */
	struct AShooterHUD_BPSetHUDRichTextOverlayDefaultTextColor_Params
	{
	public:
		struct FHUDRichTextOverlayData                             InOverlay;                                               // 0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FLinearColor                                        InColor;                                                 // 0x0060(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FHUDRichTextOverlayData                             OutOverlay;                                              // 0x0070(0x0060)  (Parm, OutParm)
		bool                                                       bUpdateAfterSetting;                                     // 0x00D0(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.BPRemoveHUDRichTextOverlaysByInstigator
	 */
	struct AShooterHUD_BPRemoveHUDRichTextOverlaysByInstigator_Params
	{
	public:
		class AActor*                                              ByInstigator;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.BPRemoveHUDRichTextOverlayAtIndex
	 */
	struct AShooterHUD_BPRemoveHUDRichTextOverlayAtIndex_Params
	{
	public:
		int32_t                                                    index;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.BPRemoveHUDRichTextOverlay
	 */
	struct AShooterHUD_BPRemoveHUDRichTextOverlay_Params
	{
	public:
		struct FHUDRichTextOverlayData                             InOverlay;                                               // 0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.ShooterHUD.BPRemoveAllHUDRichTextOverlays
	 */
	struct AShooterHUD_BPRemoveAllHUDRichTextOverlays_Params
	{	};

	/**
	 * Function ShooterGame.ShooterHUD.BPGetHUDRichTextOverlays
	 */
	struct AShooterHUD_BPGetHUDRichTextOverlays_Params
	{
	public:
		TArray<struct FHUDRichTextOverlayData>                     ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterHUD.BPAddHUDRichTextOverlayAtIndex
	 */
	struct AShooterHUD_BPAddHUDRichTextOverlayAtIndex_Params
	{
	public:
		struct FHUDRichTextOverlayData                             InOverlay;                                               // 0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm)
		int32_t                                                    InsertAtIndex;                                           // 0x0060(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterHUD.BPAddHUDRichTextOverlay
	 */
	struct AShooterHUD_BPAddHUDRichTextOverlay_Params
	{
	public:
		struct FHUDRichTextOverlayData                             InOverlay;                                               // 0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.ShooterHUD.BPAddHUDNotification
	 */
	struct AShooterHUD_BPAddHUDNotification_Params
	{
	public:
		class FString                                              NotificationString;                                      // 0x0000(0x0010)  (Parm, ZeroConstructor)
		struct FColor                                              NotificationColor;                                       // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KEF5[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UMaterialInterface*                                  NotificationMaterial;                                    // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTexture2D*                                          NotificationTexture;                                     // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DisplayTime;                                             // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DisplayScale;                                            // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsSingleton;                                            // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ACJY[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class USoundBase*                                          SoundToPlay;                                             // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MessageTypeID;                                           // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ItemMsgType;                                             // 0x0044(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ItemClass;                                               // 0x0048(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ItemName;                                                // 0x0050(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    ItemQuantity;                                            // 0x0060(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ItemQuantityFloat;                                       // 0x0064(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.UpdateTribeGroupInventoryRank
	 */
	struct UPrimalInventoryComponent_UpdateTribeGroupInventoryRank_Params
	{
	public:
		unsigned char                                              NewRank;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.UpdateNetWeaponClipAmmo
	 */
	struct UPrimalInventoryComponent_UpdateNetWeaponClipAmmo_Params
	{
	public:
		class UPrimalItem*                                         anItem;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ammo;                                                    // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.TransferItemToInventory
	 */
	struct UPrimalInventoryComponent_TransferItemToInventory_Params
	{
	public:
		class UPrimalInventoryComponent*                           toInventory;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    ItemIndex;                                               // 0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.TransferAllItemsToInventoryWithFilter
	 */
	struct UPrimalInventoryComponent_TransferAllItemsToInventoryWithFilter_Params
	{
	public:
		class UPrimalInventoryComponent*                           toInventory;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		TArray<class UClass*>                                      OfItemClasses;                                           // 0x0008(0x0010)  (Parm, ZeroConstructor)
		TArray<class UClass*>                                      IgnoreItemClasses;                                       // 0x0018(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bAllowSubclasses;                                        // 0x0028(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.TransferAllItemsToInventory
	 */
	struct UPrimalInventoryComponent_TransferAllItemsToInventory_Params
	{
	public:
		class UPrimalInventoryComponent*                           toInventory;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.TransferAllItemsOfClassToInventory
	 */
	struct UPrimalInventoryComponent_TransferAllItemsOfClassToInventory_Params
	{
	public:
		class UPrimalInventoryComponent*                           toInventory;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UClass*                                              OfItemClass;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAllowSubclasses;                                        // 0x0010(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.TransferAllItemsOfClassesToInventory
	 */
	struct UPrimalInventoryComponent_TransferAllItemsOfClassesToInventory_Params
	{
	public:
		class UPrimalInventoryComponent*                           toInventory;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		TArray<class UClass*>                                      OfItemClasses;                                           // 0x0008(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bAllowSubclasses;                                        // 0x0018(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.StopAllCraftingRepairing
	 */
	struct UPrimalInventoryComponent_StopAllCraftingRepairing_Params
	{	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.StaticDropNewItemWithInfo
	 */
	struct UPrimalInventoryComponent_StaticDropNewItemWithInfo_Params
	{
	public:
		class AActor*                                              forActor;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FItemNetInfo                                        ItemInfo;                                                // 0x0008(0x01B0)  (ConstParm, Parm, OutParm, ReferenceParm)
		class UClass*                                              TheDroppedTemplateOverride;                              // 0x01B8(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            DroppedRotationOffset;                                   // 0x01C0(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bOverrideSpawnTransform;                                 // 0x01CC(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_D3XM[0x3];                                   // 0x01CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             LocationOverride;                                        // 0x01D0(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            RotationOverride;                                        // 0x01DC(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bPreventDropImpulse;                                     // 0x01E8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bThrow;                                                  // 0x01E9(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSecondaryAction;                                        // 0x01EA(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSetItemDropLocation;                                    // 0x01EB(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_O31B[0x4];                                   // 0x01EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UStaticMesh*                                         DroppedMeshOverride;                                     // 0x01F0(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             DroppedScaleOverride;                                    // 0x01F8(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NAH9[0x4];                                   // 0x0204(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UMaterialInterface*                                  DroppedMaterialOverride;                                 // 0x0208(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DroppedLifeSpanOverride;                                 // 0x0210(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_UX6P[0x4];                                   // 0x0214(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class ADroppedItem*                                        ReturnValue;                                             // 0x0218(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.StaticDropNewItem
	 */
	struct UPrimalInventoryComponent_StaticDropNewItem_Params
	{
	public:
		class AActor*                                              forActor;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              AnItemClass;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ItemQuality;                                             // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceNoBlueprint;                                       // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_WD4B[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    quantityOverride;                                        // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceBlueprint;                                         // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CD09[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              TheDroppedTemplateOverride;                              // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            DroppedRotationOffset;                                   // 0x0028(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bOverrideSpawnTransform;                                 // 0x0034(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5TDG[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             LocationOverride;                                        // 0x0038(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            RotationOverride;                                        // 0x0044(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bPreventDropImpulse;                                     // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bThrow;                                                  // 0x0051(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSecondaryAction;                                        // 0x0052(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSetItemDropLocation;                                    // 0x0053(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QLU4[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UStaticMesh*                                         DroppedMeshOverride;                                     // 0x0058(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             DroppedScaleOverride;                                    // 0x0060(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JC8M[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UMaterialInterface*                                  DroppedMaterialOverride;                                 // 0x0070(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DroppedLifeSpanOverride;                                 // 0x0078(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_VSVM[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class ADroppedItem*                                        ReturnValue;                                             // 0x0080(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.SetNextItemSpoilingID
	 */
	struct UPrimalInventoryComponent_SetNextItemSpoilingID_Params
	{
	public:
		struct FItemNetID                                          NextItemID;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.SetNextItemConsumptionID
	 */
	struct UPrimalInventoryComponent_SetNextItemConsumptionID_Params
	{
	public:
		struct FItemNetID                                          NextItemID;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.SetCraftingEnabled
	 */
	struct UPrimalInventoryComponent_SetCraftingEnabled_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.ServerSplitItemStack
	 */
	struct UPrimalInventoryComponent_ServerSplitItemStack_Params
	{
	public:
		struct FItemNetID                                          ItemId;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    AmountToSplit;                                           // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.ServerSelectedCustomItemAction
	 */
	struct UPrimalInventoryComponent_ServerSelectedCustomItemAction_Params
	{
	public:
		struct FItemNetID                                          ItemId;                                                  // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class FName                                                SelectedOption;                                          // 0x0008(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            ForPC;                                                   // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.ServerRequestItems
	 */
	struct UPrimalInventoryComponent_ServerRequestItems_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEquippedItems;                                          // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsFirstSpawn;                                           // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.ServerRepairItem
	 */
	struct UPrimalInventoryComponent_ServerRepairItem_Params
	{
	public:
		struct FItemNetID                                          ItemId;                                                  // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            ByPC;                                                    // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRepairIgnoreInventoryRequirement;                       // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_8AGE[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      RepairPercentage;                                        // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      RepairSpeedMultiplier;                                   // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.ServerRemoveItemFromSlot
	 */
	struct UPrimalInventoryComponent_ServerRemoveItemFromSlot_Params
	{
	public:
		struct FItemNetID                                          ItemId;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.ServerMergeItemStack
	 */
	struct UPrimalInventoryComponent_ServerMergeItemStack_Params
	{
	public:
		struct FItemNetID                                          ItemId;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.ServerMakeRecipeItem
	 */
	struct UPrimalInventoryComponent_ServerMakeRecipeItem_Params
	{
	public:
		class APrimalStructureItemContainer*                       Container;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          NoteToConsume;                                           // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              RecipeItemTemplate;                                      // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              CustomName;                                              // 0x0018(0x0010)  (Parm, ZeroConstructor)
		class FString                                              CustomDescription;                                       // 0x0028(0x0010)  (Parm, ZeroConstructor)
		TArray<struct FColor>                                      CustomColors;                                            // 0x0038(0x0010)  (ConstParm, Parm, ZeroConstructor)
		TArray<struct FCraftingResourceRequirement>                CustomRequirements;                                      // 0x0048(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.ServerForceMergeItemStack
	 */
	struct UPrimalInventoryComponent_ServerForceMergeItemStack_Params
	{
	public:
		struct FItemNetID                                          Item1ID;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          Item2ID;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.ServerCraftItem
	 */
	struct UPrimalInventoryComponent_ServerCraftItem_Params
	{
	public:
		struct FItemNetID                                          ItemId;                                                  // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            ByPC;                                                    // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.ServerAddItemToSlot
	 */
	struct UPrimalInventoryComponent_ServerAddItemToSlot_Params
	{
	public:
		struct FItemNetID                                          ItemId;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    SlotIndex;                                               // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.RemoveItem
	 */
	struct UPrimalInventoryComponent_RemoveItem_Params
	{
	public:
		struct FItemNetID                                          ItemId;                                                  // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bDoDrop;                                                 // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSecondryAction;                                         // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceRemoval;                                           // 0x000A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       showHUDMessage;                                          // 0x000B(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.RemoteInventoryAllowViewing
	 */
	struct UPrimalInventoryComponent_RemoteInventoryAllowViewing_Params
	{
	public:
		class AShooterPlayerController*                            PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxAllowedDistanceOffset;                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.RemoteInventoryAllowRepairingItems
	 */
	struct UPrimalInventoryComponent_RemoteInventoryAllowRepairingItems_Params
	{
	public:
		class AShooterPlayerController*                            PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreEnabled;                                          // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.RemoteInventoryAllowCraftingItems
	 */
	struct UPrimalInventoryComponent_RemoteInventoryAllowCraftingItems_Params
	{
	public:
		class AShooterPlayerController*                            PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreEnabled;                                          // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.OverrideUseItem
	 */
	struct UPrimalInventoryComponent_OverrideUseItem_Params
	{
	public:
		class UPrimalItem*                                         theItem;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.NotifyClientsDurabilityChange
	 */
	struct UPrimalInventoryComponent_NotifyClientsDurabilityChange_Params
	{
	public:
		class UPrimalItem*                                         anItem;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.IsRepairingAllowed
	 */
	struct UPrimalInventoryComponent_IsRepairingAllowed_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.IsOnCraftRequestCooldown
	 */
	struct UPrimalInventoryComponent_IsOnCraftRequestCooldown_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.IsLocalToPlayer
	 */
	struct UPrimalInventoryComponent_IsLocalToPlayer_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.IsLocal
	 */
	struct UPrimalInventoryComponent_IsLocal_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.IsCraftingAllowed
	 */
	struct UPrimalInventoryComponent_IsCraftingAllowed_Params
	{
	public:
		class UPrimalItem*                                         anItem;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.IsAtMaxInventoryItems
	 */
	struct UPrimalInventoryComponent_IsAtMaxInventoryItems_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.IsAllowedInventoryAccess
	 */
	struct UPrimalInventoryComponent_IsAllowedInventoryAccess_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.InventoryViewersStopLocalSound
	 */
	struct UPrimalInventoryComponent_InventoryViewersStopLocalSound_Params
	{
	public:
		class USoundBase*                                          aSound;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.InventoryViewersPlayLocalSound
	 */
	struct UPrimalInventoryComponent_InventoryViewersPlayLocalSound_Params
	{
	public:
		class USoundBase*                                          aSound;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAttach;                                                 // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.InventoryRemoteViewersChanged__DelegateSignature
	 */
	struct UPrimalInventoryComponent_InventoryRemoteViewersChanged__DelegateSignature_Params
	{
	public:
		class UPrimalInventoryComponent*                           inventory;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.InventoryRefresh
	 */
	struct UPrimalInventoryComponent_InventoryRefresh_Params
	{	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.InventoryItemRemoved__DelegateSignature
	 */
	struct UPrimalInventoryComponent_InventoryItemRemoved__DelegateSignature_Params
	{
	public:
		class UPrimalInventoryComponent*                           inventory;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         Item;                                                    // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    AmountRemoved;                                           // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.InventoryItemAdded__DelegateSignature
	 */
	struct UPrimalInventoryComponent_InventoryItemAdded__DelegateSignature_Params
	{
	public:
		class UPrimalInventoryComponent*                           inventory;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         Item;                                                    // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    AmountAdded;                                             // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEquippedItem;                                           // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.InventoryCustomSortPredicate
	 */
	struct UPrimalInventoryComponent_InventoryCustomSortPredicate_Params
	{
	public:
		class UPrimalItem*                                         LeftItem;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         RightItem;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.InventoryCustomFilter
	 */
	struct UPrimalInventoryComponent_InventoryCustomFilter_Params
	{
	public:
		TArray<class UPrimalItem*>                                 UnfilteredItemsList;                                     // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class UPrimalItem*>                                 FilteredItemsList;                                       // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.InitializeInventory
	 */
	struct UPrimalInventoryComponent_InitializeInventory_Params
	{	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.HasResources
	 */
	struct UPrimalInventoryComponent_HasResources_Params
	{
	public:
		TArray<struct FCraftingResourceRequirement>                RequiredResources;                                       // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.HasItemsEquipped
	 */
	struct UPrimalInventoryComponent_HasItemsEquipped_Params
	{
	public:
		TArray<class UClass*>                                      ItemTemplates;                                           // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bRequiresExactClassMatch;                                // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOnlyArkItems;                                           // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEnsureAllItems;                                         // 0x0012(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0013(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.GetTotalEquippedItemStat
	 */
	struct UPrimalInventoryComponent_GetTotalEquippedItemStat_Params
	{
	public:
		EPrimalItemStat                                            statType;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_DQTW[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.GetMaxInventoryItems
	 */
	struct UPrimalInventoryComponent_GetMaxInventoryItems_Params
	{
	public:
		bool                                                       bIgnoreHiddenDefaultInventory;                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_F0AC[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.GetItemTemplateQuantity
	 */
	struct UPrimalInventoryComponent_GetItemTemplateQuantity_Params
	{
	public:
		class UClass*                                              ItemTemplate;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         IgnoreItem;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreBlueprints;                                       // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCheckValidForCrafting;                                  // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRequireExactClassMatch;                                 // 0x0012(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceCheckForDupes;                                     // 0x0013(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.GetInventoryUpdatedFrame
	 */
	struct UPrimalInventoryComponent_GetInventoryUpdatedFrame_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.GetGrinderSettings
	 */
	struct UPrimalInventoryComponent_GetGrinderSettings_Params
	{
	public:
		int32_t                                                    MaxQuantityToGrind;                                      // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      GrindGiveItemsPercent;                                   // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MaxItemsToGivePerGrind;                                  // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.GetEquippedItemOfType
	 */
	struct UPrimalInventoryComponent_GetEquippedItemOfType_Params
	{
	public:
		EPrimalEquipmentType                                       aType;                                                   // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_YGGR[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimalItem*                                         ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.GetEquippedItemOfClass
	 */
	struct UPrimalInventoryComponent_GetEquippedItemOfClass_Params
	{
	public:
		class UClass*                                              ItemClass;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.GetEquippedArmorRating
	 */
	struct UPrimalInventoryComponent_GetEquippedArmorRating_Params
	{
	public:
		EPrimalEquipmentType                                       equipmentType;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_HE26[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.GenerateCustomCrateItems
	 */
	struct UPrimalInventoryComponent_GenerateCustomCrateItems_Params
	{
	public:
		class UClass*                                              SourceClass;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FSupplyCrateItemSet>                         CustomItemSets;                                          // 0x0008(0x0010)  (Parm, ZeroConstructor)
		float                                                      CustomMinItemSets;                                       // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CustomMaxItemSets;                                       // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CustomNumItemSetsPower;                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCustomSetsRandomWithoutReplacement;                     // 0x0024(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_WCWH[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class UPrimalItem*>                                 GeneratedItems;                                          // 0x0028(0x0010)  (Parm, OutParm, ZeroConstructor)
		float                                                      MinQualityMultiplier;                                    // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxQualityMultiplier;                                    // 0x003C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumPasses;                                               // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      QuantityMultiplier;                                      // 0x0044(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SetPowerWeight;                                          // 0x0048(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxItemDifficultyClamp;                                  // 0x004C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsMissionReward;                                        // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0051(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.GenerateCrateItems
	 */
	struct UPrimalInventoryComponent_GenerateCrateItems_Params
	{
	public:
		float                                                      MinQualityMultiplier;                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxQualityMultiplier;                                    // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumPasses;                                               // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      QuantityMultiplier;                                      // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SetPowerWeight;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxItemDifficultyClamp;                                  // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.FindAllItemsOfType
	 */
	struct UPrimalInventoryComponent_FindAllItemsOfType_Params
	{
	public:
		class UClass*                                              ItemTemplate;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRequiresExactClassMatch;                                // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIncludeInventoryItems;                                  // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIncludeEquippedItems;                                   // 0x000A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIncludeArkTributeItems;                                 // 0x000B(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIncludeSlotItems;                                       // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIncludeBlueprints;                                      // 0x000D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIncludeEngrams;                                         // 0x000E(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_U7HI[0x1];                                   // 0x000F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class UPrimalItem*>                                 ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.EjectItem
	 */
	struct UPrimalInventoryComponent_EjectItem_Params
	{
	public:
		struct FItemNetID                                          ItemId;                                                  // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bPreventImpule;                                          // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceEject;                                             // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSetItemLocation;                                        // 0x000A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_SM52[0x1];                                   // 0x000B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             LocationOverride;                                        // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       showHUDMessage;                                          // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_FYMQ[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              TheDroppedTemplateOverride;                              // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAssignToTribeForPickup;                                 // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KDEM[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    AssignedTribeID;                                         // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class ADroppedItem*                                        ReturnValue;                                             // 0x0030(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.ConsumeResources
	 */
	struct UPrimalInventoryComponent_ConsumeResources_Params
	{
	public:
		TArray<struct FCraftingResourceRequirement>                Resources;                                               // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.ConsumeArmorDurability
	 */
	struct UPrimalInventoryComponent_ConsumeArmorDurability_Params
	{
	public:
		float                                                      ConsumptionAmount;                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAllArmorTypes;                                          // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EPrimalEquipmentType                                       SpecificArmorType;                                       // 0x0005(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.ClientUpdateFreeCraftingMode
	 */
	struct UPrimalInventoryComponent_ClientUpdateFreeCraftingMode_Params
	{
	public:
		bool                                                       bNewFreeCraftingModeValue;                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.ClientOnArkTributeItemsAdded
	 */
	struct UPrimalInventoryComponent_ClientOnArkTributeItemsAdded_Params
	{	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.ClientItemMessageNotification
	 */
	struct UPrimalInventoryComponent_ClientItemMessageNotification_Params
	{
	public:
		struct FItemNetID                                          ItemId;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EPrimalItemMessage                                         ItemMessageType;                                         // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.ClearCraftQueue
	 */
	struct UPrimalInventoryComponent_ClearCraftQueue_Params
	{
	public:
		bool                                                       bForceClearActiveCraftRepair;                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.CanGrindItems
	 */
	struct UPrimalInventoryComponent_CanGrindItems_Params
	{
	public:
		class AShooterPlayerController*                            PC;                                                      // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.CanGrindItem
	 */
	struct UPrimalInventoryComponent_CanGrindItem_Params
	{
	public:
		class UPrimalItem*                                         Item;                                                    // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.CanEquipItem
	 */
	struct UPrimalInventoryComponent_CanEquipItem_Params
	{
	public:
		class UPrimalItem*                                         anItem;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPRequestedInventoryItems
	 */
	struct UPrimalInventoryComponent_BPRequestedInventoryItems_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPRemoteInventoryGetMaxVisibleSlots
	 */
	struct UPrimalInventoryComponent_BPRemoteInventoryGetMaxVisibleSlots_Params
	{
	public:
		int32_t                                                    NumItems;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_SO5S[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AShooterPlayerController*                            PC;                                                      // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsLocal;                                                // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_L7AN[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPRemoteInventoryAllowViewing
	 */
	struct UPrimalInventoryComponent_BPRemoteInventoryAllowViewing_Params
	{
	public:
		class AShooterPlayerController*                            PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPRemoteInventoryAllowRemoveItems
	 */
	struct UPrimalInventoryComponent_BPRemoteInventoryAllowRemoveItems_Params
	{
	public:
		class AShooterPlayerController*                            PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         anItemToTransfer;                                        // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPRemoteInventoryAllowCrafting
	 */
	struct UPrimalInventoryComponent_BPRemoteInventoryAllowCrafting_Params
	{
	public:
		class AShooterPlayerController*                            PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPRemoteInventoryAllowAddItems
	 */
	struct UPrimalInventoryComponent_BPRemoteInventoryAllowAddItems_Params
	{
	public:
		class AShooterPlayerController*                            PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPRemoteInventoryAllowAddItem_SpecificQuantity
	 */
	struct UPrimalInventoryComponent_BPRemoteInventoryAllowAddItem_SpecificQuantity_Params
	{
	public:
		class AShooterPlayerController*                            PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         anItem;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    SpecificQuantityIn;                                      // 0x0010(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		int32_t                                                    SpecificQuantityOut;                                     // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPRemoteInventoryAllowAddItem
	 */
	struct UPrimalInventoryComponent_BPRemoteInventoryAllowAddItem_Params
	{
	public:
		class AShooterPlayerController*                            PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         anItem;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPPreventEquipItemType
	 */
	struct UPrimalInventoryComponent_BPPreventEquipItemType_Params
	{
	public:
		EPrimalEquipmentType                                       equipmentType;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPPreventEquipItem
	 */
	struct UPrimalInventoryComponent_BPPreventEquipItem_Params
	{
	public:
		class UPrimalItem*                                         theItem;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPPreInitDefaultInventory
	 */
	struct UPrimalInventoryComponent_BPPreInitDefaultInventory_Params
	{	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPPostInitDefaultInventory
	 */
	struct UPrimalInventoryComponent_BPPostInitDefaultInventory_Params
	{	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPOverrideItemMinimumUseInterval
	 */
	struct UPrimalInventoryComponent_BPOverrideItemMinimumUseInterval_Params
	{
	public:
		class UPrimalItem*                                         theItem;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPOnTransferAll
	 */
	struct UPrimalInventoryComponent_BPOnTransferAll_Params
	{
	public:
		class UPrimalInventoryComponent*                           toInventory;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPNotifyItemRemoved
	 */
	struct UPrimalInventoryComponent_BPNotifyItemRemoved_Params
	{
	public:
		class UPrimalItem*                                         anItem;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPNotifyItemQuantityUpdated
	 */
	struct UPrimalInventoryComponent_BPNotifyItemQuantityUpdated_Params
	{
	public:
		class UPrimalItem*                                         anItem;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    amount;                                                  // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPNotifyItemAdded
	 */
	struct UPrimalInventoryComponent_BPNotifyItemAdded_Params
	{
	public:
		class UPrimalItem*                                         anItem;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEquipItem;                                              // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPIsValidCraftingResource
	 */
	struct UPrimalInventoryComponent_BPIsValidCraftingResource_Params
	{
	public:
		class UPrimalItem*                                         theItem;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPIsCraftingAllowed
	 */
	struct UPrimalInventoryComponent_BPIsCraftingAllowed_Params
	{
	public:
		class UPrimalItem*                                         anItem;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPInventoryRefresh
	 */
	struct UPrimalInventoryComponent_BPInventoryRefresh_Params
	{	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPInitializeInventory
	 */
	struct UPrimalInventoryComponent_BPInitializeInventory_Params
	{	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPIncrementItemTemplateQuantity
	 */
	struct UPrimalInventoryComponent_BPIncrementItemTemplateQuantity_Params
	{
	public:
		class UClass*                                              ItemTemplate;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    amount;                                                  // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReplicateToClient;                                      // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsBlueprint;                                            // 0x000D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRequireExactClassMatch;                                 // 0x000E(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsCraftingResourceConsumption;                          // 0x000F(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsFromUseConsumption;                                   // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsArkTributeItem;                                       // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_P799[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimalItem*                                         UseSpecificItem;                                         // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDontExceedMaxItems;                                     // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5D81[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x0024(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPGetItemOfTemplate
	 */
	struct UPrimalInventoryComponent_BPGetItemOfTemplate_Params
	{
	public:
		class UClass*                                              ItemTemplate;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOnlyInventoryItems;                                     // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOnlyEquippedItems;                                      // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       IgnoreItemsWithFullQuantity;                             // 0x000A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFavorSlotItems;                                         // 0x000B(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsBlueprint;                                            // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRequiresExactClassMatch;                                // 0x000D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreSlotItems;                                        // 0x000E(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOnlyArkItems;                                           // 0x000F(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPreferEngram;                                           // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsForCraftingConsumption;                               // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_32GY[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimalItem*                                         ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPGetExtraItemDisplay
	 */
	struct UPrimalInventoryComponent_BPGetExtraItemDisplay_Params
	{
	public:
		bool                                                       bShowExtraItem;                                          // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_N755[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Description;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		class FString                                              CustomString;                                            // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor)
		class UTexture2D*                                          EntryIcon;                                               // 0x0028(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialInterface*                                  EntryMaterial;                                           // 0x0030(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPFindItemWithID
	 */
	struct UPrimalInventoryComponent_BPFindItemWithID_Params
	{
	public:
		int32_t                                                    ItemID1;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ItemID2;                                                 // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPDropInventoryDeposit
	 */
	struct UPrimalInventoryComponent_BPDropInventoryDeposit_Params
	{
	public:
		double                                                     DestroyAtTime;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    OverrideMaxItemsDropped;                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bOverrideDepositLocation;                                // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_FVSU[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             DepositLocationOverride;                                 // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPDropForceLocationInventoryDeposit
	 */
	struct UPrimalInventoryComponent_BPDropForceLocationInventoryDeposit_Params
	{
	public:
		double                                                     DestroyAtTime;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    OverrideMaxItemsDropped;                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		struct FVector                                             DepositLocationOverride;                                 // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		int32_t                                                    DeadPlayerID;                                            // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_W5JG[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalStructureItemContainer*                       ReturnValue;                                             // 0x0020(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPCustomRemoteInventoryAllowRemoveItems
	 */
	struct UPrimalInventoryComponent_BPCustomRemoteInventoryAllowRemoveItems_Params
	{
	public:
		class AShooterPlayerController*                            PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         anItemToTransfer;                                        // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    RequestedQuantity;                                       // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRequestedByPlayer;                                      // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRequestDropping;                                        // 0x0015(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0016(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPCustomRemoteInventoryAllowAddItems
	 */
	struct UPrimalInventoryComponent_BPCustomRemoteInventoryAllowAddItems_Params
	{
	public:
		class AShooterPlayerController*                            PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         anItem;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    anItemQuantityOverride;                                  // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRequestedByPlayer;                                      // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0015(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPCreateDropItemInventoryEmpty
	 */
	struct UPrimalInventoryComponent_BPCreateDropItemInventoryEmpty_Params
	{
	public:
		double                                                     DestroyAtTime;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              OverrideInventoryDepositClass;                           // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		class APrimalStructureItemContainer*                       CopyStructureValues;                                     // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		class AActor*                                              GroundIgnoreActor;                                       // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		int32_t                                                    DeadPlayerID;                                            // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		float                                                      DropInventoryOnGroundTraceDistance;                      // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bOverrideDepositLocation;                                // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_PJ58[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             DepositLocationOverride;                                 // 0x002C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, AdvancedDisplay)
		class APrimalStructureItemContainer*                       ReturnValue;                                             // 0x0038(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPCraftingFinishedNotification
	 */
	struct UPrimalInventoryComponent_BPCraftingFinishedNotification_Params
	{
	public:
		class UPrimalItem*                                         itemToBeCrafted;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPAllowUseInInventory
	 */
	struct UPrimalInventoryComponent_BPAllowUseInInventory_Params
	{
	public:
		class UPrimalItem*                                         theItem;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsRemoteInventory;                                      // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XNWJ[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AShooterPlayerController*                            ByPC;                                                    // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPAllowAddInventoryItem
	 */
	struct UPrimalInventoryComponent_BPAllowAddInventoryItem_Params
	{
	public:
		class UPrimalItem*                                         Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    RequestedQuantity;                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOnlyAddAll;                                             // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000D(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.BPAccessedInventory
	 */
	struct UPrimalInventoryComponent_BPAccessedInventory_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.AllowAddInventoryItem_OnlyAddAll
	 */
	struct UPrimalInventoryComponent_AllowAddInventoryItem_OnlyAddAll_Params
	{
	public:
		class UPrimalItem*                                         anItem;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.AllowAddInventoryItem_MaxQuantity
	 */
	struct UPrimalInventoryComponent_AllowAddInventoryItem_MaxQuantity_Params
	{
	public:
		class UPrimalItem*                                         anItem;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    requestedQuantityIn;                                     // 0x0008(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		int32_t                                                    requestedQuantityOut;                                    // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.AllowAddInventoryItem_AnyQuantity
	 */
	struct UPrimalInventoryComponent_AllowAddInventoryItem_AnyQuantity_Params
	{
	public:
		class UPrimalItem*                                         anItem;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.AddItemObjectEx
	 */
	struct UPrimalInventoryComponent_AddItemObjectEx_Params
	{
	public:
		class UPrimalItem*                                         anItem;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEquipItem;                                              // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAddToSlot;                                              // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDontStack;                                              // 0x000A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bShowHUDNotification;                                    // 0x000B(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDontRecalcSpoilingTime;                                 // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceIncompleteStacking;                                // 0x000D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_613V[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AShooterCharacter*                                   OwnerPlayer;                                             // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bClampStats;                                             // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7DAZ[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimalItem*                                         InsertAfterItem;                                         // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bInsertAtItemInstead;                                    // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_M4R5[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimalItem*                                         ReturnValue;                                             // 0x0030(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalInventoryComponent.AddItemObject
	 */
	struct UPrimalInventoryComponent_AddItemObject_Params
	{
	public:
		class UPrimalItem*                                         anItem;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalPlayerData.SetPlayerHexagonCount
	 */
	struct UPrimalPlayerData_SetPlayerHexagonCount_Params
	{
	public:
		int32_t                                                    NewHexagonCount;                                         // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalPlayerData.SetChibiLevels
	 */
	struct UPrimalPlayerData_SetChibiLevels_Params
	{
	public:
		int32_t                                                    newLevels;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7YMJ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AShooterPlayerController*                            ForPC;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalPlayerData.SavePlayerData
	 */
	struct UPrimalPlayerData_SavePlayerData_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalPlayerData.LinkedPlayerIDString
	 */
	struct UPrimalPlayerData_LinkedPlayerIDString_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalPlayerData.HasUnlockedAllExplorerNotes
	 */
	struct UPrimalPlayerData_HasUnlockedAllExplorerNotes_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalPlayerData.HasGeneralizedAchievementTag
	 */
	struct UPrimalPlayerData_HasGeneralizedAchievementTag_Params
	{
	public:
		class FName                                                Tag;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalPlayerData.GrantGeneralizedAchievementTag
	 */
	struct UPrimalPlayerData_GrantGeneralizedAchievementTag_Params
	{
	public:
		class FName                                                ObtainedAchievementTag;                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            ForPC;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalPlayerData.GetUniqueIdString
	 */
	struct UPrimalPlayerData_GetUniqueIdString_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalPlayerData.GetPlayerState
	 */
	struct UPrimalPlayerData_GetPlayerState_Params
	{
	public:
		class AShooterPlayerState*                                 ignorePlayerState;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOnlyCheckExistingPlayers;                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_YCC9[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AShooterPlayerState*                                 ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalPlayerData.GetPlayerHexagonCount
	 */
	struct UPrimalPlayerData_GetPlayerHexagonCount_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalPlayerData.FindCharacterForPlayer
	 */
	struct UPrimalPlayerData_FindCharacterForPlayer_Params
	{
	public:
		class UWorld*                                              inWorld;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalPlayerData.BPForceDefeatedBoss
	 */
	struct UPrimalPlayerData_BPForceDefeatedBoss_Params
	{
	public:
		int32_t                                                    DifficultyIndex;                                         // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                BossName;                                                // 0x0004(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JQ8B[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AShooterPlayerController*                            PlayerController;                                        // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalPlayerData.BPCreatedNewPlayerData
	 */
	struct UPrimalPlayerData_BPCreatedNewPlayerData_Params
	{	};

	/**
	 * Function ShooterGame.PrimalPlayerData.BPApplyToPlayerCharacter
	 */
	struct UPrimalPlayerData_BPApplyToPlayerCharacter_Params
	{
	public:
		class AShooterPlayerState*                                 ForPlayerState;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   NewPlayerCharacter;                                      // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalPlayerData.BPAppliedToPlayerState
	 */
	struct UPrimalPlayerData_BPAppliedToPlayerState_Params
	{
	public:
		class AShooterPlayerState*                                 ForPlayerState;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerUnlockEngram
	 */
	struct AShooterPlayerState_ServerUnlockEngram_Params
	{
	public:
		class UClass*                                              forItemEntry;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bNotifyPlayerHUD;                                        // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceUnlock;                                            // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerTribeRequestRemoveRankGroup
	 */
	struct AShooterPlayerState_ServerTribeRequestRemoveRankGroup_Params
	{
	public:
		int32_t                                                    RankGroupIndex;                                          // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerTribeRequestNewAlliance
	 */
	struct AShooterPlayerState_ServerTribeRequestNewAlliance_Params
	{
	public:
		class FString                                              AllianceName;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerTribeRequestApplyRankGroupSettings
	 */
	struct AShooterPlayerState_ServerTribeRequestApplyRankGroupSettings_Params
	{
	public:
		int32_t                                                    RankGroupIndex;                                          // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_H0LW[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTribeRankGroup                                     newGroupSettings;                                        // 0x0008(0x0028)  (Parm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerTribeRequestAddRankGroup
	 */
	struct AShooterPlayerState_ServerTribeRequestAddRankGroup_Params
	{
	public:
		class FString                                              GroupName;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerSetSelectedDinoOrderGroup
	 */
	struct AShooterPlayerState_ServerSetSelectedDinoOrderGroup_Params
	{
	public:
		int32_t                                                    newGroup;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerSetDinoGroupName
	 */
	struct AShooterPlayerState_ServerSetDinoGroupName_Params
	{
	public:
		int32_t                                                    groupIndex;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CDK8[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              GroupName;                                               // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerSetDefaultItemSlotClass
	 */
	struct AShooterPlayerState_ServerSetDefaultItemSlotClass_Params
	{
	public:
		int32_t                                                    slotNum;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KM31[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              ItemClass;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsEngram;                                               // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerRequestTransferOwnershipInMyTribe
	 */
	struct AShooterPlayerState_ServerRequestTransferOwnershipInMyTribe_Params
	{
	public:
		int32_t                                                    PlayerIndexInTribe;                                      // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerRequestSpawnPointsForDownloadedCharacters
	 */
	struct AShooterPlayerState_ServerRequestSpawnPointsForDownloadedCharacters_Params
	{
	public:
		uint64_t                                                   PlayerDataID;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    IgnoreBedID;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerRequestSetTribeMemberGroupRank
	 */
	struct AShooterPlayerState_ServerRequestSetTribeMemberGroupRank_Params
	{
	public:
		int32_t                                                    PlayerIndexInTribe;                                      // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    RankGroupIndex;                                          // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerRequestSetTribeGovernment
	 */
	struct AShooterPlayerState_ServerRequestSetTribeGovernment_Params
	{
	public:
		struct FTribeGovernment                                    TribeGovernment;                                         // 0x0000(0x0014)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerRequestRenameTribe
	 */
	struct AShooterPlayerState_ServerRequestRenameTribe_Params
	{
	public:
		class FString                                              ServerRequestRenameTribe;                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerRequestRemovePlayerIndexFromMyTribe
	 */
	struct AShooterPlayerState_ServerRequestRemovePlayerIndexFromMyTribe_Params
	{
	public:
		int32_t                                                    PlayerIndexInTribe;                                      // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerRequestRemoveAllianceMember
	 */
	struct AShooterPlayerState_ServerRequestRemoveAllianceMember_Params
	{
	public:
		uint32_t                                                   AllianceID;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		uint32_t                                                   MemberID;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerRequestPromotePlayerInMyTribe
	 */
	struct AShooterPlayerState_ServerRequestPromotePlayerInMyTribe_Params
	{
	public:
		int32_t                                                    PlayerIndexInTribe;                                      // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerRequestPromoteAllianceMember
	 */
	struct AShooterPlayerState_ServerRequestPromoteAllianceMember_Params
	{
	public:
		uint32_t                                                   AllianceID;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		uint32_t                                                   MemberID;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerRequestMySpawnPoints
	 */
	struct AShooterPlayerState_ServerRequestMySpawnPoints_Params
	{
	public:
		int32_t                                                    IgnoreBedID;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_PP1M[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              FilterClass;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerRequestLeaveTribe
	 */
	struct AShooterPlayerState_ServerRequestLeaveTribe_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerRequestLeaveAlliance
	 */
	struct AShooterPlayerState_ServerRequestLeaveAlliance_Params
	{
	public:
		uint32_t                                                   AllianceID;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerRequestDinoOrderGroups
	 */
	struct AShooterPlayerState_ServerRequestDinoOrderGroups_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerRequestDemotePlayerInMyTribe
	 */
	struct AShooterPlayerState_ServerRequestDemotePlayerInMyTribe_Params
	{
	public:
		int32_t                                                    PlayerIndexInTribe;                                      // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerRequestCreateNewTribe
	 */
	struct AShooterPlayerState_ServerRequestCreateNewTribe_Params
	{
	public:
		class FString                                              TribeName;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
		struct FTribeGovernment                                    TribeGovernment;                                         // 0x0010(0x0014)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerRequestCreateNewPlayer
	 */
	struct AShooterPlayerState_ServerRequestCreateNewPlayer_Params
	{
	public:
		struct FPrimalPlayerCharacterConfigStructReplicated        PlayerCharacterConfig;                                   // 0x0000(0x00B8)  (Parm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerRequestApplyEngramPoints
	 */
	struct AShooterPlayerState_ServerRequestApplyEngramPoints_Params
	{
	public:
		class UClass*                                              forItemEntry;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerRejectTribeWar
	 */
	struct AShooterPlayerState_ServerRejectTribeWar_Params
	{
	public:
		int32_t                                                    EnemyTeamID;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerGetServerOptions
	 */
	struct AShooterPlayerState_ServerGetServerOptions_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerGetPlayerWhiteListedData
	 */
	struct AShooterPlayerState_ServerGetPlayerWhiteListedData_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerGetPlayerConnectedData
	 */
	struct AShooterPlayerState_ServerGetPlayerConnectedData_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerGetPlayerBannedData
	 */
	struct AShooterPlayerState_ServerGetPlayerBannedData_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerGetPlayerAdministratorData
	 */
	struct AShooterPlayerState_ServerGetPlayerAdministratorData_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerGetAllPlayerNamesAndLocations
	 */
	struct AShooterPlayerState_ServerGetAllPlayerNamesAndLocations_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerGetAlivePlayerConnectedData
	 */
	struct AShooterPlayerState_ServerGetAlivePlayerConnectedData_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerDinoOrderGroup_RemoveEntryByIndex
	 */
	struct AShooterPlayerState_ServerDinoOrderGroup_RemoveEntryByIndex_Params
	{
	public:
		int32_t                                                    groupIndex;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsClass;                                                // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_UXGW[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    entryIndex;                                              // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerDinoOrderGroup_Clear
	 */
	struct AShooterPlayerState_ServerDinoOrderGroup_Clear_Params
	{
	public:
		int32_t                                                    groupIndex;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bClearClasses;                                           // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bClearChars;                                             // 0x0005(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerDinoOrderGroup_AddOrRemoveDinoClass
	 */
	struct AShooterPlayerState_ServerDinoOrderGroup_AddOrRemoveDinoClass_Params
	{
	public:
		int32_t                                                    groupIndex;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_MD9J[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              DinoClass;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAdd;                                                    // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerDinoOrderGroup_AddOrRemoveDinoCharacter
	 */
	struct AShooterPlayerState_ServerDinoOrderGroup_AddOrRemoveDinoCharacter_Params
	{
	public:
		int32_t                                                    groupIndex;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_9LYL[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalDinoCharacter*                                DinoCharacter;                                           // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAdd;                                                    // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerDeclareTribeWar
	 */
	struct AShooterPlayerState_ServerDeclareTribeWar_Params
	{
	public:
		int32_t                                                    EnemyTeamID;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    StartDayNum;                                             // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    EndDayNumber;                                            // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      WarStartTime;                                            // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      WarEndTime;                                              // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ServerAcceptTribeWar
	 */
	struct AShooterPlayerState_ServerAcceptTribeWar_Params
	{
	public:
		int32_t                                                    EnemyTeamID;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.SendTribeInviteData
	 */
	struct AShooterPlayerState_SendTribeInviteData_Params
	{
	public:
		struct FTribeData                                          TribeInviteData;                                         // 0x0000(0x0138)  (Parm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ResetFlexPipeGlobalCooldown
	 */
	struct AShooterPlayerState_ResetFlexPipeGlobalCooldown_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerState.OnRep_UpdatedEngrams
	 */
	struct AShooterPlayerState_OnRep_UpdatedEngrams_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerState.NotifyUniqueDinoDownloaded
	 */
	struct AShooterPlayerState_NotifyUniqueDinoDownloaded_Params
	{
	public:
		class FString                                              TheDinoName;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.NotifyUniqueDinoDownloadAllowed
	 */
	struct AShooterPlayerState_NotifyUniqueDinoDownloadAllowed_Params
	{
	public:
		class FString                                              TheDinoName;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.NotifyTribememberLeft
	 */
	struct AShooterPlayerState_NotifyTribememberLeft_Params
	{
	public:
		class FString                                              ThePlayerName;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.NotifyTribememberJoined
	 */
	struct AShooterPlayerState_NotifyTribememberJoined_Params
	{
	public:
		class FString                                              ThePlayerName;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.NotifyPlayerLeftTribe
	 */
	struct AShooterPlayerState_NotifyPlayerLeftTribe_Params
	{
	public:
		class FString                                              ThePlayerName;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              TribeName;                                               // 0x0010(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.NotifyPlayerLeft
	 */
	struct AShooterPlayerState_NotifyPlayerLeft_Params
	{
	public:
		class FString                                              ThePlayerName;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.NotifyPlayerJoinedTribe
	 */
	struct AShooterPlayerState_NotifyPlayerJoinedTribe_Params
	{
	public:
		class FString                                              ThePlayerName;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              TribeName;                                               // 0x0010(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.NotifyPlayerJoined
	 */
	struct AShooterPlayerState_NotifyPlayerJoined_Params
	{
	public:
		class FString                                              ThePlayerName;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.IsTribeAdmin
	 */
	struct AShooterPlayerState_IsTribeAdmin_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.IsInTribe
	 */
	struct AShooterPlayerState_IsInTribe_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.IsFriendly
	 */
	struct AShooterPlayerState_IsFriendly_Params
	{
	public:
		int32_t                                                    OtherTeam;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.IsDinoInOrderGroup
	 */
	struct AShooterPlayerState_IsDinoInOrderGroup_Params
	{
	public:
		int32_t                                                    groupIndex;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XR9E[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalDinoCharacter*                                dinoChar;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.IsDinoClassInOrderGroup
	 */
	struct AShooterPlayerState_IsDinoClassInOrderGroup_Params
	{
	public:
		int32_t                                                    groupIndex;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_SOG9[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              DinoClass;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.IsAllowedToRefreshFlexPipeConnections
	 */
	struct AShooterPlayerState_IsAllowedToRefreshFlexPipeConnections_Params
	{
	public:
		float                                                      Cooldown;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.IsAlliedWith
	 */
	struct AShooterPlayerState_IsAlliedWith_Params
	{
	public:
		int32_t                                                    OtherTeam;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.HasEngram
	 */
	struct AShooterPlayerState_HasEngram_Params
	{
	public:
		class UClass*                                              ItemClass;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.GetUniqueIdString
	 */
	struct AShooterPlayerState_GetUniqueIdString_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.GetTribeId
	 */
	struct AShooterPlayerState_GetTribeId_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.GetHexCostToPurchaseNextEngramPoint
	 */
	struct AShooterPlayerState_GetHexCostToPurchaseNextEngramPoint_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.GetDefaultItemSlotClasses
	 */
	struct AShooterPlayerState_GetDefaultItemSlotClasses_Params
	{
	public:
		TArray<class UClass*>                                      ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.DoRespec
	 */
	struct AShooterPlayerState_DoRespec_Params
	{
	public:
		class UPrimalPlayerData*                                   ForPlayerData;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   ForCharacte;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSetRespecedAtCharacterLevel;                            // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ClientRefreshDinoOrderGroup
	 */
	struct AShooterPlayerState_ClientRefreshDinoOrderGroup_Params
	{
	public:
		int32_t                                                    groupIndex;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_W3XV[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDinoOrderGroup                                     groupData;                                               // 0x0008(0x0030)  (Parm)
		int32_t                                                    UseCurrentlySelectedGroup;                               // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ClientReceiveSpawnPoints
	 */
	struct AShooterPlayerState_ClientReceiveSpawnPoints_Params
	{
	public:
		TArray<struct FSpawnPointInfo>                             SpawnPointsInfos;                                        // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ClientNotifyLevelUpAvailable
	 */
	struct AShooterPlayerState_ClientNotifyLevelUpAvailable_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ClientGetServerOptions
	 */
	struct AShooterPlayerState_ClientGetServerOptions_Params
	{
	public:
		struct FServerOptions                                      Info;                                                    // 0x0000(0x02A0)  (Parm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ClientGetPlayerWhiteListedData
	 */
	struct AShooterPlayerState_ClientGetPlayerWhiteListedData_Params
	{
	public:
		TArray<struct FAdminPlayerDataInfo>                        list;                                                    // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ClientGetPlayerConnectedData
	 */
	struct AShooterPlayerState_ClientGetPlayerConnectedData_Params
	{
	public:
		TArray<struct FAdminPlayerDataInfo>                        list;                                                    // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ClientGetPlayerBannedData
	 */
	struct AShooterPlayerState_ClientGetPlayerBannedData_Params
	{
	public:
		TArray<struct FAdminPlayerDataInfo>                        list;                                                    // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ClientGetPlayerAdministratorData
	 */
	struct AShooterPlayerState_ClientGetPlayerAdministratorData_Params
	{
	public:
		TArray<struct FAdminPlayerDataInfo>                        list;                                                    // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ClientGetAllPlayerNamesAndLocations
	 */
	struct AShooterPlayerState_ClientGetAllPlayerNamesAndLocations_Params
	{
	public:
		TArray<struct FAliveNameAndLocation>                       list;                                                    // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ClientGetAlivePlayerConnectedData
	 */
	struct AShooterPlayerState_ClientGetAlivePlayerConnectedData_Params
	{
	public:
		TArray<struct FAlivePlayerDataInfo>                        list;                                                    // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.ClearTribe
	 */
	struct AShooterPlayerState_ClearTribe_Params
	{
	public:
		bool                                                       bDontRemoveFromTribe;                                    // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForce;                                                  // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_8N58[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APlayerController*                                   ForPC;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.BroadcastDeath
	 */
	struct AShooterPlayerState_BroadcastDeath_Params
	{
	public:
		class AShooterPlayerState*                                 KillerPlayerState;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UDamageType*                                         KillerDamageType;                                        // 0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterPlayerState*                                 KilledPlayerState;                                       // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.AllowTribeGroupPermission
	 */
	struct AShooterPlayerState_AllowTribeGroupPermission_Params
	{
	public:
		ETribeGroupPermission                                      TribeGroupPermission;                                    // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NY9I[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UObject*                                             OnObject;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.AllowDinoOrderByGroup
	 */
	struct AShooterPlayerState_AllowDinoOrderByGroup_Params
	{
	public:
		class APrimalDinoCharacter*                                orderDino;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerState.AddToTribe
	 */
	struct AShooterPlayerState_AddToTribe_Params
	{
	public:
		struct FTribeData                                          MyNewTribe;                                              // 0x0000(0x0138)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       bMergeTribe;                                             // 0x0138(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForce;                                                  // 0x0139(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsFromInvite;                                           // 0x013A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_WMB7[0x5];                                   // 0x013B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APlayerController*                                   InviterPC;                                               // 0x0140(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0148(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ZoneVolumeReport
	 */
	struct AShooterPlayerController_ZoneVolumeReport_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.WritePNTScreenshot
	 */
	struct AShooterPlayerController_WritePNTScreenshot_Params
	{
	public:
		class FString                                              filename;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ViewingAnUploadTerminal
	 */
	struct AShooterPlayerController_ViewingAnUploadTerminal_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.UnlockExplorerNote
	 */
	struct AShooterPlayerController_UnlockExplorerNote_Params
	{
	public:
		int32_t                                                    ExplorerNoteIndex;                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       forceShowExplorerNoteUI;                                 // 0x0004(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.UnlockEmote
	 */
	struct AShooterPlayerController_UnlockEmote_Params
	{
	public:
		class FName                                                EmoteName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.UndermeshSphere
	 */
	struct AShooterPlayerController_UndermeshSphere_Params
	{
	public:
		int32_t                                                    Radius;                                                  // 0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.TurnOnGmBuffAndTekArmorAndStatFpsAndAlsoStatUnitBecauseThisIsEasierToTypeOnXbox
	 */
	struct AShooterPlayerController_TurnOnGmBuffAndTekArmorAndStatFpsAndAlsoStatUnitBecauseThisIsEasierToTypeOnXbox_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.TryToForceUploadCharacter
	 */
	struct AShooterPlayerController_TryToForceUploadCharacter_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ToggleWeaponAccessory
	 */
	struct AShooterPlayerController_ToggleWeaponAccessory_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ToggleHud
	 */
	struct AShooterPlayerController_ToggleHud_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.Tick_UpdatePings
	 */
	struct AShooterPlayerController_Tick_UpdatePings_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.Tick_SearchForPOIs
	 */
	struct AShooterPlayerController_Tick_SearchForPOIs_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.TestPurchaseEP
	 */
	struct AShooterPlayerController_TestPurchaseEP_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.TestPhysxPerf
	 */
	struct AShooterPlayerController_TestPhysxPerf_Params
	{
	public:
		int32_t                                                    RayCount;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DistanceOfRays;                                          // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.TestNotification
	 */
	struct AShooterPlayerController_TestNotification_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.TestAlarmNotification
	 */
	struct AShooterPlayerController_TestAlarmNotification_Params
	{
	public:
		class FString                                              Title;                                                   // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Message;                                                 // 0x0010(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.StopSpectating
	 */
	struct AShooterPlayerController_StopSpectating_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.StartWhistleSelection
	 */
	struct AShooterPlayerController_StartWhistleSelection_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.StartSurfaceCameraForPassenger
	 */
	struct AShooterPlayerController_StartSurfaceCameraForPassenger_Params
	{
	public:
		float                                                      OnSurfaceTargetYaw;                                      // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OnSurfaceTargetPitch;                                    // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OnSurfaceTargetRoll;                                     // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.StartSurfaceCamera
	 */
	struct AShooterPlayerController_StartSurfaceCamera_Params
	{
	public:
		float                                                      OnSurfaceTargetYaw;                                      // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OnSurfaceTargetPitch;                                    // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OnSurfaceTargetRoll;                                     // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OnSurfaceCameraInterpolationSpeed;                       // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       UseSurfaceCameraInterpolation;                           // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_UKVB[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             CameraOffset;                                            // 0x0014(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.StartPlacingStructrue
	 */
	struct AShooterPlayerController_StartPlacingStructrue_Params
	{
	public:
		class UClass*                                              BuildingStructure;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.StartEmoteSelection
	 */
	struct AShooterPlayerController_StartEmoteSelection_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.StartArkGamepadRightShoulder
	 */
	struct AShooterPlayerController_StartArkGamepadRightShoulder_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.StartArkGamepadLeftShoulder
	 */
	struct AShooterPlayerController_StartArkGamepadLeftShoulder_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.StartArkGamepadFaceButtonTop
	 */
	struct AShooterPlayerController_StartArkGamepadFaceButtonTop_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.StartArkGamepadFaceButtonRight
	 */
	struct AShooterPlayerController_StartArkGamepadFaceButtonRight_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.StartArkGamepadFaceButtonLeft
	 */
	struct AShooterPlayerController_StartArkGamepadFaceButtonLeft_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.StartArkGamepadFaceButtonBottom
	 */
	struct AShooterPlayerController_StartArkGamepadFaceButtonBottom_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.StartArkGamepadDpadUp
	 */
	struct AShooterPlayerController_StartArkGamepadDpadUp_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.StartArkGamepadDpadRight
	 */
	struct AShooterPlayerController_StartArkGamepadDpadRight_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.StartArkGamepadDpadLeft
	 */
	struct AShooterPlayerController_StartArkGamepadDpadLeft_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.StartArkGamepadDpadDown
	 */
	struct AShooterPlayerController_StartArkGamepadDpadDown_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.StartArkGamepadBackButton
	 */
	struct AShooterPlayerController_StartArkGamepadBackButton_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ShowMyAdminManager
	 */
	struct AShooterPlayerController_ShowMyAdminManager_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ShouldHideGameplayUI
	 */
	struct AShooterPlayerController_ShouldHideGameplayUI_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.SetPlayerPos
	 */
	struct AShooterPlayerController_SetPlayerPos_Params
	{
	public:
		float                                                      X;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Y;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Z;                                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.SetMultiUseWheelCategory
	 */
	struct AShooterPlayerController_SetMultiUseWheelCategory_Params
	{
	public:
		int32_t                                                    Category;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_YRU4[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalBuff*                                         OptionalBuff;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.SetMissionWaypointVisible
	 */
	struct AShooterPlayerController_SetMissionWaypointVisible_Params
	{
	public:
		bool                                                       bInIsVisible;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.SetMissionWaypointInfo
	 */
	struct AShooterPlayerController_SetMissionWaypointInfo_Params
	{
	public:
		class FString                                              InWaypointTitle;                                         // 0x0000(0x0010)  (Parm, ZeroConstructor)
		struct FVector                                             InWaypointDestination;                                   // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                InWaypointID;                                            // 0x001C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.SetLastInventoryRetrievalTime
	 */
	struct AShooterPlayerController_SetLastInventoryRetrievalTime_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.SetInfiniteStats
	 */
	struct AShooterPlayerController_SetInfiniteStats_Params
	{
	public:
		bool                                                       bInfinite;                                               // 0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.SetGodMode
	 */
	struct AShooterPlayerController_SetGodMode_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.SetDoFInterpTime
	 */
	struct AShooterPlayerController_SetDoFInterpTime_Params
	{
	public:
		float                                                      InterpTime;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.SetControllerGamepadActive
	 */
	struct AShooterPlayerController_SetControllerGamepadActive_Params
	{
	public:
		bool                                                       bIsActive;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.SetCinematicModeAdvanced
	 */
	struct AShooterPlayerController_SetCinematicModeAdvanced_Params
	{
	public:
		bool                                                       bInCinematicMode;                                        // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPreventCameraAnimFPV;                                   // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSetHUDHidden;                                           // 0x0002(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDisableKeymappings;                                     // 0x0003(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_9MLT[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class FName>                                        KeyActionNames;                                          // 0x0008(0x0010)  (ConstParm, Parm, ZeroConstructor)
		bool                                                       bDisableChat;                                            // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.SetCheatPlayer
	 */
	struct AShooterPlayerController_SetCheatPlayer_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.SetAutoPlayer
	 */
	struct AShooterPlayerController_SetAutoPlayer_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.SetAdminIcon
	 */
	struct AShooterPlayerController_SetAdminIcon_Params
	{
	public:
		bool                                                       bAdminIcon;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerVerifyStructurePlacementItemData
	 */
	struct AShooterPlayerController_ServerVerifyStructurePlacementItemData_Params
	{
	public:
		struct FItemNetID                                          PlaceUsingItemID;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerUploadDino
	 */
	struct AShooterPlayerController_ServerUploadDino_Params
	{
	public:
		class APrimalDinoCharacter*                                DownloadedDino;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerUploadCurrentCharacterAndItems
	 */
	struct AShooterPlayerController_ServerUploadCurrentCharacterAndItems_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerUploadCharaterDataToArk
	 */
	struct AShooterPlayerController_ServerUploadCharaterDataToArk_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerUnlockPerMapExplorerNote
	 */
	struct AShooterPlayerController_ServerUnlockPerMapExplorerNote_Params
	{
	public:
		int32_t                                                    ExplorerNoteIndex;                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAvoidBuff;                                              // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerUnbanPlayer
	 */
	struct AShooterPlayerController_ServerUnbanPlayer_Params
	{
	public:
		class FString                                              PlayerSteamName;                                         // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              PlayerSteamID;                                           // 0x0010(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerTransferToRemoteInventory
	 */
	struct AShooterPlayerController_ServerTransferToRemoteInventory_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAlsoTryToEqup;                                          // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XPZB[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    RequestedQuantity;                                       // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerTransferredPlayerConfirmationResult
	 */
	struct AShooterPlayerController_ServerTransferredPlayerConfirmationResult_Params
	{
	public:
		bool                                                       bAccept;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerTransferFromRemoteInventory
	 */
	struct AShooterPlayerController_ServerTransferFromRemoteInventory_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    RequestedQuantity;                                       // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ToSlotIndex;                                             // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEquipItem;                                              // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerTransferAllToRemoteInventory
	 */
	struct AShooterPlayerController_ServerTransferAllToRemoteInventory_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FString                                              CurrentCustomFolderFilter;                               // 0x0008(0x0010)  (Parm, ZeroConstructor)
		class FString                                              CurrentNameFilter;                                       // 0x0018(0x0010)  (Parm, ZeroConstructor)
		class FString                                              CurrentDestinationFolder;                                // 0x0028(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bNoFolderView;                                           // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerTransferAllFromRemoteInventory
	 */
	struct AShooterPlayerController_ServerTransferAllFromRemoteInventory_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FString                                              CurrentCustomFolderFilter;                               // 0x0008(0x0010)  (Parm, ZeroConstructor)
		class FString                                              CurrentNameFilter;                                       // 0x0018(0x0010)  (Parm, ZeroConstructor)
		class FString                                              CurrentDestinationFolder;                                // 0x0028(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bNoFolderView;                                           // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerSuicide
	 */
	struct AShooterPlayerController_ServerSuicide_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerStopWeaponFire
	 */
	struct AShooterPlayerController_ServerStopWeaponFire_Params
	{
	public:
		class AShooterWeapon*                                      weapon;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerStopWeaponAltFire
	 */
	struct AShooterPlayerController_ServerStopWeaponAltFire_Params
	{
	public:
		class AShooterWeapon*                                      weapon;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerStopSpectating
	 */
	struct AShooterPlayerController_ServerStopSpectating_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerStayAlive
	 */
	struct AShooterPlayerController_ServerStayAlive_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerStartWeaponFire
	 */
	struct AShooterPlayerController_ServerStartWeaponFire_Params
	{
	public:
		class AShooterWeapon*                                      weapon;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerStartWeaponAltFire
	 */
	struct AShooterPlayerController_ServerStartWeaponAltFire_Params
	{
	public:
		class AShooterWeapon*                                      weapon;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerSpectateToPlayerByID
	 */
	struct AShooterPlayerController_ServerSpectateToPlayerByID_Params
	{
	public:
		uint64_t                                                   PlayerId;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerShowMessageOfTheDay
	 */
	struct AShooterPlayerController_ServerShowMessageOfTheDay_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerSetVRPlayer
	 */
	struct AShooterPlayerController_ServerSetVRPlayer_Params
	{
	public:
		bool                                                       bSetVRPlayer;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerSetSupressAdminIcon
	 */
	struct AShooterPlayerController_ServerSetSupressAdminIcon_Params
	{
	public:
		bool                                                       bSuppress;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerSetSubscribedApp
	 */
	struct AShooterPlayerController_ServerSetSubscribedApp_Params
	{
	public:
		int32_t                                                    AppID;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPreventDefaultItems;                                    // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerSetMessageOfTheDay
	 */
	struct AShooterPlayerController_ServerSetMessageOfTheDay_Params
	{
	public:
		class FString                                              Message;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerSetItemBalloonLocation
	 */
	struct AShooterPlayerController_ServerSetItemBalloonLocation_Params
	{
	public:
		class APrimalStructureMovingContainer*                     ItemBalloon;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FPrimalMapMarkerEntryData                           MapMarker;                                               // 0x0008(0x0028)  (Parm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerSendDirectMessage
	 */
	struct AShooterPlayerController_ServerSendDirectMessage_Params
	{
	public:
		class FString                                              PlayerSteamID;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Message;                                                 // 0x0010(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerSendChatMessage
	 */
	struct AShooterPlayerController_ServerSendChatMessage_Params
	{
	public:
		class FString                                              ChatMessage;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
		EChatSendMode                                              SendMode;                                                // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerSendArkDataPayloadEnd
	 */
	struct AShooterPlayerController_ServerSendArkDataPayloadEnd_Params
	{
	public:
		struct FGuid                                               ID;                                                      // 0x0000(0x0010)  (Parm, ZeroConstructor)
		EPrimalARKTributeDataType                                  ArkDataType;                                             // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerSendArkDataPayloadBegin
	 */
	struct AShooterPlayerController_ServerSendArkDataPayloadBegin_Params
	{
	public:
		struct FGuid                                               ID;                                                      // 0x0000(0x0010)  (Parm, ZeroConstructor)
		EPrimalARKTributeDataType                                  ArkDataType;                                             // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_YXA0[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              DataClass;                                               // 0x0018(0x0010)  (Parm, ZeroConstructor)
		class FString                                              TagName;                                                 // 0x0028(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Name;                                                    // 0x0038(0x0010)  (Parm, ZeroConstructor)
		TArray<class FString>                                      DataStats;                                               // 0x0048(0x0010)  (ConstParm, Parm, ZeroConstructor)
		uint32_t                                                   ID1;                                                     // 0x0058(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		uint32_t                                                   ID2;                                                     // 0x005C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerSendArkDataPayload
	 */
	struct AShooterPlayerController_ServerSendArkDataPayload_Params
	{
	public:
		struct FGuid                                               ID;                                                      // 0x0000(0x0010)  (Parm, ZeroConstructor)
		EPrimalARKTributeDataType                                  ArkDataType;                                             // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_N7JV[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<unsigned char>                                      DataBytes;                                               // 0x0018(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerSelectedCustomItemAction
	 */
	struct AShooterPlayerController_ServerSelectedCustomItemAction_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                SelectedOption;                                          // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerSaveWorld
	 */
	struct AShooterPlayerController_ServerSaveWorld_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestUpdateActiveMissionTags
	 */
	struct AShooterPlayerController_ServerRequestUpdateActiveMissionTags_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestTribeLog
	 */
	struct AShooterPlayerController_ServerRequestTribeLog_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestTamingInfoList
	 */
	struct AShooterPlayerController_ServerRequestTamingInfoList_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestStructuresPlacedOnFloor
	 */
	struct AShooterPlayerController_ServerRequestStructuresPlacedOnFloor_Params
	{
	public:
		TArray<class APrimalStructure*>                            OnStructures;                                            // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestShowLeaderboards
	 */
	struct AShooterPlayerController_ServerRequestShowLeaderboards_Params
	{
	public:
		class UClass*                                              LeaderboardType;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                MissionTag;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestSetPin
	 */
	struct AShooterPlayerController_ServerRequestSetPin_Params
	{
	public:
		class UObject*                                             forTarget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    PinValue;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsSetting;                                              // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_I30M[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    TheCustomIndex;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestRespawnAtPoint
	 */
	struct AShooterPlayerController_ServerRequestRespawnAtPoint_Params
	{
	public:
		int32_t                                                    SpawnPointID;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    spawnRegionIndex;                                        // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestRemoveWeaponClipAmmo
	 */
	struct AShooterPlayerController_ServerRequestRemoveWeaponClipAmmo_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestRemoveWeaponAccessoryOnly
	 */
	struct AShooterPlayerController_ServerRequestRemoveWeaponAccessoryOnly_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestRemoveItemSkinOnly
	 */
	struct AShooterPlayerController_ServerRequestRemoveItemSkinOnly_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestRemoveItemSkin
	 */
	struct AShooterPlayerController_ServerRequestRemoveItemSkin_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestRemoveDinoFromTamingListByID
	 */
	struct AShooterPlayerController_ServerRequestRemoveDinoFromTamingListByID_Params
	{
	public:
		int32_t                                                    InID1;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    InID2;                                                   // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestRemoteDropAllItems
	 */
	struct AShooterPlayerController_ServerRequestRemoteDropAllItems_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FString                                              CurrentCustomFolderFilter;                               // 0x0008(0x0010)  (Parm, ZeroConstructor)
		class FString                                              CurrentNameFilter;                                       // 0x0018(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestPlaceStructure
	 */
	struct AShooterPlayerController_ServerRequestPlaceStructure_Params
	{
	public:
		int32_t                                                    StructureIndex;                                          // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             BuildLocation;                                           // 0x0004(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            BuildRotation;                                           // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            PlayerViewRotation;                                      // 0x001C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APawn*                                               AttachToPawn;                                            // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalDinoCharacter*                                DinoCharacter;                                           // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                BoneName;                                                // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          PlaceUsingItemID;                                        // 0x0040(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSnapped;                                                // 0x0048(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsCheat;                                                // 0x0049(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsFlipped;                                              // 0x004A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_LBLI[0x1];                                   // 0x004B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    SnapPointCycle;                                          // 0x004C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestMyTribeOnlineList
	 */
	struct AShooterPlayerController_ServerRequestMyTribeOnlineList_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestLevelUp
	 */
	struct AShooterPlayerController_ServerRequestLevelUp_Params
	{
	public:
		class UPrimalCharacterStatusComponent*                     forStatusComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		EPrimalCharacterStatusValue                                ValueType;                                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestInventoryUseItemWithItem
	 */
	struct AShooterPlayerController_ServerRequestInventoryUseItemWithItem_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemID1;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemID2;                                                 // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    AdditionalData;                                          // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestInventoryUseItemWithActor
	 */
	struct AShooterPlayerController_ServerRequestInventoryUseItemWithActor_Params
	{
	public:
		class AActor*                                              anActor;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemID1;                                                 // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    AdditionalData;                                          // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestInventoryUseItem
	 */
	struct AShooterPlayerController_ServerRequestInventoryUseItem_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestInventorySwapItems
	 */
	struct AShooterPlayerController_ServerRequestInventorySwapItems_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemID1;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemID2;                                                 // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestFastTravelToPoint
	 */
	struct AShooterPlayerController_ServerRequestFastTravelToPoint_Params
	{
	public:
		int32_t                                                    fromSpawnPointID;                                        // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    SpawnPointID;                                            // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestDropAllItems
	 */
	struct AShooterPlayerController_ServerRequestDropAllItems_Params
	{
	public:
		class FString                                              CurrentCustomFolderFilter;                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              CurrentNameFilter;                                       // 0x0010(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestDownloadPlayerCharacter
	 */
	struct AShooterPlayerController_ServerRequestDownloadPlayerCharacter_Params
	{
	public:
		struct FArkTributePlayerData                               DownloadedCharacter;                                     // 0x0000(0x0120)  (Parm)
		int32_t                                                    SpawnPointID;                                            // 0x0120(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    spawnRegionIndex;                                        // 0x0124(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestDownloadDino
	 */
	struct AShooterPlayerController_ServerRequestDownloadDino_Params
	{
	public:
		struct FARKTributeDino                                     DownloadedDino;                                          // 0x0000(0x0120)  (Parm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestDinoCharStats
	 */
	struct AShooterPlayerController_ServerRequestDinoCharStats_Params
	{
	public:
		class APrimalDinoCharacter*                                theDinoChar;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestDinoAncestors
	 */
	struct AShooterPlayerController_ServerRequestDinoAncestors_Params
	{
	public:
		class APrimalDinoCharacter*                                ForDino;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestCreateMissionDataBuff
	 */
	struct AShooterPlayerController_ServerRequestCreateMissionDataBuff_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRequestActorItems
	 */
	struct AShooterPlayerController_ServerRequestActorItems_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       bInventoryItems;                                         // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsFirstSpawn;                                           // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRepeatMultiUse
	 */
	struct AShooterPlayerController_ServerRepeatMultiUse_Params
	{
	public:
		class UObject*                                             ForObject;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    UseIndex;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRepairItem
	 */
	struct AShooterPlayerController_ServerRepairItem_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRemoveSteamItemSucceeded
	 */
	struct AShooterPlayerController_ServerRemoveSteamItemSucceeded_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRemoveSteamItem
	 */
	struct AShooterPlayerController_ServerRemoveSteamItem_Params
	{
	public:
		uint32_t                                                   ItemdDefId;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRemovePawnItem
	 */
	struct AShooterPlayerController_ServerRemovePawnItem_Params
	{
	public:
		struct FItemNetID                                          ItemId;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSecondryAction;                                         // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRemovePassenger
	 */
	struct AShooterPlayerController_ServerRemovePassenger_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRemoveAdminPlayer
	 */
	struct AShooterPlayerController_ServerRemoveAdminPlayer_Params
	{
	public:
		class FString                                              PlayerSteamName;                                         // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              PlayerSteamID;                                           // 0x0010(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerReleaseSeatingStructure
	 */
	struct AShooterPlayerController_ServerReleaseSeatingStructure_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRefreshSteamInventory
	 */
	struct AShooterPlayerController_ServerRefreshSteamInventory_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerRecieveSpectatorLocationAndRotation
	 */
	struct AShooterPlayerController_ServerRecieveSpectatorLocationAndRotation_Params
	{
	public:
		struct FVector                                             spectatorLocation;                                       // 0x0000(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            spectatorRotation;                                       // 0x000C(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerReadMessageOFTheDay
	 */
	struct AShooterPlayerController_ServerReadMessageOFTheDay_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerProcessItemNetExecCommandUnreliableBP
	 */
	struct AShooterPlayerController_ServerProcessItemNetExecCommandUnreliableBP_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ForItemID;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsEquippedItem;                                         // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_8E41[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FName                                                CommandName;                                             // 0x0014(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_9JMZ[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FBPNetExecParams                                    ExecParams;                                              // 0x0020(0x0040)  (Parm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerProcessItemNetExecCommandBP
	 */
	struct AShooterPlayerController_ServerProcessItemNetExecCommandBP_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ForItemID;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsEquippedItem;                                         // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JBRI[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FName                                                CommandName;                                             // 0x0014(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_HFAC[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FBPNetExecParams                                    ExecParams;                                              // 0x0020(0x0040)  (Parm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerPaint
	 */
	struct AShooterPlayerController_ServerPaint_Params
	{
	public:
		class UStructurePaintingComponent*                         Structure;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		TArray<struct FPaintItem>                                  Paints;                                                  // 0x0008(0x0010)  (ConstParm, Parm, ZeroConstructor, ContainsInstancedReference)
		bool                                                       bLastBatch;                                              // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFromLoadFile;                                           // 0x0019(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerNotifyEditText
	 */
	struct AShooterPlayerController_ServerNotifyEditText_Params
	{
	public:
		class FString                                              TextToUse;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       checkedBox;                                              // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_PMXB[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              ForObjectClass;                                          // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		uint32_t                                                   ExtraID1;                                                // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		uint32_t                                                   ExtraID2;                                                // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObject*                                             ForObject;                                               // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerMultiUse
	 */
	struct AShooterPlayerController_ServerMultiUse_Params
	{
	public:
		class UObject*                                             ForObject;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    UseIndex;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerLoadWorld
	 */
	struct AShooterPlayerController_ServerLoadWorld_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerLoadUploadedDinos
	 */
	struct AShooterPlayerController_ServerLoadUploadedDinos_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerLoadUploadedCharacters
	 */
	struct AShooterPlayerController_ServerLoadUploadedCharacters_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerLoadArkInventoryItems
	 */
	struct AShooterPlayerController_ServerLoadArkInventoryItems_Params
	{
	public:
		TArray<struct FItemNetInfo>                                ArkInventoryItems;                                       // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
		bool                                                       bFinalBatch;                                             // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerListPlayers
	 */
	struct AShooterPlayerController_ServerListPlayers_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerKickPlayer
	 */
	struct AShooterPlayerController_ServerKickPlayer_Params
	{
	public:
		class FString                                              PlayerSteamName;                                         // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              PlayerSteamID;                                           // 0x0010(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerInventoryClearCraftQueue
	 */
	struct AShooterPlayerController_ServerInventoryClearCraftQueue_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerGrindItemInRemoteInventory
	 */
	struct AShooterPlayerController_ServerGrindItemInRemoteInventory_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       grindStack;                                              // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerGlobalCommand
	 */
	struct AShooterPlayerController_ServerGlobalCommand_Params
	{
	public:
		class FString                                              Msg;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerGetOriginalHairColor
	 */
	struct AShooterPlayerController_ServerGetOriginalHairColor_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerGetMessageOfTheDay
	 */
	struct AShooterPlayerController_ServerGetMessageOfTheDay_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerEquipToRemoteInventory
	 */
	struct AShooterPlayerController_ServerEquipToRemoteInventory_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerEquipPawnItem
	 */
	struct AShooterPlayerController_ServerEquipPawnItem_Params
	{
	public:
		struct FItemNetID                                          ItemId;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerDropFromRemoteInventory
	 */
	struct AShooterPlayerController_ServerDropFromRemoteInventory_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerDropAllNotReadyForUploadItems
	 */
	struct AShooterPlayerController_ServerDropAllNotReadyForUploadItems_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerDPC
	 */
	struct AShooterPlayerController_ServerDPC_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerDownloadTransferredPlayer
	 */
	struct AShooterPlayerController_ServerDownloadTransferredPlayer_Params
	{
	public:
		int32_t                                                    SpawnPointID;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    spawnPointRegionIndex;                                   // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerDisallowPlayerToJoinNoCheck
	 */
	struct AShooterPlayerController_ServerDisallowPlayerToJoinNoCheck_Params
	{
	public:
		class FString                                              PlayerId;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerDeleteItemFromCustomFolder
	 */
	struct AShooterPlayerController_ServerDeleteItemFromCustomFolder_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FString                                              CFolderName;                                             // 0x0008(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    InventoryCompType;                                       // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x001C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerDeleteCustomFolder
	 */
	struct AShooterPlayerController_ServerDeleteCustomFolder_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FString                                              CFolderName;                                             // 0x0008(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    InventoryCompType;                                       // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerDataSetRPC
	 */
	struct AShooterPlayerController_ServerDataSetRPC_Params
	{
	public:
		TArray<struct FDataSet>                                    dataSets;                                                // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerCycleSpectator
	 */
	struct AShooterPlayerController_ServerCycleSpectator_Params
	{
	public:
		bool                                                       bNext;                                                   // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerCraftItem
	 */
	struct AShooterPlayerController_ServerCraftItem_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerCheckUnfreeze
	 */
	struct AShooterPlayerController_ServerCheckUnfreeze_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerCheckIsValidPlayerToDownload
	 */
	struct AShooterPlayerController_ServerCheckIsValidPlayerToDownload_Params
	{
	public:
		struct FArkTributePlayerData                               PlayerData;                                              // 0x0000(0x0120)  (ConstParm, Parm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerCharacterUploadWithItems_UploadItem
	 */
	struct AShooterPlayerController_ServerCharacterUploadWithItems_UploadItem_Params
	{
	public:
		uint64_t                                                   PlayerDataID;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FItemNetInfo                                        InvItem;                                                 // 0x0008(0x01B0)  (Parm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerCharacterUploadWithItems_Start
	 */
	struct AShooterPlayerController_ServerCharacterUploadWithItems_Start_Params
	{
	public:
		uint64_t                                                   PlayerDataID;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FArkTributePlayerData                               PlayerData;                                              // 0x0008(0x0120)  (Parm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerCharacterUploadWithItems_FinishAndCreateCharacter
	 */
	struct AShooterPlayerController_ServerCharacterUploadWithItems_FinishAndCreateCharacter_Params
	{
	public:
		uint64_t                                                   PlayerDataID;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerCharacterUploadWithItems_CharaterPayload
	 */
	struct AShooterPlayerController_ServerCharacterUploadWithItems_CharaterPayload_Params
	{
	public:
		uint64_t                                                   PlayerDataID;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<unsigned char>                                      PlayerDataChunk;                                         // 0x0008(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerBanPlayer
	 */
	struct AShooterPlayerController_ServerBanPlayer_Params
	{
	public:
		class FString                                              PlayerSteamName;                                         // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              PlayerSteamID;                                           // 0x0010(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerAsyncLoadArkInventoryItems
	 */
	struct AShooterPlayerController_ServerAsyncLoadArkInventoryItems_Params
	{
	public:
		TArray<struct FItemNetInfo>                                ArkInventoryItems;                                       // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
		bool                                                       bFinalBatch;                                             // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerAllowPlayerToJoinNoCheck
	 */
	struct AShooterPlayerController_ServerAllowPlayerToJoinNoCheck_Params
	{
	public:
		class FString                                              PlayerId;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerAddItemToCustomFolder
	 */
	struct AShooterPlayerController_ServerAddItemToCustomFolder_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FString                                              CFolderName;                                             // 0x0008(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    InventoryCompType;                                       // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x001C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerAddItemToArkInventory
	 */
	struct AShooterPlayerController_ServerAddItemToArkInventory_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    RequestedQuantity;                                       // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerAddItemFromArkInventory
	 */
	struct AShooterPlayerController_ServerAddItemFromArkInventory_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    RequestedQuantity;                                       // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerAddAdminPlayer
	 */
	struct AShooterPlayerController_ServerAddAdminPlayer_Params
	{
	public:
		class FString                                              PlayerSteamName;                                         // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              PlayerSteamID;                                           // 0x0010(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerAddAchievementID
	 */
	struct AShooterPlayerController_ServerAddAchievementID_Params
	{
	public:
		class FString                                              AchievementID;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bIsOnSpawn;                                              // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerActorViewRemoteInventory
	 */
	struct AShooterPlayerController_ServerActorViewRemoteInventory_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ServerActorCloseRemoteInventory
	 */
	struct AShooterPlayerController_ServerActorCloseRemoteInventory_Params
	{
	public:
		class UPrimalInventoryComponent*                           InventoryComp;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.Server_RespondToPing
	 */
	struct AShooterPlayerController_Server_RespondToPing_Params
	{
	public:
		struct FReplicatePingData                                  RespondToPingData;                                       // 0x0000(0x0028)  (ConstParm, Parm, ContainsInstancedReference)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.Server_Ping
	 */
	struct AShooterPlayerController_Server_Ping_Params
	{
	public:
		struct FReplicatePingData                                  WithPingData;                                            // 0x0000(0x0028)  (ConstParm, Parm, ContainsInstancedReference)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.SendAlarmNotification
	 */
	struct AShooterPlayerController_SendAlarmNotification_Params
	{
	public:
		class FString                                              SteamID;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Title;                                                   // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Message;                                                 // 0x0020(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.SCP
	 */
	struct AShooterPlayerController_SCP_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.SameLinkedId
	 */
	struct AShooterPlayerController_SameLinkedId_Params
	{
	public:
		int64_t                                                    Value;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.RPCStayAlive
	 */
	struct AShooterPlayerController_RPCStayAlive_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.RespondToPing
	 */
	struct AShooterPlayerController_RespondToPing_Params
	{
	public:
		struct FReplicatePingData                                  RespondToPingData;                                       // 0x0000(0x0028)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.RequestSpectator
	 */
	struct AShooterPlayerController_RequestSpectator_Params
	{
	public:
		class FString                                              InSpectatorPass;                                         // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.RemoveItemSucceeded
	 */
	struct AShooterPlayerController_RemoveItemSucceeded_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.QuitToMainMenu
	 */
	struct AShooterPlayerController_QuitToMainMenu_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.PurchaseEngramPoint
	 */
	struct AShooterPlayerController_PurchaseEngramPoint_Params
	{
	public:
		int32_t                                                    NumPointsToPurchase;                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.PrintColors
	 */
	struct AShooterPlayerController_PrintColors_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.PlayHitMarkerStructureAlly
	 */
	struct AShooterPlayerController_PlayHitMarkerStructureAlly_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.PlayHitMarkerStructure
	 */
	struct AShooterPlayerController_PlayHitMarkerStructure_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.PlayHitMarkerCharacter
	 */
	struct AShooterPlayerController_PlayHitMarkerCharacter_Params
	{
	public:
		bool                                                       bHitFriendlyTarget;                                      // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_AYXU[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitMarkerSettings                                  HitMarkerSettings;                                       // 0x0008(0x0028)  (ConstParm, Parm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.PlayerCommand
	 */
	struct AShooterPlayerController_PlayerCommand_Params
	{
	public:
		class FString                                              TheCommand;                                              // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.PingNearbyPlayers
	 */
	struct AShooterPlayerController_PingNearbyPlayers_Params
	{
	public:
		struct FReplicatePingData                                  WithPingData;                                            // 0x0000(0x0028)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnWhistlePress
	 */
	struct AShooterPlayerController_OnWhistlePress_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnToggleInGameMenu
	 */
	struct AShooterPlayerController_OnToggleInGameMenu_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnToggleDoFMenu
	 */
	struct AShooterPlayerController_OnToggleDoFMenu_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnStopTargeting
	 */
	struct AShooterPlayerController_OnStopTargeting_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnStopFire
	 */
	struct AShooterPlayerController_OnStopFire_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnStartTargeting
	 */
	struct AShooterPlayerController_OnStartTargeting_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnStartFire
	 */
	struct AShooterPlayerController_OnStartFire_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnServerRefreshSteamInventoryFinished
	 */
	struct AShooterPlayerController_OnServerRefreshSteamInventoryFinished_Params
	{
	public:
		bool                                                       bSuccess;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_L6HD[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		uint64_t                                                   SteamID;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnRefreshSteamInventoryToCheckConsumeFinished
	 */
	struct AShooterPlayerController_OnRefreshSteamInventoryToCheckConsumeFinished_Params
	{
	public:
		bool                                                       bSuccess;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KPJ1[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		uint64_t                                                   SteamID;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnRefreshSteamInventoryFinished
	 */
	struct AShooterPlayerController_OnRefreshSteamInventoryFinished_Params
	{
	public:
		bool                                                       bSuccess;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NU2K[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		uint64_t                                                   SteamID;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnPingUp
	 */
	struct AShooterPlayerController_OnPingUp_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnPingDown
	 */
	struct AShooterPlayerController_OnPingDown_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnLoadArkTributePlayersDataFinished
	 */
	struct AShooterPlayerController_OnLoadArkTributePlayersDataFinished_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_C68V[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FArkTributePlayerData>                       PlayersData;                                             // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    FailureResponseCode;                                     // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnLevelView
	 */
	struct AShooterPlayerController_OnLevelView_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnFirstSaveAfterCharacterDownloadFinished
	 */
	struct AShooterPlayerController_OnFirstSaveAfterCharacterDownloadFinished_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnEmoteKey2Release
	 */
	struct AShooterPlayerController_OnEmoteKey2Release_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnEmoteKey2Press
	 */
	struct AShooterPlayerController_OnEmoteKey2Press_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnEmoteKey1Release
	 */
	struct AShooterPlayerController_OnEmoteKey1Release_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnEmoteKey1Press
	 */
	struct AShooterPlayerController_OnEmoteKey1Press_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnDisableSpectator
	 */
	struct AShooterPlayerController_OnDisableSpectator_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnCurrentCharacterAndItemsUploaded
	 */
	struct AShooterPlayerController_OnCurrentCharacterAndItemsUploaded_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnConsumeItemFinished
	 */
	struct AShooterPlayerController_OnConsumeItemFinished_Params
	{
	public:
		bool                                                       bSuccess;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_T7H9[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		uint64_t                                                   SteamID;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnClientReceiveStructuresPlacedOnFloor__DelegateSignature
	 */
	struct AShooterPlayerController_OnClientReceiveStructuresPlacedOnFloor__DelegateSignature_Params
	{
	public:
		class APrimalStructure*                                    Structure;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class APrimalStructure*>                            StructuresPlacedOnFloor;                                 // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnArkTributeSaved
	 */
	struct AShooterPlayerController_OnArkTributeSaved_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnAddItemFinished
	 */
	struct AShooterPlayerController_OnAddItemFinished_Params
	{
	public:
		bool                                                       bSuccess;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_VBF9[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<uint64_t>                                           SteamItemUserIDs;                                        // 0x0008(0x0010)  (Parm, ZeroConstructor)
		uint64_t                                                   SteamID;                                                 // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.OnAddedItemsToAllClustersInventory
	 */
	struct AShooterPlayerController_OnAddedItemsToAllClustersInventory_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ECA3[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              UserId;                                                  // 0x0008(0x0010)  (Parm, ZeroConstructor)
		TArray<int32_t>                                            MasterIndexNum;                                          // 0x0018(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.NotifyTribeWarStatus
	 */
	struct AShooterPlayerController_NotifyTribeWarStatus_Params
	{
	public:
		class FString                                              EnemyTribeString;                                        // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    StatusType;                                              // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.NotifyPawnBuffsOfDamageEvent
	 */
	struct AShooterPlayerController_NotifyPawnBuffsOfDamageEvent_Params
	{
	public:
		class AActor*                                              DamagedActor;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DamageAmount;                                            // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_6WO5[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0010(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.LockEmote
	 */
	struct AShooterPlayerController_LockEmote_Params
	{
	public:
		class FName                                                EmoteName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.LinkedPlayerIDString
	 */
	struct AShooterPlayerController_LinkedPlayerIDString_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.LevelView
	 */
	struct AShooterPlayerController_LevelView_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.LeaveMeAlone
	 */
	struct AShooterPlayerController_LeaveMeAlone_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.IsViewingInventoryUI
	 */
	struct AShooterPlayerController_IsViewingInventoryUI_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.IsTribeAdmin
	 */
	struct AShooterPlayerController_IsTribeAdmin_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.IsSpectator
	 */
	struct AShooterPlayerController_IsSpectator_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.IsRemoteControlling
	 */
	struct AShooterPlayerController_IsRemoteControlling_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.IsPlayerViewingPing
	 */
	struct AShooterPlayerController_IsPlayerViewingPing_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FPingData                                           CheckPingData;                                           // 0x0008(0x0050)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		bool                                                       ReturnValue;                                             // 0x0058(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.IsPingedItem
	 */
	struct AShooterPlayerController_IsPingedItem_Params
	{
	public:
		class UPrimitiveComponent*                                 PingComponent;                                           // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.IsPawnAcknowledged
	 */
	struct AShooterPlayerController_IsPawnAcknowledged_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.IsJumpInputPressed
	 */
	struct AShooterPlayerController_IsJumpInputPressed_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.IsInTribe
	 */
	struct AShooterPlayerController_IsInTribe_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.IsInputPressed
	 */
	struct AShooterPlayerController_IsInputPressed_Params
	{
	public:
		class FName                                                InputName;                                               // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                GamepadInputName;                                        // 0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.IsHudVisible
	 */
	struct AShooterPlayerController_IsHudVisible_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.IsGameInputAllowed
	 */
	struct AShooterPlayerController_IsGameInputAllowed_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.IsFirstLocalPlayerOrLivingLocalPlayer
	 */
	struct AShooterPlayerController_IsFirstLocalPlayerOrLivingLocalPlayer_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.IsFirstLocalPlayer
	 */
	struct AShooterPlayerController_IsFirstLocalPlayer_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.IsEmoteUnlocked
	 */
	struct AShooterPlayerController_IsEmoteUnlocked_Params
	{
	public:
		class FName                                                EmoteName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.IsAtPersonalTameLimit
	 */
	struct AShooterPlayerController_IsAtPersonalTameLimit_Params
	{
	public:
		bool                                                       bIsForStructure;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.IsAltFireInputPressed
	 */
	struct AShooterPlayerController_IsAltFireInputPressed_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.InitPing
	 */
	struct AShooterPlayerController_InitPing_Params
	{
	public:
		struct FPingData                                           ForPingData;                                             // 0x0000(0x0050)  (Parm, OutParm, ContainsInstancedReference)
		struct FReplicatePingData                                  InitFromData;                                            // 0x0050(0x0028)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		bool                                                       ReturnValue;                                             // 0x0078(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.InitCharacterPainting
	 */
	struct AShooterPlayerController_InitCharacterPainting_Params
	{
	public:
		class APrimalCharacter*                                    Char;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.InfiniteStats
	 */
	struct AShooterPlayerController_InfiniteStats_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.HideRiders
	 */
	struct AShooterPlayerController_HideRiders_Params
	{
	public:
		bool                                                       bDoHide;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.HasGodMode
	 */
	struct AShooterPlayerController_HasGodMode_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.HasBestScoreForMission
	 */
	struct AShooterPlayerController_HasBestScoreForMission_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GlobalCommand
	 */
	struct AShooterPlayerController_GlobalCommand_Params
	{
	public:
		class FString                                              Msg;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GiveSlotItemNum
	 */
	struct AShooterPlayerController_GiveSlotItemNum_Params
	{
	public:
		int32_t                                                    MasterIndexNum;                                          // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    slotNum;                                                 // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    quantityOverride;                                        // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GiveSlotItem
	 */
	struct AShooterPlayerController_GiveSlotItem_Params
	{
	public:
		class FString                                              blueprintPath;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    slotNum;                                                 // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    quantityOverride;                                        // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GiveColors
	 */
	struct AShooterPlayerController_GiveColors_Params
	{
	public:
		int32_t                                                    Quantity;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GetTamedDinosNearBy
	 */
	struct AShooterPlayerController_GetTamedDinosNearBy_Params
	{
	public:
		TArray<TWeakObjectPtr<class APrimalDinoCharacter>>         Dinos;                                                   // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
		float                                                      RangeRadius;                                             // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NearLocation;                                            // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GetSubscribedAppIds
	 */
	struct AShooterPlayerController_GetSubscribedAppIds_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GetShooterHUD
	 */
	struct AShooterPlayerController_GetShooterHUD_Params
	{
	public:
		class AShooterHUD*                                         ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GetPlayerViewPointNoModifiers
	 */
	struct AShooterPlayerController_GetPlayerViewPointNoModifiers_Params
	{
	public:
		struct FVector                                             out_Location;                                            // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            out_Rotation;                                            // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ForAiming;                                               // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bNoTPVAim;                                               // 0x0019(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GetPlayerCharacterName
	 */
	struct AShooterPlayerController_GetPlayerCharacterName_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GetPlayerCharacter
	 */
	struct AShooterPlayerController_GetPlayerCharacter_Params
	{
	public:
		class AShooterCharacter*                                   ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GetPingTitleForActor
	 */
	struct AShooterPlayerController_GetPingTitleForActor_Params
	{
	public:
		class AActor*                                              forActor;                                                // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GetPingIconForComponent
	 */
	struct AShooterPlayerController_GetPingIconForComponent_Params
	{
	public:
		class UPrimitiveComponent*                                 ForComponent;                                            // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UTexture2D*                                          ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GetPersonalTameLimitString
	 */
	struct AShooterPlayerController_GetPersonalTameLimitString_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GetPawnInventoryComponent
	 */
	struct AShooterPlayerController_GetPawnInventoryComponent_Params
	{
	public:
		class UPrimalInventoryComponent*                           ReturnValue;                                             // 0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GetNearbyPOIs
	 */
	struct AShooterPlayerController_GetNearbyPOIs_Params
	{
	public:
		TArray<struct FPointOfInterestData_ForCompanion>           ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GetLinkedPlayerID
	 */
	struct AShooterPlayerController_GetLinkedPlayerID_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GetLastInventoryRetrievalTime
	 */
	struct AShooterPlayerController_GetLastInventoryRetrievalTime_Params
	{
	public:
		double                                                     ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GetInventoryUISelectedItemRemote
	 */
	struct AShooterPlayerController_GetInventoryUISelectedItemRemote_Params
	{
	public:
		class UPrimalItem*                                         ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GetInventoryUISelectedItemLocal
	 */
	struct AShooterPlayerController_GetInventoryUISelectedItemLocal_Params
	{
	public:
		class UPrimalItem*                                         ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GetHeldItemSlots
	 */
	struct AShooterPlayerController_GetHeldItemSlots_Params
	{
	public:
		TArray<unsigned char>                                      ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GetExplorerNoteEntry
	 */
	struct AShooterPlayerController_GetExplorerNoteEntry_Params
	{
	public:
		int32_t                                                    ExplorerNoteIndex;                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_X7EA[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FExplorerNoteEntry                                  ReturnValue;                                             // 0x0008(0x00A8)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GetControllerPlayer
	 */
	struct AShooterPlayerController_GetControllerPlayer_Params
	{
	public:
		class AShooterCharacter*                                   ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GetBestScoreForMission
	 */
	struct AShooterPlayerController_GetBestScoreForMission_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLeaderboardRow                                     ReturnValue;                                             // 0x0008(0x0048)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GetAllMatinees
	 */
	struct AShooterPlayerController_GetAllMatinees_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GetAllAimedHarvestActors
	 */
	struct AShooterPlayerController_GetAllAimedHarvestActors_Params
	{
	public:
		float                                                      MaxDistance;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_J4IH[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      OutHarvestActors;                                        // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		TArray<class UActorComponent*>                             OutHarvestComponents;                                    // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
		TArray<int32_t>                                            OutHitBodyIndices;                                       // 0x0028(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0038(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.GetActiveMission
	 */
	struct AShooterPlayerController_GetActiveMission_Params
	{
	public:
		class AMissionType*                                        ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.FormatTextWithKeyBindings
	 */
	struct AShooterPlayerController_FormatTextWithKeyBindings_Params
	{
	public:
		class FString                                              InText;                                                  // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bIgnoreMarkup;                                           // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_0NLS[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.FlushPrimalStats
	 */
	struct AShooterPlayerController_FlushPrimalStats_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.FlushLevelStreaming
	 */
	struct AShooterPlayerController_FlushLevelStreaming_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.FinalFlushLevelStreaming
	 */
	struct AShooterPlayerController_FinalFlushLevelStreaming_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.EnvQA
	 */
	struct AShooterPlayerController_EnvQA_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.EnforcementHighlight
	 */
	struct AShooterPlayerController_EnforcementHighlight_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.EndWhistleSelection
	 */
	struct AShooterPlayerController_EndWhistleSelection_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.EndSurfaceCamera
	 */
	struct AShooterPlayerController_EndSurfaceCamera_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.EndEmoteSelection
	 */
	struct AShooterPlayerController_EndEmoteSelection_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.EndArkGamepadRightShoulder
	 */
	struct AShooterPlayerController_EndArkGamepadRightShoulder_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.EndArkGamepadLeftShoulder
	 */
	struct AShooterPlayerController_EndArkGamepadLeftShoulder_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.EndArkGamepadFaceButtonTop
	 */
	struct AShooterPlayerController_EndArkGamepadFaceButtonTop_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.EndArkGamepadFaceButtonRight
	 */
	struct AShooterPlayerController_EndArkGamepadFaceButtonRight_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.EndArkGamepadFaceButtonLeft
	 */
	struct AShooterPlayerController_EndArkGamepadFaceButtonLeft_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.EndArkGamepadFaceButtonBottom
	 */
	struct AShooterPlayerController_EndArkGamepadFaceButtonBottom_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.EndArkGamepadDpadRight
	 */
	struct AShooterPlayerController_EndArkGamepadDpadRight_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.EndArkGamepadDpadLeft
	 */
	struct AShooterPlayerController_EndArkGamepadDpadLeft_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.EndArkGamepadDpadDown
	 */
	struct AShooterPlayerController_EndArkGamepadDpadDown_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.EndArkGamepadBackButton
	 */
	struct AShooterPlayerController_EndArkGamepadBackButton_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.EndAArkGamepadDpadUp
	 */
	struct AShooterPlayerController_EndAArkGamepadDpadUp_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.EnableSpectator
	 */
	struct AShooterPlayerController_EnableSpectator_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.DoServerCheckUnfreeze
	 */
	struct AShooterPlayerController_DoServerCheckUnfreeze_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.DoPlayerCommand
	 */
	struct AShooterPlayerController_DoPlayerCommand_Params
	{
	public:
		class FString                                              TheCommand;                                              // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.DoPingTrace
	 */
	struct AShooterPlayerController_DoPingTrace_Params
	{
	public:
		struct FReplicatePingData                                  NewPing;                                                 // 0x0000(0x0028)  (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		bool                                                       bIsResponding;                                           // 0x0028(0x0001)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0029(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.DoesPlayerOwnPing
	 */
	struct AShooterPlayerController_DoesPlayerOwnPing_Params
	{
	public:
		class AShooterPlayerController*                            PlayerPC;                                                // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		uint32_t                                                   PingOwnerID;                                             // 0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.DoCrash
	 */
	struct AShooterPlayerController_DoCrash_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.DisableSurfaceCameraInterpolation
	 */
	struct AShooterPlayerController_DisableSurfaceCameraInterpolation_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.DisableEnemyInvisible
	 */
	struct AShooterPlayerController_DisableEnemyInvisible_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.DebugStructures
	 */
	struct AShooterPlayerController_DebugStructures_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.DebugCheckSeven
	 */
	struct AShooterPlayerController_DebugCheckSeven_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.CopyWorldBuffStatus
	 */
	struct AShooterPlayerController_CopyWorldBuffStatus_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.CopyCoordsToClipboard
	 */
	struct AShooterPlayerController_CopyCoordsToClipboard_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ConditonalEndGamepadModiferState
	 */
	struct AShooterPlayerController_ConditonalEndGamepadModiferState_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientUsedActorItem
	 */
	struct AShooterPlayerController_ClientUsedActorItem_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientUploadedDinosLoaded
	 */
	struct AShooterPlayerController_ClientUploadedDinosLoaded_Params
	{
	public:
		TArray<struct FARKTributeDinoListing>                      UploadedDinosDataListings;                               // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientUploadedCharactersLoaded
	 */
	struct AShooterPlayerController_ClientUploadedCharactersLoaded_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_V94F[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FArkTributePlayerDataListing>                UploadedCharactersDataListings;                          // 0x0008(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientUploadDino
	 */
	struct AShooterPlayerController_ClientUploadDino_Params
	{
	public:
		class APrimalDinoCharacter*                                DownloadedDino;                                          // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientUpdateItemWeaponClipAmmo
	 */
	struct AShooterPlayerController_ClientUpdateItemWeaponClipAmmo_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ammo;                                                    // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientUpdateItemQuantity
	 */
	struct AShooterPlayerController_ClientUpdateItemQuantity_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ItemQuantity;                                            // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientUpdateItemDurability
	 */
	struct AShooterPlayerController_ClientUpdateItemDurability_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ItemDurability;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientUpdateItemCustomData
	 */
	struct AShooterPlayerController_ClientUpdateItemCustomData_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FCustomItemData                                     InData;                                                  // 0x0010(0x0078)  (Parm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientUpdateInventoryCraftQueue
	 */
	struct AShooterPlayerController_ClientUpdateInventoryCraftQueue_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		TArray<struct FItemCraftQueueEntry>                        CraftQueueEntries;                                       // 0x0008(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientUnlockExplorerNote
	 */
	struct AShooterPlayerController_ClientUnlockExplorerNote_Params
	{
	public:
		int32_t                                                    ExplorerNoteIndex;                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       forceShowExplorerNoteUI;                                 // 0x0004(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientUnlockAchievement
	 */
	struct AShooterPlayerController_ClientUnlockAchievement_Params
	{
	public:
		class FString                                              AchievementID;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientTeleportSpectator
	 */
	struct AShooterPlayerController_ClientTeleportSpectator_Params
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7HEW[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		uint64_t                                                   PlayerId;                                                // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientSwapActorItems
	 */
	struct AShooterPlayerController_ClientSwapActorItems_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemID1;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemID2;                                                 // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientStopLocalSound
	 */
	struct AShooterPlayerController_ClientStopLocalSound_Params
	{
	public:
		class USoundBase*                                          aSound;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientStartSurfaceCameraForPassenger
	 */
	struct AShooterPlayerController_ClientStartSurfaceCameraForPassenger_Params
	{
	public:
		float                                                      Yaw;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Pitch;                                                   // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Roll;                                                    // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bInvertTurnInput;                                        // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientStartReceivingTribeLog
	 */
	struct AShooterPlayerController_ClientStartReceivingTribeLog_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientStartReceivingActorItems
	 */
	struct AShooterPlayerController_ClientStartReceivingActorItems_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       bEquippedItems;                                          // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientShowTransferredPlayerConfirmationDialog
	 */
	struct AShooterPlayerController_ClientShowTransferredPlayerConfirmationDialog_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientShowSpawnUIForTransferringPlayer
	 */
	struct AShooterPlayerController_ClientShowSpawnUIForTransferringPlayer_Params
	{
	public:
		class UClass*                                              NewHUDClass;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		uint64_t                                                   TransferingPlayerID;                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bUseTimer;                                               // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientShowSpawnUI
	 */
	struct AShooterPlayerController_ClientShowSpawnUI_Params
	{
	public:
		float                                                      Delay;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientShowPaintingUI
	 */
	struct AShooterPlayerController_ClientShowPaintingUI_Params
	{
	public:
		class UObject*                                             ObjectToPaint;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientShowLeaderboard
	 */
	struct AShooterPlayerController_ClientShowLeaderboard_Params
	{
	public:
		class UClass*                                              LeaderboardType;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                MissionTag;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FLeaderboardRow>                             LeaderboardRows;                                         // 0x0010(0x0010)  (ConstParm, Parm, ZeroConstructor)
		bool                                                       bPlayerHasValidLatestScore;                              // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_FTLT[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FLeaderboardRow                                     LatestPlayerScore;                                       // 0x0028(0x0048)  (Parm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientShowCharacterCreationUI
	 */
	struct AShooterPlayerController_ClientShowCharacterCreationUI_Params
	{
	public:
		bool                                                       bShowDownloadCharacter;                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientSetSpectatorLocation
	 */
	struct AShooterPlayerController_ClientSetSpectatorLocation_Params
	{
	public:
		struct FVector                                             NewLocation;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientSetPersonalDinoTameCount
	 */
	struct AShooterPlayerController_ClientSetPersonalDinoTameCount_Params
	{
	public:
		int32_t                                                    NewPersonalDinoTameCount;                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientSetHUDAndInitUIScenes
	 */
	struct AShooterPlayerController_ClientSetHUDAndInitUIScenes_Params
	{
	public:
		class UClass*                                              NewHUDClass;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientSetControlRotation
	 */
	struct AShooterPlayerController_ClientSetControlRotation_Params
	{
	public:
		struct FRotator                                            NewRotation;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientSetCanEnableCheats
	 */
	struct AShooterPlayerController_ClientSetCanEnableCheats_Params
	{
	public:
		bool                                                       bIsPossible;                                             // 0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientSetArkTributeLimits
	 */
	struct AShooterPlayerController_ClientSetArkTributeLimits_Params
	{
	public:
		bool                                                       LimitItems;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       LimitDinos;                                              // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       LimitCharacters;                                         // 0x0002(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5BB1[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    MaxItems;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MaxDinos;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MaxCharacters;                                           // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientServerSOTFNotificationCustom
	 */
	struct AShooterPlayerController_ClientServerSOTFNotificationCustom_Params
	{
	public:
		class FString                                              MessageText;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
		struct FLinearColor                                        MessageColor;                                            // 0x0010(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DisplayScale;                                            // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DisplayTime;                                             // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTexture2D*                                          MessageIcon;                                             // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USoundBase*                                          SoundToPlay;                                             // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientServerSOTFNotification
	 */
	struct AShooterPlayerController_ClientServerSOTFNotification_Params
	{
	public:
		ESTOFNotificationType                                      NotificationType;                                        // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_L8QL[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              MessageText;                                             // 0x0008(0x0010)  (Parm, ZeroConstructor)
		struct FLinearColor                                        MessageColor;                                            // 0x0018(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DisplayScale;                                            // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DisplayTime;                                             // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTexture2D*                                          MessageIcon;                                             // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USoundBase*                                          SoundToPlay;                                             // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bLastPlayer;                                             // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_815Y[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              TribeName;                                               // 0x0048(0x0010)  (Parm, ZeroConstructor)
		TArray<class FString>                                      PlayerNames;                                             // 0x0058(0x0010)  (ConstParm, Parm, ZeroConstructor)
		class FString                                              DeathReason;                                             // 0x0068(0x0010)  (Parm, ZeroConstructor)
		TArray<struct FPrimalPlayerCharacterConfigStructReplicated> DeadPlayersData;                                         // 0x0078(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientServerNotificationSingle
	 */
	struct AShooterPlayerController_ClientServerNotificationSingle_Params
	{
	public:
		class FString                                              MessageText;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
		struct FLinearColor                                        MessageColor;                                            // 0x0010(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DisplayScale;                                            // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DisplayTime;                                             // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTexture2D*                                          MessageIcon;                                             // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USoundBase*                                          SoundToPlay;                                             // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MessageTypeID;                                           // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientServerNotification
	 */
	struct AShooterPlayerController_ClientServerNotification_Params
	{
	public:
		class FString                                              MessageText;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
		struct FLinearColor                                        MessageColor;                                            // 0x0010(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DisplayScale;                                            // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DisplayTime;                                             // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTexture2D*                                          MessageIcon;                                             // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USoundBase*                                          SoundToPlay;                                             // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientServerChatMessage
	 */
	struct AShooterPlayerController_ClientServerChatMessage_Params
	{
	public:
		class FString                                              MessageText;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
		struct FLinearColor                                        MessageColor;                                            // 0x0010(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsBold;                                                 // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientServerChatDirectMessage
	 */
	struct AShooterPlayerController_ClientServerChatDirectMessage_Params
	{
	public:
		class FString                                              MessageText;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
		struct FLinearColor                                        MessageColor;                                            // 0x0010(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsBold;                                                 // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientSendItemNetExecCommandToServer
	 */
	struct AShooterPlayerController_ClientSendItemNetExecCommandToServer_Params
	{
	public:
		class UPrimalItem*                                         ForItem;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                CommandName;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FBPNetExecParams                                    ExecParams;                                              // 0x0010(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       bIsReliable;                                             // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientSendFolderData
	 */
	struct AShooterPlayerController_ClientSendFolderData_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		TArray<struct FServerCustomFolder>                         ServerCustomFolder;                                      // 0x0008(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientSendArkDataPayloadEnd
	 */
	struct AShooterPlayerController_ClientSendArkDataPayloadEnd_Params
	{
	public:
		struct FGuid                                               ID;                                                      // 0x0000(0x0010)  (Parm, ZeroConstructor)
		EPrimalARKTributeDataType                                  ArkDataType;                                             // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_LRLU[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		uint64_t                                                   PlayerDataID;                                            // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientSendArkDataPayloadBegin
	 */
	struct AShooterPlayerController_ClientSendArkDataPayloadBegin_Params
	{
	public:
		struct FGuid                                               ID;                                                      // 0x0000(0x0010)  (Parm, ZeroConstructor)
		EPrimalARKTributeDataType                                  ArkDataType;                                             // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_Z8D5[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              DataClass;                                               // 0x0018(0x0010)  (Parm, ZeroConstructor)
		class FString                                              TagName;                                                 // 0x0028(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Name;                                                    // 0x0038(0x0010)  (Parm, ZeroConstructor)
		TArray<class FString>                                      DataStats;                                               // 0x0048(0x0010)  (ConstParm, Parm, ZeroConstructor)
		uint32_t                                                   ID1;                                                     // 0x0058(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		uint32_t                                                   ID2;                                                     // 0x005C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientSendArkDataPayload
	 */
	struct AShooterPlayerController_ClientSendArkDataPayload_Params
	{
	public:
		struct FGuid                                               ID;                                                      // 0x0000(0x0010)  (Parm, ZeroConstructor)
		EPrimalARKTributeDataType                                  ArkDataType;                                             // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_UGT3[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<unsigned char>                                      DataBytes;                                               // 0x0018(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientRunLocalConsoleCommand
	 */
	struct AShooterPlayerController_ClientRunLocalConsoleCommand_Params
	{
	public:
		class FString                                              Command;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bWriteToLog;                                             // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientResetRespawningFlag
	 */
	struct AShooterPlayerController_ClientResetRespawningFlag_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientRequestSpectatorLocationAndRotation
	 */
	struct AShooterPlayerController_ClientRequestSpectatorLocationAndRotation_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientRemoveItemFromSteamInventory
	 */
	struct AShooterPlayerController_ClientRemoveItemFromSteamInventory_Params
	{
	public:
		TArray<uint64_t>                                           ItemSteamUserID;                                         // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
		int32_t                                                    Quantity;                                                // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientRemoveItemFromArk
	 */
	struct AShooterPlayerController_ClientRemoveItemFromArk_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          RemovedItemID;                                           // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientRemoveActorItem
	 */
	struct AShooterPlayerController_ClientRemoveActorItem_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       showHUDMessage;                                          // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientRefreshSteamInventoryFinished
	 */
	struct AShooterPlayerController_ClientRefreshSteamInventoryFinished_Params
	{
	public:
		bool                                                       bSuccess;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientReceiveTribeLog
	 */
	struct AShooterPlayerController_ClientReceiveTribeLog_Params
	{
	public:
		class FString                                              LogString;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientReceiveTamingInfoList
	 */
	struct AShooterPlayerController_ClientReceiveTamingInfoList_Params
	{
	public:
		TArray<struct FTamingDinoInfo>                             InfoList;                                                // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientReceiveStructuresPlacedOnFloor
	 */
	struct AShooterPlayerController_ClientReceiveStructuresPlacedOnFloor_Params
	{
	public:
		TArray<struct FStructuresOnFloor>                          Structures;                                              // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientReceiveOriginalHairColor
	 */
	struct AShooterPlayerController_ClientReceiveOriginalHairColor_Params
	{
	public:
		struct FLinearColor                                        HairColor;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientReceiveMyTribeOnlineList
	 */
	struct AShooterPlayerController_ClientReceiveMyTribeOnlineList_Params
	{
	public:
		TArray<uint32_t>                                           OnlinePlayerIDs;                                         // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientReceiveDinoCharStats
	 */
	struct AShooterPlayerController_ClientReceiveDinoCharStats_Params
	{
	public:
		class APrimalDinoCharacter*                                theDinoChar;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<float>                                              CurValues;                                               // 0x0008(0x0010)  (ConstParm, Parm, ZeroConstructor)
		TArray<float>                                              MaxValues;                                               // 0x0018(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientReceiveDinoAncestors
	 */
	struct AShooterPlayerController_ClientReceiveDinoAncestors_Params
	{
	public:
		class APrimalDinoCharacter*                                ForDino;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FDinoAncestorsEntry>                         DinoAncestors;                                           // 0x0008(0x0010)  (ConstParm, Parm, ZeroConstructor)
		TArray<struct FDinoAncestorsEntry>                         DinoAncestorsMale;                                       // 0x0018(0x0010)  (ConstParm, Parm, ZeroConstructor)
		int32_t                                                    RandomMutationsFemale;                                   // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    RandomMutationsMale;                                     // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientReceiveActiveMissionTags
	 */
	struct AShooterPlayerController_ClientReceiveActiveMissionTags_Params
	{
	public:
		TArray<class FName>                                        MissionTags;                                             // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientProcessItemNetExecCommandUnreliableBP
	 */
	struct AShooterPlayerController_ClientProcessItemNetExecCommandUnreliableBP_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ForItemID;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsEquippedItem;                                         // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_OO70[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FName                                                CommandName;                                             // 0x0014(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_S42I[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FBPNetExecParams                                    ExecParams;                                              // 0x0020(0x0040)  (Parm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientProcessItemNetExecCommandBP
	 */
	struct AShooterPlayerController_ClientProcessItemNetExecCommandBP_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ForItemID;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsEquippedItem;                                         // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_21TZ[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FName                                                CommandName;                                             // 0x0014(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5K5U[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FBPNetExecParams                                    ExecParams;                                              // 0x0020(0x0040)  (Parm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientPlayLocalSound
	 */
	struct AShooterPlayerController_ClientPlayLocalSound_Params
	{
	public:
		class USoundBase*                                          aSound;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAttach;                                                 // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientPlayerIsValidToDownload
	 */
	struct AShooterPlayerController_ClientPlayerIsValidToDownload_Params
	{
	public:
		bool                                                       bIsValid;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JRN5[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FArkTributePlayerData                               PlayerData;                                              // 0x0008(0x0120)  (ConstParm, Parm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientOnStartDownloadTransferredPlayerCharacter
	 */
	struct AShooterPlayerController_ClientOnStartDownloadTransferredPlayerCharacter_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientOnEndDownloadTransferredPlayerCharacter
	 */
	struct AShooterPlayerController_ClientOnEndDownloadTransferredPlayerCharacter_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_0A9Y[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    FailureResponseCode;                                     // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              FailureResponseMessage;                                  // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientOnDropAllNotReadyForUploadItemsFinished
	 */
	struct AShooterPlayerController_ClientOnDropAllNotReadyForUploadItemsFinished_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientOnCurrentCharacterAndItemsUploaded
	 */
	struct AShooterPlayerController_ClientOnCurrentCharacterAndItemsUploaded_Params
	{
	public:
		uint64_t                                                   TransferringPlayerDataId;                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientOnAddedItemsToAllClustersInventory
	 */
	struct AShooterPlayerController_ClientOnAddedItemsToAllClustersInventory_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KVR9[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              UserId;                                                  // 0x0008(0x0010)  (Parm, ZeroConstructor)
		TArray<int32_t>                                            MasterIndexNum;                                          // 0x0018(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientNotifyUnlockHairStyleOrEmote
	 */
	struct AShooterPlayerController_ClientNotifyUnlockHairStyleOrEmote_Params
	{
	public:
		class FName                                                HairstyleOrEmoteName;                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientNotifyUnlockedEngram
	 */
	struct AShooterPlayerController_ClientNotifyUnlockedEngram_Params
	{
	public:
		class UClass*                                              ItemClass;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTekGram;                                                // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientNotifyUnlockedAllExplorerNotes
	 */
	struct AShooterPlayerController_ClientNotifyUnlockedAllExplorerNotes_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientNotifyTribeXP
	 */
	struct AShooterPlayerController_ClientNotifyTribeXP_Params
	{
	public:
		float                                                      HowMuch;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientNotifyTorpidityIncrease
	 */
	struct AShooterPlayerController_ClientNotifyTorpidityIncrease_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientNotifyTamedDino
	 */
	struct AShooterPlayerController_ClientNotifyTamedDino_Params
	{
	public:
		class UClass*                                              DinoClass;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientNotifySummonedDino
	 */
	struct AShooterPlayerController_ClientNotifySummonedDino_Params
	{
	public:
		class UClass*                                              DinoClass;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientNotifyShowProfileRequest
	 */
	struct AShooterPlayerController_ClientNotifyShowProfileRequest_Params
	{
	public:
		struct FUniqueNetIdRepl                                    ProfileId;                                               // 0x0000(0x0010)  (Parm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientNotifyRemotePlayerDeath
	 */
	struct AShooterPlayerController_ClientNotifyRemotePlayerDeath_Params
	{
	public:
		class FString                                              PlayerName;                                              // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              AttackerName;                                            // 0x0010(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientNotifyPlayerKill
	 */
	struct AShooterPlayerController_ClientNotifyPlayerKill_Params
	{
	public:
		class AActor*                                              PlayerPawn;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APawn*                                               VictimPawn;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientNotifyPlayerDeathReason
	 */
	struct AShooterPlayerController_ClientNotifyPlayerDeathReason_Params
	{
	public:
		class FString                                              ReasonString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientNotifyPlayerDeath
	 */
	struct AShooterPlayerController_ClientNotifyPlayerDeath_Params
	{
	public:
		class APawn*                                               InstigatingPawn;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientNotifyPaintFinished
	 */
	struct AShooterPlayerController_ClientNotifyPaintFinished_Params
	{
	public:
		bool                                                       bSuccess;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientNotifyMessageOfTheDay
	 */
	struct AShooterPlayerController_ClientNotifyMessageOfTheDay_Params
	{
	public:
		class FString                                              Message;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
		float                                                      timeToDisplay;                                           // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientNotifyListenServerOutOfRange
	 */
	struct AShooterPlayerController_ClientNotifyListenServerOutOfRange_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientNotifyLevelUp
	 */
	struct AShooterPlayerController_ClientNotifyLevelUp_Params
	{
	public:
		class APrimalCharacter*                                    forChar;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NewLevel;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientNotifyHitHarvest
	 */
	struct AShooterPlayerController_ClientNotifyHitHarvest_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientNotifyEditText
	 */
	struct AShooterPlayerController_ClientNotifyEditText_Params
	{
	public:
		class UClass*                                              ForObjectClass;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		uint32_t                                                   ExtraID1;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		uint32_t                                                   ExtraID2;                                                // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObject*                                             ForObject;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientNotifyDinoKill
	 */
	struct AShooterPlayerController_ClientNotifyDinoKill_Params
	{
	public:
		class APrimalDinoCharacter*                                InstigatingPawn;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APawn*                                               VictimPawn;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientNotifyDinoDeath
	 */
	struct AShooterPlayerController_ClientNotifyDinoDeath_Params
	{
	public:
		class FString                                              DinoName;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              AttackerName;                                            // 0x0010(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bIsVehicle;                                              // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientNotifyDefeatedDino
	 */
	struct AShooterPlayerController_ClientNotifyDefeatedDino_Params
	{
	public:
		class UClass*                                              DinoClass;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientNotifyCantHitHarvest
	 */
	struct AShooterPlayerController_ClientNotifyCantHitHarvest_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientNotifyCantHarvest
	 */
	struct AShooterPlayerController_ClientNotifyCantHarvest_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientNotifyAdmin
	 */
	struct AShooterPlayerController_ClientNotifyAdmin_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientLoadArkItems
	 */
	struct AShooterPlayerController_ClientLoadArkItems_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		TArray<struct FItemNetInfo>                                itemInfos;                                               // 0x0008(0x0010)  (ConstParm, Parm, ZeroConstructor)
		bool                                                       bClear;                                                  // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFinalBatch;                                             // 0x0019(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientInsertActorItem
	 */
	struct AShooterPlayerController_ClientInsertActorItem_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetInfo                                        ItemInfo;                                                // 0x0008(0x01B0)  (Parm)
		struct FItemNetID                                          InsertAfterItemID;                                       // 0x01B8(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientHUDNotificationTypeParams
	 */
	struct AShooterPlayerController_ClientHUDNotificationTypeParams_Params
	{
	public:
		int32_t                                                    MessageType;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MessageType1;                                            // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MessageParam2;                                           // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_8TZ6[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UObject*                                             ObjectParam1;                                            // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientGetMessageOfTheDay
	 */
	struct AShooterPlayerController_ClientGetMessageOfTheDay_Params
	{
	public:
		class FString                                              Message;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientFinishedReceivingActorItems
	 */
	struct AShooterPlayerController_ClientFinishedReceivingActorItems_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       bEquippedItems;                                          // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientFinishedLoadArkItems
	 */
	struct AShooterPlayerController_ClientFinishedLoadArkItems_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientFailedToAddItemFromArkInventory
	 */
	struct AShooterPlayerController_ClientFailedToAddItemFromArkInventory_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientFailedRemoveSaddle
	 */
	struct AShooterPlayerController_ClientFailedRemoveSaddle_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientEndReceivingTribeLog
	 */
	struct AShooterPlayerController_ClientEndReceivingTribeLog_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientDrawUndermeshSphere
	 */
	struct AShooterPlayerController_ClientDrawUndermeshSphere_Params
	{
	public:
		int32_t                                                    Radius;                                                  // 0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientDrawBrushComponentInGame
	 */
	struct AShooterPlayerController_ClientDrawBrushComponentInGame_Params
	{
	public:
		class UBrushComponent*                                     BrushComponent;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDrawSolidBox;                                           // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientDownloadPlayerCharacterRequestFinished
	 */
	struct AShooterPlayerController_ClientDownloadPlayerCharacterRequestFinished_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientDownloadDinoRequestFinished
	 */
	struct AShooterPlayerController_ClientDownloadDinoRequestFinished_Params
	{
	public:
		bool                                                       Success;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientDoMultiUse
	 */
	struct AShooterPlayerController_ClientDoMultiUse_Params
	{
	public:
		class UObject*                                             ForObject;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    UseIndex;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientDataSetRPC
	 */
	struct AShooterPlayerController_ClientDataSetRPC_Params
	{
	public:
		TArray<struct FDataSet>                                    dataSets;                                                // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientCollectedAchievementItem
	 */
	struct AShooterPlayerController_ClientCollectedAchievementItem_Params
	{
	public:
		class UClass*                                              ItemClass;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientChatMessage
	 */
	struct AShooterPlayerController_ClientChatMessage_Params
	{
	public:
		struct FChatMessage                                        Chat;                                                    // 0x0000(0x0090)  (Parm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientAddItemToArk
	 */
	struct AShooterPlayerController_ClientAddItemToArk_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetInfo                                        ItemInfo;                                                // 0x0008(0x01B0)  (Parm)
		bool                                                       bFromLoad;                                               // 0x01B8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientAddFolderToInventoryComponent
	 */
	struct AShooterPlayerController_ClientAddFolderToInventoryComponent_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FString                                              NewCustomFolderName;                                     // 0x0008(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    InventoryCompType;                                       // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientAddFloatingText
	 */
	struct AShooterPlayerController_ClientAddFloatingText_Params
	{
	public:
		struct FVector_NetQuantize                                 AtLocation;                                              // 0x0000(0x000C)  (Parm)
		unsigned char                                              UnknownData_PNX8[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              FloatingTextString;                                      // 0x0010(0x0010)  (Parm, ZeroConstructor)
		struct FColor                                              FloatingTextColor;                                       // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScaleX;                                                  // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScaleY;                                                  // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TextLifeSpan;                                            // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             TextVelocity;                                            // 0x0030(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MinScale;                                                // 0x003C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      FadeInTime;                                              // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      FadeOutTime;                                             // 0x0044(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientAddFloatingDamageText
	 */
	struct AShooterPlayerController_ClientAddFloatingDamageText_Params
	{
	public:
		struct FVector_NetQuantize                                 AtLocation;                                              // 0x0000(0x000C)  (Parm)
		int32_t                                                    DamageAmount;                                            // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    FromTeamID;                                              // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientAddActorItemToFolder
	 */
	struct AShooterPlayerController_ClientAddActorItemToFolder_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetInfo                                        ItemInfo;                                                // 0x0008(0x01B0)  (Parm)
		bool                                                       bEquipItem;                                              // 0x01B8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ShowHUDNotification;                                     // 0x01B9(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1PTJ[0x6];                                   // 0x01BA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ToFolder;                                                // 0x01C0(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.ClientAddActorItem
	 */
	struct AShooterPlayerController_ClientAddActorItem_Params
	{
	public:
		class UPrimalInventoryComponent*                           forInventory;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FItemNetInfo                                        ItemInfo;                                                // 0x0008(0x01B0)  (Parm)
		bool                                                       bEquipItem;                                              // 0x01B8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ShowHUDNotification;                                     // 0x01B9(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.Client_ReceivePingResponse
	 */
	struct AShooterPlayerController_Client_ReceivePingResponse_Params
	{
	public:
		struct FReplicatePingData                                  ResponseData;                                            // 0x0000(0x0028)  (ConstParm, Parm, ContainsInstancedReference)
		class AShooterCharacter*                                   RespondingPlayer;                                        // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.Client_ReceivePing
	 */
	struct AShooterPlayerController_Client_ReceivePing_Params
	{
	public:
		struct FReplicatePingData                                  ReceivedPingData;                                        // 0x0000(0x0028)  (ConstParm, Parm, ContainsInstancedReference)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.Client_ReceiveBuffFromDayCycle
	 */
	struct AShooterPlayerController_Client_ReceiveBuffFromDayCycle_Params
	{
	public:
		class UClass*                                              GiveBuffClass;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class ADayCycleManager*                                    FromDayCycle;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.CheckRequestSpectator
	 */
	struct AShooterPlayerController_CheckRequestSpectator_Params
	{
	public:
		class FString                                              InSpectatorPass;                                         // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.CheckForPlayerInventory
	 */
	struct AShooterPlayerController_CheckForPlayerInventory_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.CheckforOrbiting
	 */
	struct AShooterPlayerController_CheckforOrbiting_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.CheckCheatsPassword
	 */
	struct AShooterPlayerController_CheckCheatsPassword_Params
	{
	public:
		class FString                                              pass;                                                    // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.CheckCanEnableCheats
	 */
	struct AShooterPlayerController_CheckCanEnableCheats_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.Cheat
	 */
	struct AShooterPlayerController_Cheat_Params
	{
	public:
		class FString                                              Msg;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.CCC
	 */
	struct AShooterPlayerController_CCC_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.CanPingPlayer
	 */
	struct AShooterPlayerController_CanPingPlayer_Params
	{
	public:
		class AShooterCharacter*                                   ForPlayer;                                               // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.CanDoPlayerCharacterInput
	 */
	struct AShooterPlayerController_CanDoPlayerCharacterInput_Params
	{
	public:
		bool                                                       bIgnoreCurrentWeapon;                                    // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bWeaponForcesMountedWeaponry;                            // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.BPServerHandleDataSetRPC
	 */
	struct AShooterPlayerController_BPServerHandleDataSetRPC_Params
	{
	public:
		TArray<struct FDataSet>                                    dataSets;                                                // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.BPClientUnlockExplorerNote
	 */
	struct AShooterPlayerController_BPClientUnlockExplorerNote_Params
	{
	public:
		int32_t                                                    ExplorerNoteIndex;                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       forceShowExplorerNoteUI;                                 // 0x0004(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.BPClientHandleDataSetRPC
	 */
	struct AShooterPlayerController_BPClientHandleDataSetRPC_Params
	{
	public:
		TArray<struct FDataSet>                                    dataSets;                                                // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.BPCheckClientPossession
	 */
	struct AShooterPlayerController_BPCheckClientPossession_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.BPCheckCanDinoSpawnFromLocation
	 */
	struct AShooterPlayerController_BPCheckCanDinoSpawnFromLocation_Params
	{
	public:
		class UClass*                                              DinoClass;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             CheckLocation;                                           // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0014(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.BPActivatedMultiUseSelection
	 */
	struct AShooterPlayerController_BPActivatedMultiUseSelection_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.AutoCycle
	 */
	struct AShooterPlayerController_AutoCycle_Params
	{
	public:
		float                                                      Duration;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.AttemptTransferRedownload
	 */
	struct AShooterPlayerController_AttemptTransferRedownload_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.AsyncLoadInventory
	 */
	struct AShooterPlayerController_AsyncLoadInventory_Params
	{	};

	/**
	 * Function ShooterGame.ShooterPlayerController.AllowTribeGroupPermission
	 */
	struct AShooterPlayerController_AllowTribeGroupPermission_Params
	{
	public:
		ETribeGroupPermission                                      TribeGroupPermission;                                    // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_IY6J[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UObject*                                             OnObject;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerController.AdminCheat
	 */
	struct AShooterPlayerController_AdminCheat_Params
	{
	public:
		class FString                                              Msg;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.BeamWeaponComponent.UpdateBeamVisuals
	 */
	struct UBeamWeaponComponent_UpdateBeamVisuals_Params
	{	};

	/**
	 * Function ShooterGame.BeamWeaponComponent.StopFiring
	 */
	struct UBeamWeaponComponent_StopFiring_Params
	{	};

	/**
	 * Function ShooterGame.BeamWeaponComponent.StartFiring
	 */
	struct UBeamWeaponComponent_StartFiring_Params
	{	};

	/**
	 * Function ShooterGame.BeamWeaponComponent.StartCharging
	 */
	struct UBeamWeaponComponent_StartCharging_Params
	{	};

	/**
	 * Function ShooterGame.BeamWeaponComponent.SetTarget
	 */
	struct UBeamWeaponComponent_SetTarget_Params
	{
	public:
		class AActor*                                              Target;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BeamWeaponComponent.GetTarget
	 */
	struct UBeamWeaponComponent_GetTarget_Params
	{
	public:
		class AActor*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BeamWeaponComponent.GetParticleSystem
	 */
	struct UBeamWeaponComponent_GetParticleSystem_Params
	{
	public:
		class UParticleSystemComponent*                            ReturnValue;                                             // 0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BeamWeaponComponent.GetLastStoppedFiringTime
	 */
	struct UBeamWeaponComponent_GetLastStoppedFiringTime_Params
	{
	public:
		double                                                     ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BeamWeaponComponent.GetIsFiring
	 */
	struct UBeamWeaponComponent_GetIsFiring_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BeamWeaponComponent.GetIsCharging
	 */
	struct UBeamWeaponComponent_GetIsCharging_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BeamWeaponComponent.GetImpactParticleSystem
	 */
	struct UBeamWeaponComponent_GetImpactParticleSystem_Params
	{
	public:
		class UParticleSystemComponent*                            ReturnValue;                                             // 0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BeamWeaponComponent.GetChargeupParticleSystem
	 */
	struct UBeamWeaponComponent_GetChargeupParticleSystem_Params
	{
	public:
		class UParticleSystemComponent*                            ReturnValue;                                             // 0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BeamWeaponComponent.GetBeamEndLocation
	 */
	struct UBeamWeaponComponent_GetBeamEndLocation_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BeamWeaponComponent.BeamStoppedFiringEvent__DelegateSignature
	 */
	struct UBeamWeaponComponent_BeamStoppedFiringEvent__DelegateSignature_Params
	{
	public:
		class UBeamWeaponComponent*                                BeamComponent;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BeamWeaponController.StopFiringBeams
	 */
	struct UBeamWeaponController_StopFiringBeams_Params
	{	};

	/**
	 * Function ShooterGame.BeamWeaponController.StartChargingBeams
	 */
	struct UBeamWeaponController_StartChargingBeams_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BeamWeaponController.StartChargingBeam
	 */
	struct UBeamWeaponController_StartChargingBeam_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BeamWeaponController.OnBeamStoppedFiringHandler
	 */
	struct UBeamWeaponController_OnBeamStoppedFiringHandler_Params
	{
	public:
		class UBeamWeaponComponent*                                BeamWeaponComp;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BeamWeaponController.GetBeamWeaponComponents
	 */
	struct UBeamWeaponController_GetBeamWeaponComponents_Params
	{
	public:
		TArray<class UBeamWeaponComponent*>                        ReturnValue;                                             // 0x0000(0x0010)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference)
	};

	/**
	 * Function ShooterGame.BeamWeaponController.FireBeams
	 */
	struct UBeamWeaponController_FireBeams_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BeamWeaponController.FireBeam
	 */
	struct UBeamWeaponController_FireBeam_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BeamWeaponController.BeamsStoppedFiringEvent__DelegateSignature
	 */
	struct UBeamWeaponController_BeamsStoppedFiringEvent__DelegateSignature_Params
	{	};

	/**
	 * Function ShooterGame.BiomeZoneVolume.OnEndOverlap
	 */
	struct ABiomeZoneVolume_OnEndOverlap_Params
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BiomeZoneVolume.OnBeginOverlap
	 */
	struct ABiomeZoneVolume_OnBeginOverlap_Params
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BiomeZoneVolume.IsPointUnderwater
	 */
	struct ABiomeZoneVolume_IsPointUnderwater_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtPoint;                                                 // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFastPath;                                               // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XDDG[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      MinimumWaterHeight;                                      // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreVacuumStructures;                                 // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnorePainCausingVolumes;                               // 0x001D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x001E(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BiomeZoneVolume.IsPointInVacuumBase
	 */
	struct ABiomeZoneVolume_IsPointInVacuumBase_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtPoint;                                                 // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BiomeZoneVolume.GetPhysicsVolumeAtLocation
	 */
	struct ABiomeZoneVolume_GetPhysicsVolumeAtLocation_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtPoint;                                                 // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFastPath;                                               // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_0KXU[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APhysicsVolume*                                      ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BiomeZoneVolume.GetBiomeZoneVolume
	 */
	struct ABiomeZoneVolume_GetBiomeZoneVolume_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_0RSZ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class ABiomeZoneVolume*                                    ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BiomeZoneVolume.GetAllBiomeZones
	 */
	struct ABiomeZoneVolume_GetAllBiomeZones_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class ABiomeZoneVolume*>                            BiomeZones;                                              // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.BiomeZoneVolumeEffectUtility.SpawnRelevantEffect
	 */
	struct UBiomeZoneVolumeEffectUtility_SpawnRelevantEffect_Params
	{
	public:
		TArray<struct FBiomeZoneVolumeEffect>                      Effects;                                                 // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class AActor*                                              AttachTo;                                                // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x0018(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bIsImpactActor;                                          // 0x0024(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BiomeZoneVolumeEffectUtility.SpawnImpactEffect
	 */
	struct UBiomeZoneVolumeEffectUtility_SpawnImpactEffect_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FHitResult                                          HitResult;                                               // 0x0008(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FBiomeZoneImpactEffect                              ImpactEffect;                                            // 0x0090(0x0080)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AActor*                                              Owner;                                                   // 0x0110(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              ReturnValue;                                             // 0x0118(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.BiomeZoneVolumeEffectUtility.GetRelevantEffect
	 */
	struct UBiomeZoneVolumeEffectUtility_GetRelevantEffect_Params
	{
	public:
		TArray<struct FBiomeZoneVolumeEffect>                      Effects;                                                 // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class AActor*                                              SourceActor;                                             // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ForLocation;                                             // 0x0018(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bIsImpactActor;                                          // 0x0024(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_B508[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FBiomeZoneVolumeEffect                              ReturnValue;                                             // 0x0028(0x0048)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.VoroniModule
	 */
	struct UTerrainGenerator_VoroniModule_Params
	{
	public:
		int32_t                                                    Seed;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Frequency;                                               // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      displacement;                                            // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_93R0[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.TurbulenceModule
	 */
	struct UTerrainGenerator_TurbulenceModule_Params
	{
	public:
		class UGeneratorModule*                                    Source;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Seed;                                                    // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Frequency;                                               // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Power;                                                   // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Roughness;                                               // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.ToFloatMap
	 */
	struct UTerrainGenerator_ToFloatMap_Params
	{
	public:
		class UFloatMap*                                           Destination;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    Module;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       IsTemporary;                                             // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_HYOK[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UFloatMap*                                           ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.ThresholdModule
	 */
	struct UTerrainGenerator_ThresholdModule_Params
	{
	public:
		class UGeneratorModule*                                    Source;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Power;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Range;                                                   // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Threshold;                                               // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_WGM4[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.TerraceModule
	 */
	struct UTerrainGenerator_TerraceModule_Params
	{
	public:
		class UGeneratorModule*                                    Source;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<float>                                              Control;                                                 // 0x0008(0x0010)  (Parm, ZeroConstructor)
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.Spread
	 */
	struct UTerrainGenerator_Spread_Params
	{
	public:
		class UFloatMap*                                           Destination;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UFloatMap*                                           Source;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    SpreadIteration;                                         // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SpreadStrength;                                          // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UFloatMap*                                           ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.SpawnActorOnLandscape
	 */
	struct UTerrainGenerator_SpawnActorOnLandscape_Params
	{
	public:
		class UClass*                                              ActorClass;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Position;                                                // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Scale;                                                   // 0x0020(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             OffsetVector;                                            // 0x002C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              ReturnValue;                                             // 0x0038(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.SpawnActor
	 */
	struct UTerrainGenerator_SpawnActor_Params
	{
	public:
		class UClass*                                              ActorClass;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Position;                                                // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Scale;                                                   // 0x0020(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XLCA[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              ReturnValue;                                             // 0x0030(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.SlopeModule
	 */
	struct UTerrainGenerator_SlopeModule_Params
	{
	public:
		class UGeneratorModule*                                    Source;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.ShrinkMask
	 */
	struct UTerrainGenerator_ShrinkMask_Params
	{
	public:
		class UFloatMap*                                           Source;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UFloatMap*                                           Destination;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Iterations;                                              // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_BNA4[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UFloatMap*                                           ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.SetAsTemporary
	 */
	struct UTerrainGenerator_SetAsTemporary_Params
	{
	public:
		class UFloatMap*                                           Destination;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UFloatMap*                                           ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.SelectModule
	 */
	struct UTerrainGenerator_SelectModule_Params
	{
	public:
		class UGeneratorModule*                                    First;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    Second;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    Control;                                                 // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Lower;                                                   // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Upper;                                                   // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      EdgeFalloff;                                             // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_N0WM[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0028(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.ScaleFloatMap
	 */
	struct UTerrainGenerator_ScaleFloatMap_Params
	{
	public:
		class UFloatMap*                                           Source;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Scale;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bClearSourceData;                                        // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JVCT[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UFloatMap*                                           ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.ScaleBiasModule
	 */
	struct UTerrainGenerator_ScaleBiasModule_Params
	{
	public:
		class UGeneratorModule*                                    Source;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Scale;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Bias;                                                    // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.Scale
	 */
	struct UTerrainGenerator_Scale_Params
	{
	public:
		class UFloatMap*                                           Source;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Scale;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bClearSourceData;                                        // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_RVED[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UFloatMap*                                           ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.SampleFloatMapModule
	 */
	struct UTerrainGenerator_SampleFloatMapModule_Params
	{
	public:
		class UFloatMap*                                           Source;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.RidgedMultiModule
	 */
	struct UTerrainGenerator_RidgedMultiModule_Params
	{
	public:
		int32_t                                                    Seed;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Frequency;                                               // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OctaveCount;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Lacunarity;                                              // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.Resize
	 */
	struct UTerrainGenerator_Resize_Params
	{
	public:
		class UFloatMap*                                           Source;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NewSize;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bClearSourceData;                                        // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_Z30Z[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UFloatMap*                                           ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.PreGenerateTerrain
	 */
	struct UTerrainGenerator_PreGenerateTerrain_Params
	{	};

	/**
	 * Function ShooterGame.TerrainGenerator.PowerModule
	 */
	struct UTerrainGenerator_PowerModule_Params
	{
	public:
		class UGeneratorModule*                                    First;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    Second;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.PostCreateTerrain
	 */
	struct UTerrainGenerator_PostCreateTerrain_Params
	{	};

	/**
	 * Function ShooterGame.TerrainGenerator.Populate
	 */
	struct UTerrainGenerator_Populate_Params
	{
	public:
		TArray<struct FObjectListItem>                             ObjectsList;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class UObjectMap*                                          Destination;                                             // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    Probability;                                             // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MinDistance;                                             // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      FixedZ;                                                  // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MaximumCount;                                            // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Step;                                                    // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       SingleThread;                                            // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_RZM3[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UObjectMap*                                          ReturnValue;                                             // 0x0038(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.PointSampleFloatMapModule
	 */
	struct UTerrainGenerator_PointSampleFloatMapModule_Params
	{
	public:
		class UFloatMap*                                           Source;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.Pixelate
	 */
	struct UTerrainGenerator_Pixelate_Params
	{
	public:
		class UFloatMap*                                           Source;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    CellSize;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_Z45Q[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UFloatMap*                                           ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.PerlinModule
	 */
	struct UTerrainGenerator_PerlinModule_Params
	{
	public:
		int32_t                                                    Seed;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Frequency;                                               // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OctaveCount;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Persistence;                                             // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Lacunarity;                                              // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_Y0F5[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.OneMinusModule
	 */
	struct UTerrainGenerator_OneMinusModule_Params
	{
	public:
		class UGeneratorModule*                                    Source;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.Normalize
	 */
	struct UTerrainGenerator_Normalize_Params
	{
	public:
		class UFloatMap*                                           Source;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UFloatMap*                                           Destination;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Minimum;                                                 // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Maximum;                                                 // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UFloatMap*                                           ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.MultiplyModule
	 */
	struct UTerrainGenerator_MultiplyModule_Params
	{
	public:
		class UGeneratorModule*                                    First;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    Second;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.MinModule
	 */
	struct UTerrainGenerator_MinModule_Params
	{
	public:
		class UGeneratorModule*                                    First;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    Second;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.MergeObjectMaps
	 */
	struct UTerrainGenerator_MergeObjectMaps_Params
	{
	public:
		class UObjectMap*                                          First;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObjectMap*                                          Second;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    CellsToClear;                                            // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZBTS[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UObjectMap*                                          ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.MaxModule
	 */
	struct UTerrainGenerator_MaxModule_Params
	{
	public:
		class UGeneratorModule*                                    First;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    Second;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.LinearModule
	 */
	struct UTerrainGenerator_LinearModule_Params
	{
	public:
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.LinearCurveModule
	 */
	struct UTerrainGenerator_LinearCurveModule_Params
	{
	public:
		class UGeneratorModule*                                    First;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<float>                                              Input;                                                   // 0x0008(0x0010)  (Parm, ZeroConstructor)
		TArray<float>                                              Output;                                                  // 0x0018(0x0010)  (Parm, ZeroConstructor)
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0028(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.LerpModule
	 */
	struct UTerrainGenerator_LerpModule_Params
	{
	public:
		class UGeneratorModule*                                    First;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    Second;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    Alpha;                                                   // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.InvertModule
	 */
	struct UTerrainGenerator_InvertModule_Params
	{
	public:
		class UGeneratorModule*                                    Source;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.GetPositionRelativeToTerrian
	 */
	struct UTerrainGenerator_GetPositionRelativeToTerrian_Params
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.GetLocationOnLandscape
	 */
	struct UTerrainGenerator_GetLocationOnLandscape_Params
	{
	public:
		struct FVector                                             Position;                                                // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.GenerateTerrain
	 */
	struct UTerrainGenerator_GenerateTerrain_Params
	{
	public:
		class UFloatMap*                                           HeightMap;                                               // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class FString>                                      WeightmapsNames;                                         // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		TArray<class UByteMap*>                                    WeightMaps;                                              // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor)
		class UObjectMap*                                          ObjectMap;                                               // 0x0028(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObjectMap*                                          BiomeMap;                                                // 0x0030(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObjectMap*                                          NPCMap;                                                  // 0x0038(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialInterface*                                  LandscapeMaterial;                                       // 0x0040(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObjectMap*                                          PerComponentMaterialOverride;                            // 0x0048(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObjectMap*                                          SupplyDropsMap;                                          // 0x0050(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObjectMap*                                          SupplyDropsPointsMap;                                    // 0x0058(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FBiomeMiniMap>                               BiomesMiniMap;                                           // 0x0060(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.GenerateHeightMapFromMask
	 */
	struct UTerrainGenerator_GenerateHeightMapFromMask_Params
	{
	public:
		class UFloatMap*                                           Source;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UFloatMap*                                           Destination;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Iterations;                                              // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_9PNO[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UFloatMap*                                           ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.FloodFill
	 */
	struct UTerrainGenerator_FloodFill_Params
	{
	public:
		class UFloatMap*                                           Source;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      X;                                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Y;                                                       // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Value;                                                   // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.FillObjectMap
	 */
	struct UTerrainGenerator_FillObjectMap_Params
	{
	public:
		TArray<struct FObjectListItem>                             ObjectsList;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class UObjectMap*                                          Destination;                                             // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    Probability;                                             // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MinDistance;                                             // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      FixedZ;                                                  // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MaximumCount;                                            // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Step;                                                    // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       SingleThread;                                            // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_U2MW[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UObjectMap*                                          ReturnValue;                                             // 0x0038(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.ExponentModule
	 */
	struct UTerrainGenerator_ExponentModule_Params
	{
	public:
		class UGeneratorModule*                                    Source;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Exponent;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_4CDE[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.EvaluateModules
	 */
	struct UTerrainGenerator_EvaluateModules_Params
	{
	public:
		class UFloatMap*                                           Destination;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    Module;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UFloatMap*                                           ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.Erosion
	 */
	struct UTerrainGenerator_Erosion_Params
	{
	public:
		class UFloatMap*                                           HeightMap;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UFloatMap*                                           Destination;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    IterationStep;                                           // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SoilCarryCapacity;                                       // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      WaterEvaporationSpeed;                                   // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ErosionSpeed;                                            // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DepositionSpeed;                                         // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DirectionInertia;                                        // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MinimumSlope;                                            // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Gravity;                                                 // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MinHeightForErosion;                                     // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DepositionStrength;                                      // 0x0034(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ErosionStrength;                                         // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_P4VD[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UFloatMap*                                           ReturnValue;                                             // 0x0040(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.EnlargeMask
	 */
	struct UTerrainGenerator_EnlargeMask_Params
	{
	public:
		class UFloatMap*                                           Source;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UFloatMap*                                           Destination;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Iterations;                                              // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_YWTZ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UFloatMap*                                           ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.DisplaceModule
	 */
	struct UTerrainGenerator_DisplaceModule_Params
	{
	public:
		class UGeneratorModule*                                    Source;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    X;                                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    Y;                                                       // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    Z;                                                       // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0020(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.DeleteTemporaryMaps
	 */
	struct UTerrainGenerator_DeleteTemporaryMaps_Params
	{	};

	/**
	 * Function ShooterGame.TerrainGenerator.CurveModule
	 */
	struct UTerrainGenerator_CurveModule_Params
	{
	public:
		class UGeneratorModule*                                    Source;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<float>                                              Input;                                                   // 0x0008(0x0010)  (Parm, ZeroConstructor)
		TArray<float>                                              Output;                                                  // 0x0018(0x0010)  (Parm, ZeroConstructor)
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0028(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.CreateWater
	 */
	struct UTerrainGenerator_CreateWater_Params
	{
	public:
		class UClass*                                              WaterPlane;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              WaterFloorPlane;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SurfaceLevel;                                            // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      FloorLevel;                                              // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.CreateObjectMapWithSize
	 */
	struct UTerrainGenerator_CreateObjectMapWithSize_Params
	{
	public:
		int32_t                                                    Width;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Height;                                                  // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObjectMap*                                          ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.CreateObjectMap
	 */
	struct UTerrainGenerator_CreateObjectMap_Params
	{
	public:
		int32_t                                                    NewSizeX;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NewSizeY;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObjectMap*                                          ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.CreateFloatMap
	 */
	struct UTerrainGenerator_CreateFloatMap_Params
	{
	public:
		int32_t                                                    SizeX;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    SizeY;                                                   // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       IsTemporary;                                             // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_4KUG[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UFloatMap*                                           ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.Copy
	 */
	struct UTerrainGenerator_Copy_Params
	{
	public:
		class UFloatMap*                                           Source;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UFloatMap*                                           Destination;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UFloatMap*                                           ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.ConvertFloatMapToByteMap
	 */
	struct UTerrainGenerator_ConvertFloatMapToByteMap_Params
	{
	public:
		class UFloatMap*                                           FloatMap;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bClearFloatMap;                                          // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_Z8FV[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UByteMap*                                            ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.ConstModule
	 */
	struct UTerrainGenerator_ConstModule_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_TEMW[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.ClampModule
	 */
	struct UTerrainGenerator_ClampModule_Params
	{
	public:
		class UGeneratorModule*                                    Source;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Lower;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Upper;                                                   // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.CircularMaskModule
	 */
	struct UTerrainGenerator_CircularMaskModule_Params
	{
	public:
		struct FVector2D                                           Center;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CircleRadius;                                            // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Exp;                                                     // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Seed;                                                    // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Frequency;                                               // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OctaveCount;                                             // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Persistence;                                             // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Lacunarity;                                              // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      NoiseAmplitude;                                          // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0028(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.Cavity
	 */
	struct UTerrainGenerator_Cavity_Params
	{
	public:
		class UFloatMap*                                           Destination;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UFloatMap*                                           Source;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       Concave;                                                 // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CZAU[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      Intensity;                                               // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Threshold;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    SpreadIteration;                                         // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SpreadStrength;                                          // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XXEB[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UFloatMap*                                           ReturnValue;                                             // 0x0028(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.Blur
	 */
	struct UTerrainGenerator_Blur_Params
	{
	public:
		class UFloatMap*                                           First;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bHorizontal;                                             // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bVertical;                                               // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       additive;                                                // 0x000A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_FSAA[0x1];                                   // 0x000B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      Intensity;                                               // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UFloatMap*                                           ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.BlendModule
	 */
	struct UTerrainGenerator_BlendModule_Params
	{
	public:
		class UGeneratorModule*                                    First;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    Second;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    Control;                                                 // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.BillowModule
	 */
	struct UTerrainGenerator_BillowModule_Params
	{
	public:
		int32_t                                                    Seed;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Frequency;                                               // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OctaveCount;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Persistence;                                             // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Lacunarity;                                              // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_07IP[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.AddModule
	 */
	struct UTerrainGenerator_AddModule_Params
	{
	public:
		class UGeneratorModule*                                    First;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    Second;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainGenerator.AbsModule
	 */
	struct UTerrainGenerator_AbsModule_Params
	{
	public:
		class UGeneratorModule*                                    Source;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UGeneratorModule*                                    ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ByteMap.Init
	 */
	struct UByteMap_Init_Params
	{
	public:
		int32_t                                                    InSizeX;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    InSizeY;                                                 // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ByteMap.GetSizeY
	 */
	struct UByteMap_GetSizeY_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ByteMap.GetSizeX
	 */
	struct UByteMap_GetSizeX_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ByteMap.GetSize
	 */
	struct UByteMap_GetSize_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ByteMap.Delete
	 */
	struct UByteMap_Delete_Params
	{	};

	/**
	 * Function ShooterGame.CharacterViewPanelWidget.RefreshPreviewWidget
	 */
	struct UCharacterViewPanelWidget_RefreshPreviewWidget_Params
	{	};

	/**
	 * Function ShooterGame.ContextMenu.SetActiveItem
	 */
	struct UContextMenu_SetActiveItem_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu.PopulateContextMenuCustom__DelegateSignature
	 */
	struct UContextMenu_PopulateContextMenuCustom__DelegateSignature_Params
	{
	public:
		class UContextMenu*                                        ContextMenu;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                MenuName;                                                // 0x0008(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu.PopulateContextMenu__DelegateSignature
	 */
	struct UContextMenu_PopulateContextMenu__DelegateSignature_Params
	{
	public:
		class UContextMenu*                                        ContextMenu;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu.GetActiveItem
	 */
	struct UContextMenu_GetActiveItem_Params
	{
	public:
		class UContextMenuItem*                                    ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu.CloseMenu
	 */
	struct UContextMenu_CloseMenu_Params
	{
	public:
		bool                                                       CloseParents;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu.ActiveMenuItemChanged__DelegateSignature
	 */
	struct UContextMenu_ActiveMenuItemChanged__DelegateSignature_Params
	{
	public:
		class UContextMenu*                                        menu;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UContextMenuItem*                                    newItem;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UContextMenuItem*                                    oldItem;                                                 // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenuItem.SetSubmenuEnabled
	 */
	struct UContextMenuItem_SetSubmenuEnabled_Params
	{
	public:
		bool                                                       bEnabled;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenuItem.SetShortcutKey
	 */
	struct UContextMenuItem_SetShortcutKey_Params
	{
	public:
		int32_t                                                    ComboKeyIdx;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_UB71[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FKey                                                Key;                                                     // 0x0008(0x0018)  (Parm)
	};

	/**
	 * Function ShooterGame.ContextMenuItem.SetJustification
	 */
	struct UContextMenuItem_SetJustification_Params
	{
	public:
		ETextJustify                                               Value;                                                   // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenuItem.SetCaption
	 */
	struct UContextMenuItem_SetCaption_Params
	{
	public:
		class FText                                                caption;                                                 // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.ContextMenuItem.OnGetContextMenuContent
	 */
	struct UContextMenuItem_OnGetContextMenuContent_Params
	{
	public:
		class UWidget*                                             ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenuItem.OnButtonClickedEventObjectCustom__DelegateSignature
	 */
	struct UContextMenuItem_OnButtonClickedEventObjectCustom__DelegateSignature_Params
	{
	public:
		class UContextMenuItem*                                    ContextMenuItem;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                SelectedOption;                                          // 0x0008(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenuItem.OnButtonClickedEventObject__DelegateSignature
	 */
	struct UContextMenuItem_OnButtonClickedEventObject__DelegateSignature_Params
	{
	public:
		class UContextMenuItem*                                    ContextMenuItem;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenuItem.OnButtonClicked
	 */
	struct UContextMenuItem_OnButtonClicked_Params
	{	};

	/**
	 * Function ShooterGame.ContextMenuItem.OnActiveMenuItemChanged
	 */
	struct UContextMenuItem_OnActiveMenuItemChanged_Params
	{
	public:
		class UContextMenu*                                        ContextMenu;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UContextMenuItem*                                    NewActiveItem;                                           // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UContextMenuItem*                                    OldActiveItem;                                           // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenuItem.GetSubmenuEnabled
	 */
	struct UContextMenuItem_GetSubmenuEnabled_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenuItem.GetSubmenuContentCustom__DelegateSignature
	 */
	struct UContextMenuItem_GetSubmenuContentCustom__DelegateSignature_Params
	{
	public:
		class UContextMenuItem*                                    ContextMenuItem;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                SelectedOption;                                          // 0x0008(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class UContextMenu*                                        ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenuItem.GetSubmenuContent__DelegateSignature
	 */
	struct UContextMenuItem_GetSubmenuContent__DelegateSignature_Params
	{
	public:
		class UContextMenuItem*                                    ContextMenuItem;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UContextMenu*                                        ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenuItem.GetJustification
	 */
	struct UContextMenuItem_GetJustification_Params
	{
	public:
		ETextJustify                                               ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenuItem.GetCaption
	 */
	struct UContextMenuItem_GetCaption_Params
	{
	public:
		class FText                                                ReturnValue;                                             // 0x0000(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.ContextMenu_DinoGroupEntry.PopulateRootMenu
	 */
	struct UContextMenu_DinoGroupEntry_PopulateRootMenu_Params
	{
	public:
		class UContextMenu*                                        ContextMenu;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_DinoGroupEntry.HandleActionSetGroup
	 */
	struct UContextMenu_DinoGroupEntry_HandleActionSetGroup_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_DinoGroupEntry.HandleActionRemoveDino
	 */
	struct UContextMenu_DinoGroupEntry_HandleActionRemoveDino_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_DinoGroupEntry.HandleActionRemoveClass
	 */
	struct UContextMenu_DinoGroupEntry_HandleActionRemoveClass_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_InventorySort.PopulateRootMenu
	 */
	struct UContextMenu_InventorySort_PopulateRootMenu_Params
	{
	public:
		class UContextMenu*                                        ContextMenu;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_InventorySort.HandleActionWeight
	 */
	struct UContextMenu_InventorySort_HandleActionWeight_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_InventorySort.HandleActionUnsort
	 */
	struct UContextMenu_InventorySort_HandleActionUnsort_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_InventorySort.HandleActionSpoilTimer
	 */
	struct UContextMenu_InventorySort_HandleActionSpoilTimer_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_InventorySort.HandleActionAlphabetical
	 */
	struct UContextMenu_InventorySort_HandleActionAlphabetical_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.PopulateSubmenuSplitStack
	 */
	struct UContextMenu_PrimalItem_PopulateSubmenuSplitStack_Params
	{
	public:
		class UContextMenu*                                        ContextMenu;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.PopulateSubmenuSplitAmount
	 */
	struct UContextMenu_PrimalItem_PopulateSubmenuSplitAmount_Params
	{
	public:
		class UContextMenu*                                        ContextMenu;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.PopulateSubmenuRemove
	 */
	struct UContextMenu_PrimalItem_PopulateSubmenuRemove_Params
	{
	public:
		class UContextMenu*                                        ContextMenu;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.PopulateSubmenuCustom
	 */
	struct UContextMenu_PrimalItem_PopulateSubmenuCustom_Params
	{
	public:
		class UContextMenu*                                        ContextMenu;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ContextItemName;                                         // 0x0008(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.PopulateSubmenuCraftAmount
	 */
	struct UContextMenu_PrimalItem_PopulateSubmenuCraftAmount_Params
	{
	public:
		class UContextMenu*                                        ContextMenu;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.PopulateRootMenu
	 */
	struct UContextMenu_PrimalItem_PopulateRootMenu_Params
	{
	public:
		class UContextMenu*                                        ContextMenu;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.PopulateFolderMenu
	 */
	struct UContextMenu_PrimalItem_PopulateFolderMenu_Params
	{
	public:
		class UContextMenu*                                        ContextMenu;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.PopulateCraftMenu
	 */
	struct UContextMenu_PrimalItem_PopulateCraftMenu_Params
	{
	public:
		class UContextMenu*                                        ContextMenu;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleSplitAmountValueCommit
	 */
	struct UContextMenu_PrimalItem_HandleSplitAmountValueCommit_Params
	{
	public:
		class UContextMenuItem_Spinner*                            Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    InValue;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ETextCommit                                                CommitMethod;                                            // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleOnGetSubmenuSplitStackContent
	 */
	struct UContextMenu_PrimalItem_HandleOnGetSubmenuSplitStackContent_Params
	{
	public:
		class UContextMenuItem*                                    MenuItem;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UContextMenu*                                        ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleOnGetSubmenuSplitAmountContent
	 */
	struct UContextMenu_PrimalItem_HandleOnGetSubmenuSplitAmountContent_Params
	{
	public:
		class UContextMenuItem*                                    MenuItem;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UContextMenu*                                        ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleOnGetSubmenuRemoveContent
	 */
	struct UContextMenu_PrimalItem_HandleOnGetSubmenuRemoveContent_Params
	{
	public:
		class UContextMenuItem*                                    MenuItem;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UContextMenu*                                        ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleOnGetSubmenuCustomContent
	 */
	struct UContextMenu_PrimalItem_HandleOnGetSubmenuCustomContent_Params
	{
	public:
		class UContextMenuItem*                                    MenuItem;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ContextItemName;                                         // 0x0008(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class UContextMenu*                                        ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleOnGetSubmenuCraftContent
	 */
	struct UContextMenu_PrimalItem_HandleOnGetSubmenuCraftContent_Params
	{
	public:
		class UContextMenuItem*                                    MenuItem;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UContextMenu*                                        ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleOnGetSubmenuCraftAmountContent
	 */
	struct UContextMenu_PrimalItem_HandleOnGetSubmenuCraftAmountContent_Params
	{
	public:
		class UContextMenuItem*                                    MenuItem;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UContextMenu*                                        ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleCraftAmountValueCommit
	 */
	struct UContextMenu_PrimalItem_HandleCraftAmountValueCommit_Params
	{
	public:
		class UContextMenuItem_Spinner*                            Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    InValue;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ETextCommit                                                CommitMethod;                                            // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleActionUse
	 */
	struct UContextMenu_PrimalItem_HandleActionUse_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleActionUnequip
	 */
	struct UContextMenu_PrimalItem_HandleActionUnequip_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleActionTransfer
	 */
	struct UContextMenu_PrimalItem_HandleActionTransfer_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleActionSplitOne
	 */
	struct UContextMenu_PrimalItem_HandleActionSplitOne_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleActionSplitHalf
	 */
	struct UContextMenu_PrimalItem_HandleActionSplitHalf_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleActionSplitAmount
	 */
	struct UContextMenu_PrimalItem_HandleActionSplitAmount_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleActionSplitAll
	 */
	struct UContextMenu_PrimalItem_HandleActionSplitAll_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleActionRepair
	 */
	struct UContextMenu_PrimalItem_HandleActionRepair_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleActionRenameFolder
	 */
	struct UContextMenu_PrimalItem_HandleActionRenameFolder_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleActionRemoveSkin
	 */
	struct UContextMenu_PrimalItem_HandleActionRemoveSkin_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleActionRemoveAmmo
	 */
	struct UContextMenu_PrimalItem_HandleActionRemoveAmmo_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleActionRemoveAccessory
	 */
	struct UContextMenu_PrimalItem_HandleActionRemoveAccessory_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleActionFavorite
	 */
	struct UContextMenu_PrimalItem_HandleActionFavorite_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleActionEquipAllInFolder
	 */
	struct UContextMenu_PrimalItem_HandleActionEquipAllInFolder_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleActionEquip
	 */
	struct UContextMenu_PrimalItem_HandleActionEquip_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleActionDiscard
	 */
	struct UContextMenu_PrimalItem_HandleActionDiscard_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleActionDeleteFolder
	 */
	struct UContextMenu_PrimalItem_HandleActionDeleteFolder_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleActionCustom
	 */
	struct UContextMenu_PrimalItem_HandleActionCustom_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ContextItemName;                                         // 0x0008(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleActionCraftOne
	 */
	struct UContextMenu_PrimalItem_HandleActionCraftOne_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleActionCraftAmount
	 */
	struct UContextMenu_PrimalItem_HandleActionCraftAmount_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenu_PrimalItem.HandleActionCraftAll
	 */
	struct UContextMenu_PrimalItem_HandleActionCraftAll_Params
	{
	public:
		class UContextMenuItem*                                    Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenuItem_Spinner.SetValue
	 */
	struct UContextMenuItem_Spinner_SetValue_Params
	{
	public:
		int32_t                                                    newValue;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenuItem_Spinner.SetMinValue
	 */
	struct UContextMenuItem_Spinner_SetMinValue_Params
	{
	public:
		int32_t                                                    newValue;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenuItem_Spinner.SetMaxValue
	 */
	struct UContextMenuItem_Spinner_SetMaxValue_Params
	{
	public:
		int32_t                                                    newValue;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenuItem_Spinner.OnSpinnerValueCommitedEvent__DelegateSignature
	 */
	struct UContextMenuItem_Spinner_OnSpinnerValueCommitedEvent__DelegateSignature_Params
	{
	public:
		class UContextMenuItem_Spinner*                            Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    InValue;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ETextCommit                                                CommitMethod;                                            // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenuItem_Spinner.HandleOnTextCommited
	 */
	struct UContextMenuItem_Spinner_HandleOnTextCommited_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		ETextCommit                                                CommitMethod;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenuItem_Spinner.HandleOnTextChanged
	 */
	struct UContextMenuItem_Spinner_HandleOnTextChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.ContextMenuItem_Spinner.HandleOnButtonIncreaseClicked
	 */
	struct UContextMenuItem_Spinner_HandleOnButtonIncreaseClicked_Params
	{	};

	/**
	 * Function ShooterGame.ContextMenuItem_Spinner.HandleOnButtonDecreaseClicked
	 */
	struct UContextMenuItem_Spinner_HandleOnButtonDecreaseClicked_Params
	{	};

	/**
	 * Function ShooterGame.ContextMenuItem_Spinner.GetValue
	 */
	struct UContextMenuItem_Spinner_GetValue_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenuItem_Spinner.GetMinValue
	 */
	struct UContextMenuItem_Spinner_GetMinValue_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ContextMenuItem_Spinner.GetMaxValue
	 */
	struct UContextMenuItem_Spinner_GetMaxValue_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomActorList.DestroyActors
	 */
	struct ACustomActorList_DestroyActors_Params
	{	};

	/**
	 * Function ShooterGame.PointOfInterestManagerList.ScanForAllValidPointsOfInterest
	 */
	struct APointOfInterestManagerList_ScanForAllValidPointsOfInterest_Params
	{	};

	/**
	 * Function ShooterGame.PointOfInterestManagerList.ReConstructPointsInList
	 */
	struct APointOfInterestManagerList_ReConstructPointsInList_Params
	{	};

	/**
	 * Function ShooterGame.PointOfInterestManagerList.PopulatePointsActorList
	 */
	struct APointOfInterestManagerList_PopulatePointsActorList_Params
	{	};

	/**
	 * Function ShooterGame.PointOfInterestManagerList.ManualAddPointOfInterestActor
	 */
	struct APointOfInterestManagerList_ManualAddPointOfInterestActor_Params
	{
	public:
		class AActor*                                              AddActor;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PointOfInterestManagerList.CheckListForTagCollisions
	 */
	struct APointOfInterestManagerList_CheckListForTagCollisions_Params
	{
	public:
		class AActor*                                              ForSpecificActor;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomButtonWidget.SetToggledState
	 */
	struct UCustomButtonWidget_SetToggledState_Params
	{
	public:
		bool                                                       IsToggled;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomButtonWidget.SetIsToggleButton
	 */
	struct UCustomButtonWidget_SetIsToggleButton_Params
	{
	public:
		bool                                                       IsToggle;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomButtonWidget.GetToggledState
	 */
	struct UCustomButtonWidget_GetToggledState_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomButtonWidget.GetIsToggleButton
	 */
	struct UCustomButtonWidget_GetIsToggleButton_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomCanvasWidget.OnDraggedClickedEventObject__DelegateSignature
	 */
	struct UCustomCanvasWidget_OnDraggedClickedEventObject__DelegateSignature_Params
	{
	public:
		class UWidget*                                             draggeddWidget;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DataListEntryButton.OnGetContextMenuContent
	 */
	struct UDataListEntryButton_OnGetContextMenuContent_Params
	{
	public:
		class UWidget*                                             ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DataListEntryButton.ClickedSecondaryButton
	 */
	struct UDataListEntryButton_ClickedSecondaryButton_Params
	{
	public:
		class UWidget*                                             clickedWidget;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DataListEntryButton.ClickedButton
	 */
	struct UDataListEntryButton_ClickedButton_Params
	{
	public:
		class UWidget*                                             clickedWidget;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DataListEntryButton_PrimalItem.HandleOnContextMenuIsOpenChanged
	 */
	struct UDataListEntryButton_PrimalItem_HandleOnContextMenuIsOpenChanged_Params
	{
	public:
		bool                                                       bIsOpen;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DamageVolumeBase.OnEndOverlap
	 */
	struct ADamageVolumeBase_OnEndOverlap_Params
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DamageVolumeBase.OnBeginOverlap
	 */
	struct ADamageVolumeBase_OnBeginOverlap_Params
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DataListEntryWidget.OnDraggedClickedEventObject
	 */
	struct UDataListEntryWidget_OnDraggedClickedEventObject_Params
	{
	public:
		class UWidget*                                             draggeddWidget;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DataListEntryWidget.InitializeMeDefaults
	 */
	struct UDataListEntryWidget_InitializeMeDefaults_Params
	{	};

	/**
	 * Function ShooterGame.DataListEntryWidget.GetDataListButton
	 */
	struct UDataListEntryWidget_GetDataListButton_Params
	{
	public:
		class UDataListEntryButton*                                ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DayCycleManager.ShooterCharacterSpawned
	 */
	struct ADayCycleManager_ShooterCharacterSpawned_Params
	{
	public:
		class AShooterCharacter*                                   TheShooterCharacter;                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DayCycleManager.ShooterCharacterPossessed
	 */
	struct ADayCycleManager_ShooterCharacterPossessed_Params
	{
	public:
		class AShooterCharacter*                                   TheShooterCharacter;                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DayCycleManager.IsRainingAtLocation
	 */
	struct ADayCycleManager_IsRainingAtLocation_Params
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DayCycleManager.IsDaytime
	 */
	struct ADayCycleManager_IsDaytime_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DayCycleManager.GetWindAtLocation
	 */
	struct ADayCycleManager_GetWindAtLocation_Params
	{
	public:
		struct FVector                                             AtLocation;                                              // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_3LC6[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalCharacter*                                    ForPrimalCharacter;                                      // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DayCycleManager.GetWaterLineStartZ
	 */
	struct ADayCycleManager_GetWaterLineStartZ_Params
	{
	public:
		struct FVector                                             AtLocation;                                              // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DayCycleManager.GetTemperatureAtLocation
	 */
	struct ADayCycleManager_GetTemperatureAtLocation_Params
	{
	public:
		struct FVector                                             AtLocation;                                              // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5ZFY[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalCharacter*                                    ForPrimalCharacter;                                      // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DayCycleManager.GetPreventBuffClassesInDayCycleLevel
	 */
	struct ADayCycleManager_GetPreventBuffClassesInDayCycleLevel_Params
	{
	public:
		TArray<class UClass*>                                      ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.DayCycleManager.GetDeepWaterStartZ
	 */
	struct ADayCycleManager_GetDeepWaterStartZ_Params
	{
	public:
		struct FVector                                             AtLocation;                                              // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DayCycleManager.GetDayNumberString
	 */
	struct ADayCycleManager_GetDayNumberString_Params
	{
	public:
		bool                                                       bIncludeDayString;                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_T4T5[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.DayCycleManager.DayCycleManagerStartNighttime__DelegateSignature
	 */
	struct ADayCycleManager_DayCycleManagerStartNighttime__DelegateSignature_Params
	{	};

	/**
	 * Function ShooterGame.DayCycleManager.DayCycleManagerStartDaytime__DelegateSignature
	 */
	struct ADayCycleManager_DayCycleManagerStartDaytime__DelegateSignature_Params
	{	};

	/**
	 * Function ShooterGame.DayCycleManager.DayCycleManagerOnDayChange__DelegateSignature
	 */
	struct ADayCycleManager_DayCycleManagerOnDayChange__DelegateSignature_Params
	{
	public:
		int32_t                                                    DayNumber;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DayCycleManager.BPPostDrawSpawnMap
	 */
	struct ADayCycleManager_BPPostDrawSpawnMap_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UCanvas*                                             ItemCanvas;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ItemCanvasSize;                                          // 0x0010(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DayCycleManager.BPOverrideItemAutoDecreaseDurability
	 */
	struct ADayCycleManager_BPOverrideItemAutoDecreaseDurability_Params
	{
	public:
		class UPrimalItem*                                         anItem;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DayCycleManager.BPOverrideGameStateMatineePlayRate
	 */
	struct ADayCycleManager_BPOverrideGameStateMatineePlayRate_Params
	{
	public:
		class AActor*                                              forMatinee;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InPlayRate;                                              // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DayCycleManager.BPOnDCMCheat
	 */
	struct ADayCycleManager_BPOnDCMCheat_Params
	{
	public:
		class FName                                                CheatName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Value;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DayCycleManager.BPGetAdditionalMapMarkers
	 */
	struct ADayCycleManager_BPGetAdditionalMapMarkers_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FPrimalMapMarkerEntryData>                   ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.DayCycleManager.BPAllowSpawningCrate
	 */
	struct ADayCycleManager_BPAllowSpawningCrate_Params
	{
	public:
		class UClass*                                              CrateType;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DayCycleManager.BPAdjustTemperature
	 */
	struct ADayCycleManager_BPAdjustTemperature_Params
	{
	public:
		float                                                      TemperatureIn;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_IMDP[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class ABiomeZoneVolume*                                    BiomeZoneVolume;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtLocation;                                              // 0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QTQX[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalCharacter*                                    ForPrimalCharacter;                                      // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0028(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DayCycleManager.AttemptWeaponFiring
	 */
	struct ADayCycleManager_AttemptWeaponFiring_Params
	{
	public:
		class AShooterWeapon*                                      theWeapon;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DayCycleManager.AllowWeaponFiring
	 */
	struct ADayCycleManager_AllowWeaponFiring_Params
	{
	public:
		class AActor*                                              theWeaponOrStructure;                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DayCycleManager.AllowStructureActivation
	 */
	struct ADayCycleManager_AllowStructureActivation_Params
	{
	public:
		class APrimalStructure*                                    theStructure;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DayCycleManager.AdjustStructureItemInsulation
	 */
	struct ADayCycleManager_AdjustStructureItemInsulation_Params
	{
	public:
		class AShooterCharacter*                                   forCharacter;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         ForPrimalItem;                                           // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EPrimalItemStat                                            TypeInsulation;                                          // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KZIW[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      insulationValue;                                         // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DestroyedMeshActor.SetNoCollisionProfile
	 */
	struct ADestroyedMeshActor_SetNoCollisionProfile_Params
	{	};

	/**
	 * Function ShooterGame.DroppedItem.ResetLifeSpan
	 */
	struct ADroppedItem_ResetLifeSpan_Params
	{
	public:
		float                                                      NewLifeSpan;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DroppedItem.KeepPhysicsActiveForDuration
	 */
	struct ADroppedItem_KeepPhysicsActiveForDuration_Params
	{
	public:
		float                                                      Duration;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DroppedItem.IsAllowedToPickupItem
	 */
	struct ADroppedItem_IsAllowedToPickupItem_Params
	{
	public:
		class APlayerController*                                   PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DroppedItem.FreezePhysics
	 */
	struct ADroppedItem_FreezePhysics_Params
	{	};

	/**
	 * Function ShooterGame.DroppedItem.ForceSleep
	 */
	struct ADroppedItem_ForceSleep_Params
	{	};

	/**
	 * Function ShooterGame.DroppedItem.BPOnItemPickedUp
	 */
	struct ADroppedItem_BPOnItemPickedUp_Params
	{
	public:
		class APlayerController*                                   ByPC;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         InventoryItem;                                           // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DroppedItemEgg.NetSpawnDinoEmitter
	 */
	struct ADroppedItemEgg_NetSpawnDinoEmitter_Params
	{	};

	/**
	 * Function ShooterGame.DroppedItemTorch.OnRep_FireIsOn
	 */
	struct ADroppedItemTorch_OnRep_FireIsOn_Params
	{	};

	/**
	 * Function ShooterGame.DroppedItemMission.GetOwnerMission
	 */
	struct ADroppedItemMission_GetOwnerMission_Params
	{
	public:
		class AMissionType*                                        ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FadingDestructibleActor.SetupFade
	 */
	struct AFadingDestructibleActor_SetupFade_Params
	{	};

	/**
	 * Function ShooterGame.FloatMap.Init
	 */
	struct UFloatMap_Init_Params
	{
	public:
		int32_t                                                    InSizeX;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    InSizeY;                                                 // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FloatMap.GetSizeY
	 */
	struct UFloatMap_GetSizeY_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FloatMap.GetSizeX
	 */
	struct UFloatMap_GetSizeX_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FloatMap.GetSize
	 */
	struct UFloatMap_GetSize_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FloatMap.Delete
	 */
	struct UFloatMap_Delete_Params
	{	};

	/**
	 * Function ShooterGame.FlockingBehavior.UpdateFlockComponentLocations_ParticleBoids
	 */
	struct UFlockingBehavior_UpdateFlockComponentLocations_ParticleBoids_Params
	{
	public:
		TArray<struct FBoid>                                       BoidArray;                                               // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class UParticleSystemComponent*>                    ComponentArray;                                          // 0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.UpdateFlockComponentLocations
	 */
	struct UFlockingBehavior_UpdateFlockComponentLocations_Params
	{
	public:
		TArray<struct FBoid>                                       BoidArray;                                               // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class UStaticMeshComponent*>                        ComponentArray;                                          // 0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.UpdateBoidComponentLocation
	 */
	struct UFlockingBehavior_UpdateBoidComponentLocation_Params
	{
	public:
		struct FBoid                                               ThisBoid;                                                // 0x0000(0x0054)  (ConstParm, Parm, OutParm, ReferenceParm)
		unsigned char                                              UnknownData_TR52[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class USceneComponent*                                     Comp;                                                    // 0x0058(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.TickPersistentFlockData
	 */
	struct UFlockingBehavior_TickPersistentFlockData_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FFlockPersistentData                                InOutFlockData;                                          // 0x0008(0x0038)  (Parm, OutParm, ReferenceParm)
		TArray<struct FBoid>                                       BoidArray;                                               // 0x0040(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		float                                                      DeltaTime;                                               // 0x0050(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MaxNumTracesPerSecond;                                   // 0x0054(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDrawDebug;                                              // 0x0058(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.SetAvoidanceAreaTransform
	 */
	struct UFlockingBehavior_SetAvoidanceAreaTransform_Params
	{
	public:
		struct FAvoidanceArea                                      InOutAvoidanceArea;                                      // 0x0000(0x0070)  (Parm, OutParm, ReferenceParm)
		struct FTransform                                          NewTransform;                                            // 0x0070(0x0030)  (Parm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.SetAvoidanceAreaArrayTransform
	 */
	struct UFlockingBehavior_SetAvoidanceAreaArrayTransform_Params
	{
	public:
		TArray<struct FAvoidanceArea>                              InOutAvoidanceAreas;                                     // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FTransform                                          NewTransform;                                            // 0x0010(0x0030)  (Parm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.MakeIndexArray
	 */
	struct UFlockingBehavior_MakeIndexArray_Params
	{
	public:
		int32_t                                                    StartIndex;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumIndices;                                              // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<int32_t>                                            OutIndexArray;                                           // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.IsPointInsideAvoidanceArea
	 */
	struct UFlockingBehavior_IsPointInsideAvoidanceArea_Params
	{
	public:
		struct FAvoidanceArea                                      Area;                                                    // 0x0000(0x0070)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector                                             WorldLocation;                                           // 0x0070(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x007C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.IsPointInsideAnyAvoidanceArea
	 */
	struct UFlockingBehavior_IsPointInsideAnyAvoidanceArea_Params
	{
	public:
		TArray<struct FAvoidanceArea>                              Areas;                                                   // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FVector                                             WorldLocation;                                           // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x001C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.InterpVectorArrayToSphere
	 */
	struct UFlockingBehavior_InterpVectorArrayToSphere_Params
	{
	public:
		TArray<struct FVector>                                     InOutVectorArray;                                        // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FVector                                             Origin;                                                  // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumRows;                                                 // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ESimpleCurve                                               LatitudeDistribution;                                    // 0x0024(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_SMVC[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      DeltaTime;                                               // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeedMin;                                          // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeedMax;                                          // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.InterpVectorArrayToRandom
	 */
	struct UFlockingBehavior_InterpVectorArrayToRandom_Params
	{
	public:
		TArray<struct FVector>                                     InOutVectorArray;                                        // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FVector                                             Origin;                                                  // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MinRadius;                                               // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxRadius;                                               // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    RandomSeed;                                              // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeedMin;                                          // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeedMax;                                          // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.InterpVectorArrayToGrid
	 */
	struct UFlockingBehavior_InterpVectorArrayToGrid_Params
	{
	public:
		TArray<struct FVector>                                     InOutVectorArray;                                        // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FVector                                             Origin;                                                  // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x001C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HorizSize;                                               // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      VertSize;                                                // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumRows;                                                 // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumCols;                                                 // 0x0034(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeedMin;                                          // 0x003C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeedMax;                                          // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.InterpVectorArrayToCircle
	 */
	struct UFlockingBehavior_InterpVectorArrayToCircle_Params
	{
	public:
		TArray<struct FVector>                                     InOutVectorArray;                                        // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FVector                                             Origin;                                                  // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x001C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeedMin;                                          // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeedMax;                                          // 0x0034(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.InterpVectorArray
	 */
	struct UFlockingBehavior_InterpVectorArray_Params
	{
	public:
		TArray<struct FVector>                                     InOutVectorArray;                                        // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<struct FVector>                                     RelativeTargetLocations;                                 // 0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FVector                                             Origin;                                                  // 0x0020(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x002C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeedMin;                                          // 0x003C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeedMax;                                          // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.InterpBoidArrayToSphere
	 */
	struct UFlockingBehavior_InterpBoidArrayToSphere_Params
	{
	public:
		TArray<struct FBoid>                                       InOutBoidArray;                                          // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FTransform                                          WorldTransform;                                          // 0x0010(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumRows;                                                 // 0x0044(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ESimpleCurve                                               LatitudeDistribution;                                    // 0x0048(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZPGO[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      DeltaTime;                                               // 0x004C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeedMin;                                          // 0x0050(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeedMax;                                          // 0x0054(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.InterpBoidArrayToRandom
	 */
	struct UFlockingBehavior_InterpBoidArrayToRandom_Params
	{
	public:
		TArray<struct FBoid>                                       InOutBoidArray;                                          // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FTransform                                          WorldTransform;                                          // 0x0010(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      MinRadius;                                               // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxRadius;                                               // 0x0044(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    RandomSeed;                                              // 0x0048(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x004C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeedMin;                                          // 0x0050(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeedMax;                                          // 0x0054(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.InterpBoidArrayToGrid
	 */
	struct UFlockingBehavior_InterpBoidArrayToGrid_Params
	{
	public:
		TArray<struct FBoid>                                       InOutBoidArray;                                          // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FTransform                                          WorldTransform;                                          // 0x0010(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x0040(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HorizSize;                                               // 0x004C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      VertSize;                                                // 0x0050(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumRows;                                                 // 0x0054(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumCols;                                                 // 0x0058(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x005C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeedMin;                                          // 0x0060(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeedMax;                                          // 0x0064(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.InterpBoidArrayToCircle
	 */
	struct UFlockingBehavior_InterpBoidArrayToCircle_Params
	{
	public:
		TArray<struct FBoid>                                       InOutBoidArray;                                          // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FTransform                                          WorldTransform;                                          // 0x0010(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            CircleRotation;                                          // 0x0040(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x004C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0050(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeedMin;                                          // 0x0054(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeedMax;                                          // 0x0058(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.InterpBoidArray
	 */
	struct UFlockingBehavior_InterpBoidArray_Params
	{
	public:
		TArray<struct FBoid>                                       InOutBoidArray;                                          // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<struct FBoid>                                       RelativeTargetLocations;                                 // 0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FTransform                                          WorldTransform;                                          // 0x0020(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x0050(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x005C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeedMin;                                          // 0x0060(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InterpSpeedMax;                                          // 0x0064(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.GetFlockRadius
	 */
	struct UFlockingBehavior_GetFlockRadius_Params
	{
	public:
		TArray<struct FBoid>                                       BoidArray;                                               // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FVector                                             FlockCentroid;                                           // 0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreLeaders;                                          // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_C34P[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0020(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.GetFlockMembersOfType
	 */
	struct UFlockingBehavior_GetFlockMembersOfType_Params
	{
	public:
		TArray<struct FBoid>                                       BoidArray;                                               // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EBoidType                                                  BoidType;                                                // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_DMWL[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<int32_t>                                            OutIndices;                                              // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.GetFlockCentroid
	 */
	struct UFlockingBehavior_GetFlockCentroid_Params
	{
	public:
		TArray<struct FBoid>                                       BoidArray;                                               // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bIgnoreLeaders;                                          // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_2BW4[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             ReturnValue;                                             // 0x0014(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.GetClosestSurfacePointOnAvoidanceArea
	 */
	struct UFlockingBehavior_GetClosestSurfacePointOnAvoidanceArea_Params
	{
	public:
		struct FAvoidanceArea                                      Area;                                                    // 0x0000(0x0070)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector                                             Loc;                                                     // 0x0070(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x007C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.GetAvoidanceDirection
	 */
	struct UFlockingBehavior_GetAvoidanceDirection_Params
	{
	public:
		struct FAvoidanceArea                                      Area;                                                    // 0x0000(0x0070)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector                                             CurrentLoc;                                              // 0x0070(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             CurrentDir;                                              // 0x007C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0088(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.GetAvoidanceAreaWorldLocation
	 */
	struct UFlockingBehavior_GetAvoidanceAreaWorldLocation_Params
	{
	public:
		struct FAvoidanceArea                                      Area;                                                    // 0x0000(0x0070)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector                                             ReturnValue;                                             // 0x0070(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.FlockTickSphereFormation
	 */
	struct UFlockingBehavior_FlockTickSphereFormation_Params
	{
	public:
		TArray<struct FBoid>                                       InOutBoidArray;                                          // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FFlockPersistentData                                InOutFlockData;                                          // 0x0010(0x0038)  (Parm, OutParm, ReferenceParm)
		bool                                                       bUseBoidIndexWhitelist;                                  // 0x0048(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_463I[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<int32_t>                                            BoidIndexWhitelist;                                      // 0x0050(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		float                                                      DeltaTime;                                               // 0x0060(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QQCR[0xC];                                   // 0x0064(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          WorldTransform;                                          // 0x0070(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FBoidBehavior                                       Behavior;                                                // 0x00A0(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm)
		float                                                      MinInterpDistance;                                       // 0x00E0(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x00E4(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumRows;                                                 // 0x00E8(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ESimpleCurve                                               LatitudeDistribution;                                    // 0x00EC(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_PL5M[0x3];                                   // 0x00ED(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      HelixSpeed;                                              // 0x00F0(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.FlockTickLeaders
	 */
	struct UFlockingBehavior_FlockTickLeaders_Params
	{
	public:
		TArray<struct FBoid>                                       InOutBoidArray;                                          // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FFlockPersistentData                                InOutFlockData;                                          // 0x0010(0x0038)  (Parm, OutParm, ReferenceParm)
		bool                                                       bUseBoidIndexWhitelist;                                  // 0x0048(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_E40O[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<int32_t>                                            BoidIndexWhitelist;                                      // 0x0050(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		float                                                      DeltaTime;                                               // 0x0060(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_OSYD[0xC];                                   // 0x0064(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          ParentTransform;                                         // 0x0070(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      LeaderInterpSpeed;                                       // 0x00A0(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      LeaderAreaWidth;                                         // 0x00A4(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.FlockTickGridFormation
	 */
	struct UFlockingBehavior_FlockTickGridFormation_Params
	{
	public:
		TArray<struct FBoid>                                       InOutBoidArray;                                          // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FFlockPersistentData                                InOutFlockData;                                          // 0x0010(0x0038)  (Parm, OutParm, ReferenceParm)
		bool                                                       bUseBoidIndexWhitelist;                                  // 0x0048(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_P22J[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<int32_t>                                            BoidIndexWhitelist;                                      // 0x0050(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		float                                                      DeltaTime;                                               // 0x0060(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_OQMV[0xC];                                   // 0x0064(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          WorldTransform;                                          // 0x0070(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FBoidBehavior                                       Behavior;                                                // 0x00A0(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm)
		float                                                      MinInterpDistance;                                       // 0x00E0(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            GridRotation;                                            // 0x00E4(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      GridHorizSize;                                           // 0x00F0(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      GridVertSize;                                            // 0x00F4(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    GridNumRows;                                             // 0x00F8(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    GridNumCols;                                             // 0x00FC(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.FlockTickFollowersAndFreeAgents
	 */
	struct UFlockingBehavior_FlockTickFollowersAndFreeAgents_Params
	{
	public:
		TArray<struct FBoid>                                       InOutBoidArray;                                          // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FFlockPersistentData                                InOutFlockData;                                          // 0x0010(0x0038)  (Parm, OutParm, ReferenceParm)
		bool                                                       bUseBoidIndexWhitelist;                                  // 0x0048(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_BVC5[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<int32_t>                                            BoidIndexWhitelist;                                      // 0x0050(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		float                                                      DeltaTime;                                               // 0x0060(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_0O27[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FBoidBehavior                                       Behavior;                                                // 0x0068(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.FlockTickCircleFormation
	 */
	struct UFlockingBehavior_FlockTickCircleFormation_Params
	{
	public:
		TArray<struct FBoid>                                       InOutBoidArray;                                          // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FFlockPersistentData                                InOutFlockData;                                          // 0x0010(0x0038)  (Parm, OutParm, ReferenceParm)
		bool                                                       bUseBoidIndexWhitelist;                                  // 0x0048(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7KKD[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<int32_t>                                            BoidIndexWhitelist;                                      // 0x0050(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		float                                                      DeltaTime;                                               // 0x0060(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_WTMO[0xC];                                   // 0x0064(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          WorldTransform;                                          // 0x0070(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FBoidBehavior                                       Behavior;                                                // 0x00A0(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FRotator                                            CircleRotation;                                          // 0x00E0(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CircleRadius;                                            // 0x00EC(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MinInterpDistance;                                       // 0x00F0(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.FlockSetMaxSpeedAndForce
	 */
	struct UFlockingBehavior_FlockSetMaxSpeedAndForce_Params
	{
	public:
		TArray<struct FBoid>                                       InOutBoidArray;                                          // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bUseBoidIndexWhitelist;                                  // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_K2B1[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<int32_t>                                            BoidIndexWhitelist;                                      // 0x0018(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FVector2D                                           MaxSpeedRange;                                           // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           MaxForceRange;                                           // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.FlockCreate
	 */
	struct UFlockingBehavior_FlockCreate_Params
	{
	public:
		TArray<struct FBoid>                                       NewBoids;                                                // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
		struct FTransform                                          WorldTransform;                                          // 0x0010(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		int32_t                                                    NumFlockBoids;                                           // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumLeaderBoids;                                          // 0x0044(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InitialSpawnRadius;                                      // 0x0048(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           MaxSpeedRange;                                           // 0x004C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           MaxForceRange;                                           // 0x0054(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           TurnRateRange;                                           // 0x005C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.DrawDebugAvoidanceArea
	 */
	struct UFlockingBehavior_DrawDebugAvoidanceArea_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NN4D[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FAvoidanceArea                                      Area;                                                    // 0x0010(0x0070)  (ConstParm, Parm, OutParm, ReferenceParm)
		float                                                      DrawDuration;                                            // 0x0080(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.BoidTick
	 */
	struct UFlockingBehavior_BoidTick_Params
	{
	public:
		int32_t                                                    BoidIndex;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_2SM5[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FBoid>                                       InOutBoidArray;                                          // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FFlockPersistentData                                InOutFlockData;                                          // 0x0018(0x0038)  (Parm, OutParm, ReferenceParm)
		float                                                      DeltaTime;                                               // 0x0050(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_YK3Z[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FBoidBehavior                                       Behavior;                                                // 0x0058(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.BoidStopTargeting
	 */
	struct UFlockingBehavior_BoidStopTargeting_Params
	{
	public:
		int32_t                                                    BoidIndex;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_UXG1[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FBoid>                                       InOutBoidArray;                                          // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.BoidSetTarget
	 */
	struct UFlockingBehavior_BoidSetTarget_Params
	{
	public:
		int32_t                                                    BoidIndex;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7IUS[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FBoid>                                       InOutBoidArray;                                          // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FVector                                             TargetWorldLocation;                                     // 0x0018(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.BoidSetAlive
	 */
	struct UFlockingBehavior_BoidSetAlive_Params
	{
	public:
		int32_t                                                    BoidIndex;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_PFVS[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FBoid>                                       InOutBoidArray;                                          // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bIsAlive;                                                // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.BoidMoveTo
	 */
	struct UFlockingBehavior_BoidMoveTo_Params
	{
	public:
		int32_t                                                    BoidIndex;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_32MZ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FBoid>                                       InOutBoidArray;                                          // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FFlockPersistentData                                InOutFlockData;                                          // 0x0018(0x0038)  (Parm, OutParm, ReferenceParm)
		struct FBoidBehavior                                       Behavior;                                                // 0x0050(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm)
		float                                                      DeltaTime;                                               // 0x0090(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NewWorldLocation;                                        // 0x0094(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      TargetDistanceThreshold;                                 // 0x00A0(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bUseIterp;                                               // 0x00A4(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_U1OC[0x3];                                   // 0x00A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      InterpSpeed;                                             // 0x00A8(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.FlockingBehavior.AddAvoidanceAreaToFlockData
	 */
	struct UFlockingBehavior_AddAvoidanceAreaToFlockData_Params
	{
	public:
		struct FFlockPersistentData                                InOutFlockData;                                          // 0x0000(0x0038)  (Parm, OutParm, ReferenceParm)
		unsigned char                                              UnknownData_DF3T[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FAvoidanceArea                                      Area;                                                    // 0x0040(0x0070)  (Parm)
	};

	/**
	 * Function ShooterGame.HexagonTradableOption.GetItemCost
	 */
	struct UHexagonTradableOption_GetItemCost_Params
	{
	public:
		class AShooterPlayerController*                            PlayerController;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HexagonTradableOption.BPOverrideTradeAction
	 */
	struct UHexagonTradableOption_BPOverrideTradeAction_Params
	{
	public:
		class AShooterPlayerController*                            PlayerController;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HexagonTradableOption.BPGetItemCost
	 */
	struct UHexagonTradableOption_BPGetItemCost_Params
	{
	public:
		class AShooterPlayerController*                            PlayerController;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HexagonTradableOption.BPAllowedToBePurchased
	 */
	struct UHexagonTradableOption_BPAllowedToBePurchased_Params
	{
	public:
		class AShooterPlayerController*                            PlayerController;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HexagonTradableOption.AllowedToBePurchased
	 */
	struct UHexagonTradableOption_AllowedToBePurchased_Params
	{
	public:
		class AShooterPlayerController*                            PlayerController;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HexagonVFXActor.SetVolume
	 */
	struct AHexagonVFXActor_SetVolume_Params
	{
	public:
		float                                                      NewVolume;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HexagonVFXActor.HoverThenAttract
	 */
	struct AHexagonVFXActor_HoverThenAttract_Params
	{	};

	/**
	 * Function ShooterGame.HexagonVFXActor.BeginMovingDirectlyToActor
	 */
	struct AHexagonVFXActor_BeginMovingDirectlyToActor_Params
	{	};

	/**
	 * Function ShooterGame.HordeCrateManager.ForceStartHorde
	 */
	struct AHordeCrateManager_ForceStartHorde_Params
	{
	public:
		class AActor*                                              SpawnNetwork;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            PC;                                                      // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ActorClass;                                              // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    DifficultyIndex;                                         // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HordeCrateManager.BPForceStartHorde
	 */
	struct AHordeCrateManager_BPForceStartHorde_Params
	{
	public:
		class AActor*                                              SpawnNetwork;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            PC;                                                      // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ActorClass;                                              // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    DifficultyIndex;                                         // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDElementBarWidget.UpdateBoostIconVisibility
	 */
	struct UHUDElementBarWidget_UpdateBoostIconVisibility_Params
	{	};

	/**
	 * Function ShooterGame.JsonObject.SetVectorField
	 */
	struct UJsonObject_SetVectorField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		struct FVector                                             Value;                                                   // 0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bForceSingleKey;                                         // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_RRMI[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0020(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
	};

	/**
	 * Function ShooterGame.JsonObject.SetVectorArrayField
	 */
	struct UJsonObject_SetVectorArrayField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<struct FVector>                                     Value;                                                   // 0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bForceSingleKey;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_3JK1[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
	};

	/**
	 * Function ShooterGame.JsonObject.SetStructField
	 */
	struct UJsonObject_SetStructField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class UProperty*                                           Value;                                                   // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceSingleKey;                                         // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_HFA0[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0020(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
	};

	/**
	 * Function ShooterGame.JsonObject.SetStringField
	 */
	struct UJsonObject_SetStringField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Value;                                                   // 0x0010(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bForceSingleKey;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_1LD0[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
	};

	/**
	 * Function ShooterGame.JsonObject.SetStringArrayField
	 */
	struct UJsonObject_SetStringArrayField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<class FString>                                      Value;                                                   // 0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bForceSingleKey;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_ISYV[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
	};

	/**
	 * Function ShooterGame.JsonObject.SetRotatorField
	 */
	struct UJsonObject_SetRotatorField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		struct FRotator                                            Value;                                                   // 0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bForceSingleKey;                                         // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_NCFZ[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0020(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
	};

	/**
	 * Function ShooterGame.JsonObject.SetRotatorArrayField
	 */
	struct UJsonObject_SetRotatorArrayField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<struct FRotator>                                    Value;                                                   // 0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bForceSingleKey;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_5K2P[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
	};

	/**
	 * Function ShooterGame.JsonObject.SetNullField
	 */
	struct UJsonObject_SetNullField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bForceSingleKey;                                         // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_SK6F[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0018(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
	};

	/**
	 * Function ShooterGame.JsonObject.SetJsonObjectField
	 */
	struct UJsonObject_SetJsonObjectField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class UJsonObject*                                         Object;                                                  // 0x0010(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceSingleKey;                                         // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_QFMR[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0020(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
	};

	/**
	 * Function ShooterGame.JsonObject.SetJsonObjectArrayField
	 */
	struct UJsonObject_SetJsonObjectArrayField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<class UJsonObject*>                                 Value;                                                   // 0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bForceSingleKey;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_BGKX[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
	};

	/**
	 * Function ShooterGame.JsonObject.SetIntField
	 */
	struct UJsonObject_SetIntField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    Value;                                                   // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceSingleKey;                                         // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_ZSIU[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0018(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
	};

	/**
	 * Function ShooterGame.JsonObject.SetIntArrayField
	 */
	struct UJsonObject_SetIntArrayField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<int32_t>                                            Value;                                                   // 0x0010(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bForceSingleKey;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_YX37[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
	};

	/**
	 * Function ShooterGame.JsonObject.SetFloatField
	 */
	struct UJsonObject_SetFloatField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		float                                                      Value;                                                   // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceSingleKey;                                         // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_0H06[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0018(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
	};

	/**
	 * Function ShooterGame.JsonObject.SetFloatArrayField
	 */
	struct UJsonObject_SetFloatArrayField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<float>                                              Value;                                                   // 0x0010(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bForceSingleKey;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_JJX9[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
	};

	/**
	 * Function ShooterGame.JsonObject.SetDoubleField
	 */
	struct UJsonObject_SetDoubleField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		double                                                     Value;                                                   // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceSingleKey;                                         // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_JJ02[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0020(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
	};

	/**
	 * Function ShooterGame.JsonObject.SetDoubleArrayField
	 */
	struct UJsonObject_SetDoubleArrayField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<double>                                             Value;                                                   // 0x0010(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bForceSingleKey;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_XT1L[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
	};

	/**
	 * Function ShooterGame.JsonObject.SetByteField
	 */
	struct UJsonObject_SetByteField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		unsigned char                                              Value;                                                   // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceSingleKey;                                         // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_353G[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0018(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
	};

	/**
	 * Function ShooterGame.JsonObject.SetByteArrayField
	 */
	struct UJsonObject_SetByteArrayField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<unsigned char>                                      Value;                                                   // 0x0010(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bForceSingleKey;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_F1FL[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
	};

	/**
	 * Function ShooterGame.JsonObject.SetBoolField
	 */
	struct UJsonObject_SetBoolField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       Value;                                                   // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceSingleKey;                                         // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_RMZO[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0018(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
	};

	/**
	 * Function ShooterGame.JsonObject.SetBoolArrayField
	 */
	struct UJsonObject_SetBoolArrayField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<bool>                                               Value;                                                   // 0x0010(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bForceSingleKey;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_X9WQ[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
	};

	/**
	 * Function ShooterGame.JsonObject.JsonSerialize
	 */
	struct UJsonObject_JsonSerialize_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.JsonObject.JsonDeserialize
	 */
	struct UJsonObject_JsonDeserialize_Params
	{
	public:
		class FString                                              JsonData;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              OutErrorMessage;                                         // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		class UObject*                                             WorldContextObject;                                      // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UJsonObject*                                         ReturnValue;                                             // 0x0028(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.JsonObject.IsNullField
	 */
	struct UJsonObject_IsNullField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bForceSingleKey;                                         // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_1AI5[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0018(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
		bool                                                       ReturnValue;                                             // 0x0028(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.JsonObject.GetVectorField
	 */
	struct UJsonObject_GetVectorField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		struct FVector                                             OutValue;                                                // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceSingleKey;                                         // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_0P4N[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0020(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
		bool                                                       ReturnValue;                                             // 0x0030(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.JsonObject.GetVectorArrayField
	 */
	struct UJsonObject_GetVectorArrayField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<struct FVector>                                     OutValue;                                                // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bForceSingleKey;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_M2XU[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
		bool                                                       ReturnValue;                                             // 0x0038(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.JsonObject.GetStructField
	 */
	struct UJsonObject_GetStructField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class UProperty*                                           DestStruct;                                              // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bForceSingleKey;                                         // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_Y6PX[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0020(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
		bool                                                       ReturnValue;                                             // 0x0030(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.JsonObject.GetStringField
	 */
	struct UJsonObject_GetStringField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              OutValue;                                                // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bForceSingleKey;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_I8HD[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
		bool                                                       ReturnValue;                                             // 0x0038(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.JsonObject.GetStringArrayField
	 */
	struct UJsonObject_GetStringArrayField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<class FString>                                      OutValue;                                                // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bForceSingleKey;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_J0G1[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
		bool                                                       ReturnValue;                                             // 0x0038(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.JsonObject.GetRotatorField
	 */
	struct UJsonObject_GetRotatorField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		struct FRotator                                            OutValue;                                                // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceSingleKey;                                         // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_V1TO[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0020(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
		bool                                                       ReturnValue;                                             // 0x0030(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.JsonObject.GetRotatorArrayField
	 */
	struct UJsonObject_GetRotatorArrayField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<struct FRotator>                                    OutValue;                                                // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bForceSingleKey;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_BXF3[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
		bool                                                       ReturnValue;                                             // 0x0038(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.JsonObject.GetKeys
	 */
	struct UJsonObject_GetKeys_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<class FString>                                      OutValue;                                                // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bForceSingleKey;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_GZMO[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
		bool                                                       ReturnValue;                                             // 0x0038(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.JsonObject.GetJsonObjectField
	 */
	struct UJsonObject_GetJsonObjectField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class UJsonObject*                                         OutObject;                                               // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceSingleKey;                                         // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_0C44[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0020(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
		bool                                                       ReturnValue;                                             // 0x0030(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.JsonObject.GetJsonObjectArrayField
	 */
	struct UJsonObject_GetJsonObjectArrayField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<class UJsonObject*>                                 OutValue;                                                // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bForceSingleKey;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_XIQ1[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
		bool                                                       ReturnValue;                                             // 0x0038(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.JsonObject.GetIntField
	 */
	struct UJsonObject_GetIntField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    OutValue;                                                // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceSingleKey;                                         // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_7K53[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0018(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
		bool                                                       ReturnValue;                                             // 0x0028(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.JsonObject.GetIntArrayField
	 */
	struct UJsonObject_GetIntArrayField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<int32_t>                                            OutValue;                                                // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bForceSingleKey;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_Q979[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
		bool                                                       ReturnValue;                                             // 0x0038(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.JsonObject.GetFloatField
	 */
	struct UJsonObject_GetFloatField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		float                                                      OutValue;                                                // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceSingleKey;                                         // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_ZVI7[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0018(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
		bool                                                       ReturnValue;                                             // 0x0028(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.JsonObject.GetFloatArrayField
	 */
	struct UJsonObject_GetFloatArrayField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<float>                                              OutValue;                                                // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bForceSingleKey;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_CLGF[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
		bool                                                       ReturnValue;                                             // 0x0038(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.JsonObject.GetDoubleField
	 */
	struct UJsonObject_GetDoubleField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		double                                                     OutValue;                                                // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceSingleKey;                                         // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_NNCT[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0020(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
		bool                                                       ReturnValue;                                             // 0x0030(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.JsonObject.GetDoubleArrayField
	 */
	struct UJsonObject_GetDoubleArrayField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<double>                                             OutValue;                                                // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bForceSingleKey;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_8BJG[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
		bool                                                       ReturnValue;                                             // 0x0038(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.JsonObject.GetByteField
	 */
	struct UJsonObject_GetByteField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		unsigned char                                              OutValue;                                                // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceSingleKey;                                         // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_AL7V[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0018(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
		bool                                                       ReturnValue;                                             // 0x0028(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.JsonObject.GetByteArrayField
	 */
	struct UJsonObject_GetByteArrayField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<unsigned char>                                      OutValue;                                                // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bForceSingleKey;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_6WN7[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
		bool                                                       ReturnValue;                                             // 0x0038(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.JsonObject.GetBoolField
	 */
	struct UJsonObject_GetBoolField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       OutValue;                                                // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceSingleKey;                                         // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_2DPJ[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0018(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
		bool                                                       ReturnValue;                                             // 0x0028(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.JsonObject.GetBoolArrayField
	 */
	struct UJsonObject_GetBoolArrayField_Params
	{
	public:
		class FString                                              Key;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<bool>                                               OutValue;                                                // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bForceSingleKey;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_I7SX[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Delimiter;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, AdvancedDisplay)
		bool                                                       ReturnValue;                                             // 0x0038(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.JsonObject.CreateJsonObject
	 */
	struct UJsonObject_CreateJsonObject_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UJsonObject*                                         ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.JsonObject.CompareJsonValues
	 */
	struct UJsonObject_CompareJsonValues_Params
	{
	public:
		class UJsonObject*                                         A;                                                       // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UJsonObject*                                         B;                                                       // 0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.Leaderboard.GetLeaderboardRows
	 */
	struct ULeaderboard_GetLeaderboardRows_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              LeaderboardType;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                MissionTag;                                              // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FLeaderboardRow>                             LeaderboardRows;                                         // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0028(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.Leaderboard.FormatLeaderboardRows
	 */
	struct ULeaderboard_FormatLeaderboardRows_Params
	{
	public:
		class UClass*                                              LeaderboardType;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                MissionTag;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FLeaderboardRow>                             Rows;                                                    // 0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<struct FLeaderboardDisplayRow>                      DisplayRows;                                             // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor)
		class FString                                              PlayerNetIDString;                                       // 0x0030(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.Leaderboard.FormatLeaderboardRow
	 */
	struct ULeaderboard_FormatLeaderboardRow_Params
	{
	public:
		class UClass*                                              LeaderboardType;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                MissionTag;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLeaderboardRow                                     Row;                                                     // 0x0010(0x0048)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FLeaderboardDisplayRow                              DisplayRow;                                              // 0x0058(0x0020)  (Parm, OutParm)
		class FString                                              PlayerNetIDString;                                       // 0x0078(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.Leaderboard.CountLeaderboardRows
	 */
	struct ULeaderboard_CountLeaderboardRows_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              LeaderboardType;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                MissionTag;                                              // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.Leaderboard.BPGetLeaderboardRows
	 */
	struct ULeaderboard_BPGetLeaderboardRows_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterGameMode*                                    GameMode;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FLeaderboardRow>                             LeaderboardRows;                                         // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.Leaderboard.BPFormatLeaderboardRow
	 */
	struct ULeaderboard_BPFormatLeaderboardRow_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    index;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1MQL[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FLeaderboardRow                                     DatabaseRow;                                             // 0x0010(0x0048)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FLeaderboardDisplayRow                              ReturnValue;                                             // 0x0058(0x0020)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.Leaderboard.BPCountLeaderboardRows
	 */
	struct ULeaderboard_BPCountLeaderboardRows_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterGameMode*                                    GameMode;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.Leaderboard.BPAddLeaderboardRow
	 */
	struct ULeaderboard_BPAddLeaderboardRow_Params
	{
	public:
		class AShooterGameMode*                                    GameMode;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLeaderboardRow                                     NewRow;                                                  // 0x0008(0x0048)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0050(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.Leaderboard.AddLeaderboardRow
	 */
	struct ULeaderboard_AddLeaderboardRow_Params
	{
	public:
		class UWorld*                                              WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              LeaderboardType;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLeaderboardRow                                     NewRow;                                                  // 0x0010(0x0048)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0058(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionModuleBase.BPGetTargetingDesire
	 */
	struct UMissionModuleBase_BPGetTargetingDesire_Params
	{
	public:
		class APrimalDinoCharacter*                                MissionDino;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              forTarget;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ForTargetingDesireValue;                                 // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionModuleInterface.RunMissionModule
	 */
	struct UMissionModuleInterface_RunMissionModule_Params
	{
	public:
		class UClass*                                              ModuleClass;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UNewMissionModuleBase*                               ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionPrerequisite.IsSatisfied
	 */
	struct UMissionPrerequisite_IsSatisfied_Params
	{
	public:
		class APlayerController*                                   Controller;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   PlayerPawn;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalBuff_MissionData*                             PlayerMissionData;                                       // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              OutReason;                                               // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0028(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionRequirementEntryWidget.SetDisplayText
	 */
	struct UMissionRequirementEntryWidget_SetDisplayText_Params
	{
	public:
		class FString                                              Text;                                                    // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.MissionRequirementEntryWidget.SetCustomTag
	 */
	struct UMissionRequirementEntryWidget_SetCustomTag_Params
	{
	public:
		class FName                                                Tag;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionRequirementEntryWidget.Initialize
	 */
	struct UMissionRequirementEntryWidget_Initialize_Params
	{	};

	/**
	 * Function ShooterGame.MissionServerSidePoint.SetTriggerKey
	 */
	struct AMissionServerSidePoint_SetTriggerKey_Params
	{
	public:
		class FName                                                NewTriggerKey;                                           // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionSpline.SpawnerUpdate
	 */
	struct AMissionSpline_SpawnerUpdate_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionSpline.FindLocationAndDirectionClosestToWorldLocation
	 */
	struct AMissionSpline_FindLocationAndDirectionClosestToWorldLocation_Params
	{
	public:
		struct FVector                                             WorldLocation;                                           // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             OutLocation;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             OutDirection;                                            // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OutSplineKey;                                            // 0x0024(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0028(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TargetableInterface.ToUObject
	 */
	struct UTargetableInterface_ToUObject_Params
	{
	public:
		class UObject*                                             ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalTargetableActor.PlayHitEffectRadial
	 */
	struct APrimalTargetableActor_PlayHitEffectRadial_Params
	{
	public:
		float                                                      DamageTaken;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_HPB9[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRadialDamageEvent                                  DamageEvent;                                             // 0x0008(0x0050)  (Parm)
		class APawn*                                               PawnInstigator;                                          // 0x0058(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0060(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalTargetableActor.PlayHitEffectPoint
	 */
	struct APrimalTargetableActor_PlayHitEffectPoint_Params
	{
	public:
		float                                                      DamageTaken;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_3JG6[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FPointDamageEvent                                   DamageEvent;                                             // 0x0008(0x00B8)  (Parm)
		class APawn*                                               PawnInstigator;                                          // 0x00C0(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x00C8(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalTargetableActor.PlayHitEffectGeneric
	 */
	struct APrimalTargetableActor_PlayHitEffectGeneric_Params
	{
	public:
		float                                                      DamageTaken;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QIRQ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0008(0x0020)  (Parm)
		class APawn*                                               PawnInstigator;                                          // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalTargetableActor.PlayDyingRadial
	 */
	struct APrimalTargetableActor_PlayDyingRadial_Params
	{
	public:
		float                                                      KillingDamage;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CG9R[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRadialDamageEvent                                  DamageEvent;                                             // 0x0008(0x0050)  (Parm)
		class APawn*                                               InstigatingPawn;                                         // 0x0058(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0060(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalTargetableActor.PlayDyingPoint
	 */
	struct APrimalTargetableActor_PlayDyingPoint_Params
	{
	public:
		float                                                      KillingDamage;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_UVHB[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FPointDamageEvent                                   DamageEvent;                                             // 0x0008(0x00B8)  (Parm)
		class APawn*                                               InstigatingPawn;                                         // 0x00C0(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x00C8(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalTargetableActor.PlayDyingGeneric
	 */
	struct APrimalTargetableActor_PlayDyingGeneric_Params
	{
	public:
		float                                                      KillingDamage;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_HDF1[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0008(0x0020)  (Parm)
		class APawn*                                               InstigatingPawn;                                         // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalTargetableActor.OverrideDestroyedMeshTextures
	 */
	struct APrimalTargetableActor_OverrideDestroyedMeshTextures_Params
	{
	public:
		class UMeshComponent*                                      MeshComp;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalTargetableActor.OnRep_ReplicatedHealth
	 */
	struct APrimalTargetableActor_OnRep_ReplicatedHealth_Params
	{	};

	/**
	 * Function ShooterGame.PrimalTargetableActor.NetUpdatedHealth
	 */
	struct APrimalTargetableActor_NetUpdatedHealth_Params
	{
	public:
		int32_t                                                    NewHealth;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalTargetableActor.IsInvincible
	 */
	struct APrimalTargetableActor_IsInvincible_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalTargetableActor.HarvestingDepleted
	 */
	struct APrimalTargetableActor_HarvestingDepleted_Params
	{
	public:
		class UPrimalHarvestingComponent*                          fromComponent;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalTargetableActor.GetMaxHealth
	 */
	struct APrimalTargetableActor_GetMaxHealth_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalTargetableActor.GetDescriptiveName
	 */
	struct APrimalTargetableActor_GetDescriptiveName_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalTargetableActor.BPSupressImpactEffects
	 */
	struct APrimalTargetableActor_BPSupressImpactEffects_Params
	{
	public:
		float                                                      DamageTaken;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_WN74[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0008(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class APawn*                                               PawnInstigator;                                          // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsLocalPath;                                            // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7ZHG[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimitiveComponent*                                 HitComponent;                                            // 0x0040(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0048(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalTargetableActor.BPHitEffect
	 */
	struct APrimalTargetableActor_BPHitEffect_Params
	{
	public:
		float                                                      DamageTaken;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KF7G[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0008(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class APawn*                                               PawnInstigator;                                          // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsLocalPath;                                            // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_TR6Q[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimitiveComponent*                                 HitComponent;                                            // 0x0040(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FVector                                             DamageLoc;                                               // 0x0048(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            HitNormal;                                               // 0x0054(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalTargetableActor.BPDied
	 */
	struct APrimalTargetableActor_BPDied_Params
	{
	public:
		float                                                      KillingDamage;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5C2W[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0008(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AController*                                         Killer;                                                  // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalTargetableActor.BPAdjustDamage
	 */
	struct APrimalTargetableActor_BPAdjustDamage_Params
	{
	public:
		float                                                      IncomingDamage;                                          // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5ATZ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        TheDamageEvent;                                          // 0x0008(0x0020)  (Parm)
		class AController*                                         EventInstigator;                                         // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsPointDamage;                                          // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_VSMG[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          PointHitInfo;                                            // 0x0040(0x0088)  (Parm)
		float                                                      ReturnValue;                                             // 0x00C8(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.UpdateTribeGroupStructureRank
	 */
	struct APrimalStructure_UpdateTribeGroupStructureRank_Params
	{
	public:
		unsigned char                                              NewRank;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.UpdateStencilValuesWithStenilDepth
	 */
	struct APrimalStructure_UpdateStencilValuesWithStenilDepth_Params
	{
	public:
		EStencilAlliance                                           InAlliance;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.UpdateStencilValues
	 */
	struct APrimalStructure_UpdateStencilValues_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructure.UpdatedHealth
	 */
	struct APrimalStructure_UpdatedHealth_Params
	{
	public:
		bool                                                       bDoReplication;                                          // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.TickPlacingStructure
	 */
	struct APrimalStructure_TickPlacingStructure_Params
	{
	public:
		class APrimalStructurePlacer*                              PlacerActor;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.StartRepair
	 */
	struct APrimalStructure_StartRepair_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructure.SetVariant
	 */
	struct APrimalStructure_SetVariant_Params
	{
	public:
		int32_t                                                    VariantIndex;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceSet;                                               // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0005(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.SetupDynamicMeshMaterials
	 */
	struct APrimalStructure_SetupDynamicMeshMaterials_Params
	{
	public:
		class UMeshComponent*                                      MeshComp;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.SetStructureColorValue
	 */
	struct APrimalStructure_SetStructureColorValue_Params
	{
	public:
		int32_t                                                    ColorRegionIndex;                                        // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    SetVal;                                                  // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.SetStaticMobility
	 */
	struct APrimalStructure_SetStaticMobility_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructure.SetPreventSaving
	 */
	struct APrimalStructure_SetPreventSaving_Params
	{
	public:
		bool                                                       bPrevent;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.SetHarvestingActive
	 */
	struct APrimalStructure_SetHarvestingActive_Params
	{
	public:
		bool                                                       bActive;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOverrideBaseHealth;                                     // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_DW38[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      BaseHarvestHealthMult;                                   // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAssignToTribe;                                          // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZPO7[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    AssignedToTribeID;                                       // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.SetEnabledPrimarySnappedStructureParent
	 */
	struct APrimalStructure_SetEnabledPrimarySnappedStructureParent_Params
	{
	public:
		bool                                                       bEnabled;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.SetEnabled
	 */
	struct APrimalStructure_SetEnabled_Params
	{
	public:
		bool                                                       bEnabled;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.SetDynamicMobility
	 */
	struct APrimalStructure_SetDynamicMobility_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructure.SetContainerActive
	 */
	struct APrimalStructure_SetContainerActive_Params
	{
	public:
		bool                                                       bNewActive;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.SetBoundsScale
	 */
	struct APrimalStructure_SetBoundsScale_Params
	{
	public:
		float                                                      NewScale;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.SetBedEnabled
	 */
	struct APrimalStructure_SetBedEnabled_Params
	{
	public:
		bool                                                       bEnabled;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.RefreshStructurePlacement
	 */
	struct APrimalStructure_RefreshStructurePlacement_Params
	{
	public:
		class APlayerController*                                   PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtLocation;                                              // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            AtRotation;                                              // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            PlayerViewRotation;                                      // 0x0020(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CCVC[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APawn*                                               AttachToPawn;                                            // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                BoneName;                                                // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFlipped;                                                // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0041(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.PreviewCulledStructures
	 */
	struct APrimalStructure_PreviewCulledStructures_Params
	{
	public:
		TArray<class APrimalStructure*>                            InOutStructuresOnFloor;                                  // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class APrimalStructure*>                            ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalStructure.PrepareAsPlacementPreview
	 */
	struct APrimalStructure_PrepareAsPlacementPreview_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructure.PickupStructureAndDependingLinkedStructures
	 */
	struct APrimalStructure_PickupStructureAndDependingLinkedStructures_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.PickupStructure
	 */
	struct APrimalStructure_PickupStructure_Params
	{
	public:
		bool                                                       bIsQuickPickup;                                          // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_DMH5[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AShooterPlayerController*                            PC;                                                      // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.OverrideOwner
	 */
	struct APrimalStructure_OverrideOwner_Params
	{
	public:
		class AActor*                                              NewOwner;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ForceOnlyRelevantToOwner;                                // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.OnStructurePlacementRefreshed
	 */
	struct APrimalStructure_OnStructurePlacementRefreshed_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructure.OnRep_StructureColors
	 */
	struct APrimalStructure_OnRep_StructureColors_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructure.OnRep_CurrentVariant
	 */
	struct APrimalStructure_OnRep_CurrentVariant_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructure.NonPlayerFinalStructurePlacement
	 */
	struct APrimalStructure_NonPlayerFinalStructurePlacement_Params
	{
	public:
		int32_t                                                    PlacementTargetingTeam;                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    PlacementOwningPlayerID;                                 // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              PlacementOwningPlayerName;                               // 0x0008(0x0010)  (Parm, ZeroConstructor)
		class APrimalStructure*                                    ForcePrimaryParent;                                      // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.NetUpdateTeamAndOwnerName
	 */
	struct APrimalStructure_NetUpdateTeamAndOwnerName_Params
	{
	public:
		int32_t                                                    NewTeam;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_E885[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              NewOwnerName;                                            // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.NetUpdateOriginalOwnerNameAndID
	 */
	struct APrimalStructure_NetUpdateOriginalOwnerNameAndID_Params
	{
	public:
		int32_t                                                    NewOriginalOwnerID;                                      // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_YP5L[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              NewOriginalOwnerName;                                    // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.NetSpawnCoreStructureDeathActor
	 */
	struct APrimalStructure_NetSpawnCoreStructureDeathActor_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructure.NetSetIgnoreDestructionEffects
	 */
	struct APrimalStructure_NetSetIgnoreDestructionEffects_Params
	{
	public:
		bool                                                       bNewIgnoreDestructionEffects;                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.NetResetClientReceivedStructuersPlacedOnFloors
	 */
	struct APrimalStructure_NetResetClientReceivedStructuersPlacedOnFloors_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructure.NetDoSpawnEffects
	 */
	struct APrimalStructure_NetDoSpawnEffects_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructure.MultiSetPickupAllowedBeforeNetworkTime
	 */
	struct APrimalStructure_MultiSetPickupAllowedBeforeNetworkTime_Params
	{
	public:
		double                                                     NewTime;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.MultiRefreshVariantSettings
	 */
	struct APrimalStructure_MultiRefreshVariantSettings_Params
	{
	public:
		int32_t                                                    NewVariantIndex;                                         // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.MultiAddStructuresPlacedOnFloor
	 */
	struct APrimalStructure_MultiAddStructuresPlacedOnFloor_Params
	{
	public:
		class APrimalStructure*                                    Structure;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.LinkStructure
	 */
	struct APrimalStructure_LinkStructure_Params
	{
	public:
		class APrimalStructure*                                    NewLinkedStructure;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.IsValidSnapPointTo
	 */
	struct APrimalStructure_IsValidSnapPointTo_Params
	{
	public:
		class APrimalStructure*                                    childStructure;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MySnapPointToIndex;                                      // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.IsValidSnapPointFrom
	 */
	struct APrimalStructure_IsValidSnapPointFrom_Params
	{
	public:
		class APrimalStructure*                                    ParentStructure;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MySnapPointFromIndex;                                    // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.IsValidForSnappingFrom
	 */
	struct APrimalStructure_IsValidForSnappingFrom_Params
	{
	public:
		class APrimalStructure*                                    OtherStructure;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.IsRepairAllowed
	 */
	struct APrimalStructure_IsRepairAllowed_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.IsPointObstructedByWorldGeometry
	 */
	struct APrimalStructure_IsPointObstructedByWorldGeometry_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ThePoint;                                                // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreTerrain;                                          // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOnlyCheckTerrain;                                       // 0x0015(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreFoliage;                                          // 0x0016(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_BH5Z[0x1];                                   // 0x0017(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      OBSTRUCTION_CHECK_DIST;                                  // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x001C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.IsPointNearSupplyCrateSpawn
	 */
	struct APrimalStructure_IsPointNearSupplyCrateSpawn_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtPoint;                                                 // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.IsPinLocked
	 */
	struct APrimalStructure_IsPinLocked_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.IsOnlyLinkedToFastDecayStructures
	 */
	struct APrimalStructure_IsOnlyLinkedToFastDecayStructures_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.IsLinkedToWaterOrPowerSource
	 */
	struct APrimalStructure_IsLinkedToWaterOrPowerSource_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.IsAllowedToDemolish
	 */
	struct APrimalStructure_IsAllowedToDemolish_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.IsAllowedToBuild
	 */
	struct APrimalStructure_IsAllowedToBuild_Params
	{
	public:
		class APlayerController*                                   PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtLocation;                                              // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            AtRotation;                                              // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FPlacementData                                      OutPlacementData;                                        // 0x0020(0x0060)  (Parm, OutParm, ReferenceParm)
		bool                                                       bDontAdjustForMaxRange;                                  // 0x0080(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_4TN0[0x3];                                   // 0x0081(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRotator                                            PlayerViewRotation;                                      // 0x0084(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFinalPlacement;                                         // 0x0090(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_FO7W[0x3];                                   // 0x0091(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x0094(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.IsActiveEventStructure
	 */
	struct APrimalStructure_IsActiveEventStructure_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.GetStructuresInRange
	 */
	struct APrimalStructure_GetStructuresInRange_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtLocation;                                              // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      WithinRange;                                             // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              StructureClass;                                          // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class APrimalStructure*>                            StructuresOut;                                           // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bUseInternalOctree;                                      // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_HLC7[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalStructure*                                    IgnoreStructure;                                         // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.GetStructureColorValue
	 */
	struct APrimalStructure_GetStructureColorValue_Params
	{
	public:
		int32_t                                                    ColorRegionIndex;                                        // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.GetStructureColor
	 */
	struct APrimalStructure_GetStructureColor_Params
	{
	public:
		int32_t                                                    ColorRegionIndex;                                        // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        ReturnValue;                                             // 0x0004(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.GetSnapPointName
	 */
	struct APrimalStructure_GetSnapPointName_Params
	{
	public:
		int32_t                                                    SnapPointIndex;                                          // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ReturnValue;                                             // 0x0004(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.GetPinCode
	 */
	struct APrimalStructure_GetPinCode_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.GetNumStructuresInRangeStructureTypeFlag
	 */
	struct APrimalStructure_GetNumStructuresInRangeStructureTypeFlag_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtLocation;                                              // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    TypeFlag;                                                // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      WithinRange;                                             // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCheckBPCountStructureInRange;                           // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bUseInternalOctree;                                      // 0x001D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_FO69[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalStructure*                                    IgnoreStructure;                                         // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCheckWithAltCollisionChannel;                           // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KKAK[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x002C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.GetNearbyStructuresOfClass
	 */
	struct APrimalStructure_GetNearbyStructuresOfClass_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              StructureClass;                                          // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      Range;                                                   // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class APrimalStructure*>                            Structures;                                              // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.GetDefaultVariant
	 */
	struct APrimalStructure_GetDefaultVariant_Params
	{
	public:
		struct FStructureVariant                                   ReturnValue;                                             // 0x0000(0x0070)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalStructure.GetDayCycleManager
	 */
	struct APrimalStructure_GetDayCycleManager_Params
	{
	public:
		class ADayCycleManager*                                    ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.GetClosestStructureToPoint
	 */
	struct APrimalStructure_GetClosestStructureToPoint_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtPoint;                                                 // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OverlapRadius;                                           // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalStructure*                                    ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.GetBedFilterClass
	 */
	struct APrimalStructure_GetBedFilterClass_Params
	{
	public:
		class UClass*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.GetAdditionalComponentForDyePreview
	 */
	struct APrimalStructure_GetAdditionalComponentForDyePreview_Params
	{
	public:
		class UStaticMeshComponent*                                ReturnValue;                                             // 0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.ForceReplicateLinkedStructures
	 */
	struct APrimalStructure_ForceReplicateLinkedStructures_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructure.FinalStructurePlacement
	 */
	struct APrimalStructure_FinalStructurePlacement_Params
	{
	public:
		class APlayerController*                                   PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtLocation;                                              // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            AtRotation;                                              // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            PlayerViewRotation;                                      // 0x0020(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5AI4[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APawn*                                               AttachToPawn;                                            // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                BoneName;                                                // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFlipped;                                                // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0041(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.DisableStructurePickup
	 */
	struct APrimalStructure_DisableStructurePickup_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructure.DestroyStructuresPlacedOnFloor
	 */
	struct APrimalStructure_DestroyStructuresPlacedOnFloor_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructure.Demolish
	 */
	struct APrimalStructure_Demolish_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.DelayedDisableSnapParent
	 */
	struct APrimalStructure_DelayedDisableSnapParent_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructure.CreateDynamicMaterials
	 */
	struct APrimalStructure_CreateDynamicMaterials_Params
	{
	public:
		class UMeshComponent*                                      ForceCreateForComponent;                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.ClientUpdateLinkedStructures
	 */
	struct APrimalStructure_ClientUpdateLinkedStructures_Params
	{
	public:
		TArray<uint32_t>                                           NewLinkedStructures;                                     // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.ClearStructureLinks
	 */
	struct APrimalStructure_ClearStructureLinks_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.ClearCustomColors
	 */
	struct APrimalStructure_ClearCustomColors_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructure.CanPickupStructureFromRecentPlacement
	 */
	struct APrimalStructure_CanPickupStructureFromRecentPlacement_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.CanBeStoredByExosuit
	 */
	struct APrimalStructure_CanBeStoredByExosuit_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.CanAttachToExosuit
	 */
	struct APrimalStructure_CanAttachToExosuit_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.CallDrawHUD
	 */
	struct APrimalStructure_CallDrawHUD_Params
	{
	public:
		class AShooterHUD*                                         HUD;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.CallDrawFloatingHUD
	 */
	struct APrimalStructure_CallDrawFloatingHUD_Params
	{
	public:
		class AShooterHUD*                                         HUD;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPUseCountStructureInRange
	 */
	struct APrimalStructure_BPUseCountStructureInRange_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPUpdatedHealth
	 */
	struct APrimalStructure_BPUpdatedHealth_Params
	{
	public:
		bool                                                       bDoReplication;                                          // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPUnstasis
	 */
	struct APrimalStructure_BPUnstasis_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructure.BPTriggerStasisEvent
	 */
	struct APrimalStructure_BPTriggerStasisEvent_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructure.BPTreatAsFoundationForSnappedStructure
	 */
	struct APrimalStructure_BPTreatAsFoundationForSnappedStructure_Params
	{
	public:
		class APrimalStructure*                                    OtherStructure;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FPlacementData                                      WithPlacementData;                                       // 0x0008(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0068(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPStructurePreGetMultiUseEntries
	 */
	struct APrimalStructure_BPStructurePreGetMultiUseEntries_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPRefreshedStructureColors
	 */
	struct APrimalStructure_BPRefreshedStructureColors_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructure.BPPreventUsingAsFloorForStructure
	 */
	struct APrimalStructure_BPPreventUsingAsFloorForStructure_Params
	{
	public:
		struct FPlacementData                                      theOutPlacementData;                                     // 0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm)
		class APrimalStructure*                                    StructureToPlaceOnMe;                                    // 0x0060(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0068(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPPreventStasis
	 */
	struct APrimalStructure_BPPreventStasis_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPPreventSpawnForPlayer
	 */
	struct APrimalStructure_BPPreventSpawnForPlayer_Params
	{
	public:
		class AShooterPlayerController*                            PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCheckCooldownTime;                                      // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_UNIW[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalStructure*                                    FromStructure;                                           // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPPreventPlacingStructureOntoMe
	 */
	struct APrimalStructure_BPPreventPlacingStructureOntoMe_Params
	{
	public:
		class APlayerController*                                   PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalStructure*                                    ForNewStructure;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FHitResult                                          ForHitResult;                                            // 0x0010(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0098(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPPreventPlacingOnFloorStructure
	 */
	struct APrimalStructure_BPPreventPlacingOnFloorStructure_Params
	{
	public:
		struct FPlacementData                                      theOutPlacementData;                                     // 0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm)
		class APrimalStructure*                                    FloorStructure;                                          // 0x0060(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0068(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPPreventPlacementOnPawn
	 */
	struct APrimalStructure_BPPreventPlacementOnPawn_Params
	{
	public:
		class APlayerController*                                   PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalCharacter*                                    forCharacter;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ForBone;                                                 // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPPreventCharacterBasing
	 */
	struct APrimalStructure_BPPreventCharacterBasing_Params
	{
	public:
		class AActor*                                              OtherActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 BasedOnComponent;                                        // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPPostSetStructureCollisionChannels
	 */
	struct APrimalStructure_BPPostSetStructureCollisionChannels_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructure.BPPostLoadedFromSaveGame
	 */
	struct APrimalStructure_BPPostLoadedFromSaveGame_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructure.BPPlayDying
	 */
	struct APrimalStructure_BPPlayDying_Params
	{
	public:
		float                                                      KillingDamage;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_6QQO[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0008(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class APawn*                                               InstigatingPawn;                                         // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPPlacedStructure
	 */
	struct APrimalStructure_BPPlacedStructure_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPOverrideTargetLocation
	 */
	struct APrimalStructure_BPOverrideTargetLocation_Params
	{
	public:
		struct FVector                                             attackPos;                                               // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPOverrideSnappedToTransform
	 */
	struct APrimalStructure_BPOverrideSnappedToTransform_Params
	{
	public:
		class APrimalStructure*                                    childStructure;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ChildSnapFromIndex;                                      // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ChildSnapFromName;                                       // 0x000C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             UnsnappedPlacementPos;                                   // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            UnsnappedPlacementRot;                                   // 0x0020(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             SnappedPlacementPos;                                     // 0x002C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            SnappedPlacementRot;                                     // 0x0038(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    SnapToIndex;                                             // 0x0044(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                SnapToName;                                              // 0x0048(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             OutLocation;                                             // 0x0050(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            OutRotation;                                             // 0x005C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    bForceInvalidateSnap;                                    // 0x0068(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x006C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPOverrideSnappedFromTransform
	 */
	struct APrimalStructure_BPOverrideSnappedFromTransform_Params
	{
	public:
		class APrimalStructure*                                    ParentStructure;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ParentSnapFromIndex;                                     // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ParentSnapFromName;                                      // 0x000C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             UnsnappedPlacementPos;                                   // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            UnsnappedPlacementRot;                                   // 0x0020(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             SnappedPlacementPos;                                     // 0x002C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            SnappedPlacementRot;                                     // 0x0038(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    SnapToIndex;                                             // 0x0044(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                SnapToName;                                              // 0x0048(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             OutLocation;                                             // 0x0050(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            OutRotation;                                             // 0x005C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    bForceInvalidateSnap;                                    // 0x0068(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x006C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPOverridePlacementRotation
	 */
	struct APrimalStructure_BPOverridePlacementRotation_Params
	{
	public:
		struct FVector                                             ViewPos;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ViewRot;                                                 // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPOverrideDemolish
	 */
	struct APrimalStructure_BPOverrideDemolish_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPOverrideCantBuildReasonString
	 */
	struct APrimalStructure_BPOverrideCantBuildReasonString_Params
	{
	public:
		int32_t                                                    CantBuildReason;                                         // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_WJTN[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPOverrideAllowStructureAccess
	 */
	struct APrimalStructure_BPOverrideAllowStructureAccess_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsAccessAllowed;                                        // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForInventoryOnly;                                       // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000A(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPOnVariantSwitch
	 */
	struct APrimalStructure_BPOnVariantSwitch_Params
	{
	public:
		int32_t                                                    NewVariantIndex;                                         // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPOnStructurePickup
	 */
	struct APrimalStructure_BPOnStructurePickup_Params
	{
	public:
		class APlayerController*                                   PlayerController;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ItemType;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         NewlyPickedUpItem;                                       // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsQuickPickup;                                          // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPOnLinkedStructureDestroyed
	 */
	struct APrimalStructure_BPOnLinkedStructureDestroyed_Params
	{
	public:
		class APrimalStructure*                                    DestroyedStructure;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPOnDemolish
	 */
	struct APrimalStructure_BPOnDemolish_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPNotifyAmmoBoxReloadedStructure
	 */
	struct APrimalStructure_BPNotifyAmmoBoxReloadedStructure_Params
	{
	public:
		class APrimalStructure*                                    ReloadedStructure;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPNetRefreshStructureColors
	 */
	struct APrimalStructure_BPNetRefreshStructureColors_Params
	{
	public:
		bool                                                       bUseColors;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPIsAllowedToBuildEx
	 */
	struct APrimalStructure_BPIsAllowedToBuildEx_Params
	{
	public:
		struct FPlacementData                                      OutPlacementData;                                        // 0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm)
		int32_t                                                    CurrentAllowedReason;                                    // 0x0060(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1MJ3[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APlayerController*                                   PC;                                                      // 0x0068(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFinalPlacement;                                         // 0x0070(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bChoosingRotation;                                       // 0x0071(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_59F9[0x2];                                   // 0x0072(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x0074(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPIsAllowedToBuild
	 */
	struct APrimalStructure_BPIsAllowedToBuild_Params
	{
	public:
		struct FPlacementData                                      OutPlacementData;                                        // 0x0000(0x0060)  (ConstParm, Parm, OutParm, ReferenceParm)
		int32_t                                                    CurrentAllowedReason;                                    // 0x0060(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0064(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPImpactEffect
	 */
	struct APrimalStructure_BPImpactEffect_Params
	{
	public:
		struct FHitResult                                          HitRes;                                                  // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector                                             ShootDirection;                                          // 0x0088(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0094(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPHandleStructureEnabled
	 */
	struct APrimalStructure_BPHandleStructureEnabled_Params
	{
	public:
		bool                                                       bEnabled;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPHandleBedFastTravel
	 */
	struct APrimalStructure_BPHandleBedFastTravel_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalStructure*                                    ToBed;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPGetStructureID
	 */
	struct APrimalStructure_BPGetStructureID_Params
	{
	public:
		class APrimalStructure*                                    PrimalStructure;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPGetSnapPoints
	 */
	struct APrimalStructure_BPGetSnapPoints_Params
	{
	public:
		TArray<struct FPrimalStructureSnapPoint>                   ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPGetInfoFromConsumedItemForPlacedStructure
	 */
	struct APrimalStructure_BPGetInfoFromConsumedItemForPlacedStructure_Params
	{
	public:
		class UPrimalItem*                                         ItemToConsumed;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPGetFromID
	 */
	struct APrimalStructure_BPGetFromID_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    TheStructureID;                                          // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_FQBB[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalStructure*                                    ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPGetAmmoBoxReloadPercent
	 */
	struct APrimalStructure_BPGetAmmoBoxReloadPercent_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPGetAllLinkedStructures
	 */
	struct APrimalStructure_BPGetAllLinkedStructures_Params
	{
	public:
		TArray<class APrimalStructure*>                            OutLinkedStructures;                                     // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPGetAggroDinoOnDamageSettings
	 */
	struct APrimalStructure_BPGetAggroDinoOnDamageSettings_Params
	{
	public:
		TArray<class FName>                                        AggroDinoClassesCustomTags;                              // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
		float                                                      AggroDinoClassesRange;                                   // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPForceConsideredEnemyFoundation
	 */
	struct APrimalStructure_BPForceConsideredEnemyFoundation_Params
	{
	public:
		class APlayerController*                                   PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalStructure*                                    ForNewStructure;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             TestAtLocation;                                          // 0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x001C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPDefaultProcessEditText
	 */
	struct APrimalStructure_BPDefaultProcessEditText_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              TextToUse;                                               // 0x0008(0x0010)  (Parm, ZeroConstructor)
		bool                                                       checkedBox;                                              // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPCheckItemRequiementsToBuild
	 */
	struct APrimalStructure_BPCheckItemRequiementsToBuild_Params
	{
	public:
		class UPrimalItem*                                         ItemToConsumed;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPBeginPreview
	 */
	struct APrimalStructure_BPBeginPreview_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructure.BPApplyCustomDurabilityOnPickup
	 */
	struct APrimalStructure_BPApplyCustomDurabilityOnPickup_Params
	{
	public:
		class UPrimalItem*                                         PickedUp;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPAllowSwitchToVariant
	 */
	struct APrimalStructure_BPAllowSwitchToVariant_Params
	{
	public:
		int32_t                                                    VariantIndex;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPAllowSnapRotationForStructure
	 */
	struct APrimalStructure_BPAllowSnapRotationForStructure_Params
	{
	public:
		int32_t                                                    ThisSnapPointIndex;                                      // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ThisSnapPointName;                                       // 0x0004(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_DPSE[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalStructure*                                    OtherStructure;                                          // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    OtherStructureSnapPointIndex;                            // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                OtherStructureSnapPointName;                             // 0x001C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0024(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPAllowSnappingWith
	 */
	struct APrimalStructure_BPAllowSnappingWith_Params
	{
	public:
		class APrimalStructure*                                    OtherStructure;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APlayerController*                                   ForPC;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BPAllowPickupGiveItem
	 */
	struct APrimalStructure_BPAllowPickupGiveItem_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BP_OnPaintingComponentInitialized
	 */
	struct APrimalStructure_BP_OnPaintingComponentInitialized_Params
	{
	public:
		class UStructurePaintingComponent*                         PaintingComp;                                            // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BlueprintDrawPreviewHUD
	 */
	struct APrimalStructure_BlueprintDrawPreviewHUD_Params
	{
	public:
		class AShooterHUD*                                         HUD;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CenterX;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CenterY;                                                 // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BlueprintDrawHUD
	 */
	struct APrimalStructure_BlueprintDrawHUD_Params
	{
	public:
		class AShooterHUD*                                         HUD;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CenterX;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CenterY;                                                 // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.BlueprintAnimNotifyCustomEvent
	 */
	struct APrimalStructure_BlueprintAnimNotifyCustomEvent_Params
	{
	public:
		class FName                                                CustomEventName;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USkeletalMeshComponent*                              MeshComp;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UAnimSequenceBase*                                   Animation;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UAnimNotify*                                         AnimNotifyObject;                                        // 0x0018(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.ApplyPrimalItemSettingsToStructure
	 */
	struct APrimalStructure_ApplyPrimalItemSettingsToStructure_Params
	{
	public:
		class UMeshComponent*                                      meshToColorize;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         AssociatedPrimalItem;                                    // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.AllowStructureAccess
	 */
	struct APrimalStructure_AllowStructureAccess_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructure.AllowSnappingWith
	 */
	struct APrimalStructure_AllowSnappingWith_Params
	{
	public:
		class APrimalStructure*                                    OtherStructure;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APlayerController*                                   ForPC;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.VerifyPinCode
	 */
	struct APrimalStructureItemContainer_VerifyPinCode_Params
	{
	public:
		int32_t                                                    pinCode;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.UpdateTribeGroupInventoryRank
	 */
	struct APrimalStructureItemContainer_UpdateTribeGroupInventoryRank_Params
	{
	public:
		unsigned char                                              NewRank;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.UpdateSolarPower
	 */
	struct APrimalStructureItemContainer_UpdateSolarPower_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.UpdateContainerActiveHealthDecrease
	 */
	struct APrimalStructureItemContainer_UpdateContainerActiveHealthDecrease_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.TryActivation
	 */
	struct APrimalStructureItemContainer_TryActivation_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.SetPoweredOverrideCounter
	 */
	struct APrimalStructureItemContainer_SetPoweredOverrideCounter_Params
	{
	public:
		int32_t                                                    NewPoweredOverrideCounter;                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.RefreshPowerJunctionLink
	 */
	struct APrimalStructureItemContainer_RefreshPowerJunctionLink_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.RefreshInventoryItemCounts
	 */
	struct APrimalStructureItemContainer_RefreshInventoryItemCounts_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.PowerGeneratorBuiltNearbyPoweredStructure
	 */
	struct APrimalStructureItemContainer_PowerGeneratorBuiltNearbyPoweredStructure_Params
	{
	public:
		class APrimalStructureItemContainer*                       PoweredStructure;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.OnContainerRenamed
	 */
	struct APrimalStructureItemContainer_OnContainerRenamed_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.NetUpdateLocation
	 */
	struct APrimalStructureItemContainer_NetUpdateLocation_Params
	{
	public:
		struct FVector                                             NewLocation;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.NetUpdateBoxName
	 */
	struct APrimalStructureItemContainer_NetUpdateBoxName_Params
	{
	public:
		class FString                                              NewName;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.NetSetContainerActive
	 */
	struct APrimalStructureItemContainer_NetSetContainerActive_Params
	{
	public:
		bool                                                       bSetActive;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_DIYH[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              NetReplicatedFuelItemClass;                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int16_t                                                    NetReplicatedFuelItemColorIndex;                         // 0x0010(0x0002)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.MovePowerJunctionLink
	 */
	struct APrimalStructureItemContainer_MovePowerJunctionLink_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.IsValidForDinoFeedingContainer
	 */
	struct APrimalStructureItemContainer_IsValidForDinoFeedingContainer_Params
	{
	public:
		class APrimalDinoCharacter*                                ForDino;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.IsValidatedPinCodePlayerController
	 */
	struct APrimalStructureItemContainer_IsValidatedPinCodePlayerController_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.IsPlayerControllerInPinCodeValidationList
	 */
	struct APrimalStructureItemContainer_IsPlayerControllerInPinCodeValidationList_Params
	{
	public:
		class APlayerController*                                   PlayerController;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.HasSamePinCode
	 */
	struct APrimalStructureItemContainer_HasSamePinCode_Params
	{
	public:
		class APrimalStructureItemContainer*                       otherContainer;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.GetDeathCacheCharacterID
	 */
	struct APrimalStructureItemContainer_GetDeathCacheCharacterID_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.EnableActive
	 */
	struct APrimalStructureItemContainer_EnableActive_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.CanBeActivated
	 */
	struct APrimalStructureItemContainer_CanBeActivated_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.BPSetPlayerConstructor
	 */
	struct APrimalStructureItemContainer_BPSetPlayerConstructor_Params
	{
	public:
		class APlayerController*                                   PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.BPRename
	 */
	struct APrimalStructureItemContainer_BPRename_Params
	{
	public:
		class FString                                              NewName;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.BPPreGetMultiUseEntries
	 */
	struct APrimalStructureItemContainer_BPPreGetMultiUseEntries_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.BPOverrideDescriptiveName
	 */
	struct APrimalStructureItemContainer_BPOverrideDescriptiveName_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.BPOnContainerActiveHealthDecrease
	 */
	struct APrimalStructureItemContainer_BPOnContainerActiveHealthDecrease_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.BPNotifyRemoteViewerChange
	 */
	struct APrimalStructureItemContainer_BPNotifyRemoteViewerChange_Params
	{
	public:
		bool                                                       bOpened;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.BPNotifyPowerChanged
	 */
	struct APrimalStructureItemContainer_BPNotifyPowerChanged_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.BPNotifyInventoryItemChange
	 */
	struct APrimalStructureItemContainer_BPNotifyInventoryItemChange_Params
	{
	public:
		bool                                                       bIsItemAdd;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_AION[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimalItem*                                         theItem;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEquipItem;                                              // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.BPIsValidWaterSourceForPipe
	 */
	struct APrimalStructureItemContainer_BPIsValidWaterSourceForPipe_Params
	{
	public:
		class APrimalStructureWaterPipe*                           ForWaterPipe;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.BPGetQuantityOfItemWithoutCheckingInventory
	 */
	struct APrimalStructureItemContainer_BPGetQuantityOfItemWithoutCheckingInventory_Params
	{
	public:
		class UClass*                                              ItemToCheckFor;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.BPGetFuelConsumptionMultiplier
	 */
	struct APrimalStructureItemContainer_BPGetFuelConsumptionMultiplier_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.BPContainerDeactivated
	 */
	struct APrimalStructureItemContainer_BPContainerDeactivated_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.BPContainerActivated
	 */
	struct APrimalStructureItemContainer_BPContainerActivated_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.BPCanBeActivatedByPlayer
	 */
	struct APrimalStructureItemContainer_BPCanBeActivatedByPlayer_Params
	{
	public:
		class AShooterPlayerController*                            PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.BPCanBeActivated
	 */
	struct APrimalStructureItemContainer_BPCanBeActivated_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.BPApplyPinCode
	 */
	struct APrimalStructureItemContainer_BPApplyPinCode_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    appledPinCode;                                           // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsSetting;                                              // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_PUCR[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    TheCustomIndex;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.AllowToggleActivation
	 */
	struct APrimalStructureItemContainer_AllowToggleActivation_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.AdjustNetDestructionTime
	 */
	struct APrimalStructureItemContainer_AdjustNetDestructionTime_Params
	{
	public:
		float                                                      Delta;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer.AddToValidatedByPinCodePlayerControllers
	 */
	struct APrimalStructureItemContainer_AddToValidatedByPinCodePlayerControllers_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionDispatcher.StartMission
	 */
	struct AMissionDispatcher_StartMission_Params
	{
	public:
		class UClass*                                              MissionTypeClass;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   StartingCharacter;                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              OutClientFailureReason;                                  // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		class AMissionType*                                        ReturnValue;                                             // 0x0020(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionDispatcher.OnRunningMissionDeactivated
	 */
	struct AMissionDispatcher_OnRunningMissionDeactivated_Params
	{
	public:
		class AMissionType*                                        Mission;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionDispatcher.MultiSetParticleSystemActive
	 */
	struct AMissionDispatcher_MultiSetParticleSystemActive_Params
	{
	public:
		bool                                                       bIsActive;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionDispatcher.MultiDeactivateMissionActors
	 */
	struct AMissionDispatcher_MultiDeactivateMissionActors_Params
	{	};

	/**
	 * Function ShooterGame.MissionDispatcher.MultiActivateMissionActors
	 */
	struct AMissionDispatcher_MultiActivateMissionActors_Params
	{	};

	/**
	 * Function ShooterGame.MissionDispatcher.IsValidDispatcherForMissionType
	 */
	struct AMissionDispatcher_IsValidDispatcherForMissionType_Params
	{
	public:
		class UClass*                                              MissionTypeClass;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   StartingCharacter;                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionDispatcher.GetFallbackSeed
	 */
	struct AMissionDispatcher_GetFallbackSeed_Params
	{
	public:
		class UClass*                                              ForMission;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRemoveSeed;                                             // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JA3E[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionDispatcher.GenerateFallbackSeeds
	 */
	struct AMissionDispatcher_GenerateFallbackSeeds_Params
	{	};

	/**
	 * Function ShooterGame.MissionDispatcher.ClearFallbackSeeds
	 */
	struct AMissionDispatcher_ClearFallbackSeeds_Params
	{
	public:
		class UClass*                                              OptionalForMission;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionDispatcher.BPOverrideMultiUseMissionList
	 */
	struct AMissionDispatcher_BPOverrideMultiUseMissionList_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   StartingCharacter;                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class UClass*>                                      ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.MissionDispatcher.BPOnRunningMissionDeactivated
	 */
	struct AMissionDispatcher_BPOnRunningMissionDeactivated_Params
	{
	public:
		class AMissionType*                                        Mission;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionDispatcher.BPOnMissionStarted
	 */
	struct AMissionDispatcher_BPOnMissionStarted_Params
	{
	public:
		class AMissionType*                                        NewMission;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   StartingCharacter;                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionDispatcher.BPOnMissionFailToStart
	 */
	struct AMissionDispatcher_BPOnMissionFailToStart_Params
	{
	public:
		class UClass*                                              MissionTypeClass;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   StartingCharacter;                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionDispatcher.BPGetMissionStartLocation
	 */
	struct AMissionDispatcher_BPGetMissionStartLocation_Params
	{
	public:
		class UClass*                                              MissionTypeClass;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   StartingCharacter;                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionDispatcher.BPDeactivateMissionActors
	 */
	struct AMissionDispatcher_BPDeactivateMissionActors_Params
	{	};

	/**
	 * Function ShooterGame.MissionDispatcher.BPCanSpawnMission
	 */
	struct AMissionDispatcher_BPCanSpawnMission_Params
	{
	public:
		class UClass*                                              MissionTypeClass;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   StartingCharacter;                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionDispatcher.BPActivateMissionActors
	 */
	struct AMissionDispatcher_BPActivateMissionActors_Params
	{	};

	/**
	 * Function ShooterGame.MissionDispatcher.AddFallbackSeed
	 */
	struct AMissionDispatcher_AddFallbackSeed_Params
	{
	public:
		class UClass*                                              ForMission;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Seed;                                                    // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MaxNumberOfFallbackSeeds;                                // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.UpdateWorldIndicators
	 */
	struct AMissionType_UpdateWorldIndicators_Params
	{
	public:
		bool                                                       bForceNetUpdate;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.UpdateRequirements
	 */
	struct AMissionType_UpdateRequirements_Params
	{
	public:
		bool                                                       bForceNetUpdate;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.UpdateMissionPrepArea
	 */
	struct AMissionType_UpdateMissionPrepArea_Params
	{
	public:
		struct FVector                                             PrepAreaWorldLocation;                                   // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      MinUpdateFrequencyInSeconds;                             // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.TryCompletePhase
	 */
	struct AMissionType_TryCompletePhase_Params
	{
	public:
		bool                                                       bForceChange;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.TryChangeMissionPhase
	 */
	struct AMissionType_TryChangeMissionPhase_Params
	{
	public:
		class FName                                                NewPhase;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceChange;                                            // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.TotalMaxHealth_Players
	 */
	struct AMissionType_TotalMaxHealth_Players_Params
	{
	public:
		TArray<class AShooterCharacter*>                           PlayerArray;                                             // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.TotalMaxHealth_Dinos
	 */
	struct AMissionType_TotalMaxHealth_Dinos_Params
	{
	public:
		TArray<class APrimalDinoCharacter*>                        DinoArray;                                               // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.TotalMaxHealth_Characters
	 */
	struct AMissionType_TotalMaxHealth_Characters_Params
	{
	public:
		TArray<class APrimalCharacter*>                            CharacterArray;                                          // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.TotalCurrentHealth_Players
	 */
	struct AMissionType_TotalCurrentHealth_Players_Params
	{
	public:
		TArray<class AShooterCharacter*>                           PlayerArray;                                             // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.TotalCurrentHealth_Dinos
	 */
	struct AMissionType_TotalCurrentHealth_Dinos_Params
	{
	public:
		TArray<class APrimalDinoCharacter*>                        DinoArray;                                               // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.TotalCurrentHealth_Characters
	 */
	struct AMissionType_TotalCurrentHealth_Characters_Params
	{
	public:
		TArray<class APrimalCharacter*>                            CharacterArray;                                          // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.TeleportCharacterForMission
	 */
	struct AMissionType_TeleportCharacterForMission_Params
	{
	public:
		class APrimalCharacter*                                    Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NewLocation;                                             // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOverrideRotation;                                       // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CI0U[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRotator                                            RotationOverride;                                        // 0x0018(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceSetReturnLocation;                                 // 0x0024(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bWasMountedDino;                                         // 0x0025(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSkipDinoFailChecks;                                     // 0x0026(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0027(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SuspendMission
	 */
	struct AMissionType_SuspendMission_Params
	{	};

	/**
	 * Function ShooterGame.MissionType.StopMissionMusic
	 */
	struct AMissionType_StopMissionMusic_Params
	{	};

	/**
	 * Function ShooterGame.MissionType.StaticOnReplicatedMissionDataUpdated
	 */
	struct AMissionType_StaticOnReplicatedMissionDataUpdated_Params
	{
	public:
		class APrimalBuff_MissionData*                             missionData;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.StaticOnMissionDataInitialized
	 */
	struct AMissionType_StaticOnMissionDataInitialized_Params
	{
	public:
		class APrimalBuff_MissionData*                             missionData;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.StaticGetTaggedString
	 */
	struct AMissionType_StaticGetTaggedString_Params
	{
	public:
		class UClass*                                              MissionType;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Tag;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              OutString;                                               // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SpawnMissionWeapon
	 */
	struct AMissionType_SpawnMissionWeapon_Params
	{
	public:
		class AShooterCharacter*                                   ForPlayer;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              WeaponItem;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ItemQuality;                                             // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       AutoEquip;                                               // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1Q2U[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AShooterWeapon*                                      ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SpawnMissionStructure
	 */
	struct AMissionType_SpawnMissionStructure_Params
	{
	public:
		class UClass*                                              StructureType;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             SpawnLocation;                                           // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            SpawnRotation;                                           // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            OwnerPlayerController;                                   // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    TargetingTeamOverride;                                   // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_41JB[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalStructure*                                    ReturnValue;                                             // 0x0030(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SpawnMissionItem
	 */
	struct AMissionType_SpawnMissionItem_Params
	{
	public:
		class UClass*                                              AnItemClass;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ItemQuality;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceNoBlueprint;                                       // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_3T9Y[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    quantityOverride;                                        // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceBlueprint;                                         // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_RL5H[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              TheDroppedTemplateOverride;                              // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             WorldLocation;                                           // 0x0020(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            WorldRotation;                                           // 0x002C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UStaticMesh*                                         DroppedMeshOverride;                                     // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             DroppedScaleOverride;                                    // 0x0040(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1KTL[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UMaterialInterface*                                  DroppedMaterialOverride;                                 // 0x0050(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DroppedLifeSpanOverride;                                 // 0x0058(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_98SP[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class ADroppedItemMission*                                 ReturnValue;                                             // 0x0060(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SpawnMissionDinoGroupExtended
	 */
	struct AMissionType_SpawnMissionDinoGroupExtended_Params
	{
	public:
		int32_t                                                    NumDinos;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SpawnRadius;                                             // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             SpawnLocation;                                           // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            SpawnRotation;                                           // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FDinoSetup>                                  DinoSetups;                                              // 0x0020(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		ESpawnPattern                                              Pattern;                                                 // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZP2D[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AShooterPlayerController*                            OwnerPlayerController;                                   // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DebugDrawDuration;                                       // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bApplyRotationToSpawnOffset;                             // 0x0044(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_GRTO[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UBehaviorTree*                                       OverrideMissionBehaviorTree;                             // 0x0048(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRandomizeDinos;                                         // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDontWander;                                             // 0x0051(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTargetingIgnoredByWildDinos;                            // 0x0052(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTargetingIgnoreWildDinos;                               // 0x0053(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      AIRangeMultiplier;                                       // 0x0054(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ColorSet;                                                // 0x0058(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDoLosCheck;                                             // 0x0060(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDoOverlapCheck;                                         // 0x0061(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QM57[0x6];                                   // 0x0062(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class APrimalDinoCharacter*>                        ReturnValue;                                             // 0x0068(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.MissionType.SpawnMissionDinoGroup
	 */
	struct AMissionType_SpawnMissionDinoGroup_Params
	{
	public:
		int32_t                                                    NumDinos;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SpawnRadius;                                             // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             SpawnLocation;                                           // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            SpawnRotation;                                           // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FDinoSetup                                          DinoSetup;                                               // 0x0020(0x00F0)  (ConstParm, Parm, OutParm, ReferenceParm)
		ESpawnPattern                                              Pattern;                                                 // 0x0110(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_THYM[0x7];                                   // 0x0111(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AShooterPlayerController*                            OwnerPlayerController;                                   // 0x0118(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DebugDrawDuration;                                       // 0x0120(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bApplyRotationToSpawnOffset;                             // 0x0124(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_A4Y3[0x3];                                   // 0x0125(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UBehaviorTree*                                       OverrideMissionBehaviorTree;                             // 0x0128(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDontWander;                                             // 0x0130(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTargetingIgnoredByWildDinos;                            // 0x0131(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTargetingIgnoreWildDinos;                               // 0x0132(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_YZ01[0x1];                                   // 0x0133(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      AIRangeMultiplier;                                       // 0x0134(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class APrimalDinoCharacter*>                        ReturnValue;                                             // 0x0138(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.MissionType.SpawnMissionDino
	 */
	struct AMissionType_SpawnMissionDino_Params
	{
	public:
		struct FVector                                             SpawnLocation;                                           // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            SpawnRotation;                                           // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FDinoSetup                                          DinoSetup;                                               // 0x0018(0x00F0)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AShooterPlayerController*                            OwnerPlayerController;                                   // 0x0108(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DebugDrawDuration;                                       // 0x0110(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bApplyRotationToSpawnOffset;                             // 0x0114(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_22T0[0x3];                                   // 0x0115(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UBehaviorTree*                                       OverrideMissionBehaviorTree;                             // 0x0118(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDontWander;                                             // 0x0120(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTargetingIgnoredByWildDinos;                            // 0x0121(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTargetingIgnoreWildDinos;                               // 0x0122(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JAK8[0x1];                                   // 0x0123(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      AIRangeMultiplier;                                       // 0x0124(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ColorSet;                                                // 0x0128(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDoLosCheck;                                             // 0x0130(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDoOverlapCheck;                                         // 0x0131(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_AOYQ[0x6];                                   // 0x0132(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalDinoCharacter*                                ReturnValue;                                             // 0x0138(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SpawnMission
	 */
	struct AMissionType_SpawnMission_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              MissionType;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   forCharacter;                                            // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x0018(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_HCA3[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              FailureReason;                                           // 0x0028(0x0010)  (Parm, OutParm, ZeroConstructor)
		class AActor*                                              MissionDispatcherActor;                                  // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceSpawn;                                             // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_8U4M[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AMissionType*                                        ReturnValue;                                             // 0x0048(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SpawnEmitterForPlayers
	 */
	struct AMissionType_SpawnEmitterForPlayers_Params
	{
	public:
		TArray<class AShooterCharacter*>                           Players;                                                 // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UClass*                                              EmitterType;                                             // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QM7G[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          EmitterTransform;                                        // 0x0020(0x0030)  (Parm, IsPlainOldData, NoDestructor)
		float                                                      EmitterLifespan;                                         // 0x0050(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SortMissionWorldIndicatorArrayByDistance
	 */
	struct AMissionType_SortMissionWorldIndicatorArrayByDistance_Params
	{
	public:
		struct FVector                                             WorldLocation;                                           // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_IDUP[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalCharacter*                                    forCharacter;                                            // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReverseSort;                                            // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_RZZ6[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FMissionWorldIndicator>                      InOutWorldIndicators;                                    // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.MissionType.SetupMissionPrepArea
	 */
	struct AMissionType_SetupMissionPrepArea_Params
	{
	public:
		struct FVector                                             PrepAreaWorldLocation;                                   // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            PrepAreaEmitterRotation;                                 // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             PrepAreaEmitterScale;                                    // 0x0018(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SetSpecificSplineKeyTarget
	 */
	struct AMissionType_SetSpecificSplineKeyTarget_Params
	{
	public:
		class APrimalDinoCharacter*                                ForDino;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    index;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SetReverseTeleportReturnLocation
	 */
	struct AMissionType_SetReverseTeleportReturnLocation_Params
	{
	public:
		class APrimalCharacter*                                    Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NewLocation;                                             // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            NewRotation;                                             // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SetPlayerPrepAreaState
	 */
	struct AMissionType_SetPlayerPrepAreaState_Params
	{
	public:
		class AShooterCharacter*                                   PlayerPawn;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bInsidePrepArea;                                         // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SetPlayerParticleSystemIndicator
	 */
	struct AMissionType_SetPlayerParticleSystemIndicator_Params
	{
	public:
		class AShooterCharacter*                                   PlayerPawn;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UParticleSystem*                                     IndicatorParticles;                                      // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      RemoveAfterDuration;                                     // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceNetUpdate;                                         // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SetPhaseStartedDelegate
	 */
	struct AMissionType_SetPhaseStartedDelegate_Params
	{
	public:
		class FName                                                PhaseName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FScriptDelegate                                      Delegate;                                                // 0x0008(0x0010)  (Parm, ZeroConstructor, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SetPhaseEndedDelegate
	 */
	struct AMissionType_SetPhaseEndedDelegate_Params
	{
	public:
		class FName                                                PhaseName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FScriptDelegate                                      Delegate;                                                // 0x0008(0x0010)  (Parm, ZeroConstructor, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SetPhaseCompleted
	 */
	struct AMissionType_SetPhaseCompleted_Params
	{
	public:
		int32_t                                                    PhaseIndex;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCompleted;                                              // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SetMissionTimeRemaining
	 */
	struct AMissionType_SetMissionTimeRemaining_Params
	{
	public:
		float                                                      SecondsRemaining;                                        // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SetMissionMusic
	 */
	struct AMissionType_SetMissionMusic_Params
	{
	public:
		class USoundBase*                                          LoopingMusicTrack;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SetMissionDeactivationTimer
	 */
	struct AMissionType_SetMissionDeactivationTimer_Params
	{
	public:
		float                                                      NumSeconds;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SetMissionCompletedStatus
	 */
	struct AMissionType_SetMissionCompletedStatus_Params
	{
	public:
		class AShooterCharacter*                                   PlayerCharacter;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCompleted;                                              // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bUseOverrideVersion;                                     // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KXPK[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    OverrideVersion;                                         // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bUseOverrideCompleteUtcTime;                             // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_X50V[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		double                                                     CompleteUtcTime;                                         // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SetDinoAITargetActor
	 */
	struct AMissionType_SetDinoAITargetActor_Params
	{
	public:
		class APrimalDinoCharacter*                                Dino;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              NewTarget;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      AcceptableRadius;                                        // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SetDinoAINavigationTargetActor
	 */
	struct AMissionType_SetDinoAINavigationTargetActor_Params
	{
	public:
		class APrimalDinoCharacter*                                Dino;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              NewTarget;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SetDinoAIForcedTargetActor
	 */
	struct AMissionType_SetDinoAIForcedTargetActor_Params
	{
	public:
		class APrimalDinoCharacter*                                Dino;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              NewTarget;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.ServerRequestToggleWeapon
	 */
	struct AMissionType_ServerRequestToggleWeapon_Params
	{
	public:
		class AShooterCharacter*                                   Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SendNotificationToPlayer
	 */
	struct AMissionType_SendNotificationToPlayer_Params
	{
	public:
		class AShooterCharacter*                                   Player;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                StringTagName;                                           // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        MessageColor;                                            // 0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class UTexture2D*                                          MessageIcon;                                             // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DisplayTime;                                             // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DisplayScale;                                            // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsSingleton;                                            // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_00C1[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class USoundBase*                                          SoundToPlay;                                             // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SendNotificationToAllPlayers
	 */
	struct AMissionType_SendNotificationToAllPlayers_Params
	{
	public:
		class FName                                                StringTagName;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        MessageColor;                                            // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class UTexture2D*                                          MessageIcon;                                             // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DisplayTime;                                             // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DisplayScale;                                            // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsSingleton;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_OPTG[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class USoundBase*                                          SoundToPlay;                                             // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SendMissionAlertToPlayer
	 */
	struct AMissionType_SendMissionAlertToPlayer_Params
	{
	public:
		class AShooterCharacter*                                   Player;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EMissionAlertType                                          AlertType;                                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_9367[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              AlertTitle;                                              // 0x0010(0x0010)  (Parm, ZeroConstructor)
		TArray<struct FMissionAlertEntry>                          AlertEntries;                                            // 0x0020(0x0010)  (ConstParm, Parm, ZeroConstructor)
		float                                                      DisplayTime;                                             // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XH0P[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class USoundBase*                                          SoundToPlay;                                             // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       FlyoutFromTop;                                           // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTreatStringsAsFnameTags;                                // 0x0041(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.SendMissionAlertToAllPlayers
	 */
	struct AMissionType_SendMissionAlertToAllPlayers_Params
	{
	public:
		EMissionAlertType                                          AlertType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_X7E2[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              AlertTitle;                                              // 0x0008(0x0010)  (Parm, ZeroConstructor)
		TArray<struct FMissionAlertEntry>                          AlertEntries;                                            // 0x0018(0x0010)  (ConstParm, Parm, ZeroConstructor)
		float                                                      DisplayTime;                                             // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_H0AM[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class USoundBase*                                          SoundToPlay;                                             // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       FlyoutFromTop;                                           // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTreatStringsAsFnameTags;                                // 0x0039(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.ReverseTeleportCharacter
	 */
	struct AMissionType_ReverseTeleportCharacter_Params
	{
	public:
		class APrimalCharacter*                                    Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.ResetSplinePoints
	 */
	struct AMissionType_ResetSplinePoints_Params
	{
	public:
		class APrimalDinoCharacter*                                ForDino;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.ResetMissionTimer
	 */
	struct AMissionType_ResetMissionTimer_Params
	{	};

	/**
	 * Function ShooterGame.MissionType.RemovePlayerUsableItem
	 */
	struct AMissionType_RemovePlayerUsableItem_Params
	{
	public:
		class AShooterCharacter*                                   Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.RemovePlayerFromMission
	 */
	struct AMissionType_RemovePlayerFromMission_Params
	{
	public:
		class AShooterCharacter*                                   PlayerCharacter;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCompletedSuccessfully;                                  // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRemoveSilently;                                         // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.RemoveItemsFromInventory_Balanced
	 */
	struct AMissionType_RemoveItemsFromInventory_Balanced_Params
	{
	public:
		bool                                                       bIsBalanced;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CYAT[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class APrimalCharacter*>                            FromCharacters;                                          // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class UClass*                                              ItemClass;                                               // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    TotalAmountToRemove;                                     // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bMoveToMissionInventory;                                 // 0x0024(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOnlyRemoveIfEnough;                                     // 0x0025(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bExactClassMatch;                                        // 0x0026(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreHotbar;                                           // 0x0027(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0028(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.RemoveItemsFromInventory
	 */
	struct AMissionType_RemoveItemsFromInventory_Params
	{
	public:
		class UPrimalInventoryComponent*                           inventory;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UClass*                                              ItemClass;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    AmountToRemove;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bMoveToMissionInventory;                                 // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bExactClassMatch;                                        // 0x0015(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreHotbar;                                           // 0x0016(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_3QM2[0x1];                                   // 0x0017(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.ReAddPlayerFromReconnect
	 */
	struct AMissionType_ReAddPlayerFromReconnect_Params
	{
	public:
		class AShooterCharacter*                                   Player;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.ReactivateSuspendedMission
	 */
	struct AMissionType_ReactivateSuspendedMission_Params
	{	};

	/**
	 * Function ShooterGame.MissionType.RacePlayerData_SetTargetCheckpoint
	 */
	struct AMissionType_RacePlayerData_SetTargetCheckpoint_Params
	{
	public:
		TArray<struct FRacePlayerData>                             InOutPlayerData;                                         // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    PlayerIndex;                                             // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NewTargetCheckpoint;                                     // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.RacePlayerData_SetCheckpointData
	 */
	struct AMissionType_RacePlayerData_SetCheckpointData_Params
	{
	public:
		TArray<struct FRacePlayerData>                             InOutPlayerData;                                         // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    PlayerIndex;                                             // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    CheckpointIndex;                                         // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCheckpointReached;                                      // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_J1C6[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      CheckpointTime;                                          // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.RacePlayerData_NumCheckpoints
	 */
	struct AMissionType_RacePlayerData_NumCheckpoints_Params
	{
	public:
		TArray<struct FRacePlayerData>                             PlayerData;                                              // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.RacePlayerData_Initialize
	 */
	struct AMissionType_RacePlayerData_Initialize_Params
	{
	public:
		TArray<struct FRacePlayerData>                             InOutPlayerData;                                         // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class AShooterPlayerController*>                    Controllers;                                             // 0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    NumCheckpoints;                                          // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.RacePlayerData_IndexOfController
	 */
	struct AMissionType_RacePlayerData_IndexOfController_Params
	{
	public:
		TArray<struct FRacePlayerData>                             PlayerData;                                              // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class AShooterPlayerController*                            Controller;                                              // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.RacePlayerData_GetTargetCheckpoint
	 */
	struct AMissionType_RacePlayerData_GetTargetCheckpoint_Params
	{
	public:
		TArray<struct FRacePlayerData>                             PlayerData;                                              // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    PlayerIndex;                                             // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.RacePlayerData_GetPlayerRanking
	 */
	struct AMissionType_RacePlayerData_GetPlayerRanking_Params
	{
	public:
		TArray<struct FRacePlayerData>                             PlayerData;                                              // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FVector                                             MissionStartLocation;                                    // 0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_6V72[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AMissionTrigger*>                             Checkpoints;                                             // 0x0020(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    PlayerIndex;                                             // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0034(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.RacePlayerData_GetCheckpointData
	 */
	struct AMissionType_RacePlayerData_GetCheckpointData_Params
	{
	public:
		TArray<struct FRacePlayerData>                             PlayerData;                                              // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    PlayerIndex;                                             // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    CheckpointIndex;                                         // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCheckpointReached;                                      // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_RRZ5[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      CheckpointTime;                                          // 0x001C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.RacePlayerData_GetAllPlayerRankings
	 */
	struct AMissionType_RacePlayerData_GetAllPlayerRankings_Params
	{
	public:
		TArray<struct FRacePlayerData>                             PlayerData;                                              // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<int32_t>                                            OutRankings;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		struct FVector                                             MissionStartLocation;                                    // 0x0020(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_WKII[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AMissionTrigger*>                             Checkpoints;                                             // 0x0030(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.MissionType.RacePlayerData_FixupControllers
	 */
	struct AMissionType_RacePlayerData_FixupControllers_Params
	{
	public:
		TArray<struct FRacePlayerData>                             InOutPlayerData;                                         // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.RaceClosestPlayerToCheckpoint
	 */
	struct AMissionType_RaceClosestPlayerToCheckpoint_Params
	{
	public:
		TArray<struct FRacePlayerData>                             PlayerData;                                              // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FVector                                             MissionStartLocation;                                    // 0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CJI9[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AMissionTrigger*>                             Checkpoints;                                             // 0x0020(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    A;                                                       // 0x0030(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		int32_t                                                    B;                                                       // 0x0034(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0038(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.PostLoadWorldFixup
	 */
	struct AMissionType_PostLoadWorldFixup_Params
	{	};

	/**
	 * Function ShooterGame.MissionType.PlayMissionMusic
	 */
	struct AMissionType_PlayMissionMusic_Params
	{
	public:
		class USoundBase*                                          LoopingMusicToPlay;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.OpenLeaderboardsForPlayer
	 */
	struct AMissionType_OpenLeaderboardsForPlayer_Params
	{
	public:
		class AShooterCharacter*                                   Player;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FLeaderboardRow>                             Rows;                                                    // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.MissionType.OpenLeaderboardsForAllPlayers
	 */
	struct AMissionType_OpenLeaderboardsForAllPlayers_Params
	{
	public:
		TArray<struct FLeaderboardRow>                             Rows;                                                    // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.MissionType.OnUpdateRequirements
	 */
	struct AMissionType_OnUpdateRequirements_Params
	{
	public:
		class FName                                                PhaseName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FMissionPhaseRequirement>                    NewRequirements;                                         // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.MissionType.OnThrottledTick
	 */
	struct AMissionType_OnThrottledTick_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.OnThrottledServerTick
	 */
	struct AMissionType_OnThrottledServerTick_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.OnThrottledClientTick
	 */
	struct AMissionType_OnThrottledClientTick_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.OnRep_MissionState
	 */
	struct AMissionType_OnRep_MissionState_Params
	{	};

	/**
	 * Function ShooterGame.MissionType.OnRep_MissionPhaseIndex
	 */
	struct AMissionType_OnRep_MissionPhaseIndex_Params
	{	};

	/**
	 * Function ShooterGame.MissionType.OnPlayerSpawned
	 */
	struct AMissionType_OnPlayerSpawned_Params
	{
	public:
		class AShooterCharacter*                                   PlayerPawn;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.OnMissionTriggerEndOverlap
	 */
	struct AMissionType_OnMissionTriggerEndOverlap_Params
	{
	public:
		class AMissionTrigger*                                     Trigger;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                TriggerKey;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              OtherActor;                                              // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0018(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    OtherBodyIndex;                                          // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.OnMissionTriggerBeginOverlap
	 */
	struct AMissionType_OnMissionTriggerBeginOverlap_Params
	{
	public:
		class AMissionTrigger*                                     Trigger;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                TriggerKey;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              OtherActor;                                              // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0018(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    OtherBodyIndex;                                          // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.OnMissionPhaseStarted
	 */
	struct AMissionType_OnMissionPhaseStarted_Params
	{
	public:
		class FName                                                OldPhase;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                NewPhase;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.OnMissionPhaseEvent__DelegateSignature
	 */
	struct AMissionType_OnMissionPhaseEvent__DelegateSignature_Params
	{
	public:
		class AMissionType*                                        Mission;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                OldPhaseName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                NewPhaseName;                                            // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.OnMissionPhaseEnded
	 */
	struct AMissionType_OnMissionPhaseEnded_Params
	{
	public:
		class FName                                                OldPhase;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                NewPhase;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.OnMissionEvent__DelegateSignature
	 */
	struct AMissionType_OnMissionEvent__DelegateSignature_Params
	{
	public:
		class AMissionType*                                        Mission;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.OnInventoryItemRemoved
	 */
	struct AMissionType_OnInventoryItemRemoved_Params
	{
	public:
		class UPrimalInventoryComponent*                           inventory;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         Item;                                                    // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    AmountRemoved;                                           // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.OnInventoryItemAdded
	 */
	struct AMissionType_OnInventoryItemAdded_Params
	{
	public:
		class UPrimalInventoryComponent*                           inventory;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         Item;                                                    // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    AmountAdded;                                             // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEquippedItem;                                           // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.NumLivingPlayers
	 */
	struct AMissionType_NumLivingPlayers_Params
	{
	public:
		TArray<class AShooterCharacter*>                           PlayerArray;                                             // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.NumLivingDinos
	 */
	struct AMissionType_NumLivingDinos_Params
	{
	public:
		TArray<class APrimalDinoCharacter*>                        DinoArray;                                               // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.NumLivingCharacters
	 */
	struct AMissionType_NumLivingCharacters_Params
	{
	public:
		TArray<class APrimalCharacter*>                            CharacterArray;                                          // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.NonStaticGetPhaseRequirementDescription
	 */
	struct AMissionType_NonStaticGetPhaseRequirementDescription_Params
	{
	public:
		struct FMissionPhaseRequirement                            Req;                                                     // 0x0000(0x0090)  (ConstParm, Parm, OutParm, ReferenceParm)
		class FString                                              ReturnValue;                                             // 0x0090(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.MissionType.MultiResetMissionTimer
	 */
	struct AMissionType_MultiResetMissionTimer_Params
	{
	public:
		double                                                     NewMissionStartNetworkTime;                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.MultiMissionStateChange
	 */
	struct AMissionType_MultiMissionStateChange_Params
	{
	public:
		EMissionState                                              NewState;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.MultiMissionPhaseStarted
	 */
	struct AMissionType_MultiMissionPhaseStarted_Params
	{
	public:
		class FName                                                OldPhaseName;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                NewPhaseName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.MultiMissionPhaseEnded
	 */
	struct AMissionType_MultiMissionPhaseEnded_Params
	{
	public:
		class FName                                                OldPhaseName;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                NewPhaseName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.MissionPhaseHandler__DelegateSignature
	 */
	struct AMissionType_MissionPhaseHandler__DelegateSignature_Params
	{
	public:
		class FName                                                OldPhaseName;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                NewPhaseName;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.MissionFindPathAsync
	 */
	struct AMissionType_MissionFindPathAsync_Params
	{
	public:
		class UObject*                                             WorldContext;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             PathStart;                                               // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             PathEnd;                                                 // 0x0014(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class AActor*                                              PathfindingContext;                                      // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              FilterClass;                                             // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0030(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.MissionAI_SetReversPathForDino
	 */
	struct AMissionType_MissionAI_SetReversPathForDino_Params
	{
	public:
		class APrimalDinoCharacter*                                ForDino;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ShouldReverseAtEnd;                                      // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.MissionAI_SetForcePathSplineForDino
	 */
	struct AMissionType_MissionAI_SetForcePathSplineForDino_Params
	{
	public:
		class APrimalDinoCharacter*                                ForDino;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USplineComponent*                                    Path;                                                    // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.MissionAI_IsAtPathDestination
	 */
	struct AMissionType_MissionAI_IsAtPathDestination_Params
	{
	public:
		class APrimalDinoCharacter*                                ForDino;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxDistance;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             TargetOffset;                                            // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          TraceChannel;                                            // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_A9P5[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      DebugDrawDuration;                                       // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.MissionAI_GetTarget
	 */
	struct AMissionType_MissionAI_GetTarget_Params
	{
	public:
		class APrimalDinoCharacter*                                ForDino;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.MissionAI_GetMissionFromController
	 */
	struct AMissionType_MissionAI_GetMissionFromController_Params
	{
	public:
		class AActor*                                              ControllerActor;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EBoolExecResult                                            OutResult;                                               // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XSAH[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AMissionType*                                        Mission;                                                 // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalDinoCharacter*                                DinoPawn;                                                // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalDinoAIController*                             DinoController;                                          // 0x0020(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.MissionAI_FindPathToTarget
	 */
	struct AMissionType_MissionAI_FindPathToTarget_Params
	{
	public:
		class APrimalDinoCharacter*                                ForDino;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NextTargetLocation;                                      // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.ItemToAlertEntry
	 */
	struct AMissionType_ItemToAlertEntry_Params
	{
	public:
		class UPrimalItem*                                         Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FMissionAlertEntry                                  ReturnValue;                                             // 0x0008(0x0030)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.MissionType.IsPlayerOnMission
	 */
	struct AMissionType_IsPlayerOnMission_Params
	{
	public:
		class AShooterCharacter*                                   PlayerCharacter;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.IsPlayerEligibleForMission
	 */
	struct AMissionType_IsPlayerEligibleForMission_Params
	{
	public:
		class UClass*                                              MissionType;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APlayerController*                                   Controller;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              Reason;                                                  // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.IsPhaseNameValid
	 */
	struct AMissionType_IsPhaseNameValid_Params
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.IsPhaseComplete
	 */
	struct AMissionType_IsPhaseComplete_Params
	{
	public:
		class FName                                                PhaseName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.IsMissionComplete
	 */
	struct AMissionType_IsMissionComplete_Params
	{
	public:
		class AShooterCharacter*                                   forCharacter;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            ForController;                                           // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.IsMetaDataMissionType
	 */
	struct AMissionType_IsMetaDataMissionType_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              MissionType;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.IsFriendlyWithAnyTargetingTeam
	 */
	struct AMissionType_IsFriendlyWithAnyTargetingTeam_Params
	{
	public:
		class APrimalCharacter*                                    Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<int32_t>                                            TargetingTeams;                                          // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.IsFriendlyWithAllTargetingTeams
	 */
	struct AMissionType_IsFriendlyWithAllTargetingTeams_Params
	{
	public:
		class APrimalCharacter*                                    Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<int32_t>                                            TargetingTeams;                                          // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.IsActive
	 */
	struct AMissionType_IsActive_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.HasPlayerCompletedMissionByTag
	 */
	struct AMissionType_HasPlayerCompletedMissionByTag_Params
	{
	public:
		class FName                                                MissionTagName;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   Character;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    VersionCompleted;                                        // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_IHBI[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		double                                                     UtcTimeCompleted;                                        // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.HasPlayerCompletedMission
	 */
	struct AMissionType_HasPlayerCompletedMission_Params
	{
	public:
		class UClass*                                              MissionType;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   Character;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    VersionCompleted;                                        // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5GJQ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		double                                                     UtcTimeCompleted;                                        // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GivePlayerXP
	 */
	struct AMissionType_GivePlayerXP_Params
	{
	public:
		class AShooterCharacter*                                   Player;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      XPAmount;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GivePlayerLoot
	 */
	struct AMissionType_GivePlayerLoot_Params
	{
	public:
		class AShooterCharacter*                                   Player;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FLootTableEntry>                             LootTable;                                               // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class UPrimalItem*>                                 ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.MissionType.GetTargetingTeamsOfAllPlayersOnMission
	 */
	struct AMissionType_GetTargetingTeamsOfAllPlayersOnMission_Params
	{
	public:
		TArray<int32_t>                                            OutTargetingTeams;                                       // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetTaggedString
	 */
	struct AMissionType_GetTaggedString_Params
	{
	public:
		class FName                                                Tag;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              OutString;                                               // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetReverseTeleportReturnLocation
	 */
	struct AMissionType_GetReverseTeleportReturnLocation_Params
	{
	public:
		class APrimalCharacter*                                    Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReverseTeleportLocation;                                 // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReverseTeleportRotation;                                 // 0x0014(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetRemainingTime
	 */
	struct AMissionType_GetRemainingTime_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetRealMissionTagFromMetaData
	 */
	struct AMissionType_GetRealMissionTagFromMetaData_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              MissionType;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetPlayerUsableItems
	 */
	struct AMissionType_GetPlayerUsableItems_Params
	{
	public:
		class AShooterCharacter*                                   Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FItemNetID>                                  OutItemIDs;                                              // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetPhaseRequirements
	 */
	struct AMissionType_GetPhaseRequirements_Params
	{
	public:
		class FName                                                PhaseName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FMissionPhaseRequirement>                    Requirements;                                            // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		class AShooterCharacter*                                   ForPlayer;                                               // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetPhaseRequirementProgress
	 */
	struct AMissionType_GetPhaseRequirementProgress_Params
	{
	public:
		struct FMissionPhaseRequirement                            Req;                                                     // 0x0000(0x0090)  (ConstParm, Parm, OutParm, ReferenceParm)
		float                                                      ReturnValue;                                             // 0x0090(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetPhaseRequirementDescription
	 */
	struct AMissionType_GetPhaseRequirementDescription_Params
	{
	public:
		class UClass*                                              ForMission;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FMissionPhaseRequirement                            Req;                                                     // 0x0008(0x0090)  (ConstParm, Parm, OutParm, ReferenceParm)
		class FString                                              ReturnValue;                                             // 0x0098(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.MissionType.GetPhaseDisplayText
	 */
	struct AMissionType_GetPhaseDisplayText_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.MissionType.GetPerPlayerWorldIndicators
	 */
	struct AMissionType_GetPerPlayerWorldIndicators_Params
	{
	public:
		class AShooterPlayerController*                            Controller;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   Character;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FMissionWorldIndicator>                      WorldIndicators;                                         // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetNearbyStructures
	 */
	struct AMissionType_GetNearbyStructures_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class APrimalStructure*>                            OutStructures;                                           // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		class UClass*                                              StructureType;                                           // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bExactTypeMatch;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_D0D8[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             Location;                                                // 0x0024(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetNearbyPlayersEligibleForMission
	 */
	struct AMissionType_GetNearbyPlayersEligibleForMission_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AShooterCharacter*>                           OutCharacters;                                           // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		class UClass*                                              MissionType;                                             // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x0020(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSortByDistanceToLocation;                               // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRespectMissionMaxPlayerCount;                           // 0x0031(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_4VL9[0x2];                                   // 0x0032(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    InTargetingTeam;                                         // 0x0034(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ETargetingTeamBehavior                                     TargetingTeamBehavior;                                   // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetNearbyPlayersAndTamedDinos
	 */
	struct AMissionType_GetNearbyPlayersAndTamedDinos_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class APrimalCharacter*>                            OutCharacters;                                           // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		struct FVector                                             Location;                                                // 0x0018(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    OnlyFriendlyWithTargetingTeam;                           // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetNearbyPlayers
	 */
	struct AMissionType_GetNearbyPlayers_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AShooterCharacter*>                           OutCharacters;                                           // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		struct FVector                                             Location;                                                // 0x0018(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    OnlyFriendlyWithTargetingTeam;                           // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetNearbyMissionDispatchers
	 */
	struct AMissionType_GetNearbyMissionDispatchers_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ForMissionType;                                          // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   ForPlayer;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             SearchOrigin;                                            // 0x0018(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QSUQ[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AMissionDispatcher*>                          OutDispatchers;                                          // 0x0028(0x0010)  (Parm, OutParm, ZeroConstructor)
		float                                                      Radius;                                                  // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSortByDistance;                                         // 0x003C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRequireMissionInDisaptcher;                             // 0x003D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetNearbyDinos
	 */
	struct AMissionType_GetNearbyDinos_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class APrimalDinoCharacter*>                        OutCharacters;                                           // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		struct FVector                                             Location;                                                // 0x0018(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIncludeTamed;                                           // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIncludeWild;                                            // 0x0029(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_L4ZW[0x2];                                   // 0x002A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    OnlyFriendlyWithTargetingTeam;                           // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetNearbyCharacters
	 */
	struct AMissionType_GetNearbyCharacters_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class APrimalCharacter*>                            OutCharacters;                                           // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		struct FVector                                             Location;                                                // 0x0018(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetMissionWorldIndicatorWorldLocation
	 */
	struct AMissionType_GetMissionWorldIndicatorWorldLocation_Params
	{
	public:
		struct FMissionWorldIndicator                              WorldIndicator;                                          // 0x0000(0x00A8)  (ConstParm, Parm, OutParm, ReferenceParm)
		class APrimalCharacter*                                    forCharacter;                                            // 0x00A8(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x00B0(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetMissionWorldIndicatorIcon
	 */
	struct AMissionType_GetMissionWorldIndicatorIcon_Params
	{
	public:
		struct FMissionWorldIndicator                              WorldIndicator;                                          // 0x0000(0x00A8)  (ConstParm, Parm, OutParm, ReferenceParm)
		class UTexture2D*                                          ReturnValue;                                             // 0x00A8(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetMissionWorldIndicatorDescription
	 */
	struct AMissionType_GetMissionWorldIndicatorDescription_Params
	{
	public:
		class UClass*                                              FromMissionType;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FMissionWorldIndicator                              WorldIndicator;                                          // 0x0008(0x00A8)  (ConstParm, Parm, OutParm, ReferenceParm)
		class FString                                              ReturnValue;                                             // 0x00B0(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.MissionType.GetMissionTagForMission
	 */
	struct AMissionType_GetMissionTagForMission_Params
	{
	public:
		class UClass*                                              MissionType;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetMissionTag
	 */
	struct AMissionType_GetMissionTag_Params
	{
	public:
		class FName                                                ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetMissionLeaderboardRows
	 */
	struct AMissionType_GetMissionLeaderboardRows_Params
	{
	public:
		TArray<struct FLeaderboardRow>                             OutRows;                                                 // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetMissionDurationInSeconds
	 */
	struct AMissionType_GetMissionDurationInSeconds_Params
	{
	public:
		class UClass*                                              MissionType;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetMissionDurationFromTag
	 */
	struct AMissionType_GetMissionDurationFromTag_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   Character;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.MissionType.GetMissionDisplayName
	 */
	struct AMissionType_GetMissionDisplayName_Params
	{
	public:
		class APlayerController*                                   ShootCont;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.MissionType.GetMissionDataForCharacter
	 */
	struct AMissionType_GetMissionDataForCharacter_Params
	{
	public:
		class AShooterCharacter*                                   Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCreateIfMissing;                                        // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_LL5J[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalBuff_MissionData*                             ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetMissionClassName
	 */
	struct AMissionType_GetMissionClassName_Params
	{
	public:
		class FName                                                ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetMissionBuff
	 */
	struct AMissionType_GetMissionBuff_Params
	{
	public:
		class AShooterCharacter*                                   Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalBuff*                                         ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetIntFromMissionType
	 */
	struct AMissionType_GetIntFromMissionType_Params
	{
	public:
		class FName                                                Tag;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   PlayerPawn;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetDispatcherPointLocation
	 */
	struct AMissionType_GetDispatcherPointLocation_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ForMissionType;                                          // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetDifficultyString
	 */
	struct AMissionType_GetDifficultyString_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              diffString;                                              // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		struct FLinearColor                                        diffColor;                                               // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0028(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetCurrentWorldIndicators
	 */
	struct AMissionType_GetCurrentWorldIndicators_Params
	{
	public:
		TArray<struct FMissionWorldIndicator>                      WorldIndicators;                                         // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetCurrentSplineKeyTarget
	 */
	struct AMissionType_GetCurrentSplineKeyTarget_Params
	{
	public:
		class APrimalDinoCharacter*                                ForDino;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetCurrentMissionPhaseName
	 */
	struct AMissionType_GetCurrentMissionPhaseName_Params
	{
	public:
		class FName                                                ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetCurrentMissionPhaseIndex
	 */
	struct AMissionType_GetCurrentMissionPhaseIndex_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetAllPlayersOnMission
	 */
	struct AMissionType_GetAllPlayersOnMission_Params
	{
	public:
		TArray<class AShooterCharacter*>                           OutCharacters;                                           // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetAllPlayerControllersOnMission
	 */
	struct AMissionType_GetAllPlayerControllersOnMission_Params
	{
	public:
		TArray<class AShooterPlayerController*>                    OutControllers;                                          // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetAllPlayerControllersInvolvedInMission
	 */
	struct AMissionType_GetAllPlayerControllersInvolvedInMission_Params
	{
	public:
		TArray<class AShooterPlayerController*>                    OutPlayerControllers;                                    // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetAllPlayerCharactersInvolvedInMission
	 */
	struct AMissionType_GetAllPlayerCharactersInvolvedInMission_Params
	{
	public:
		TArray<class AShooterCharacter*>                           OutPlayerCharacters;                                     // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetAllMissionTriggersWithKey
	 */
	struct AMissionType_GetAllMissionTriggersWithKey_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                TriggerKey;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AMissionTrigger*>                             OutTriggerActors;                                        // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bSortByTriggerOrder;                                     // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReverseSort;                                            // 0x0021(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetAllMissionTriggerKeys
	 */
	struct AMissionType_GetAllMissionTriggerKeys_Params
	{
	public:
		TArray<class FName>                                        ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.MissionType.GetAllMissionSplinesWithKey
	 */
	struct AMissionType_GetAllMissionSplinesWithKey_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                TriggerKey;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AMissionSpline*>                              OutSplineActors;                                         // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bSortByTriggerOrder;                                     // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReverseSort;                                            // 0x0021(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GetAllMissionServerSidePointsWithKey
	 */
	struct AMissionType_GetAllMissionServerSidePointsWithKey_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                TriggerKey;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AMissionServerSidePoint*>                     OutServerSidePointActors;                                // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bSortByTriggerOrder;                                     // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReverseSort;                                            // 0x0021(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bExcludeMissionBounds;                                   // 0x0022(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.GeneratePhaseRequirements
	 */
	struct AMissionType_GeneratePhaseRequirements_Params
	{
	public:
		class FName                                                PhaseName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FMissionPhaseRequirement>                    Requirements;                                            // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.MissionType.GeneratePerPlayerPhaseRequirements
	 */
	struct AMissionType_GeneratePerPlayerPhaseRequirements_Params
	{
	public:
		class AShooterPlayerController*                            Controller;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   Character;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                PhaseName;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FMissionPhaseRequirement>                    Requirements;                                            // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.MissionType.FindMissionsMatchingTag
	 */
	struct AMissionType_FindMissionsMatchingTag_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                MissionTag;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class UClass*>                                      Missions;                                                // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.MissionType.FindClosestSplineActorWithTriggerKey
	 */
	struct AMissionType_FindClosestSplineActorWithTriggerKey_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             WorldLocation;                                           // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class FName                                                TriggerKey;                                              // 0x0014(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_YUQZ[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AMissionSpline*                                      ReturnValue;                                             // 0x0020(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.FindClosestSplineActor
	 */
	struct AMissionType_FindClosestSplineActor_Params
	{
	public:
		struct FVector                                             WorldLocation;                                           // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_AE2W[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AMissionSpline*>                              Splines;                                                 // 0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class AMissionSpline*                                      ReturnValue;                                             // 0x0020(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.FindClosestPathingSpline
	 */
	struct AMissionType_FindClosestPathingSpline_Params
	{
	public:
		struct FVector                                             WorldLocation;                                           // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_TN47[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class USplineComponent*                                    ReturnValue;                                             // 0x0010(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.FinalizeMissionPrep
	 */
	struct AMissionType_FinalizeMissionPrep_Params
	{
	public:
		bool                                                       bForceAdd;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1VCG[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.DeactivateMission
	 */
	struct AMissionType_DeactivateMission_Params
	{	};

	/**
	 * Function ShooterGame.MissionType.CountMissionLeaderboardRows
	 */
	struct AMissionType_CountMissionLeaderboardRows_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.CountInventoryItemsFromAllPlayersInMission
	 */
	struct AMissionType_CountInventoryItemsFromAllPlayersInMission_Params
	{
	public:
		class UClass*                                              ItemType;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRequireExactClassMatch;                                 // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_Q7VW[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.CountInventoryItems
	 */
	struct AMissionType_CountInventoryItems_Params
	{
	public:
		class APrimalCharacter*                                    Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ItemType;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRequireExactClassMatch;                                 // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_40EM[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.ClearReverseTeleportReturnLocation
	 */
	struct AMissionType_ClearReverseTeleportReturnLocation_Params
	{
	public:
		class APrimalCharacter*                                    Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.ClearDinoAINavigationTargetActor
	 */
	struct AMissionType_ClearDinoAINavigationTargetActor_Params
	{
	public:
		class APrimalDinoCharacter*                                Dino;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.ClearDinoAIForcedTargetActor
	 */
	struct AMissionType_ClearDinoAIForcedTargetActor_Params
	{
	public:
		class APrimalDinoCharacter*                                Dino;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.CleanupInvalidPlayers
	 */
	struct AMissionType_CleanupInvalidPlayers_Params
	{
	public:
		bool                                                       RemoveIfInvalid;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.CanStartPhase
	 */
	struct AMissionType_CanStartPhase_Params
	{
	public:
		class FName                                                PhaseName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.CanStartMission
	 */
	struct AMissionType_CanStartMission_Params
	{
	public:
		class UClass*                                              MissionType;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APlayerController*                                   Controller;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ClientFailureReason;                                     // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		class AActor*                                              OutMissionDispatcher;                                    // 0x0020(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0028(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.CalcXPRatio
	 */
	struct AMissionType_CalcXPRatio_Params
	{
	public:
		ELevelExperienceRampType                                   RampType;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_AGYI[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    Level;                                                   // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Ratio;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.CalculateMissionExperienceForPlayer
	 */
	struct AMissionType_CalculateMissionExperienceForPlayer_Params
	{
	public:
		class AShooterCharacter*                                   Player;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPTryCompletePhase
	 */
	struct AMissionType_BPTryCompletePhase_Params
	{
	public:
		class FName                                                PhaseName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPStaticIsPlayerEligibleForMission
	 */
	struct AMissionType_BPStaticIsPlayerEligibleForMission_Params
	{
	public:
		class APlayerController*                                   Controller;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   PlayerPawn;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalBuff_MissionData*                             PlayerMissionData;                                       // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              OutReason;                                               // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0028(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPStaticCanStartMission
	 */
	struct AMissionType_BPStaticCanStartMission_Params
	{
	public:
		class APlayerController*                                   Controller;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   PlayerPawn;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalBuff_MissionData*                             PlayerMissionData;                                       // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ClientFailureReason;                                     // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor)
		class AActor*                                              OutSelectedMissionDispatcher;                            // 0x0028(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0030(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPPhaseNameToIndex
	 */
	struct AMissionType_BPPhaseNameToIndex_Params
	{
	public:
		class FName                                                Name;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIndexIsValid;                                           // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7QZP[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPOverrideRandomWanderLocation
	 */
	struct AMissionType_BPOverrideRandomWanderLocation_Params
	{
	public:
		class APrimalDinoCharacter*                                Dino;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             inVec;                                                   // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             outVec;                                                  // 0x0014(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPOverrideMissionTimerColor
	 */
	struct AMissionType_BPOverrideMissionTimerColor_Params
	{
	public:
		class AShooterPlayerController*                            ShooterContr;                                            // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        DefaultColor;                                            // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        CurrentColor;                                            // 0x0018(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        TimerOverrideColor;                                      // 0x0028(0x0010)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0038(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPOverrideMissionIndicatorString
	 */
	struct AMissionType_BPOverrideMissionIndicatorString_Params
	{
	public:
		class AShooterCharacter*                                   forCharacter;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FMissionWorldIndicator                              Indicator;                                               // 0x0008(0x00A8)  (Parm)
		class FString                                              String;                                                  // 0x00B0(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x00C0(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.MissionType.BPOnReceivedMissionPathFindingResult
	 */
	struct AMissionType_BPOnReceivedMissionPathFindingResult_Params
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZWZM[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UNavigationPath*                                     Path;                                                    // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              Result;                                                  // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPOnPlayerRemovedFromMission
	 */
	struct AMissionType_BPOnPlayerRemovedFromMission_Params
	{
	public:
		class AShooterCharacter*                                   Player;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            Controller;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFromMissionCompleteEvent;                               // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bLastPhaseSuccess;                                       // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPOnPlayerAddedToMission
	 */
	struct AMissionType_BPOnPlayerAddedToMission_Params
	{
	public:
		class AShooterCharacter*                                   Player;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            Controller;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPOnMissionTriggerEndOverlap
	 */
	struct AMissionType_BPOnMissionTriggerEndOverlap_Params
	{
	public:
		class AMissionTrigger*                                     Trigger;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              OtherActor;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    OtherBodyIndex;                                          // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPOnMissionTriggerBeginOverlap
	 */
	struct AMissionType_BPOnMissionTriggerBeginOverlap_Params
	{
	public:
		class AMissionTrigger*                                     Trigger;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              OtherActor;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    OtherBodyIndex;                                          // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPOnMissionTimedOut
	 */
	struct AMissionType_BPOnMissionTimedOut_Params
	{	};

	/**
	 * Function ShooterGame.MissionType.BPOnMissionSuspended
	 */
	struct AMissionType_BPOnMissionSuspended_Params
	{	};

	/**
	 * Function ShooterGame.MissionType.BPOnMissionStructureDestroyed
	 */
	struct AMissionType_BPOnMissionStructureDestroyed_Params
	{
	public:
		class APrimalStructure*                                    Structure;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      KillingDamage;                                           // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QFW4[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0010(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AController*                                         Killer;                                                  // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPOnMissionStructureDamage
	 */
	struct AMissionType_BPOnMissionStructureDamage_Params
	{
	public:
		class APrimalStructure*                                    Structure;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Damage;                                                  // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QZ7Q[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0010(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AController*                                         EventInstigator;                                         // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPOnMissionServerSetup
	 */
	struct AMissionType_BPOnMissionServerSetup_Params
	{	};

	/**
	 * Function ShooterGame.MissionType.BPOnMissionPlayerRespawned
	 */
	struct AMissionType_BPOnMissionPlayerRespawned_Params
	{
	public:
		class AShooterCharacter*                                   Player;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            Controller;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPOnMissionPlayerRemovedInventoryItem
	 */
	struct AMissionType_BPOnMissionPlayerRemovedInventoryItem_Params
	{
	public:
		class AShooterCharacter*                                   Player;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalInventoryComponent*                           inventory;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         Item;                                                    // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    AmountRemoved;                                           // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPOnMissionPlayerDied
	 */
	struct AMissionType_BPOnMissionPlayerDied_Params
	{
	public:
		class AShooterCharacter*                                   Player;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            Controller;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      KillingDamage;                                           // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_Y7PM[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0018(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AController*                                         Killer;                                                  // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0040(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPOnMissionPlayerAddedInventoryItem
	 */
	struct AMissionType_BPOnMissionPlayerAddedInventoryItem_Params
	{
	public:
		class AShooterCharacter*                                   Player;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalInventoryComponent*                           inventory;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         Item;                                                    // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    AmountAdded;                                             // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEquippedItem;                                           // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPOnMissionDroppedItemPickedUp
	 */
	struct AMissionType_BPOnMissionDroppedItemPickedUp_Params
	{
	public:
		class ADroppedItemMission*                                 DroppedItem;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APlayerController*                                   ByPC;                                                    // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         InventoryItem;                                           // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPOnMissionDinoDied
	 */
	struct AMissionType_BPOnMissionDinoDied_Params
	{
	public:
		class APrimalDinoCharacter*                                Dino;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      KillingDamage;                                           // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_IWCJ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0010(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AController*                                         Killer;                                                  // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPOnMissionDinoDamage
	 */
	struct AMissionType_BPOnMissionDinoDamage_Params
	{
	public:
		class APrimalDinoCharacter*                                Dino;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Damage;                                                  // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JBCX[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0010(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AController*                                         EventInstigator;                                         // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPOnMissionDeactivated
	 */
	struct AMissionType_BPOnMissionDeactivated_Params
	{	};

	/**
	 * Function ShooterGame.MissionType.BPOnMissionComplete
	 */
	struct AMissionType_BPOnMissionComplete_Params
	{
	public:
		class AShooterCharacter*                                   ForPlayer;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            ForController;                                           // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bLastPhaseSuccess;                                       // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_L7AJ[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      XPRewarded;                                              // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class UPrimalItem*>                                 ItemsRewarded;                                           // 0x0018(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.MissionType.BPOnMissionCheat
	 */
	struct AMissionType_BPOnMissionCheat_Params
	{
	public:
		class FName                                                CheatName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSetValue;                                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CFXZ[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      Value;                                                   // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPOnMissionActivated
	 */
	struct AMissionType_BPOnMissionActivated_Params
	{	};

	/**
	 * Function ShooterGame.MissionType.BPIsPhaseComplete
	 */
	struct AMissionType_BPIsPhaseComplete_Params
	{
	public:
		class FName                                                PhaseName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPGetPhaseDisplayText
	 */
	struct AMissionType_BPGetPhaseDisplayText_Params
	{
	public:
		class FName                                                PhaseName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.MissionType.BPGetMissionTimerText
	 */
	struct AMissionType_BPGetMissionTimerText_Params
	{
	public:
		class AShooterPlayerController*                            ShootCont;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.MissionType.BPGetMissionTargetingDesire
	 */
	struct AMissionType_BPGetMissionTargetingDesire_Params
	{
	public:
		class APrimalDinoCharacter*                                MissionDino;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              forTarget;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ForTargetingDesireValue;                                 // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPGetMissionDurationText
	 */
	struct AMissionType_BPGetMissionDurationText_Params
	{
	public:
		class AShooterPlayerController*                            ShootCont;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.MissionType.BPGetMetaTagsAsInts
	 */
	struct AMissionType_BPGetMetaTagsAsInts_Params
	{
	public:
		TArray<int32_t>                                            OutTagIds;                                               // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPGetExtraLocalMissionIndicators
	 */
	struct AMissionType_BPGetExtraLocalMissionIndicators_Params
	{
	public:
		class APlayerController*                                   Controller;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   PlayerPawn;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FMissionWorldIndicator>                      IndicatorsIn;                                            // 0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<struct FMissionWorldIndicator>                      IndicatorsOut;                                           // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPGenerateMissionRewards
	 */
	struct AMissionType_BPGenerateMissionRewards_Params
	{
	public:
		struct FCharacterAndControllerPair                         Player;                                                  // 0x0000(0x0010)  (Parm)
		bool                                                       bCompletedSuccessfully;                                  // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_WMDK[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      XPReward;                                                // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class UPrimalItem*>                                 GeneratedItems;                                          // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPCanRideMissionDino
	 */
	struct AMissionType_BPCanRideMissionDino_Params
	{
	public:
		class AShooterCharacter*                                   Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalDinoCharacter*                                Dino;                                                    // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPAllowTimeout
	 */
	struct AMissionType_BPAllowTimeout_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.BPAllowPlayerToLeaveMission
	 */
	struct AMissionType_BPAllowPlayerToLeaveMission_Params
	{
	public:
		class AShooterCharacter*                                   PlayerPawn;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.AllowMissionCreation
	 */
	struct AMissionType_AllowMissionCreation_Params
	{
	public:
		class AShooterCharacter*                                   forCharacter;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_PQ5W[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              MissionDispatcherActor;                                  // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              FailureReason;                                           // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0030(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.AddPlayerUsableItem
	 */
	struct AMissionType_AddPlayerUsableItem_Params
	{
	public:
		class AShooterCharacter*                                   Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         Item;                                                    // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.AddPlayerToMission
	 */
	struct AMissionType_AddPlayerToMission_Params
	{
	public:
		class AShooterCharacter*                                   PlayerCharacter;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceAdd;                                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.AddPlayersInRadiusToMission
	 */
	struct AMissionType_AddPlayersInRadiusToMission_Params
	{
	public:
		struct FVector                                             WorldLocation;                                           // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MaxPlayersToAdd;                                         // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPrioritizeByDistanceToWorldLocation;                    // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_E9W1[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    InTargetingTeam;                                         // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ETargetingTeamBehavior                                     TargetingTeamBehavior;                                   // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceAdd;                                               // 0x001D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_O4Z4[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x0020(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType.AddMissionLeaderboardRow
	 */
	struct AMissionType_AddMissionLeaderboardRow_Params
	{
	public:
		class AShooterPlayerController*                            Controller;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     NetworkTime;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      FloatValue;                                              // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    IntValue;                                                // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                NameValue;                                               // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              StringValue;                                             // 0x0020(0x0010)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0030(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.TriggerHandleMissionModuleBegin
	 */
	struct UNewMissionModuleBase_TriggerHandleMissionModuleBegin_Params
	{	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.SetOuter
	 */
	struct UNewMissionModuleBase_SetOuter_Params
	{
	public:
		class AMissionType_ModularMissionBase*                     NewOuter;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.RunSubModulesOnComplete
	 */
	struct UNewMissionModuleBase_RunSubModulesOnComplete_Params
	{	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.RunSubModulesAtStart
	 */
	struct UNewMissionModuleBase_RunSubModulesAtStart_Params
	{	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.OnOuterDestroyed
	 */
	struct UNewMissionModuleBase_OnOuterDestroyed_Params
	{	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.HandleMissionTriggerOverlapEnd
	 */
	struct UNewMissionModuleBase_HandleMissionTriggerOverlapEnd_Params
	{
	public:
		class AMissionTrigger*                                     Trigger;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              OtherActor;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    OtherBodyIndex;                                          // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x001C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.HandleMissionTriggerOverlapBegin
	 */
	struct UNewMissionModuleBase_HandleMissionTriggerOverlapBegin_Params
	{
	public:
		class AMissionTrigger*                                     Trigger;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              OtherActor;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    OtherBodyIndex;                                          // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x001C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.HandleMissionStructureDestroyed
	 */
	struct UNewMissionModuleBase_HandleMissionStructureDestroyed_Params
	{
	public:
		class APrimalStructure*                                    Structure;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      KillingDamage;                                           // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_9FBN[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0010(0x0020)  (Parm)
		class AController*                                         Killer;                                                  // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0040(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.HandleMissionStructureDamaged
	 */
	struct UNewMissionModuleBase_HandleMissionStructureDamaged_Params
	{
	public:
		class APrimalStructure*                                    Structure;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      KillingDamage;                                           // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_22ZV[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0010(0x0020)  (Parm)
		class AController*                                         Killer;                                                  // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0040(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.HandleMissionProjectileExploded
	 */
	struct UNewMissionModuleBase_HandleMissionProjectileExploded_Params
	{
	public:
		class AShooterProjectile*                                  Projectile;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.HandleMissionPlayerRemovedInventoryItem
	 */
	struct UNewMissionModuleBase_HandleMissionPlayerRemovedInventoryItem_Params
	{
	public:
		class AShooterCharacter*                                   Player;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalInventoryComponent*                           inventory;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         Item;                                                    // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    AmountRemoved;                                           // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x001C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.HandleMissionPlayerAddedInventoryItem
	 */
	struct UNewMissionModuleBase_HandleMissionPlayerAddedInventoryItem_Params
	{
	public:
		class AShooterCharacter*                                   Player;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalInventoryComponent*                           inventory;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         Item;                                                    // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    AmountAdded;                                             // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEquippedItem;                                           // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_6P72[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x0020(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.HandleMissionModuleEnd
	 */
	struct UNewMissionModuleBase_HandleMissionModuleEnd_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.HandleMissionModuleBegin
	 */
	struct UNewMissionModuleBase_HandleMissionModuleBegin_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.HandleMissionGetPerPlayerIndicators
	 */
	struct UNewMissionModuleBase_HandleMissionGetPerPlayerIndicators_Params
	{
	public:
		class AShooterCharacter*                                   Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FMissionWorldIndicator>                      ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.HandleMissionDroppedItemPickedUp
	 */
	struct UNewMissionModuleBase_HandleMissionDroppedItemPickedUp_Params
	{
	public:
		class ADroppedItemMission*                                 DroppedItem;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APlayerController*                                   PC;                                                      // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         Item;                                                    // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.HandleMissionDinoDied
	 */
	struct UNewMissionModuleBase_HandleMissionDinoDied_Params
	{
	public:
		class APrimalDinoCharacter*                                Dino;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      KillingDamage;                                           // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_YKFQ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0010(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AController*                                         Killer;                                                  // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0040(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.HandleMissionDinoDamaged
	 */
	struct UNewMissionModuleBase_HandleMissionDinoDamaged_Params
	{
	public:
		class APrimalDinoCharacter*                                Dino;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Damage;                                                  // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_HLCU[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0010(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AController*                                         EventInstigator;                                         // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0040(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.HandleLastMissionStructureDestroyed
	 */
	struct UNewMissionModuleBase_HandleLastMissionStructureDestroyed_Params
	{
	public:
		class APrimalStructure*                                    Structure;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      KillingDamage;                                           // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_3RY3[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0010(0x0020)  (Parm)
		class AController*                                         Killer;                                                  // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0040(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.HandleLastMissionProjectileExploded
	 */
	struct UNewMissionModuleBase_HandleLastMissionProjectileExploded_Params
	{
	public:
		class AShooterProjectile*                                  Projectile;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.HandleLastMissionDinoDied
	 */
	struct UNewMissionModuleBase_HandleLastMissionDinoDied_Params
	{
	public:
		class APrimalDinoCharacter*                                Dino;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      KillingDamage;                                           // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZWPP[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0010(0x0020)  (Parm)
		class AController*                                         Killer;                                                  // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0040(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.GetWorld
	 */
	struct UNewMissionModuleBase_GetWorld_Params
	{
	public:
		class UWorld*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.GetModuleRequirementsTitle
	 */
	struct UNewMissionModuleBase_GetModuleRequirementsTitle_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.GetModuleRequirementsMessage
	 */
	struct UNewMissionModuleBase_GetModuleRequirementsMessage_Params
	{
	public:
		TArray<struct FMissionPhaseRequirement>                    ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.NewMissionModuleBase.BPGetTargetingDesire
	 */
	struct UNewMissionModuleBase_BPGetTargetingDesire_Params
	{
	public:
		class APrimalDinoCharacter*                                MissionDino;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              forTarget;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ForTargetingDesireValue;                                 // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType_ModularMissionBase.SpawnActorForMissionModule
	 */
	struct AMissionType_ModularMissionBase_SpawnActorForMissionModule_Params
	{
	public:
		class UClass*                                              ActorClass;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_263A[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          ActorTransform;                                          // 0x0010(0x0030)  (Parm, IsPlainOldData, NoDestructor)
		bool                                                       bSpawnEvenIfColliding;                                   // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_AV3R[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              ReturnValue;                                             // 0x0048(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType_ModularMissionBase.SetupMissionModules
	 */
	struct AMissionType_ModularMissionBase_SetupMissionModules_Params
	{	};

	/**
	 * Function ShooterGame.MissionType_ModularMissionBase.RemoveSpecialWorldIndicator
	 */
	struct AMissionType_ModularMissionBase_RemoveSpecialWorldIndicator_Params
	{
	public:
		struct FMissionWorldIndicator                              IndicatorToRemove;                                       // 0x0000(0x00A8)  (Parm)
	};

	/**
	 * Function ShooterGame.MissionType_ModularMissionBase.RemoveAllSpecialWorldIndicators
	 */
	struct AMissionType_ModularMissionBase_RemoveAllSpecialWorldIndicators_Params
	{	};

	/**
	 * Function ShooterGame.MissionType_ModularMissionBase.RegisterProjectile
	 */
	struct AMissionType_ModularMissionBase_RegisterProjectile_Params
	{
	public:
		class AShooterProjectile*                                  theProjectile;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType_ModularMissionBase.MultiMissionSpawnCosmetic
	 */
	struct AMissionType_ModularMissionBase_MultiMissionSpawnCosmetic_Params
	{
	public:
		class USoundBase*                                          SoundTemplate;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UParticleSystem*                                     ParticleTemplate;                                        // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FTransform                                          TheTransform;                                            // 0x0010(0x0030)  (Parm, IsPlainOldData, NoDestructor)
		float                                                      OverrideTimeDilation;                                    // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType_ModularMissionBase.MultiFireProjectiles
	 */
	struct AMissionType_ModularMissionBase_MultiFireProjectiles_Params
	{
	public:
		class UClass*                                              ProjectileClass;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Velocity;                                                // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      SubprojectileTargets;                                    // 0x0020(0x0010)  (ConstParm, Parm, ZeroConstructor)
		class AActor*                                              FiringActor;                                             // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType_ModularMissionBase.MultiDeactivateWarmerColderHUD
	 */
	struct AMissionType_ModularMissionBase_MultiDeactivateWarmerColderHUD_Params
	{	};

	/**
	 * Function ShooterGame.MissionType_ModularMissionBase.MultiActivateWarmerColderHUD
	 */
	struct AMissionType_ModularMissionBase_MultiActivateWarmerColderHUD_Params
	{
	public:
		struct FHUDElement                                         Background;                                              // 0x0000(0x0150)  (Parm)
		struct FHUDElement                                         Icon;                                                    // 0x0150(0x0150)  (Parm)
		float                                                      MinAlpha;                                                // 0x02A0(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxAlpha;                                                // 0x02A4(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      AlphaPower;                                              // 0x02A8(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        RightColor;                                              // 0x02AC(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        WrongColor;                                              // 0x02BC(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bClearLocationsFirst;                                    // 0x02CC(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_GV1P[0x3];                                   // 0x02CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FVector>                                     Locations;                                               // 0x02D0(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.MissionType_ModularMissionBase.MissionSpawnCosmetic
	 */
	struct AMissionType_ModularMissionBase_MissionSpawnCosmetic_Params
	{
	public:
		class USoundBase*                                          SoundTemplate;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UParticleSystem*                                     ParticleTemplate;                                        // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FTransform                                          TheTransform;                                            // 0x0010(0x0030)  (Parm, IsPlainOldData, NoDestructor)
		float                                                      OverrideTimeDilation;                                    // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType_ModularMissionBase.FireProjectiles
	 */
	struct AMissionType_ModularMissionBase_FireProjectiles_Params
	{
	public:
		class UClass*                                              ProjectileClass;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Velocity;                                                // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      SubprojectileTargets;                                    // 0x0020(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class AActor*                                              FiringActor;                                             // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterProjectile*                                  ReturnValue;                                             // 0x0038(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType_ModularMissionBase.ExecuteNextMissionModule
	 */
	struct AMissionType_ModularMissionBase_ExecuteNextMissionModule_Params
	{	};

	/**
	 * Function ShooterGame.MissionType_ModularMissionBase.DeactivateWarmerColderHUD
	 */
	struct AMissionType_ModularMissionBase_DeactivateWarmerColderHUD_Params
	{	};

	/**
	 * Function ShooterGame.MissionType_ModularMissionBase.CreateLeaderboardEntry
	 */
	struct AMissionType_ModularMissionBase_CreateLeaderboardEntry_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType_ModularMissionBase.BPOnMissionProjectileExpoloded
	 */
	struct AMissionType_ModularMissionBase_BPOnMissionProjectileExpoloded_Params
	{
	public:
		class AShooterProjectile*                                  theProjectile;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.MissionType_ModularMissionBase.AddSpecialWorldIndicator
	 */
	struct AMissionType_ModularMissionBase_AddSpecialWorldIndicator_Params
	{
	public:
		struct FMissionWorldIndicator                              IndicatorToAdd;                                          // 0x0000(0x00A8)  (Parm)
	};

	/**
	 * Function ShooterGame.MissionType_ModularMissionBase.ActivateWarmerColderHUD
	 */
	struct AMissionType_ModularMissionBase_ActivateWarmerColderHUD_Params
	{
	public:
		struct FHUDElement                                         Background;                                              // 0x0000(0x0150)  (Parm)
		struct FHUDElement                                         Icon;                                                    // 0x0150(0x0150)  (Parm)
		float                                                      MinAlpha;                                                // 0x02A0(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxAlpha;                                                // 0x02A4(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      AlphaPower;                                              // 0x02A8(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        RightColor;                                              // 0x02AC(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        WrongColor;                                              // 0x02BC(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bClearLocationsFirst;                                    // 0x02CC(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_DMHY[0x3];                                   // 0x02CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FVector>                                     Locations;                                               // 0x02D0(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.NPCZoneManager.StaticSpawnNPCs
	 */
	struct ANPCZoneManager_StaticSpawnNPCs_Params
	{
	public:
		class UObject*                                             WorldContext;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class ANPCZoneManager*                                     AtZoneManager;                                           // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              TheNPCSpawnEntries;                                      // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtSpawnPoint;                                            // 0x0018(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            AtRotation;                                              // 0x0024(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    UseSpawnVolumeIndex;                                     // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5HKD[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class APrimalDinoCharacter*>                        ReturnValue;                                             // 0x0038(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.NPCZoneManager.CheckIncreaseNPC
	 */
	struct ANPCZoneManager_CheckIncreaseNPC_Params
	{	};

	/**
	 * Function ShooterGame.NPCZoneVolume.OnEndOverlap
	 */
	struct ANPCZoneVolume_OnEndOverlap_Params
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.NPCZoneVolume.OnBeginOverlap
	 */
	struct ANPCZoneVolume_OnBeginOverlap_Params
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ObjectMap.Init
	 */
	struct UObjectMap_Init_Params
	{
	public:
		int32_t                                                    InSizeX;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    InSizeY;                                                 // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    InCellSize;                                              // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ObjectMap.GetSizeY
	 */
	struct UObjectMap_GetSizeY_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ObjectMap.GetSizeX
	 */
	struct UObjectMap_GetSizeX_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ObjectMap.GetSize
	 */
	struct UObjectMap_GetSize_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PaintingStreamingComponent.ServerSendNextChunk
	 */
	struct UPaintingStreamingComponent_ServerSendNextChunk_Params
	{
	public:
		class UStructurePaintingComponent*                         PaintingComponent;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PaintingStreamingComponent.ServerRequestPaintingStream
	 */
	struct UPaintingStreamingComponent_ServerRequestPaintingStream_Params
	{
	public:
		class UStructurePaintingComponent*                         PaintingComponent;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PaintingStreamingComponent.ServerCancelPaintingStream
	 */
	struct UPaintingStreamingComponent_ServerCancelPaintingStream_Params
	{
	public:
		class UStructurePaintingComponent*                         PaintingComponent;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PaintingStreamingComponent.ClientRecieveChunk
	 */
	struct UPaintingStreamingComponent_ClientRecieveChunk_Params
	{
	public:
		class UStructurePaintingComponent*                         PaintingComponent;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		TArray<unsigned char>                                      Bytes;                                                   // 0x0008(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PaintingStreamingComponent.ClientEndStreamingJob
	 */
	struct UPaintingStreamingComponent_ClientEndStreamingJob_Params
	{
	public:
		class UStructurePaintingComponent*                         PaintingComponent;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PaintingStreamingComponent.ClientCancelSteamingJob
	 */
	struct UPaintingStreamingComponent_ClientCancelSteamingJob_Params
	{
	public:
		class UStructurePaintingComponent*                         PaintingComponent;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PaintingStreamingComponent.ClientBeginStreamingJob
	 */
	struct UPaintingStreamingComponent_ClientBeginStreamingJob_Params
	{
	public:
		class UStructurePaintingComponent*                         PaintingComponent;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    Revision;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PointOfInterestActor.RefreshPointData
	 */
	struct APointOfInterestActor_RefreshPointData_Params
	{	};

	/**
	 * Function ShooterGame.PointOfInterestActor.IsPointOfInterestValid
	 */
	struct APointOfInterestActor_IsPointOfInterestValid_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PointOfInterestActor.GetMyPointOfInterestData
	 */
	struct APointOfInterestActor_GetMyPointOfInterestData_Params
	{
	public:
		struct FPointOfInterestData                                ReturnValue;                                             // 0x0000(0x0140)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.PointOfInterestActor.GetMyPointOfInterestCompanionBehavior
	 */
	struct APointOfInterestActor_GetMyPointOfInterestCompanionBehavior_Params
	{
	public:
		struct FPointOfInterestCompanionBehavior                   ReturnValue;                                             // 0x0000(0x02B0)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalBuff.UpdateStaticPathingDestination
	 */
	struct APrimalBuff_UpdateStaticPathingDestination_Params
	{
	public:
		struct FVector                                             locOverride;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      randomOffsetMultiplier;                                  // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       useRandomNegativeXDir;                                   // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       orientRandOffsetByRotation;                              // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_A91X[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRotator                                            randOffsetByRotation;                                    // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      GroundCheckSpreadOverride;                               // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0024(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.UpdateBuffPersistentData
	 */
	struct APrimalBuff_UpdateBuffPersistentData_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff.UpdateBuffLifetime
	 */
	struct APrimalBuff_UpdateBuffLifetime_Params
	{
	public:
		float                                                      NewLifetime;                                             // 0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRestartBuffLifetime;                                    // 0x0004(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.StaticAddBuff
	 */
	struct APrimalBuff_StaticAddBuff_Params
	{
	public:
		class UClass*                                              BuffClass;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalCharacter*                                    forCharacter;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         AssociatedItem;                                          // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceOnClient;                                          // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_UELT[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalBuff*                                         ReturnValue;                                             // 0x0028(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.ShouldForceOwnerDedicatedMovementTickPerFrame
	 */
	struct APrimalBuff_ShouldForceOwnerDedicatedMovementTickPerFrame_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.SetValueToAddPerSecond
	 */
	struct APrimalBuff_SetValueToAddPerSecond_Params
	{
	public:
		EPrimalCharacterStatusValue                                StatusValueType;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_K089[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      Value;                                                   // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.SetupForInstigator
	 */
	struct APrimalBuff_SetupForInstigator_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff.SetGestationMonitoringTarget
	 */
	struct APrimalBuff_SetGestationMonitoringTarget_Params
	{
	public:
		class APrimalDinoCharacter*                                forTarget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEnable;                                                 // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.SetBuffCauser
	 */
	struct APrimalBuff_SetBuffCauser_Params
	{
	public:
		class AActor*                                              CausedBy;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.ServerRequestRelatedMissionData
	 */
	struct APrimalBuff_ServerRequestRelatedMissionData_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff.ResetServerBuffTick
	 */
	struct APrimalBuff_ResetServerBuffTick_Params
	{
	public:
		float                                                      MinTime;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxTime;                                                 // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.ResetClientBuffTick
	 */
	struct APrimalBuff_ResetClientBuffTick_Params
	{
	public:
		float                                                      MinTime;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxTime;                                                 // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.ResetBuffStart
	 */
	struct APrimalBuff_ResetBuffStart_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.ReduceBuffTime
	 */
	struct APrimalBuff_ReduceBuffTime_Params
	{
	public:
		float                                                      AmountOfTimeToReduce;                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.PreventJump
	 */
	struct APrimalBuff_PreventJump_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.PreventInstigatorMovementMode
	 */
	struct APrimalBuff_PreventInstigatorMovementMode_Params
	{
	public:
		EMovementMode                                              NewMovementMode;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              NewCustomMode;                                           // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.PreventInstigatorAttack
	 */
	struct APrimalBuff_PreventInstigatorAttack_Params
	{
	public:
		int32_t                                                    AttackIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.PreventBlockingWithShield
	 */
	struct APrimalBuff_PreventBlockingWithShield_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.PreventActorTargeting
	 */
	struct APrimalBuff_PreventActorTargeting_Params
	{
	public:
		class AActor*                                              ByActor;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.OnOwnerTeleported
	 */
	struct APrimalBuff_OnOwnerTeleported_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff.OnInputEvent
	 */
	struct APrimalBuff_OnInputEvent_Params
	{
	public:
		class APrimalCharacter*                                    ForPrimalCharacter;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EPrimalCharacterInputType                                  inputType;                                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.OnCapsuleHitCallback
	 */
	struct APrimalBuff_OnCapsuleHitCallback_Params
	{
	public:
		class AActor*                                              OtherActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FVector                                             NormalImpulse;                                           // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_S311[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          Hit;                                                     // 0x0020(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalBuff.OnBuffLifetimeUpdated
	 */
	struct APrimalBuff_OnBuffLifetimeUpdated_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff.NotifyDamage
	 */
	struct APrimalBuff_NotifyDamage_Params
	{
	public:
		float                                                      DamageAmount;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_TQN0[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              DamageClass;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AController*                                         EventInstigator;                                         // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              TheDamageCauser;                                         // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.NotifyBumpedPawn
	 */
	struct APrimalBuff_NotifyBumpedPawn_Params
	{
	public:
		class APrimalCharacter*                                    BumpedPawn;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.NotifyBumpedByPawn
	 */
	struct APrimalBuff_NotifyBumpedByPawn_Params
	{
	public:
		class APrimalCharacter*                                    BumpedBy;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.NetSyncBuffLifetime
	 */
	struct APrimalBuff_NetSyncBuffLifetime_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff.NetResetBuffStart
	 */
	struct APrimalBuff_NetResetBuffStart_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff.NetDeactivate
	 */
	struct APrimalBuff_NetDeactivate_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff.Multi_SyncBuffLifetime
	 */
	struct APrimalBuff_Multi_SyncBuffLifetime_Params
	{
	public:
		float                                                      NewDeactivateAfterTime;                                  // 0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.IsOwningClient
	 */
	struct APrimalBuff_IsOwningClient_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.InterceptInstigatorPlayerEmoteAnim
	 */
	struct APrimalBuff_InterceptInstigatorPlayerEmoteAnim_Params
	{
	public:
		class UAnimMontage*                                        EmoteAnim;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.InstigatorDie
	 */
	struct APrimalBuff_InstigatorDie_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff.HideBuffFromHUD
	 */
	struct APrimalBuff_HideBuffFromHUD_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.HandleBuffAnimNotify
	 */
	struct APrimalBuff_HandleBuffAnimNotify_Params
	{
	public:
		class FName                                                AnimNotifyName;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              AnimNotifyStringData;                                    // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.GetValueToAddPerSecond
	 */
	struct APrimalBuff_GetValueToAddPerSecond_Params
	{
	public:
		EPrimalCharacterStatusValue                                StatusValueType;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_HKJV[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.GetUniqueName
	 */
	struct APrimalBuff_GetUniqueName_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalBuff.GetTimeLeft
	 */
	struct APrimalBuff_GetTimeLeft_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.GetRemainingTime
	 */
	struct APrimalBuff_GetRemainingTime_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.GetOverrideWaterJumpVelocity
	 */
	struct APrimalBuff_GetOverrideWaterJumpVelocity_Params
	{
	public:
		float                                                      OutOfWaterZ;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.GetInstigatorPlayerController
	 */
	struct APrimalBuff_GetInstigatorPlayerController_Params
	{
	public:
		class APlayerController*                                   ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.GetHUDProgressBarPercent
	 */
	struct APrimalBuff_GetHUDProgressBarPercent_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.GetForcedBuffAimOverride
	 */
	struct APrimalBuff_GetForcedBuffAimOverride_Params
	{
	public:
		bool                                                       bIsWeaponAim;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_DLXS[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRotator                                            ReturnValue;                                             // 0x0004(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.GetEnabledGestationMonitoringTargets
	 */
	struct APrimalBuff_GetEnabledGestationMonitoringTargets_Params
	{
	public:
		TArray<class APrimalDinoCharacter*>                        ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalBuff.GetDebugInfoString
	 */
	struct APrimalBuff_GetDebugInfoString_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalBuff.GetDeactivationTime
	 */
	struct APrimalBuff_GetDeactivationTime_Params
	{
	public:
		double                                                     ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.GetBuffType
	 */
	struct APrimalBuff_GetBuffType_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.GetBuffTickServerDeltaTime
	 */
	struct APrimalBuff_GetBuffTickServerDeltaTime_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.GetBuffTickClientDeltaTime
	 */
	struct APrimalBuff_GetBuffTickClientDeltaTime_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.GetBuffPostprocessMaterial
	 */
	struct APrimalBuff_GetBuffPostprocessMaterial_Params
	{
	public:
		class UMaterialInstanceDynamic*                            ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.GetBuffPostprocessIntensity
	 */
	struct APrimalBuff_GetBuffPostprocessIntensity_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.GetBuffDescription
	 */
	struct APrimalBuff_GetBuffDescription_Params
	{
	public:
		struct FStatusValueModifierDescription                     ReturnValue;                                             // 0x0000(0x0050)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalBuff.ExtendBuffTime
	 */
	struct APrimalBuff_ExtendBuffTime_Params
	{
	public:
		float                                                      AmountOfAdditionalTime;                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.DrawBuffFloatingHUD
	 */
	struct APrimalBuff_DrawBuffFloatingHUD_Params
	{
	public:
		int32_t                                                    BuffIndex;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_38SB[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AShooterHUD*                                         HUD;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CenterX;                                                 // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CenterY;                                                 // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DrawScale;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.DinoInstigatorReceivedRider
	 */
	struct APrimalBuff_DinoInstigatorReceivedRider_Params
	{
	public:
		class AShooterCharacter*                                   Rider;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.DinoInstigatorClearedRider
	 */
	struct APrimalBuff_DinoInstigatorClearedRider_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff.ClientReceiveRelatedMissionData
	 */
	struct APrimalBuff_ClientReceiveRelatedMissionData_Params
	{
	public:
		class AMissionType*                                        InMission;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       InHasRelatedMission;                                     // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BuffTickServer
	 */
	struct APrimalBuff_BuffTickServer_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BuffTickClient
	 */
	struct APrimalBuff_BuffTickClient_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BuffPostAdjustDamage
	 */
	struct APrimalBuff_BuffPostAdjustDamage_Params
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QDEM[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          HitInfo;                                                 // 0x0008(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AController*                                         EventInstigator;                                         // 0x0090(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0098(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              TheDamgeType;                                            // 0x00A0(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BuffOverrideInventoryAccessInput
	 */
	struct APrimalBuff_BuffOverrideInventoryAccessInput_Params
	{
	public:
		class AController*                                         InController;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bInputPressed;                                           // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BuffOverrideFinalWanderLocation
	 */
	struct APrimalBuff_BuffOverrideFinalWanderLocation_Params
	{
	public:
		struct FVector                                             outVec;                                                  // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BuffAdjustDamage
	 */
	struct APrimalBuff_BuffAdjustDamage_Params
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7GK5[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          HitInfo;                                                 // 0x0008(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AController*                                         EventInstigator;                                         // 0x0090(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0098(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              TheDamgeType;                                            // 0x00A0(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x00A8(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPUnstasis
	 */
	struct APrimalBuff_BPUnstasis_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff.BPStasis
	 */
	struct APrimalBuff_BPStasis_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff.BPShouldForceOwnerDedicatedMovementTickPerFrame
	 */
	struct APrimalBuff_BPShouldForceOwnerDedicatedMovementTickPerFrame_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPSetupForInstigator
	 */
	struct APrimalBuff_BPSetupForInstigator_Params
	{
	public:
		class AActor*                                              ForInstigator;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPResetBuffStart
	 */
	struct APrimalBuff_BPResetBuffStart_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff.BPReactivateWithDamageCauser
	 */
	struct APrimalBuff_BPReactivateWithDamageCauser_Params
	{
	public:
		class AActor*                                              ForInstigator;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              ForDamageCauser;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPPreventThrowingItem
	 */
	struct APrimalBuff_BPPreventThrowingItem_Params
	{
	public:
		class UPrimalItem*                                         ForItem;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPPreventTekArmorBuffs
	 */
	struct APrimalBuff_BPPreventTekArmorBuffs_Params
	{
	public:
		TArray<class FName>                                        ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPPreventRunning
	 */
	struct APrimalBuff_BPPreventRunning_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPPreventRidingInstigator
	 */
	struct APrimalBuff_BPPreventRidingInstigator_Params
	{
	public:
		class APrimalCharacter*                                    ForPawn;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPPreventOnStartJump
	 */
	struct APrimalBuff_BPPreventOnStartJump_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPPreventNotifySound
	 */
	struct APrimalBuff_BPPreventNotifySound_Params
	{
	public:
		class USoundBase*                                          SoundIn;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPPreventInstigatorMovementMode
	 */
	struct APrimalBuff_BPPreventInstigatorMovementMode_Params
	{
	public:
		EMovementMode                                              NewMovementMode;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              NewCustomMode;                                           // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPPreventInstigatorAttack
	 */
	struct APrimalBuff_BPPreventInstigatorAttack_Params
	{
	public:
		int32_t                                                    AttackIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPPreventflight
	 */
	struct APrimalBuff_BPPreventflight_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPPreventFirstPerson
	 */
	struct APrimalBuff_BPPreventFirstPerson_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPPreventCharacterStatusValueModifiers
	 */
	struct APrimalBuff_BPPreventCharacterStatusValueModifiers_Params
	{
	public:
		class APrimalCharacter*                                    ForInstigator;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPPreventCharacterLanding
	 */
	struct APrimalBuff_BPPreventCharacterLanding_Params
	{
	public:
		struct FVector                                             ImpactPoint;                                             // 0x0000(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ImpactAccel;                                             // 0x000C(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ImpactVelocity;                                          // 0x0018(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NewVelocity;                                             // 0x0024(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0030(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPPreventAddingOtherBuff
	 */
	struct APrimalBuff_BPPreventAddingOtherBuff_Params
	{
	public:
		class UClass*                                              anotherBuffClass;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPPreSetupForInstigator
	 */
	struct APrimalBuff_BPPreSetupForInstigator_Params
	{
	public:
		class AActor*                                              ForInstigator;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPPreSerializeForInstigator
	 */
	struct APrimalBuff_BPPreSerializeForInstigator_Params
	{
	public:
		bool                                                       bBeginningSerialize;                                     // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPOverrideWeaponBob
	 */
	struct APrimalBuff_BPOverrideWeaponBob_Params
	{
	public:
		struct FVector                                             InWeaponBob;                                             // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPOverrideTargetingDesire
	 */
	struct APrimalBuff_BPOverrideTargetingDesire_Params
	{
	public:
		class AActor*                                              forTarget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ForTargetingDesireValue;                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPOverrideTalkerCharacter
	 */
	struct APrimalBuff_BPOverrideTalkerCharacter_Params
	{
	public:
		class APrimalCharacter*                                    ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPOverrideIsNetRelevantFor
	 */
	struct APrimalBuff_BPOverrideIsNetRelevantFor_Params
	{
	public:
		class APlayerController*                                   RealViewer;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              Viewer;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             SrcLocation;                                             // 0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x001C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPOverrideCharacterNewFallVelocity
	 */
	struct APrimalBuff_BPOverrideCharacterNewFallVelocity_Params
	{
	public:
		struct FVector                                             InitialVelocity;                                         // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             Gravity;                                                 // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x001C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPOverrideCameraViewTarget
	 */
	struct APrimalBuff_BPOverrideCameraViewTarget_Params
	{
	public:
		class FName                                                CurrentCameraMode;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             DesiredCameraLocation;                                   // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            DesiredCameraRotation;                                   // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DesiredFOV;                                              // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOverrideCameraLocation;                                 // 0x0024(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_Y7S9[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             CameraLocation;                                          // 0x0028(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOverrideCameraRotation;                                 // 0x0034(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KZ4X[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRotator                                            CameraRotation;                                          // 0x0038(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOverrideCameraFOV;                                      // 0x0044(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_MHCP[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      CameraFOV;                                               // 0x0048(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPOverrideBuffToGiveOnDeactivation
	 */
	struct APrimalBuff_BPOverrideBuffToGiveOnDeactivation_Params
	{
	public:
		class UClass*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPOnPreventedFiringDisabledWeapon
	 */
	struct APrimalBuff_BPOnPreventedFiringDisabledWeapon_Params
	{
	public:
		class AShooterWeapon*                                      weapon;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                PreventingTag;                                           // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPOnOwnerMassTeleportEvent
	 */
	struct APrimalBuff_BPOnOwnerMassTeleportEvent_Params
	{
	public:
		EMassTeleportState                                         EventState;                                              // 0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_3R6P[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalCharacter*                                    TeleportInitiatedByChar;                                 // 0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPOnInstigatorMovementModeChangedNotify
	 */
	struct APrimalBuff_BPOnInstigatorMovementModeChangedNotify_Params
	{
	public:
		EMovementMode                                              PrevMovementMode;                                        // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              PreviousCustomMode;                                      // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EMovementMode                                              NewMovementMode;                                         // 0x0002(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              NewCustomMode;                                           // 0x0003(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPOnInstigatorCapsuleComponentHit
	 */
	struct APrimalBuff_BPOnInstigatorCapsuleComponentHit_Params
	{
	public:
		class AActor*                                              OtherActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FVector                                             NormalImpulse;                                           // 0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_3WSF[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          Hit;                                                     // 0x0020(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPOnInputEvent
	 */
	struct APrimalBuff_BPOnInputEvent_Params
	{
	public:
		EPrimalCharacterInputType                                  inputType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPNotifyPreventDismounting
	 */
	struct APrimalBuff_BPNotifyPreventDismounting_Params
	{
	public:
		class APrimalDinoCharacter*                                FromDino;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPNotifyOtherBuffDeactivated
	 */
	struct APrimalBuff_BPNotifyOtherBuffDeactivated_Params
	{
	public:
		class APrimalBuff*                                         OtherBuff;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPNotifyOtherBuffActivated
	 */
	struct APrimalBuff_BPNotifyOtherBuffActivated_Params
	{
	public:
		class APrimalBuff*                                         OtherBuff;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPNotifyExperienceGained
	 */
	struct APrimalBuff_BPNotifyExperienceGained_Params
	{
	public:
		float                                                      ActualExpGained;                                         // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ExpectedExpGain;                                         // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EXPType                                                    ExpTypeGained;                                           // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPNonDedicatedPlayerPostAnimUpdate
	 */
	struct APrimalBuff_BPNonDedicatedPlayerPostAnimUpdate_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff.BPModifyPlayerBoneModifiers
	 */
	struct APrimalBuff_BPModifyPlayerBoneModifiers_Params
	{
	public:
		TArray<struct FBoneModifier>                               InBoneModifiers;                                         // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<struct FBoneModifier>                               ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPModifyArmorValue
	 */
	struct APrimalBuff_BPModifyArmorValue_Params
	{
	public:
		class UPrimalItem*                                         ForItem;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BaseArmorValue;                                          // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPIsValidUnStasisCaster
	 */
	struct APrimalBuff_BPIsValidUnStasisCaster_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPIsCharacterHardAttached
	 */
	struct APrimalBuff_BPIsCharacterHardAttached_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPInterceptWeaponToggle
	 */
	struct APrimalBuff_BPInterceptWeaponToggle_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPInterceptUseAction
	 */
	struct APrimalBuff_BPInterceptUseAction_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPInstigatorUnpossessed
	 */
	struct APrimalBuff_BPInstigatorUnpossessed_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff.BPInstigatorSleeped
	 */
	struct APrimalBuff_BPInstigatorSleeped_Params
	{
	public:
		bool                                                       bIsSleeped;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPInstigatorReceivedKillingDamage
	 */
	struct APrimalBuff_BPInstigatorReceivedKillingDamage_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff.BPInstigatorPossessed
	 */
	struct APrimalBuff_BPInstigatorPossessed_Params
	{
	public:
		class AController*                                         ByController;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPInstigatorLocalPossessed
	 */
	struct APrimalBuff_BPInstigatorLocalPossessed_Params
	{
	public:
		class AShooterPlayerController*                            ByController;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPInstigatorDied
	 */
	struct APrimalBuff_BPInstigatorDied_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff.BPInitializedCharacterAnimScriptInstance
	 */
	struct APrimalBuff_BPInitializedCharacterAnimScriptInstance_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff.BPInformDamageCauserOfBuffAdded
	 */
	struct APrimalBuff_BPInformDamageCauserOfBuffAdded_Params
	{
	public:
		class APrimalCharacter*                                    forCharacter;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPHandleOnStopFire
	 */
	struct APrimalBuff_BPHandleOnStopFire_Params
	{
	public:
		bool                                                       bFromGamepad;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPHandleOnStopAltFire
	 */
	struct APrimalBuff_BPHandleOnStopAltFire_Params
	{
	public:
		bool                                                       bFromGamepad;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPHandleOnStartFire
	 */
	struct APrimalBuff_BPHandleOnStartFire_Params
	{
	public:
		bool                                                       bFromGamepad;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPHandleOnStartAltFire
	 */
	struct APrimalBuff_BPHandleOnStartAltFire_Params
	{
	public:
		bool                                                       bFromGamepad;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPGetPlayerFootStepSound
	 */
	struct APrimalBuff_BPGetPlayerFootStepSound_Params
	{
	public:
		class USoundCue*                                           ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPGetMoveAnimRate
	 */
	struct APrimalBuff_BPGetMoveAnimRate_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPGetHUDElements
	 */
	struct APrimalBuff_BPGetHUDElements_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FHUDElement>                                 OutElements;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPGetGravityZScale
	 */
	struct APrimalBuff_BPGetGravityZScale_Params
	{
	public:
		float                                                      currentScale;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPGetDinoNameColorOverride
	 */
	struct APrimalBuff_BPGetDinoNameColorOverride_Params
	{
	public:
		class AShooterHUD*                                         HUD;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FColor                                              ColorToOverride;                                         // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FColor                                              ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPGetDebugInfoString
	 */
	struct APrimalBuff_BPGetDebugInfoString_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPGetCrosshairColor
	 */
	struct APrimalBuff_BPGetCrosshairColor_Params
	{
	public:
		struct FColor                                              ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPGetBabyImprintingSpeedMultiplier
	 */
	struct APrimalBuff_BPGetBabyImprintingSpeedMultiplier_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPForceDinoNameTargetingTeamOverride
	 */
	struct APrimalBuff_BPForceDinoNameTargetingTeamOverride_Params
	{
	public:
		class AShooterHUD*                                         HUD;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    TargetingTeamToCheck;                                    // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPForceCameraStyle
	 */
	struct APrimalBuff_BPForceCameraStyle_Params
	{
	public:
		class APrimalCharacter*                                    ForViewTarget;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECameraStyle                                               ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPExcludeAoEActor
	 */
	struct APrimalBuff_BPExcludeAoEActor_Params
	{
	public:
		class AActor*                                              ActorToConsider;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPDrawBuffStatusHUD
	 */
	struct APrimalBuff_BPDrawBuffStatusHUD_Params
	{
	public:
		class AShooterHUD*                                         HUD;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      XPos;                                                    // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      YPos;                                                    // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScaleMult;                                               // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPDinoRefreshColorization
	 */
	struct APrimalBuff_BPDinoRefreshColorization_Params
	{
	public:
		TArray<struct FLinearColor>                                DinoColors;                                              // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<struct FLinearColor>                                OverrideColors;                                          // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPDeactivated
	 */
	struct APrimalBuff_BPDeactivated_Params
	{
	public:
		class AActor*                                              ForInstigator;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPDeactivate
	 */
	struct APrimalBuff_BPDeactivate_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff.BPCustomAllowAddBuff
	 */
	struct APrimalBuff_BPCustomAllowAddBuff_Params
	{
	public:
		class APrimalCharacter*                                    forCharacter;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPCheckPreventInput
	 */
	struct APrimalBuff_BPCheckPreventInput_Params
	{
	public:
		EPrimalCharacterInputType                                  inputType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPCharacterDetach
	 */
	struct APrimalBuff_BPCharacterDetach_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff.BPCanBeCarried
	 */
	struct APrimalBuff_BPCanBeCarried_Params
	{
	public:
		class APrimalCharacter*                                    ByCarrier;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPBuffPreventUploading
	 */
	struct APrimalBuff_BPBuffPreventUploading_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPBPGetCameraShakeScalar
	 */
	struct APrimalBuff_BPBPGetCameraShakeScalar_Params
	{
	public:
		class UClass*                                              currentShake;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      currentScale;                                            // 0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPAnimNotifyCustomState_End
	 */
	struct APrimalBuff_BPAnimNotifyCustomState_End_Params
	{
	public:
		class FName                                                CustomEventName;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USkeletalMeshComponent*                              MeshComp;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UAnimSequenceBase*                                   Animation;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UAnimNotifyState*                                    AnimNotifyObject;                                        // 0x0018(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPAnimNotifyCustomState_Begin
	 */
	struct APrimalBuff_BPAnimNotifyCustomState_Begin_Params
	{
	public:
		class FName                                                CustomEventName;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USkeletalMeshComponent*                              MeshComp;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UAnimSequenceBase*                                   Animation;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TotalDuration;                                           // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_VHSU[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UAnimNotifyState*                                    AnimNotifyObject;                                        // 0x0020(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPAnimNotifyCustomEvent
	 */
	struct APrimalBuff_BPAnimNotifyCustomEvent_Params
	{
	public:
		class FName                                                CustomEventName;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USkeletalMeshComponent*                              MeshComp;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UAnimSequenceBase*                                   Animation;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UAnimNotify*                                         AnimNotifyObject;                                        // 0x0018(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPAdjustStatusValueModification
	 */
	struct APrimalBuff_BPAdjustStatusValueModification_Params
	{
	public:
		class UPrimalCharacterStatusComponent*                     ForComponent;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		EPrimalCharacterStatusValue                                ValueType;                                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_IT2Z[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      InAmount;                                                // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              DamageTypeClass;                                         // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bManualModification;                                     // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_G9JG[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x001C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPAdjustRadialDamage
	 */
	struct APrimalBuff_BPAdjustRadialDamage_Params
	{
	public:
		float                                                      currentDamage;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Origin;                                                  // 0x0004(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRadialDamageEvent                                  DamageEvent;                                             // 0x0010(0x0050)  (ConstParm, Parm, OutParm, ReferenceParm)
		float                                                      ReturnValue;                                             // 0x0060(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPAdjustImpulseFromDamage
	 */
	struct APrimalBuff_BPAdjustImpulseFromDamage_Params
	{
	public:
		struct FVector                                             DesiredImpulse;                                          // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DamageTaken;                                             // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FDamageEvent                                        TheDamageEvent;                                          // 0x0010(0x0020)  (Parm)
		class APawn*                                               PawnInstigator;                                          // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsPointDamage;                                          // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1S4A[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          PointHitInfo;                                            // 0x0048(0x0088)  (Parm)
		struct FVector                                             ReturnValue;                                             // 0x00D0(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPAdjustDamage_Ex
	 */
	struct APrimalBuff_BPAdjustDamage_Ex_Params
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_J1BY[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          HitInfo;                                                 // 0x0008(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector                                             ImpulseDir;                                              // 0x0090(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CVDQ[0x4];                                   // 0x009C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AController*                                         EventInstigator;                                         // 0x00A0(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              InDamageCauser;                                          // 0x00A8(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              TheDamgeType;                                            // 0x00B0(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x00B8(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPAdjustCharacterMovementImpulse
	 */
	struct APrimalBuff_BPAdjustCharacterMovementImpulse_Params
	{
	public:
		struct FVector                                             Impulse;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bVelocityChange;                                         // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JPVB[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      MassScaleImpulseExponent;                                // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOverrideMaxImpulseZ;                                    // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_RF1H[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BPActivated
	 */
	struct APrimalBuff_BPActivated_Params
	{
	public:
		class AActor*                                              ForInstigator;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BP_OverrideTerminalVelocity
	 */
	struct APrimalBuff_BP_OverrideTerminalVelocity_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BP_OverrideMoveRightInput
	 */
	struct APrimalBuff_BP_OverrideMoveRightInput_Params
	{
	public:
		float                                                      CurrentInput;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BP_OverrideMoveForwardInput
	 */
	struct APrimalBuff_BP_OverrideMoveForwardInput_Params
	{
	public:
		float                                                      CurrentInput;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BP_OverrideCharacterWalkingVelocity
	 */
	struct APrimalBuff_BP_OverrideCharacterWalkingVelocity_Params
	{
	public:
		struct FVector                                             InitialVelocity;                                         // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      Friction;                                                // 0x000C(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0014(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BP_OverrideCharacterSwimmingVelocity
	 */
	struct APrimalBuff_BP_OverrideCharacterSwimmingVelocity_Params
	{
	public:
		struct FVector                                             InitialVelocity;                                         // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             Gravity;                                                 // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      FluidFriction;                                           // 0x0018(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      NetBuoyancy;                                             // 0x001C(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0024(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BP_OverrideCharacterFlyingVelocity
	 */
	struct APrimalBuff_BP_OverrideCharacterFlyingVelocity_Params
	{
	public:
		struct FVector                                             InitialVelocity;                                         // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             Gravity;                                                 // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x001C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BP_OnOwnerTeleported
	 */
	struct APrimalBuff_BP_OnOwnerTeleported_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff.BP_OnOwnerDealtDamage
	 */
	struct APrimalBuff_BP_OnOwnerDealtDamage_Params
	{
	public:
		class AActor*                                              DamagedActor;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DamageAmount;                                            // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_YUE8[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0010(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalBuff.BP_OnBuffLifetimeUpdated
	 */
	struct APrimalBuff_BP_OnBuffLifetimeUpdated_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff.BP_ModifyCharacterFOV
	 */
	struct APrimalBuff_BP_ModifyCharacterFOV_Params
	{
	public:
		float                                                      inFOV;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.AllowPostProcessEffect
	 */
	struct APrimalBuff_AllowPostProcessEffect_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.AddDamageStatusValueModifier
	 */
	struct APrimalBuff_AddDamageStatusValueModifier_Params
	{
	public:
		class APrimalCharacter*                                    addToCharacter;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EPrimalCharacterStatusValue                                ValueType;                                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSpeedToAddInSeconds;                                    // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bContinueOnUnchangedValue;                               // 0x000A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bResetExistingModifierDescriptionIndex;                  // 0x000B(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSetValue;                                               // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSetAdditionalValue;                                     // 0x000D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_4S21[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      LimitExistingModifierDescriptionToMaxAmount;             // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DamageMultiplierAmountToAdd;                             // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SpeedToAdd;                                              // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    StatusValueModifierDescriptionIndex;                     // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bUsePercentualDamage;                                    // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bMakeUntameable;                                         // 0x0021(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QJP3[0x2];                                   // 0x0022(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      PercentualDamage;                                        // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ScaleValueByCharacterDamageType;                         // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff.AddBuffLifetime
	 */
	struct APrimalBuff_AddBuffLifetime_Params
	{
	public:
		float                                                      AdditionalLifetime;                                      // 0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.TraceForCompanionBlockersFromPlayer
	 */
	struct APrimalBuff_Companion_TraceForCompanionBlockersFromPlayer_Params
	{
	public:
		struct FVector                                             AdjustedLocation;                                        // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             TraceStart;                                              // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             TraceEnd;                                                // 0x0018(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bDebug;                                                  // 0x0024(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_6QI3[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      TraceRadius;                                             // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x002C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.Tick_UpdateCompanionTransform
	 */
	struct APrimalBuff_Companion_Tick_UpdateCompanionTransform_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.Tick_UpdateCompanionState
	 */
	struct APrimalBuff_Companion_Tick_UpdateCompanionState_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.Tick_CompanionSearchForPOIs
	 */
	struct APrimalBuff_Companion_Tick_CompanionSearchForPOIs_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.Tick_CompanionReactions
	 */
	struct APrimalBuff_Companion_Tick_CompanionReactions_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.Tick_CompanionEvents
	 */
	struct APrimalBuff_Companion_Tick_CompanionEvents_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.StopCompanionReaction
	 */
	struct APrimalBuff_Companion_StopCompanionReaction_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.StopCompanionMontage
	 */
	struct APrimalBuff_Companion_StopCompanionMontage_Params
	{
	public:
		class UAnimMontage*                                        AnimToStop;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BlendOutTime;                                            // 0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.StopCompanionEventExternal
	 */
	struct APrimalBuff_Companion_StopCompanionEventExternal_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.StopCompanionEvent
	 */
	struct APrimalBuff_Companion_StopCompanionEvent_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.StartCompanionEventExternal
	 */
	struct APrimalBuff_Companion_StartCompanionEventExternal_Params
	{
	public:
		class AActor*                                              EventActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FCompanionEventData                                 WithEventData;                                           // 0x0008(0x0050)  (Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.StartCompanionEvent
	 */
	struct APrimalBuff_Companion_StartCompanionEvent_Params
	{
	public:
		class AActor*                                              EventActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FCompanionEventData                                 WithEventData;                                           // 0x0008(0x0050)  (Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.ShouldOrbitPointOfInterest
	 */
	struct APrimalBuff_Companion_ShouldOrbitPointOfInterest_Params
	{
	public:
		struct FPointOfInterestData_ForCompanion                   WithPointData;                                           // 0x0000(0x03F0)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x03F0(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.SetUpAnimTexture
	 */
	struct APrimalBuff_Companion_SetUpAnimTexture_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.SetCompaionHiddenSetting
	 */
	struct APrimalBuff_Companion_SetCompaionHiddenSetting_Params
	{
	public:
		bool                                                       isHidden;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.Server_SetCompanionState
	 */
	struct APrimalBuff_Companion_Server_SetCompanionState_Params
	{
	public:
		ECompanionState                                            NewState;                                                // 0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.RefreshCompanionColorization
	 */
	struct APrimalBuff_Companion_RefreshCompanionColorization_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.PlayLinkedCompanionReactionsByExplorerNoteIndex
	 */
	struct APrimalBuff_Companion_PlayLinkedCompanionReactionsByExplorerNoteIndex_Params
	{
	public:
		int32_t                                                    index;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.PlayCompanionMontage
	 */
	struct APrimalBuff_Companion_PlayCompanionMontage_Params
	{
	public:
		class UAnimMontage*                                        AnimToPlay;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BlendInTime;                                             // 0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BlendOutTime;                                            // 0x000C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      PlayRate;                                                // 0x0010(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.OutputAsyncLoadedFiles
	 */
	struct APrimalBuff_Companion_OutputAsyncLoadedFiles_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.OnSpawnHexagons
	 */
	struct APrimalBuff_Companion_OnSpawnHexagons_Params
	{
	public:
		float                                                      OverrideCollectSFXVolume;                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       VFXImmediatelyAttracts;                                  // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.OnSpawnedForPlayer
	 */
	struct APrimalBuff_Companion_OnSpawnedForPlayer_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.OnRep_CompanionState
	 */
	struct APrimalBuff_Companion_OnRep_CompanionState_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.OnPlayerPlayAnimation
	 */
	struct APrimalBuff_Companion_OnPlayerPlayAnimation_Params
	{
	public:
		class UAnimMontage*                                        PlayedAnim;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      AnimDuration;                                            // 0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                StartSectionName;                                        // 0x000C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.OnPlayerDeath
	 */
	struct APrimalBuff_Companion_OnPlayerDeath_Params
	{
	public:
		class APrimalCharacter*                                    DiedCharacter;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.OnMyPlayerMissionStarted
	 */
	struct APrimalBuff_Companion_OnMyPlayerMissionStarted_Params
	{
	public:
		class APrimalBuff_MissionData*                             MissionDataBuff;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AMissionType*                                        Mission;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.OnMyPlayerMissionComplete
	 */
	struct APrimalBuff_Companion_OnMyPlayerMissionComplete_Params
	{
	public:
		class APrimalBuff_MissionData*                             MissionDataBuff;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AMissionType*                                        Mission;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSuccess;                                                // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.OnMadeHexagonPurchase
	 */
	struct APrimalBuff_Companion_OnMadeHexagonPurchase_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.OnFoundPoI
	 */
	struct APrimalBuff_Companion_OnFoundPoI_Params
	{
	public:
		struct FPointOfInterestData_ForCompanion                   FoundPointData;                                          // 0x0000(0x03F0)  (Parm, OutParm, ReferenceParm)
		class AActor*                                              FoundPointActor;                                         // 0x03F0(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.OnEndOverlapCompanionEventTrigger
	 */
	struct APrimalBuff_Companion_OnEndOverlapCompanionEventTrigger_Params
	{
	public:
		class AActor*                                              ForTrigger;                                              // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.OnCompanionStateChanged
	 */
	struct APrimalBuff_Companion_OnCompanionStateChanged_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.OnCompanionReactionStopped
	 */
	struct APrimalBuff_Companion_OnCompanionReactionStopped_Params
	{
	public:
		struct FCompanionReactionData                              StoppedReactionData;                                     // 0x0000(0x00A0)  (ConstParm, Parm, OutParm, ReferenceParm)
		int32_t                                                    UniqueID;                                                // 0x00A0(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.OnCompanionReactionPlayed
	 */
	struct APrimalBuff_Companion_OnCompanionReactionPlayed_Params
	{
	public:
		struct FCompanionReactionData                              PlayedReactionData;                                      // 0x0000(0x00A0)  (ConstParm, Parm, OutParm, ReferenceParm)
		int32_t                                                    UniqueID;                                                // 0x00A0(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.OnCompanionEventStarted
	 */
	struct APrimalBuff_Companion_OnCompanionEventStarted_Params
	{
	public:
		struct FCompanionEventData                                 StartingEventData;                                       // 0x0000(0x0050)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.OnCompanionEventEnded
	 */
	struct APrimalBuff_Companion_OnCompanionEventEnded_Params
	{
	public:
		struct FCompanionEventData                                 StoppingEventData;                                       // 0x0000(0x0050)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.OnBeginOverlapCompanionEventTrigger
	 */
	struct APrimalBuff_Companion_OnBeginOverlapCompanionEventTrigger_Params
	{
	public:
		class AActor*                                              ForTrigger;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.NotifyItemCrafted
	 */
	struct APrimalBuff_Companion_NotifyItemCrafted_Params
	{
	public:
		class UPrimalItem*                                         anItem;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.NotifyItemAddedToCropPlot
	 */
	struct APrimalBuff_Companion_NotifyItemAddedToCropPlot_Params
	{
	public:
		class UPrimalItem*                                         anItem;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.NotifyHasTamedDino
	 */
	struct APrimalBuff_Companion_NotifyHasTamedDino_Params
	{
	public:
		class UClass*                                              DinoClass;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.Net_SetCompanionState
	 */
	struct APrimalBuff_Companion_Net_SetCompanionState_Params
	{
	public:
		ECompanionState                                            NewState;                                                // 0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.IsPlayingCompanionReaction
	 */
	struct APrimalBuff_Companion_IsPlayingCompanionReaction_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.IsPlayerLookingAtCompanion
	 */
	struct APrimalBuff_Companion_IsPlayerLookingAtCompanion_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.IsPlayerADS
	 */
	struct APrimalBuff_Companion_IsPlayerADS_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.IsCompanionReadyToMonologue
	 */
	struct APrimalBuff_Companion_IsCompanionReadyToMonologue_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.IsCompanionAbleToMonologue
	 */
	struct APrimalBuff_Companion_IsCompanionAbleToMonologue_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.HasCompanionReachedPointOrbit
	 */
	struct APrimalBuff_Companion_HasCompanionReachedPointOrbit_Params
	{
	public:
		struct FPointOfInterestData_ForCompanion                   OfPointData;                                             // 0x0000(0x03F0)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x03F0(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.GetPointCompanionWorldOrbitOrigin
	 */
	struct APrimalBuff_Companion_GetPointCompanionWorldOrbitOrigin_Params
	{
	public:
		struct FPointOfInterestData_ForCompanion                   ForPointData;                                            // 0x0000(0x03F0)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector                                             ReturnValue;                                             // 0x03F0(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.GetMyPlayerHUD
	 */
	struct APrimalBuff_Companion_GetMyPlayerHUD_Params
	{
	public:
		class AShooterHUD*                                         ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.GetCurrentCompanionReactionData
	 */
	struct APrimalBuff_Companion_GetCurrentCompanionReactionData_Params
	{
	public:
		struct FCompanionReactionData                              ReturnValue;                                             // 0x0000(0x00A0)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.GetCurrentCompanionEventData
	 */
	struct APrimalBuff_Companion_GetCurrentCompanionEventData_Params
	{
	public:
		struct FCompanionEventData                                 ReturnValue;                                             // 0x0000(0x0050)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.GetCompanionWorldLocation
	 */
	struct APrimalBuff_Companion_GetCompanionWorldLocation_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.GetClosestNearbyPointOfInterest
	 */
	struct APrimalBuff_Companion_GetClosestNearbyPointOfInterest_Params
	{
	public:
		struct FPointOfInterestData_ForCompanion                   ClosestPointData;                                        // 0x0000(0x03F0)  (Parm, OutParm)
		struct FVector                                             ClosestPointLoc;                                         // 0x03F0(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x03FC(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.GetAllExplorerNotesInWorld
	 */
	struct APrimalBuff_Companion_GetAllExplorerNotesInWorld_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.ForceUnhibernateAtLocation
	 */
	struct APrimalBuff_Companion_ForceUnhibernateAtLocation_Params
	{
	public:
		struct FVector                                             AtLocation;                                              // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.ForceHibernateAtLocation
	 */
	struct APrimalBuff_Companion_ForceHibernateAtLocation_Params
	{
	public:
		struct FVector                                             AtLocation;                                              // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_IS5A[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToHibernate;                                       // 0x0010(0x0010)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.FocusOnRemoteTarget
	 */
	struct APrimalBuff_Companion_FocusOnRemoteTarget_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.DrawFocusedActorToolTip
	 */
	struct APrimalBuff_Companion_DrawFocusedActorToolTip_Params
	{
	public:
		class AActor*                                              targetedActor;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.Delegate_OnCompanionReactionVfxSpawned__DelegateSignature
	 */
	struct APrimalBuff_Companion_Delegate_OnCompanionReactionVfxSpawned__DelegateSignature_Params
	{
	public:
		class APrimalBuff_Companion*                               SpawnedByCompanion;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UParticleSystemComponent*                            SpawnedComp_VFX;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.Delegate_OnCompanionReactionStopped__DelegateSignature
	 */
	struct APrimalBuff_Companion_Delegate_OnCompanionReactionStopped__DelegateSignature_Params
	{
	public:
		class APrimalBuff_Companion*                               ReactingCompanion;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FCompanionReactionData                              ReactionData;                                            // 0x0008(0x00A0)  (ConstParm, Parm, OutParm, ReferenceParm)
		int32_t                                                    UniqueID;                                                // 0x00A8(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.Delegate_OnCompanionReactionSfxSpawned__DelegateSignature
	 */
	struct APrimalBuff_Companion_Delegate_OnCompanionReactionSfxSpawned__DelegateSignature_Params
	{
	public:
		class APrimalBuff_Companion*                               SpawnedByCompanion;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UAudioComponent*                                     SpawnedComp_SFX;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.Delegate_OnCompanionReactionPlayed__DelegateSignature
	 */
	struct APrimalBuff_Companion_Delegate_OnCompanionReactionPlayed__DelegateSignature_Params
	{
	public:
		class APrimalBuff_Companion*                               ReactingCompanion;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FCompanionReactionData                              ReactionData;                                            // 0x0008(0x00A0)  (ConstParm, Parm, OutParm, ReferenceParm)
		int32_t                                                    UniqueID;                                                // 0x00A8(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.Delegate_OnCompanionReactionAnimPlayed__DelegateSignature
	 */
	struct APrimalBuff_Companion_Delegate_OnCompanionReactionAnimPlayed__DelegateSignature_Params
	{
	public:
		class APrimalBuff_Companion*                               SpawnedByCompanion;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UAnimMontage*                                        PlayedAnim;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.ClientToggleForceMonologue
	 */
	struct APrimalBuff_Companion_ClientToggleForceMonologue_Params
	{
	public:
		bool                                                       Newval;                                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.ClientOutputAsyncLoadedFiles
	 */
	struct APrimalBuff_Companion_ClientOutputAsyncLoadedFiles_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.ClientAllowVRTeleport
	 */
	struct APrimalBuff_Companion_ClientAllowVRTeleport_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.Client_AddCompanionReaction
	 */
	struct APrimalBuff_Companion_Client_AddCompanionReaction_Params
	{
	public:
		struct FCompanionReactionData                              WithReactionData;                                        // 0x0000(0x00A0)  (Parm)
		bool                                                       bForcePlayNow;                                           // 0x00A0(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_UGUS[0x7];                                   // 0x00A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UMaterialInterface*                                  DialogueIconOverride;                                    // 0x00A8(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    UniqueID;                                                // 0x00B0(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.CanStartCompanionEvent
	 */
	struct APrimalBuff_Companion_CanStartCompanionEvent_Params
	{
	public:
		class AActor*                                              EventActor;                                              // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FCompanionEventData                                 WithEventData;                                           // 0x0008(0x0050)  (Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0058(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.CanRemotelyFocusOnRemoteActorForTooltip
	 */
	struct APrimalBuff_Companion_CanRemotelyFocusOnRemoteActorForTooltip_Params
	{
	public:
		class AActor*                                              targetedActor;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.CanPlayEnvironmentalCompanionReaction
	 */
	struct APrimalBuff_Companion_CanPlayEnvironmentalCompanionReaction_Params
	{
	public:
		struct FCompanionReactionData                              CanPlayReactionData;                                     // 0x0000(0x00A0)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x00A0(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.CanPlayCompanionReaction
	 */
	struct APrimalBuff_Companion_CanPlayCompanionReaction_Params
	{
	public:
		struct FCompanionReactionData                              CanPlayReactionData;                                     // 0x0000(0x00A0)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x00A0(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.BPServerside_IsPerMapExplorerNoteUnlocked
	 */
	struct APrimalBuff_Companion_BPServerside_IsPerMapExplorerNoteUnlocked_Params
	{
	public:
		int32_t                                                    ExplorerNoteIndex;                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       CouldDetermine;                                          // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       HasPlayerUnlockedNote;                                   // 0x0005(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.AnimateOutHLNASubtitleIcon
	 */
	struct APrimalBuff_Companion_AnimateOutHLNASubtitleIcon_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.AnimateInHLNASubtitleIcon
	 */
	struct APrimalBuff_Companion_AnimateInHLNASubtitleIcon_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Companion.AddCompanionReaction
	 */
	struct APrimalBuff_Companion_AddCompanionReaction_Params
	{
	public:
		struct FCompanionReactionData                              WithReactionData;                                        // 0x0000(0x00A0)  (Parm, OutParm, ReferenceParm)
		bool                                                       bForcePlayNow;                                           // 0x00A0(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_G5O9[0x7];                                   // 0x00A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UMaterialInterface*                                  DialogueIconOverride;                                    // 0x00A8(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    UniqueID;                                                // 0x00B0(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CompanionEventTrigger.OnEndOverlap
	 */
	struct ACompanionEventTrigger_OnEndOverlap_Params
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CompanionEventTrigger.OnBeginOverlap
	 */
	struct ACompanionEventTrigger_OnBeginOverlap_Params
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIState.TickAnimationStateEvent
	 */
	struct UPrimalAIState_TickAnimationStateEvent_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                CustomEventName;                                         // 0x0004(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ENetRole                                                   Role;                                                    // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIState.TickAnimationState
	 */
	struct UPrimalAIState_TickAnimationState_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                CustomEventName;                                         // 0x0004(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ENetRole                                                   Role;                                                    // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIState.StartAnimationStateEvent
	 */
	struct UPrimalAIState_StartAnimationStateEvent_Params
	{
	public:
		class FName                                                CustomEventName;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ENetRole                                                   Role;                                                    // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIState.StartAnimationState
	 */
	struct UPrimalAIState_StartAnimationState_Params
	{
	public:
		class FName                                                CustomEventName;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ENetRole                                                   Role;                                                    // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIState.ShouldSkipRangeCheckEvent
	 */
	struct UPrimalAIState_ShouldSkipRangeCheckEvent_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIState.ShouldSkipIntervalCheckEvent
	 */
	struct UPrimalAIState_ShouldSkipIntervalCheckEvent_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIState.SetLastAttackTime
	 */
	struct UPrimalAIState_SetLastAttackTime_Params
	{	};

	/**
	 * Function ShooterGame.PrimalAIState.SetInAnimationStateActive
	 */
	struct UPrimalAIState_SetInAnimationStateActive_Params
	{
	public:
		bool                                                       Value;                                                   // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIState.OnTickEvent
	 */
	struct UPrimalAIState_OnTickEvent_Params
	{
	public:
		float                                                      DeltaSeconds;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIState.OnTick
	 */
	struct UPrimalAIState_OnTick_Params
	{
	public:
		float                                                      DeltaSeconds;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIState.OnEndEvent
	 */
	struct UPrimalAIState_OnEndEvent_Params
	{	};

	/**
	 * Function ShooterGame.PrimalAIState.OnEnd
	 */
	struct UPrimalAIState_OnEnd_Params
	{	};

	/**
	 * Function ShooterGame.PrimalAIState.OnChildStateEndedEvent
	 */
	struct UPrimalAIState_OnChildStateEndedEvent_Params
	{
	public:
		class UPrimalAIState*                                      PrimalAIState;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIState.OnCanUseStateEvent
	 */
	struct UPrimalAIState_OnCanUseStateEvent_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIState.OnBeginEvent
	 */
	struct UPrimalAIState_OnBeginEvent_Params
	{
	public:
		class UPrimalAIState*                                      InParentState;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIState.OnBegin
	 */
	struct UPrimalAIState_OnBegin_Params
	{
	public:
		class UPrimalAIState*                                      InParentState;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIState.GetDebugInfoString
	 */
	struct UPrimalAIState_GetDebugInfoString_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalAIState.EndAnimationStateEvent
	 */
	struct UPrimalAIState_EndAnimationStateEvent_Params
	{
	public:
		class FName                                                CustomEventName;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ENetRole                                                   Role;                                                    // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIState.EndAnimationState
	 */
	struct UPrimalAIState_EndAnimationState_Params
	{
	public:
		class FName                                                CustomEventName;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ENetRole                                                   Role;                                                    // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIState.CanUseState
	 */
	struct UPrimalAIState_CanUseState_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIState.BPOverrideAttackWeight
	 */
	struct UPrimalAIState_BPOverrideAttackWeight_Params
	{
	public:
		float                                                      inputWeight;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Distance;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      attackRangeOffset;                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_L2GR[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              OtherTarget;                                             // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIState.BPIsChildState
	 */
	struct UPrimalAIState_BPIsChildState_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIState.BPGetDebugInfoString
	 */
	struct UPrimalAIState_BPGetDebugInfoString_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalAIState.BPCanAttack
	 */
	struct UPrimalAIState_BPCanAttack_Params
	{
	public:
		float                                                      Distance;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      attackRangeOffset;                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              OtherTarget;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIStateBPBase.SpawnAndFireProjectile
	 */
	struct UPrimalAIStateBPBase_SpawnAndFireProjectile_Params
	{
	public:
		class UClass*                                              ProjectileClass;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ProjectileSocket;                                        // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ProjectileInterval;                                      // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOverrideProjectileSpawn;                                // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_GKLT[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             OverrideSpawnLoc;                                        // 0x0018(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            OverrideSpawnRot;                                        // 0x0024(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0030(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIStateBPBase.SetLastAttackTimeToNow
	 */
	struct UPrimalAIStateBPBase_SetLastAttackTimeToNow_Params
	{
	public:
		float                                                      Offset;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIStateBPBase.IsTimeSinceStateBegin
	 */
	struct UPrimalAIStateBPBase_IsTimeSinceStateBegin_Params
	{
	public:
		float                                                      CheckTimeSince;                                          // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceTrueAtZeroTime;                                    // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0005(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIStateBPBase.GetTimeSinceStateBegin
	 */
	struct UPrimalAIStateBPBase_GetTimeSinceStateBegin_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIStateBPBase.GetStateBeginTime
	 */
	struct UPrimalAIStateBPBase_GetStateBeginTime_Params
	{
	public:
		double                                                     ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIStateBPBase.GetLastAttackTimeAndInterval
	 */
	struct UPrimalAIStateBPBase_GetLastAttackTimeAndInterval_Params
	{
	public:
		double                                                     LastAttackTime;                                          // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      AttackInterval;                                          // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIStateBPBase.FinishState
	 */
	struct UPrimalAIStateBPBase_FinishState_Params
	{	};

	/**
	 * Function ShooterGame.PrimalAIStateBPBase.DealMeleeDamageDirect
	 */
	struct UPrimalAIStateBPBase_DealMeleeDamageDirect_Params
	{
	public:
		class AActor*                                              TargetActor;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             DamageSourceWorldLocation;                               // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DamageAmount;                                            // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DamageImpulse;                                           // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_E837[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              DamageTypeClass;                                         // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bUseBlueprintAdjustOutputDamage;                         // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bInstantlyHarvestCorpse;                                 // 0x0029(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIStateBPBase.DealMeleeDamage
	 */
	struct UPrimalAIStateBPBase_DealMeleeDamage_Params
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FHitResult                                          FromHitResult;                                           // 0x0008(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalAIStateBPBase.BPShouldEndAttack
	 */
	struct UPrimalAIStateBPBase_BPShouldEndAttack_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIStateBPBase.BPOnClearAttackState
	 */
	struct UPrimalAIStateBPBase_BPOnClearAttackState_Params
	{	};

	/**
	 * Function ShooterGame.PrimalAIStateBPBase.BPOnAttackTick
	 */
	struct UPrimalAIStateBPBase_BPOnAttackTick_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIStateBPBase.BPOnAttackStart
	 */
	struct UPrimalAIStateBPBase_BPOnAttackStart_Params
	{
	public:
		int32_t                                                    AttackIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIStateBPBase.BPOnAttackEnd
	 */
	struct UPrimalAIStateBPBase_BPOnAttackEnd_Params
	{
	public:
		int32_t                                                    AttackIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIStateBPBase.BPOnAnimNotifyCustomEvent
	 */
	struct UPrimalAIStateBPBase_BPOnAnimNotifyCustomEvent_Params
	{
	public:
		class FName                                                CustomEventName;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UAnimSequenceBase*                                   Animation;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ENetRole                                                   Role;                                                    // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIStateDinoMeleeState.BPOnHitActor
	 */
	struct UPrimalAIStateDinoMeleeState_BPOnHitActor_Params
	{
	public:
		struct FHitResult                                          HitResult;                                               // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalAIStateDinoMeleeState.BPGetSocketLocation
	 */
	struct UPrimalAIStateDinoMeleeState_BPGetSocketLocation_Params
	{
	public:
		class FName                                                SocketName;                                              // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             SocketLocation;                                          // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIStateDinoRangedState.PreventAttackForTime
	 */
	struct UPrimalAIStateDinoRangedState_PreventAttackForTime_Params
	{
	public:
		float                                                      Time;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIStateDinoRangedState.OffsetVectorRandomlyReturnsAltered
	 */
	struct UPrimalAIStateDinoRangedState_OffsetVectorRandomlyReturnsAltered_Params
	{
	public:
		struct FVector                                             InVector;                                                // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      minPercent;                                              // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      maxPercent;                                              // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0014(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIStateDinoRangedState.GetZGravityOffset
	 */
	struct UPrimalAIStateDinoRangedState_GetZGravityOffset_Params
	{
	public:
		struct FVector                                             ProjectileVelocity;                                      // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ProjectileStartLocation;                                 // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ProjectileFinalLocation;                                 // 0x0018(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0024(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIStateDinoRangedState.FindDirectionToLeadTarget
	 */
	struct UPrimalAIStateDinoRangedState_FindDirectionToLeadTarget_Params
	{
	public:
		struct FVector                                             VectorToHitTargetStandingStill;                          // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      extraTimeAllowed;                                        // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             currentVelocityOfTarget;                                 // 0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x001C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIStateDinoRangedState.ClampProjectileVectorInForwardDirection
	 */
	struct UPrimalAIStateDinoRangedState_ClampProjectileVectorInForwardDirection_Params
	{
	public:
		struct FVector                                             OriginalShootingDirection;                               // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class FName                                                RangedSocket;                                            // 0x000C(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0014(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIStateDinoRangedState.BPRangedAttackOnBegin
	 */
	struct UPrimalAIStateDinoRangedState_BPRangedAttackOnBegin_Params
	{
	public:
		struct FVector                                             TargetLocation;                                          // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             TargetVelocity;                                          // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIStateDinoRangedState.BPRangedAttack
	 */
	struct UPrimalAIStateDinoRangedState_BPRangedAttack_Params
	{
	public:
		struct FVector                                             TargetLocation;                                          // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             TargetVelocity;                                          // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalAIStateBotRangedState.BPGetSocketLocation
	 */
	struct UPrimalAIStateBotRangedState_BPGetSocketLocation_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCableComponent.SpreadOutParticles
	 */
	struct UPrimalCableComponent_SpreadOutParticles_Params
	{
	public:
		struct FVector                                             StartPosition;                                           // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             EndPosition;                                             // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCableComponent.SetAttachEndOverrideComponent
	 */
	struct UPrimalCableComponent_SetAttachEndOverrideComponent_Params
	{
	public:
		class USceneComponent*                                     Component;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCableComponent.MarkRenderDynamicDataDirtyBP
	 */
	struct UPrimalCableComponent_MarkRenderDynamicDataDirtyBP_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCableComponent.GetEndPositions
	 */
	struct UPrimalCableComponent_GetEndPositions_Params
	{
	public:
		struct FVector                                             OutStartPosition;                                        // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             OutEndPosition;                                          // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCableComponent.GetCableParticle
	 */
	struct UPrimalCableComponent_GetCableParticle_Params
	{
	public:
		int32_t                                                    idx;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FCableParticle                                      ReturnValue;                                             // 0x0004(0x001C)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalCableComponent.GetCableMidPoint
	 */
	struct UPrimalCableComponent_GetCableMidPoint_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCableComponent.GetAttachEndOverrideComponent
	 */
	struct UPrimalCableComponent_GetAttachEndOverrideComponent_Params
	{
	public:
		class USceneComponent*                                     ReturnValue;                                             // 0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ZoomOut
	 */
	struct APrimalCharacter_ZoomOut_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.ZoomIn
	 */
	struct APrimalCharacter_ZoomIn_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.UseCenteredTPVCamera
	 */
	struct APrimalCharacter_UseCenteredTPVCamera_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.UpdateTickSetting
	 */
	struct APrimalCharacter_UpdateTickSetting_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.UpdateSwimmingState
	 */
	struct APrimalCharacter_UpdateSwimmingState_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.UpdateHasBuffPreSerialize
	 */
	struct APrimalCharacter_UpdateHasBuffPreSerialize_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.TurnAtRate
	 */
	struct APrimalCharacter_TurnAtRate_Params
	{
	public:
		float                                                      val;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.TryPoop
	 */
	struct APrimalCharacter_TryPoop_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.TryGiveDefaultWeapon
	 */
	struct APrimalCharacter_TryGiveDefaultWeapon_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.TickMovementComponent
	 */
	struct APrimalCharacter_TickMovementComponent_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.TempDampenInputAcceleration
	 */
	struct APrimalCharacter_TempDampenInputAcceleration_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.TakeDamage
	 */
	struct APrimalCharacter_TakeDamage_Params
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_IMR4[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0008(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AController*                                         EventInstigator;                                         // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0038(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.StopAnimEx
	 */
	struct APrimalCharacter_StopAnimEx_Params
	{
	public:
		class UAnimMontage*                                        AnimMontage;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReplicate;                                              // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReplicateToOwner;                                       // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_GXUC[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      BlendOutTime;                                            // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.StaticRemoveCharacterSnapshot
	 */
	struct APrimalCharacter_StaticRemoveCharacterSnapshot_Params
	{
	public:
		class UPrimalItem*                                         Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              From;                                                    // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.StaticGetSnapshotPoseCount
	 */
	struct APrimalCharacter_StaticGetSnapshotPoseCount_Params
	{
	public:
		class UPrimalItem*                                         Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.StaticGetSnapshotPose
	 */
	struct APrimalCharacter_StaticGetSnapshotPose_Params
	{
	public:
		class UPrimalItem*                                         Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    PoseIndex;                                               // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_LQ3L[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FPrimalSnapshotPose                                 ReturnValue;                                             // 0x0010(0x0040)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.StaticApplyCharacterSnapshotEquipment
	 */
	struct APrimalCharacter_StaticApplyCharacterSnapshotEquipment_Params
	{
	public:
		class UPrimalInventoryComponent*                           inventory;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class AActor*                                              To;                                                      // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.StaticApplyCharacterSnapshot
	 */
	struct APrimalCharacter_StaticApplyCharacterSnapshot_Params
	{
	public:
		class UPrimalItem*                                         Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              To;                                                      // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Offset;                                                  // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxExtent;                                               // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Pose;                                                    // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCollisionOn;                                            // 0x0024(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.StartForceSkelUpdate
	 */
	struct APrimalCharacter_StartForceSkelUpdate_Params
	{
	public:
		float                                                      ForTime;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceUpdateMesh;                                        // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bServerOnly;                                             // 0x0005(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.SleepBodies
	 */
	struct APrimalCharacter_SleepBodies_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.ShouldDisableCameraInterpolation
	 */
	struct APrimalCharacter_ShouldDisableCameraInterpolation_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ShouldDealDamageTo
	 */
	struct APrimalCharacter_ShouldDealDamageTo_Params
	{
	public:
		class APrimalCharacter*                                    OtherCharacter;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAllowDamageToSelf;                                      // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAllowDamageToTribe;                                     // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAllowDamageToAlliedTribes;                              // 0x000A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000B(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.SetSleeping
	 */
	struct APrimalCharacter_SetSleeping_Params
	{
	public:
		bool                                                       bSleeping;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bUseRagdollLocationOffset;                               // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.SetMyInventoryComponent
	 */
	struct APrimalCharacter_SetMyInventoryComponent_Params
	{
	public:
		class UPrimalInventoryComponent*                           TheInventoryComponent;                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.SetLastCausedDamageTime
	 */
	struct APrimalCharacter_SetLastCausedDamageTime_Params
	{
	public:
		double                                                     lastCausedDamageTimeValue;                               // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.SetEnableIK
	 */
	struct APrimalCharacter_SetEnableIK_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.SetCharacterMeshesMaterialScalarParamValue
	 */
	struct APrimalCharacter_SetCharacterMeshesMaterialScalarParamValue_Params
	{
	public:
		class FName                                                ParamName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Value;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.SetBoundsScale
	 */
	struct APrimalCharacter_SetBoundsScale_Params
	{
	public:
		float                                                      NewScale;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ServerTryPoop
	 */
	struct APrimalCharacter_ServerTryPoop_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.ServerSetRunning
	 */
	struct APrimalCharacter_ServerSetRunning_Params
	{
	public:
		bool                                                       bNewRunning;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ServerRequestDrag
	 */
	struct APrimalCharacter_ServerRequestDrag_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.ServerGiveDefaultWeapon
	 */
	struct APrimalCharacter_ServerGiveDefaultWeapon_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.ServerDinoOrder
	 */
	struct APrimalCharacter_ServerDinoOrder_Params
	{
	public:
		class APrimalDinoCharacter*                                aDino;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EDinoTamedOrder                                            OrderType;                                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_FOMK[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              Target;                                                  // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ServerCaptureDermis
	 */
	struct APrimalCharacter_ServerCaptureDermis_Params
	{
	public:
		class APrimalCharacter*                                    Target;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ServerCallStayOne
	 */
	struct APrimalCharacter_ServerCallStayOne_Params
	{
	public:
		class APrimalDinoCharacter*                                ForDinoChar;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ServerCallStay
	 */
	struct APrimalCharacter_ServerCallStay_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.ServerCallSetAggressive
	 */
	struct APrimalCharacter_ServerCallSetAggressive_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.ServerCallPassive
	 */
	struct APrimalCharacter_ServerCallPassive_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.ServerCallNeutral
	 */
	struct APrimalCharacter_ServerCallNeutral_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.ServerCallMoveTo
	 */
	struct APrimalCharacter_ServerCallMoveTo_Params
	{
	public:
		struct FVector                                             MoveToLoc;                                               // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ServerCallLandFlyerOne
	 */
	struct APrimalCharacter_ServerCallLandFlyerOne_Params
	{
	public:
		class APrimalDinoCharacter*                                ForDinoChar;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ServerCallFollowOne
	 */
	struct APrimalCharacter_ServerCallFollowOne_Params
	{
	public:
		class APrimalDinoCharacter*                                ForDinoChar;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ServerCallFollowDistanceCycleOne
	 */
	struct APrimalCharacter_ServerCallFollowDistanceCycleOne_Params
	{
	public:
		class APrimalDinoCharacter*                                ForDinoChar;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ServerCallFollow
	 */
	struct APrimalCharacter_ServerCallFollow_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.ServerCallAttackTarget
	 */
	struct APrimalCharacter_ServerCallAttackTarget_Params
	{
	public:
		class AActor*                                              TheTarget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ServerCallAggressive
	 */
	struct APrimalCharacter_ServerCallAggressive_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.RemoveAllJumpDeactivatedBuffs
	 */
	struct APrimalCharacter_RemoveAllJumpDeactivatedBuffs_Params
	{
	public:
		class APrimalBuff*                                         IgnoredBuff;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.PrimalCharacterSleepStateChanged__DelegateSignature
	 */
	struct APrimalCharacter_PrimalCharacterSleepStateChanged__DelegateSignature_Params
	{
	public:
		class APrimalCharacter*                                    forCharacter;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsSleeping;                                             // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.PrimalCharacterNotifyUnstasis__DelegateSignature
	 */
	struct APrimalCharacter_PrimalCharacterNotifyUnstasis__DelegateSignature_Params
	{
	public:
		class APrimalCharacter*                                    ForPrimalCharacter;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.PrimalCharacterNotifyStasis__DelegateSignature
	 */
	struct APrimalCharacter_PrimalCharacterNotifyStasis__DelegateSignature_Params
	{
	public:
		class APrimalCharacter*                                    ForPrimalCharacter;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.PrimalCharacterNotifyLevelUp__DelegateSignature
	 */
	struct APrimalCharacter_PrimalCharacterNotifyLevelUp__DelegateSignature_Params
	{
	public:
		int32_t                                                    ExtraCharacterLevel;                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.PrimalCharacterNotifyDamage__DelegateSignature
	 */
	struct APrimalCharacter_PrimalCharacterNotifyDamage__DelegateSignature_Params
	{
	public:
		float                                                      DamageAmount;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_8PNK[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0008(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AController*                                         EventInstigator;                                         // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.PrimalCharacterInputNotify__DelegateSignature
	 */
	struct APrimalCharacter_PrimalCharacterInputNotify__DelegateSignature_Params
	{
	public:
		class APrimalCharacter*                                    ForPrimalCharacter;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EPrimalCharacterInputType                                  inputType;                                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.PrimalCharacterDied__DelegateSignature
	 */
	struct APrimalCharacter_PrimalCharacterDied__DelegateSignature_Params
	{
	public:
		class APrimalCharacter*                                    DiedCharacter;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.PreventsTargeting
	 */
	struct APrimalCharacter_PreventsTargeting_Params
	{
	public:
		class AActor*                                              ByActor;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.PreventNotifySound
	 */
	struct APrimalCharacter_PreventNotifySound_Params
	{
	public:
		class USoundBase*                                          SoundIn;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.PreventInputType
	 */
	struct APrimalCharacter_PreventInputType_Params
	{
	public:
		EPrimalCharacterInputType                                  inputType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.PreventInputDoesOffset
	 */
	struct APrimalCharacter_PreventInputDoesOffset_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.Poop
	 */
	struct APrimalCharacter_Poop_Params
	{
	public:
		bool                                                       bForcePoop;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.PlayHurtAnim
	 */
	struct APrimalCharacter_PlayHurtAnim_Params
	{
	public:
		float                                                      DamageTaken;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_IKFP[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0008(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class APawn*                                               PawnInstigator;                                          // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsLocalPath;                                            // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.PlayHitEffectRadial
	 */
	struct APrimalCharacter_PlayHitEffectRadial_Params
	{
	public:
		float                                                      DamageTaken;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_8RAP[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRadialDamageEvent                                  DamageEvent;                                             // 0x0008(0x0050)  (Parm)
		class APawn*                                               PawnInstigator;                                          // 0x0058(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0060(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.PlayHitEffectPoint
	 */
	struct APrimalCharacter_PlayHitEffectPoint_Params
	{
	public:
		float                                                      DamageTaken;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_OS33[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FPointDamageEvent                                   DamageEvent;                                             // 0x0008(0x00B8)  (Parm)
		class APawn*                                               PawnInstigator;                                          // 0x00C0(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x00C8(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.PlayHitEffectGeneric
	 */
	struct APrimalCharacter_PlayHitEffectGeneric_Params
	{
	public:
		float                                                      DamageTaken;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KACK[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0008(0x0020)  (Parm)
		class APawn*                                               PawnInstigator;                                          // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.PlayerCommand
	 */
	struct APrimalCharacter_PlayerCommand_Params
	{
	public:
		class FString                                              TheCommand;                                              // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.PlayDyingRadial
	 */
	struct APrimalCharacter_PlayDyingRadial_Params
	{
	public:
		float                                                      KillingDamage;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_8T56[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRadialDamageEvent                                  DamageEvent;                                             // 0x0008(0x0050)  (Parm)
		class APawn*                                               InstigatingPawn;                                         // 0x0058(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0060(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.PlayDyingPoint
	 */
	struct APrimalCharacter_PlayDyingPoint_Params
	{
	public:
		float                                                      KillingDamage;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_L4W1[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FPointDamageEvent                                   DamageEvent;                                             // 0x0008(0x00B8)  (Parm)
		class APawn*                                               InstigatingPawn;                                         // 0x00C0(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x00C8(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.PlayDyingGeneric
	 */
	struct APrimalCharacter_PlayDyingGeneric_Params
	{
	public:
		float                                                      KillingDamage;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NX6N[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0008(0x0020)  (Parm)
		class APawn*                                               InstigatingPawn;                                         // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.PlayAnimEx
	 */
	struct APrimalCharacter_PlayAnimEx_Params
	{
	public:
		class UAnimMontage*                                        AnimMontage;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InPlayRate;                                              // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                StartSectionName;                                        // 0x000C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReplicate;                                              // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReplicateToOwner;                                       // 0x0015(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceTickPoseAndServerUpdateMesh;                       // 0x0016(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceTickPoseOnServer;                                  // 0x0017(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceKeepSynced;                                        // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7QQS[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      BlendInTime;                                             // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BlendOutTime;                                            // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0024(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.OverrideCameraTargetOriginLocation
	 */
	struct APrimalCharacter_OverrideCameraTargetOriginLocation_Params
	{
	public:
		struct FVector                                             OutOverrideOrigin;                                       // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class FName                                                WithCameraStyle;                                         // 0x000C(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.OverrideCameraInterpSpeed
	 */
	struct APrimalCharacter_OverrideCameraInterpSpeed_Params
	{
	public:
		float                                                      DefaultTPVCameraSpeedInterpMultiplier;                   // 0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DefaultTPVOffsetInterpSpeed;                             // 0x0004(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TPVCameraSpeedInterpMultiplier;                          // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TPVOffsetInterpSpeed;                                    // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.OrbitCamToggle
	 */
	struct APrimalCharacter_OrbitCamToggle_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.OrbitCamOn
	 */
	struct APrimalCharacter_OrbitCamOn_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.OrbitCamOff
	 */
	struct APrimalCharacter_OrbitCamOff_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.OnStopRunning
	 */
	struct APrimalCharacter_OnStopRunning_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.OnStopJump
	 */
	struct APrimalCharacter_OnStopJump_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.OnStopFire
	 */
	struct APrimalCharacter_OnStopFire_Params
	{
	public:
		bool                                                       bFromGamepadRight;                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.OnStopAltFire
	 */
	struct APrimalCharacter_OnStopAltFire_Params
	{
	public:
		bool                                                       bFromGamepad;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.OnStartRunning
	 */
	struct APrimalCharacter_OnStartRunning_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.OnStartJump
	 */
	struct APrimalCharacter_OnStartJump_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.OnStartFire
	 */
	struct APrimalCharacter_OnStartFire_Params
	{
	public:
		bool                                                       bFromGamepadRight;                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.OnStartAltFire
	 */
	struct APrimalCharacter_OnStartAltFire_Params
	{
	public:
		bool                                                       bFromGamepad;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.OnRunToggleReleased
	 */
	struct APrimalCharacter_OnRunToggleReleased_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.OnRunTogglePressed
	 */
	struct APrimalCharacter_OnRunTogglePressed_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.OnRunToggle
	 */
	struct APrimalCharacter_OnRunToggle_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.OnRep_RagdollPositions
	 */
	struct APrimalCharacter_OnRep_RagdollPositions_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.OnRep_PaintingComponent
	 */
	struct APrimalCharacter_OnRep_PaintingComponent_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.OnRep_MountedDino
	 */
	struct APrimalCharacter_OnRep_MountedDino_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.OnRep_IsSleeping
	 */
	struct APrimalCharacter_OnRep_IsSleeping_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.OnRep_IsDead
	 */
	struct APrimalCharacter_OnRep_IsDead_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.OnOrbitCameraViewChange__DelegateSignature
	 */
	struct APrimalCharacter_OnOrbitCameraViewChange__DelegateSignature_Params
	{
	public:
		bool                                                       bEnabled;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.OnMassTeleportEvent
	 */
	struct APrimalCharacter_OnMassTeleportEvent_Params
	{
	public:
		EMassTeleportState                                         EventState;                                              // 0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_R4X8[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalCharacter*                                    TeleportInitiatedByChar;                                 // 0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.OnEndDrag
	 */
	struct APrimalCharacter_OnEndDrag_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.OnDetachedFromCharacter
	 */
	struct APrimalCharacter_OnDetachedFromCharacter_Params
	{
	public:
		class APrimalCharacter*                                    ACharacter;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    OverrideDirection;                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.OnBeginDrag
	 */
	struct APrimalCharacter_OnBeginDrag_Params
	{
	public:
		class APrimalCharacter*                                    Dragged;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    BoneIndex;                                               // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bWithGrapHook;                                           // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.OnAttachedToCharacter
	 */
	struct APrimalCharacter_OnAttachedToCharacter_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.OnAltFireReleased
	 */
	struct APrimalCharacter_OnAltFireReleased_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.OnAltFirePressed
	 */
	struct APrimalCharacter_OnAltFirePressed_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.NetUpdateTribeName
	 */
	struct APrimalCharacter_NetUpdateTribeName_Params
	{
	public:
		class FString                                              NewTribeName;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.NetStopAllAnimMontage
	 */
	struct APrimalCharacter_NetStopAllAnimMontage_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.NetSetMovementModeSimulatedInternal
	 */
	struct APrimalCharacter_NetSetMovementModeSimulatedInternal_Params
	{
	public:
		EMovementMode                                              NewMovementMode;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.NetSetCharacterMovementVelocity
	 */
	struct APrimalCharacter_NetSetCharacterMovementVelocity_Params
	{
	public:
		bool                                                       bSetNewVelocity;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_OIP2[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             NewVelocity;                                             // 0x0004(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSetNewMovementMode;                                     // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EMovementMode                                              NewMovementMode;                                         // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.NetPlaySoundOnCharacter
	 */
	struct APrimalCharacter_NetPlaySoundOnCharacter_Params
	{
	public:
		class USoundBase*                                          SoundToPlay;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPlayOnOwner;                                            // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.NetOnJumped
	 */
	struct APrimalCharacter_NetOnJumped_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.NetForceUpdateAimedCharacters
	 */
	struct APrimalCharacter_NetForceUpdateAimedCharacters_Params
	{
	public:
		struct FVector                                             StartLoc;                                                // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             EndLoc;                                                  // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              IgnoreActor;                                             // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceUpdateIgnoreActor;                                 // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QZYF[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      TraceRadius;                                             // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.NetDidLand
	 */
	struct APrimalCharacter_NetDidLand_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.NetAddCharacterMovementImpulse
	 */
	struct APrimalCharacter_NetAddCharacterMovementImpulse_Params
	{
	public:
		struct FVector                                             Impulse;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bVelChange;                                              // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_0NVL[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ImpulseExponent;                                         // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSetNewMovementMode;                                     // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EMovementMode                                              NewMovementMode;                                         // 0x0015(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOverrideMaxImpulseZ;                                    // 0x0016(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.NativeSimulateHair
	 */
	struct APrimalCharacter_NativeSimulateHair_Params
	{
	public:
		TArray<struct FVector>                                     CurrentPos;                                              // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<struct FVector>                                     LastPos;                                                 // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<struct FVector>                                     RestPos;                                                 // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<struct FVector>                                     PivotPos;                                                // 0x0030(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<float>                                              RestDistance;                                            // 0x0040(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FVector                                             HairSocketLoc;                                           // 0x0050(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            HairSocketRot;                                           // 0x005C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ChestSocketLoc;                                          // 0x0068(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ChestSocketRot;                                          // 0x0074(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0080(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Damping;                                                 // 0x0084(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DampingFrontModifier;                                    // 0x0088(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DampingBack;                                             // 0x008C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InWater;                                                 // 0x0090(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HairWetness;                                             // 0x0094(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DragForce;                                               // 0x0098(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HairScale;                                               // 0x009C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SpringForce;                                             // 0x00A0(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SpringForceFrontModifier;                                // 0x00A4(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SpringForceBack;                                         // 0x00A8(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      GravityForce;                                            // 0x00AC(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ShoulderLCollisionOffset;                                // 0x00B0(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ShoulderLCollisionRadius;                                // 0x00BC(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ShoulderRCollisionOffset;                                // 0x00C0(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ShoulderRCollisionRadius;                                // 0x00CC(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             HeadHairCollisionOffset;                                 // 0x00D0(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HeadHairCollisionRadius;                                 // 0x00DC(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NeckHairCollisionOffset;                                 // 0x00E0(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      NeckHairCollisionRadius;                                 // 0x00EC(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxDistanceToRestPos;                                    // 0x00F0(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_07FE[0xC];                                   // 0x00F4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          LastHeadTransform;                                       // 0x0100(0x0030)  (Parm, IsPlainOldData, NoDestructor)
		bool                                                       bPosAsPivot;                                             // 0x0130(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCollideMiddle;                                          // 0x0131(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCollideWithNeck;                                        // 0x0132(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.MoveUp
	 */
	struct APrimalCharacter_MoveUp_Params
	{
	public:
		float                                                      val;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.MoveRight
	 */
	struct APrimalCharacter_MoveRight_Params
	{
	public:
		float                                                      val;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.MoveForward
	 */
	struct APrimalCharacter_MoveForward_Params
	{
	public:
		float                                                      val;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ModifyStasisComponentRadius
	 */
	struct APrimalCharacter_ModifyStasisComponentRadius_Params
	{
	public:
		float                                                      Delta;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.LookUpAtRate
	 */
	struct APrimalCharacter_LookUpAtRate_Params
	{
	public:
		float                                                      val;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.LocalUnpossessed
	 */
	struct APrimalCharacter_LocalUnpossessed_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.LevelUpPlayerAddedStat
	 */
	struct APrimalCharacter_LevelUpPlayerAddedStat_Params
	{
	public:
		EPrimalCharacterStatusValue                                StatToLevel;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CN9T[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    NumLevels;                                               // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            ForPlayer;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsWildSlow
	 */
	struct APrimalCharacter_IsWildSlow_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsWatered
	 */
	struct APrimalCharacter_IsWatered_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsValidForCombatMusic
	 */
	struct APrimalCharacter_IsValidForCombatMusic_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsSubmerged
	 */
	struct APrimalCharacter_IsSubmerged_Params
	{
	public:
		bool                                                       bDontCheckSwimming;                                      // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bUseFullThreshold;                                       // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceCheck;                                             // 0x0002(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFromVolumeChange;                                       // 0x0003(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsSitting
	 */
	struct APrimalCharacter_IsSitting_Params
	{
	public:
		bool                                                       bIgnoreLockedToSeat;                                     // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsRunning
	 */
	struct APrimalCharacter_IsRunning_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsRider
	 */
	struct APrimalCharacter_IsRider_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsProneOrSitting
	 */
	struct APrimalCharacter_IsProneOrSitting_Params
	{
	public:
		bool                                                       bIgnoreLockedToSeat;                                     // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsPrimalCharWalking
	 */
	struct APrimalCharacter_IsPrimalCharWalking_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsPrimalCharSwimming
	 */
	struct APrimalCharacter_IsPrimalCharSwimming_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsPrimalCharFriendly
	 */
	struct APrimalCharacter_IsPrimalCharFriendly_Params
	{
	public:
		class APrimalCharacter*                                    primalChar;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsPrimalCharFlying
	 */
	struct APrimalCharacter_IsPrimalCharFlying_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsPrimalCharFalling
	 */
	struct APrimalCharacter_IsPrimalCharFalling_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsOwningClient
	 */
	struct APrimalCharacter_IsOwningClient_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsOnSeatingStructure
	 */
	struct APrimalCharacter_IsOnSeatingStructure_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsMoving
	 */
	struct APrimalCharacter_IsMoving_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsMontagePlaying
	 */
	struct APrimalCharacter_IsMontagePlaying_Params
	{
	public:
		class UAnimMontage*                                        AnimMontage;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TimeFromEndToConsiderFinished;                           // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsMeshGameplayRelevant
	 */
	struct APrimalCharacter_IsMeshGameplayRelevant_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsInvincible
	 */
	struct APrimalCharacter_IsInvincible_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsInVacuumSealedSpace
	 */
	struct APrimalCharacter_IsInVacuumSealedSpace_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsInStatusState
	 */
	struct APrimalCharacter_IsInStatusState_Params
	{
	public:
		EPrimalCharacterStatusState                                StatusStateType;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsHostileTo
	 */
	struct APrimalCharacter_IsHostileTo_Params
	{
	public:
		class APrimalCharacter*                                    OtherCharacter;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ignoreDead;                                              // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsHostileOrAggressiveTo
	 */
	struct APrimalCharacter_IsHostileOrAggressiveTo_Params
	{
	public:
		class APrimalCharacter*                                    OtherCharacter;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsGameInputAllowed
	 */
	struct APrimalCharacter_IsGameInputAllowed_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsFirstPerson
	 */
	struct APrimalCharacter_IsFirstPerson_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsDeadOrDying
	 */
	struct APrimalCharacter_IsDeadOrDying_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsDamageOccludedByStructures
	 */
	struct APrimalCharacter_IsDamageOccludedByStructures_Params
	{
	public:
		class AActor*                                              DamageCauser;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsCharacterHardAttached
	 */
	struct APrimalCharacter_IsCharacterHardAttached_Params
	{
	public:
		bool                                                       bIgnoreRiding;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreCarried;                                          // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsBossDino
	 */
	struct APrimalCharacter_IsBossDino_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsBlockedByShield
	 */
	struct APrimalCharacter_IsBlockedByShield_Params
	{
	public:
		struct FHitResult                                          HitInfo;                                                 // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector                                             ShotDirection;                                           // 0x0088(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bBlockAllPointDamage;                                    // 0x0094(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0095(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsBeingDestroyed
	 */
	struct APrimalCharacter_IsBeingDestroyed_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsBaby
	 */
	struct APrimalCharacter_IsBaby_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsAttachedToSomething
	 */
	struct APrimalCharacter_IsAttachedToSomething_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsAlliedWithOtherTeam
	 */
	struct APrimalCharacter_IsAlliedWithOtherTeam_Params
	{
	public:
		int32_t                                                    OtherTeamID;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.IsAlive
	 */
	struct APrimalCharacter_IsAlive_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.Immobilize
	 */
	struct APrimalCharacter_Immobilize_Params
	{
	public:
		bool                                                       bImmobilize;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZWIM[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              UsingActor;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bImmobilizeFalling;                                      // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPreventDismount;                                        // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.HurtMe
	 */
	struct APrimalCharacter_HurtMe_Params
	{
	public:
		int32_t                                                    HowMuch;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.HasCryoSickness
	 */
	struct APrimalCharacter_HasCryoSickness_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.HasBuffWithCustomTags
	 */
	struct APrimalCharacter_HasBuffWithCustomTags_Params
	{
	public:
		TArray<class FName>                                        customTags;                                              // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.HasBuffWithCustomTag
	 */
	struct APrimalCharacter_HasBuffWithCustomTag_Params
	{
	public:
		class FName                                                BuffCustomTag;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.HasBuff
	 */
	struct APrimalCharacter_HasBuff_Params
	{
	public:
		class UClass*                                              BuffClass;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       useExactMatch;                                           // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.HasAnyBuffWithDisabledWeaponTag
	 */
	struct APrimalCharacter_HasAnyBuffWithDisabledWeaponTag_Params
	{
	public:
		class FName                                                Tag;                                                     // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class APrimalBuff*                                         FoundBuff;                                               // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GiveKillExperience
	 */
	struct APrimalCharacter_GiveKillExperience_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetTPVCameraOffsetMultiplier
	 */
	struct APrimalCharacter_GetTPVCameraOffsetMultiplier_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetTPVCameraOffset
	 */
	struct APrimalCharacter_GetTPVCameraOffset_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetSocketLocation
	 */
	struct APrimalCharacter_GetSocketLocation_Params
	{
	public:
		class FName                                                SocketName;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetSnapshotComponent
	 */
	struct APrimalCharacter_GetSnapshotComponent_Params
	{
	public:
		class AActor*                                              From;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Tag;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UActorComponent*                                     ReturnValue;                                             // 0x0010(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetShortName
	 */
	struct APrimalCharacter_GetShortName_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetRunningSpeedModifier
	 */
	struct APrimalCharacter_GetRunningSpeedModifier_Params
	{
	public:
		bool                                                       bIsForDefaultSpeed;                                      // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_D0XQ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetRole
	 */
	struct APrimalCharacter_GetRole_Params
	{
	public:
		ENetRole                                                   ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetPrimalCharMovementMode
	 */
	struct APrimalCharacter_GetPrimalCharMovementMode_Params
	{
	public:
		EMovementMode                                              ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetPhysMatTypeFromHits
	 */
	struct APrimalCharacter_GetPhysMatTypeFromHits_Params
	{
	public:
		TArray<struct FHitResult>                                  FromHits;                                                // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		EPhysicalSurface                                           ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetPhysMatTypeFromHit
	 */
	struct APrimalCharacter_GetPhysMatTypeFromHit_Params
	{
	public:
		struct FHitResult                                          FromHit;                                                 // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		EPhysicalSurface                                           ReturnValue;                                             // 0x0088(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetPaintingTexture
	 */
	struct APrimalCharacter_GetPaintingTexture_Params
	{
	public:
		class UPaintingTexture*                                    ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetPaintingMesh
	 */
	struct APrimalCharacter_GetPaintingMesh_Params
	{
	public:
		class UMeshComponent*                                      ReturnValue;                                             // 0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetOverrideSocket
	 */
	struct APrimalCharacter_GetOverrideSocket_Params
	{
	public:
		class FName                                                From;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetOverridenMontage
	 */
	struct APrimalCharacter_GetOverridenMontage_Params
	{
	public:
		class UAnimMontage*                                        AnimMontage;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UAnimMontage*                                        ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetOverridenAnimSequence
	 */
	struct APrimalCharacter_GetOverridenAnimSequence_Params
	{
	public:
		class UAnimSequence*                                       AnimSeq;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UAnimSequence*                                       ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetMyBiomeZoneVolume
	 */
	struct APrimalCharacter_GetMyBiomeZoneVolume_Params
	{
	public:
		class ABiomeZoneVolume*                                    ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetMoveAnimRate
	 */
	struct APrimalCharacter_GetMoveAnimRate_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetMaxHealth
	 */
	struct APrimalCharacter_GetMaxHealth_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetLastCausedDamageTime
	 */
	struct APrimalCharacter_GetLastCausedDamageTime_Params
	{
	public:
		double                                                     ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetKillXP
	 */
	struct APrimalCharacter_GetKillXP_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetInterpolatedRotation_NonFlattened
	 */
	struct APrimalCharacter_GetInterpolatedRotation_NonFlattened_Params
	{
	public:
		struct FRotator                                            ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetInputDirectionVector
	 */
	struct APrimalCharacter_GetInputDirectionVector_Params
	{
	public:
		bool                                                       bRelativeToViewDirection;                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_G0U8[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             ReturnValue;                                             // 0x0004(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetImmersionDepth
	 */
	struct APrimalCharacter_GetImmersionDepth_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetHealthPercentage
	 */
	struct APrimalCharacter_GetHealthPercentage_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetHealth
	 */
	struct APrimalCharacter_GetHealth_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetGrappledBuffClassOverride
	 */
	struct APrimalCharacter_GetGrappledBuffClassOverride_Params
	{
	public:
		class UClass*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetFootPhysicalSurfaceType
	 */
	struct APrimalCharacter_GetFootPhysicalSurfaceType_Params
	{
	public:
		bool                                                       bForce;                                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsForFootstepParticles;                                 // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EPhysicalSurface                                           ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetFloatingHUDLocation
	 */
	struct APrimalCharacter_GetFloatingHUDLocation_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetFallAcceleration
	 */
	struct APrimalCharacter_GetFallAcceleration_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetDragWeight
	 */
	struct APrimalCharacter_GetDragWeight_Params
	{
	public:
		class APrimalCharacter*                                    ForDragger;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetDetailedDescription
	 */
	struct APrimalCharacter_GetDetailedDescription_Params
	{
	public:
		class FString                                              IndentPrefix;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<class FString>                                      ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetDescriptiveName
	 */
	struct APrimalCharacter_GetDescriptiveName_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetDefaultMovementSpeed
	 */
	struct APrimalCharacter_GetDefaultMovementSpeed_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetDebugInfoString
	 */
	struct APrimalCharacter_GetDebugInfoString_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetCharacterViewLocationAndDirection
	 */
	struct APrimalCharacter_GetCharacterViewLocationAndDirection_Params
	{
	public:
		struct FVector                                             ViewLocation;                                            // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ViewDirection;                                           // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFromCrosshairOrCamera;                                  // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_BYNJ[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      FallbackAngleOffsetDegrees;                              // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetCharacterStatusComponent
	 */
	struct APrimalCharacter_GetCharacterStatusComponent_Params
	{
	public:
		class UPrimalCharacterStatusComponent*                     ReturnValue;                                             // 0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetCharactersGrappledToMe
	 */
	struct APrimalCharacter_GetCharactersGrappledToMe_Params
	{
	public:
		TArray<class APrimalCharacter*>                            GrappledCharsArray;                                      // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetCapsuleTopLocation
	 */
	struct APrimalCharacter_GetCapsuleTopLocation_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetCapsuleBottomLocation
	 */
	struct APrimalCharacter_GetCapsuleBottomLocation_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetBuffWithCustomTag
	 */
	struct APrimalCharacter_GetBuffWithCustomTag_Params
	{
	public:
		class FName                                                BuffCustomTag;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalBuff*                                         ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetBuffStackCount
	 */
	struct APrimalCharacter_GetBuffStackCount_Params
	{
	public:
		class UClass*                                              BuffClass;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       useExactMatch;                                           // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_DE7B[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetBuffs
	 */
	struct APrimalCharacter_GetBuffs_Params
	{
	public:
		TArray<class APrimalBuff*>                                 TheBuffs;                                                // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetBuff
	 */
	struct APrimalCharacter_GetBuff_Params
	{
	public:
		class UClass*                                              BuffClass;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalBuff*                                         ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetBaseStatusValue
	 */
	struct APrimalCharacter_GetBaseStatusValue_Params
	{
	public:
		EPrimalCharacterStatusValue                                StatusValueType;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XYVE[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetBaseDragWeight
	 */
	struct APrimalCharacter_GetBaseDragWeight_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetBasedOrSeatingOnDino
	 */
	struct APrimalCharacter_GetBasedOrSeatingOnDino_Params
	{
	public:
		class APrimalDinoCharacter*                                ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetBasedOnDino
	 */
	struct APrimalCharacter_GetBasedOnDino_Params
	{
	public:
		class APrimalDinoCharacter*                                ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetBasedMovementComponent
	 */
	struct APrimalCharacter_GetBasedMovementComponent_Params
	{
	public:
		class UPrimitiveComponent*                                 ReturnValue;                                             // 0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetAttachedExplosive
	 */
	struct APrimalCharacter_GetAttachedExplosive_Params
	{
	public:
		class APrimalStructureExplosive*                           ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetAllBuffs
	 */
	struct APrimalCharacter_GetAllBuffs_Params
	{
	public:
		TArray<class APrimalBuff*>                                 AllBuffs;                                                // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetAllAttachedChars
	 */
	struct APrimalCharacter_GetAllAttachedChars_Params
	{
	public:
		TArray<class APrimalCharacter*>                            AttachedCharsArray;                                      // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bIncludeSelf;                                            // 0x0010(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIncludeBased;                                           // 0x0011(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIncludePassengers;                                      // 0x0012(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIncludeCarried;                                         // 0x0013(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetAimOffsets
	 */
	struct APrimalCharacter_GetAimOffsets_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            RootRotOffset;                                           // 0x0004(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TheRootYawSpeed;                                         // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxYawAimClamp;                                          // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             RootLocOffset;                                           // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0024(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.GetAimedActor
	 */
	struct APrimalCharacter_GetAimedActor_Params
	{
	public:
		struct FHitResult                                          outHitResult;                                            // 0x0000(0x0088)  (Parm, OutParm)
		ECollisionChannel                                          CollisionChannel;                                        // 0x0088(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_C07A[0x3];                                   // 0x0089(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      MaxDistanceOverride;                                     // 0x008C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CheckRadius;                                             // 0x0090(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceUseCameraLocation;                                 // 0x0094(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceUpdateAimedActors;                                 // 0x0095(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ForceUpdateCharacter
	 */
	struct APrimalCharacter_ForceUpdateCharacter_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalCharacter*                                    primalChar;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ForceUpdateAimedCharacters
	 */
	struct APrimalCharacter_ForceUpdateAimedCharacters_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             StartLoc;                                                // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             EndLoc;                                                  // 0x0014(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class AActor*                                              IgnoreActor;                                             // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceUpdateIgnoreActor;                                 // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1F3K[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      TraceRadius;                                             // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ForceTickPoseDelta
	 */
	struct APrimalCharacter_ForceTickPoseDelta_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.ForceRefreshBones
	 */
	struct APrimalCharacter_ForceRefreshBones_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.ForceMeshRelevant
	 */
	struct APrimalCharacter_ForceMeshRelevant_Params
	{
	public:
		float                                                      Duration;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ForceAddUnderwaterCharacterStatusValues
	 */
	struct APrimalCharacter_ForceAddUnderwaterCharacterStatusValues_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.FadeOutLoadingMusic
	 */
	struct APrimalCharacter_FadeOutLoadingMusic_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.ExecSetSleeping
	 */
	struct APrimalCharacter_ExecSetSleeping_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ExecSetPawnSleeping
	 */
	struct APrimalCharacter_ExecSetPawnSleeping_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.EndForceSkelUpdate
	 */
	struct APrimalCharacter_EndForceSkelUpdate_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.EndDragCharacter
	 */
	struct APrimalCharacter_EndDragCharacter_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.EnableTurnToFaceRotation
	 */
	struct APrimalCharacter_EnableTurnToFaceRotation_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.EnableIK
	 */
	struct APrimalCharacter_EnableIK_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceOnDedicated;                                       // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.EnableBPTimerServer
	 */
	struct APrimalCharacter_EnableBPTimerServer_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.EnableBPTimerNonDedicated
	 */
	struct APrimalCharacter_EnableBPTimerNonDedicated_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.EnableBodiesGravity
	 */
	struct APrimalCharacter_EnableBodiesGravity_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.EmitPoop
	 */
	struct APrimalCharacter_EmitPoop_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.DoSetRagdollPhysics
	 */
	struct APrimalCharacter_DoSetRagdollPhysics_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.DoFindGoodSpot
	 */
	struct APrimalCharacter_DoFindGoodSpot_Params
	{
	public:
		struct FVector                                             RagdollLoc;                                              // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bClearCollisionSweep;                                    // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.DoCharacterDetachment
	 */
	struct APrimalCharacter_DoCharacterDetachment_Params
	{
	public:
		bool                                                       bIncludeRiding;                                          // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIncludeCarrying;                                        // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_DJJK[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalBuff*                                         BuffToIgnore;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.DinoMountOnMe
	 */
	struct APrimalCharacter_DinoMountOnMe_Params
	{
	public:
		class APrimalDinoCharacter*                                DinoCharacter;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.DidTeleport
	 */
	struct APrimalCharacter_DidTeleport_Params
	{
	public:
		struct FVector                                             NewLoc;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            newRot;                                                  // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDoCameraFade;                                           // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1L1F[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FLinearColor                                        CameraFadeColor;                                         // 0x001C(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.DetachFromOtherCharacter
	 */
	struct APrimalCharacter_DetachFromOtherCharacter_Params
	{
	public:
		bool                                                       enableMovementAndCollision;                              // 0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.DeathHarvestingFadeOut
	 */
	struct APrimalCharacter_DeathHarvestingFadeOut_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.DeactivateBuffs
	 */
	struct APrimalCharacter_DeactivateBuffs_Params
	{
	public:
		class UClass*                                              ForBuffClass;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         ForInstigatorItem;                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       perfectClassMatch;                                       // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.CreateSnapshotComponent
	 */
	struct APrimalCharacter_CreateSnapshotComponent_Params
	{
	public:
		class AActor*                                              For;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObject*                                             Template;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Tag;                                                     // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Name;                                                    // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UActorComponent*                                     ReturnValue;                                             // 0x0020(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ConsumeProjectileImpact
	 */
	struct APrimalCharacter_ConsumeProjectileImpact_Params
	{
	public:
		class AShooterProjectile*                                  theProjectile;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FHitResult                                          HitResult;                                               // 0x0008(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0090(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ClientSyncAnimation
	 */
	struct APrimalCharacter_ClientSyncAnimation_Params
	{
	public:
		class UAnimMontage*                                        AnimMontage;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      PlayRate;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ServerCurrentMontageTime;                                // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceTickPoseAndServerUpdateMesh;                       // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_WVOM[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      BlendInTime;                                             // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BlendOutTime;                                            // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ClientStopAnimation
	 */
	struct APrimalCharacter_ClientStopAnimation_Params
	{
	public:
		class UAnimMontage*                                        AnimMontage;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bStopOnOwner;                                            // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_44FY[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      BlendOutTime;                                            // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ClientRagdollUpdate
	 */
	struct APrimalCharacter_ClientRagdollUpdate_Params
	{
	public:
		TArray<struct FVector_NetQuantize>                         BoneLocations;                                           // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
		struct FRotator_NetQuantize                                TargetRootRotation;                                      // 0x0010(0x000C)  (Parm)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ClientPlayAnimation
	 */
	struct APrimalCharacter_ClientPlayAnimation_Params
	{
	public:
		class UAnimMontage*                                        AnimMontage;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      PlayRate;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                StartSectionName;                                        // 0x000C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPlayOnOwner;                                            // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceTickPoseAndServerUpdateMesh;                       // 0x0015(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ClientOrderedMoveTo
	 */
	struct APrimalCharacter_ClientOrderedMoveTo_Params
	{
	public:
		struct FVector                                             MoveToLoc;                                               // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ClientOrderedAttackTarget
	 */
	struct APrimalCharacter_ClientOrderedAttackTarget_Params
	{
	public:
		class AActor*                                              attackTarget;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ClientNotifyLevelUp
	 */
	struct APrimalCharacter_ClientNotifyLevelUp_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.ClientFailedPoop
	 */
	struct APrimalCharacter_ClientFailedPoop_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.ClientEndRagdollUpdate
	 */
	struct APrimalCharacter_ClientEndRagdollUpdate_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.ClientDidPoop
	 */
	struct APrimalCharacter_ClientDidPoop_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.ClearRidingDinoAsPassenger
	 */
	struct APrimalCharacter_ClearRidingDinoAsPassenger_Params
	{
	public:
		bool                                                       bFromDino;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ClearMountedDino
	 */
	struct APrimalCharacter_ClearMountedDino_Params
	{
	public:
		bool                                                       fromMountedDino;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ClearControlInputVector
	 */
	struct APrimalCharacter_ClearControlInputVector_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.ClearCarryingDino
	 */
	struct APrimalCharacter_ClearCarryingDino_Params
	{
	public:
		bool                                                       bFromDino;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCancelAnyCarryBuffs;                                    // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.CharacterIsCarriedAsPassenger
	 */
	struct APrimalCharacter_CharacterIsCarriedAsPassenger_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.CharacterBuffsPreventFirstPerson
	 */
	struct APrimalCharacter_CharacterBuffsPreventFirstPerson_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.CaptureCharacterSnapshot
	 */
	struct APrimalCharacter_CaptureCharacterSnapshot_Params
	{
	public:
		class UPrimalItem*                                         Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.CanMountOnMe
	 */
	struct APrimalCharacter_CanMountOnMe_Params
	{
	public:
		class APrimalDinoCharacter*                                DinoCharacter;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.CanDragCharacter
	 */
	struct APrimalCharacter_CanDragCharacter_Params
	{
	public:
		class APrimalCharacter*                                    Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.CallDrawHUD
	 */
	struct APrimalCharacter_CallDrawHUD_Params
	{
	public:
		class AShooterHUD*                                         HUD;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.CallDrawFloatingHUD
	 */
	struct APrimalCharacter_CallDrawFloatingHUD_Params
	{
	public:
		class AShooterHUD*                                         HUD;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BuffsPreventInventoryAccess
	 */
	struct APrimalCharacter_BuffsPreventInventoryAccess_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPTriggerStasisEvent
	 */
	struct APrimalCharacter_BPTriggerStasisEvent_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPTimerServer
	 */
	struct APrimalCharacter_BPTimerServer_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPTimerNonDedicated
	 */
	struct APrimalCharacter_BPTimerNonDedicated_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPShouldLimitRightDirection
	 */
	struct APrimalCharacter_BPShouldLimitRightDirection_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPShouldLimitForwardDirection
	 */
	struct APrimalCharacter_BPShouldLimitForwardDirection_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPSetCharacterMeshesMaterialScalarParamValue
	 */
	struct APrimalCharacter_BPSetCharacterMeshesMaterialScalarParamValue_Params
	{
	public:
		class FName                                                ParamName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Value;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPRemovedAttachmentsForItem
	 */
	struct APrimalCharacter_BPRemovedAttachmentsForItem_Params
	{
	public:
		class UPrimalItem*                                         anItem;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPRemovedAsPassenger
	 */
	struct APrimalCharacter_BPRemovedAsPassenger_Params
	{
	public:
		class APrimalCharacter*                                    Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPRemoveCharacterSnapshot
	 */
	struct APrimalCharacter_BPRemoveCharacterSnapshot_Params
	{
	public:
		class UPrimalItem*                                         Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              From;                                                    // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPPreventStasis
	 */
	struct APrimalCharacter_BPPreventStasis_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPPreventNotifySound
	 */
	struct APrimalCharacter_BPPreventNotifySound_Params
	{
	public:
		class USoundBase*                                          SoundIn;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPPreventInputType
	 */
	struct APrimalCharacter_BPPreventInputType_Params
	{
	public:
		EPrimalCharacterInputType                                  inputType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPPreventFirstPerson
	 */
	struct APrimalCharacter_BPPreventFirstPerson_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPPreventFallDamage
	 */
	struct APrimalCharacter_BPPreventFallDamage_Params
	{
	public:
		struct FHitResult                                          HitResult;                                               // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		float                                                      FallDamageAmount;                                        // 0x0088(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x008C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPPreSerializeSaveGame
	 */
	struct APrimalCharacter_BPPreSerializeSaveGame_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPPostLoadedFromSaveGame
	 */
	struct APrimalCharacter_BPPostLoadedFromSaveGame_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPPlayDying
	 */
	struct APrimalCharacter_BPPlayDying_Params
	{
	public:
		float                                                      KillingDamage;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ISXD[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0008(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class APawn*                                               InstigatingPawn;                                         // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPOverrideUseItemSlot
	 */
	struct APrimalCharacter_BPOverrideUseItemSlot_Params
	{
	public:
		int32_t                                                    ItemSlot;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPOverrideReleaseItemSlot
	 */
	struct APrimalCharacter_BPOverrideReleaseItemSlot_Params
	{
	public:
		int32_t                                                    ItemSlot;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPOverrideJumpZModifier
	 */
	struct APrimalCharacter_BPOverrideJumpZModifier_Params
	{
	public:
		float                                                      InJumpZModifier;                                         // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPOverrideInventoryAccessInput
	 */
	struct APrimalCharacter_BPOverrideInventoryAccessInput_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPOverrideHurtAnim
	 */
	struct APrimalCharacter_BPOverrideHurtAnim_Params
	{
	public:
		float                                                      DamageTaken;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_D865[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0008(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class APawn*                                               PawnInstigator;                                          // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsLocalPath;                                            // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsPointDamage;                                          // 0x0039(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_3T6R[0x2];                                   // 0x003A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             PointDamageLocation;                                     // 0x003C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             PointDamageHitNormal;                                    // 0x0048(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_SI12[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UAnimMontage*                                        ReturnValue;                                             // 0x0058(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPOverrideHeldItemSlot
	 */
	struct APrimalCharacter_BPOverrideHeldItemSlot_Params
	{
	public:
		int32_t                                                    ItemSlot;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPOverrideFPVViewLocation
	 */
	struct APrimalCharacter_BPOverrideFPVViewLocation_Params
	{
	public:
		class APrimalCharacter*                                    viewingCharacter;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPOverrideFlyingVelocity
	 */
	struct APrimalCharacter_BPOverrideFlyingVelocity_Params
	{
	public:
		struct FVector                                             InitialVelocity;                                         // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             Gravity;                                                 // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x001C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPOverrideDamageCauserHitMarker
	 */
	struct APrimalCharacter_BPOverrideDamageCauserHitMarker_Params
	{
	public:
		class AShooterPlayerController*                            DamageCauserController;                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bHitFriendlyTarget;                                      // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_0RSN[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      PreDamageHealth;                                         // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DamageAmount;                                            // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_RGQJ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0018(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       bIsPointDamage;                                          // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_DHQ8[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          PointDamageHitResult;                                    // 0x0040(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FHitMarkerSettings                                  ReturnValue;                                             // 0x00C8(0x0028)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPOverrideCharacterNewFallVelocity
	 */
	struct APrimalCharacter_BPOverrideCharacterNewFallVelocity_Params
	{
	public:
		struct FVector                                             InitialVelocity;                                         // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             Gravity;                                                 // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x001C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPOnStaminaDrained
	 */
	struct APrimalCharacter_BPOnStaminaDrained_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPOnMovementModeChangedNotify
	 */
	struct APrimalCharacter_BPOnMovementModeChangedNotify_Params
	{
	public:
		EMovementMode                                              PrevMovementMode;                                        // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              PreviousCustomMode;                                      // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPOnMassTeleportEvent
	 */
	struct APrimalCharacter_BPOnMassTeleportEvent_Params
	{
	public:
		EMassTeleportState                                         EventState;                                              // 0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZQ4U[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalCharacter*                                    TeleportInitiatedByChar;                                 // 0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPOnLethalDamage
	 */
	struct APrimalCharacter_BPOnLethalDamage_Params
	{
	public:
		float                                                      KillingDamage;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_M56W[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0008(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AController*                                         Killer;                                                  // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPreventDeath;                                           // 0x0038(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPOnAttachmentReplication
	 */
	struct APrimalCharacter_BPOnAttachmentReplication_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPOnAnimPlayedNotify
	 */
	struct APrimalCharacter_BPOnAnimPlayedNotify_Params
	{
	public:
		class UAnimMontage*                                        AnimMontage;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InPlayRate;                                              // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                StartSectionName;                                        // 0x000C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReplicate;                                              // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReplicateToOwner;                                       // 0x0015(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceTickPoseAndServerUpdateMesh;                       // 0x0016(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceTickPoseOnServer;                                  // 0x0017(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPNotifyToggleHUD
	 */
	struct APrimalCharacter_BPNotifyToggleHUD_Params
	{
	public:
		bool                                                       bHudHidden;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPNotifyLevelUp
	 */
	struct APrimalCharacter_BPNotifyLevelUp_Params
	{
	public:
		int32_t                                                    ExtraCharacterLevel;                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPNotifyInventoryItemChange
	 */
	struct APrimalCharacter_BPNotifyInventoryItemChange_Params
	{
	public:
		bool                                                       bIsItemAdd;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_WML3[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimalItem*                                         theItem;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEquipItem;                                              // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPNotifyDroppedItemPickedUp
	 */
	struct APrimalCharacter_BPNotifyDroppedItemPickedUp_Params
	{
	public:
		class ADroppedItem*                                        itemPickedUp;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalCharacter*                                    PickedUpBy;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPNotifyBumpedPawn
	 */
	struct APrimalCharacter_BPNotifyBumpedPawn_Params
	{
	public:
		class APrimalCharacter*                                    BumpedPawn;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPNotifyBumpedByPawn
	 */
	struct APrimalCharacter_BPNotifyBumpedByPawn_Params
	{
	public:
		class APrimalCharacter*                                    ByPawn;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPNotifyBPNotifyIsDamageCauserOfAddedBuff
	 */
	struct APrimalCharacter_BPNotifyBPNotifyIsDamageCauserOfAddedBuff_Params
	{
	public:
		class APrimalBuff*                                         Buff;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPNewDoorInteractionDrawHUD
	 */
	struct APrimalCharacter_BPNewDoorInteractionDrawHUD_Params
	{
	public:
		class AShooterHUD*                                         HUD;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           DoorDescriptionLoc;                                      // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPNetSetMovementMode
	 */
	struct APrimalCharacter_BPNetSetMovementMode_Params
	{
	public:
		EMovementMode                                              NewMovementMode;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPNetSetCharacterMovementVelocity
	 */
	struct APrimalCharacter_BPNetSetCharacterMovementVelocity_Params
	{
	public:
		bool                                                       bSetNewVelocity;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QR07[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             NewVelocity;                                             // 0x0004(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSetNewMovementMode;                                     // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EMovementMode                                              NewMovementMode;                                         // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPNetAddCharacterMovementImpulse
	 */
	struct APrimalCharacter_BPNetAddCharacterMovementImpulse_Params
	{
	public:
		struct FVector                                             Impulse;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bVelChange;                                              // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_EJIB[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ImpulseExponent;                                         // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSetNewMovementMode;                                     // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EMovementMode                                              NewMovementMode;                                         // 0x0015(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOverrideMaxImpulseZ;                                    // 0x0016(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bApplyToBigPawns;                                        // 0x0017(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPModifyViewHitDir
	 */
	struct APrimalCharacter_BPModifyViewHitDir_Params
	{
	public:
		class APrimalCharacter*                                    viewingCharacter;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InViewHitDir;                                            // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPModifyRightDirectionInput
	 */
	struct APrimalCharacter_BPModifyRightDirectionInput_Params
	{
	public:
		struct FVector                                             directionInput;                                          // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPModifyFOVInterpSpeed
	 */
	struct APrimalCharacter_BPModifyFOVInterpSpeed_Params
	{
	public:
		float                                                      FOVInterpSpeedIn;                                        // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPModifyFOV
	 */
	struct APrimalCharacter_BPModifyFOV_Params
	{
	public:
		float                                                      FOVIn;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPModifyForwardDirectionInput
	 */
	struct APrimalCharacter_BPModifyForwardDirectionInput_Params
	{
	public:
		struct FVector                                             directionInput;                                          // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPLocalUnpossessed
	 */
	struct APrimalCharacter_BPLocalUnpossessed_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPLocalPossessedBy
	 */
	struct APrimalCharacter_BPLocalPossessedBy_Params
	{
	public:
		class APlayerController*                                   ByController;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPLimitPlayerRotation
	 */
	struct APrimalCharacter_BPLimitPlayerRotation_Params
	{
	public:
		class APrimalCharacter*                                    viewingCharacter;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            InViewRotation;                                          // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0014(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPIsConscious
	 */
	struct APrimalCharacter_BPIsConscious_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPIsBlockedByShield
	 */
	struct APrimalCharacter_BPIsBlockedByShield_Params
	{
	public:
		struct FHitResult                                          HitInfo;                                                 // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector                                             ShotDirection;                                           // 0x0088(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bBlockAllPointDamage;                                    // 0x0094(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0095(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPIsBasedOnDynamicActor
	 */
	struct APrimalCharacter_BPIsBasedOnDynamicActor_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPHasPlayerController
	 */
	struct APrimalCharacter_BPHasPlayerController_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPHandleRightShoulderButton
	 */
	struct APrimalCharacter_BPHandleRightShoulderButton_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPHandlePoop
	 */
	struct APrimalCharacter_BPHandlePoop_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPHandleLeftShoulderButton
	 */
	struct APrimalCharacter_BPHandleLeftShoulderButton_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPGrabDebugSnapshot
	 */
	struct APrimalCharacter_BPGrabDebugSnapshot_Params
	{
	public:
		TArray<struct FBlueprintVisualLogEntry>                    ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPGetStatusNameString
	 */
	struct APrimalCharacter_BPGetStatusNameString_Params
	{
	public:
		EPrimalCharacterStatusValue                                ValueType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_S8N2[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPGetOverrideCameraInterpSpeed
	 */
	struct APrimalCharacter_BPGetOverrideCameraInterpSpeed_Params
	{
	public:
		float                                                      DefaultTPVCameraSpeedInterpolationMultiplier;            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DefaultTPVOffsetInterpSpeed;                             // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TPVCameraSpeedInterpolationMultiplier;                   // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TPVOffsetInterpSpeed;                                    // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPGetIsBuried
	 */
	struct APrimalCharacter_BPGetIsBuried_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPGetHUDOverrideBuffProgressBarPercent
	 */
	struct APrimalCharacter_BPGetHUDOverrideBuffProgressBarPercent_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPGetHUDElements
	 */
	struct APrimalCharacter_BPGetHUDElements_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FHUDElement>                                 OutElements;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPGetGravityZScale
	 */
	struct APrimalCharacter_BPGetGravityZScale_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPGetFPVViewLocation
	 */
	struct APrimalCharacter_BPGetFPVViewLocation_Params
	{
	public:
		class APrimalCharacter*                                    viewingCharacter;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPGetExtraMeleeDamageModifier
	 */
	struct APrimalCharacter_BPGetExtraMeleeDamageModifier_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPGetDebugInfoString
	 */
	struct APrimalCharacter_BPGetDebugInfoString_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPGetArmorDurabilityDecreaseMultiplier
	 */
	struct APrimalCharacter_BPGetArmorDurabilityDecreaseMultiplier_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPGetApproachRadius
	 */
	struct APrimalCharacter_BPGetApproachRadius_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPGetAddForwardVelocityOnJump
	 */
	struct APrimalCharacter_BPGetAddForwardVelocityOnJump_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPForceCameraStyle
	 */
	struct APrimalCharacter_BPForceCameraStyle_Params
	{
	public:
		class APrimalCharacter*                                    ForViewTarget;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECameraStyle                                               ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPCheckJumpInput
	 */
	struct APrimalCharacter_BPCheckJumpInput_Params
	{
	public:
		bool                                                       bUseCustomErrorMessage;                                  // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5VXC[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ErrorMessageToDisplay;                                   // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPCharacterUnsleeped
	 */
	struct APrimalCharacter_BPCharacterUnsleeped_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPCharacterSleeped
	 */
	struct APrimalCharacter_BPCharacterSleeped_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPCharacterDetach
	 */
	struct APrimalCharacter_BPCharacterDetach_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPCanNotifyTeamAggroAI
	 */
	struct APrimalCharacter_BPCanNotifyTeamAggroAI_Params
	{
	public:
		class APrimalDinoCharacter*                                Dino;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPCanBeBaseForCharacter
	 */
	struct APrimalCharacter_BPCanBeBaseForCharacter_Params
	{
	public:
		class APawn*                                               Pawn;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPCanBaseOnCharacter
	 */
	struct APrimalCharacter_BPCanBaseOnCharacter_Params
	{
	public:
		class APrimalCharacter*                                    BaseCharacter;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPCameraRotationFinal
	 */
	struct APrimalCharacter_BPCameraRotationFinal_Params
	{
	public:
		class APrimalCharacter*                                    viewingCharacter;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            InCurrentFinalRot;                                       // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0014(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPCameraBaseOrientation
	 */
	struct APrimalCharacter_BPCameraBaseOrientation_Params
	{
	public:
		class APrimalCharacter*                                    viewingCharacter;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPApplyCharacterSnapshot
	 */
	struct APrimalCharacter_BPApplyCharacterSnapshot_Params
	{
	public:
		class UPrimalItem*                                         Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              To;                                                      // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Offset;                                                  // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxExtent;                                               // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Pose;                                                    // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCollisionOn;                                            // 0x0024(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPAnimNotifyCustomState_End
	 */
	struct APrimalCharacter_BPAnimNotifyCustomState_End_Params
	{
	public:
		class FName                                                CustomEventName;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USkeletalMeshComponent*                              MeshComp;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UAnimSequenceBase*                                   Animation;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UAnimNotifyState*                                    AnimNotifyObject;                                        // 0x0018(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPAnimNotifyCustomState_Begin
	 */
	struct APrimalCharacter_BPAnimNotifyCustomState_Begin_Params
	{
	public:
		class FName                                                CustomEventName;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USkeletalMeshComponent*                              MeshComp;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UAnimSequenceBase*                                   Animation;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TotalDuration;                                           // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ND9Q[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UAnimNotifyState*                                    AnimNotifyObject;                                        // 0x0020(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPAdjustTorpidityDamage
	 */
	struct APrimalCharacter_BPAdjustTorpidityDamage_Params
	{
	public:
		float                                                      DesiredTorpidityDamage;                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HealthDamageAmount;                                      // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              DamageType;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPAdjustImpulseFromDamage
	 */
	struct APrimalCharacter_BPAdjustImpulseFromDamage_Params
	{
	public:
		struct FVector                                             DesiredImpulse;                                          // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DamageTaken;                                             // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FDamageEvent                                        TheDamageEvent;                                          // 0x0010(0x0020)  (Parm)
		class APawn*                                               PawnInstigator;                                          // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsPointDamage;                                          // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_55ZN[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          PointHitInfo;                                            // 0x0048(0x0088)  (Parm)
		struct FVector                                             ReturnValue;                                             // 0x00D0(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPAdjustDamage
	 */
	struct APrimalCharacter_BPAdjustDamage_Params
	{
	public:
		float                                                      IncomingDamage;                                          // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_H7PD[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        TheDamageEvent;                                          // 0x0008(0x0020)  (Parm)
		class AController*                                         EventInstigator;                                         // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsPointDamage;                                          // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JRBN[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          PointHitInfo;                                            // 0x0040(0x0088)  (Parm)
		float                                                      ReturnValue;                                             // 0x00C8(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPAdjustCharacterMovementImpulse
	 */
	struct APrimalCharacter_BPAdjustCharacterMovementImpulse_Params
	{
	public:
		struct FVector                                             Impulse;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bVelocityChange;                                         // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_6PWL[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      MassScaleImpulseExponent;                                // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOverrideMaxImpulseZ;                                    // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_AASU[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BPAddedAttachmentsForItem
	 */
	struct APrimalCharacter_BPAddedAttachmentsForItem_Params
	{
	public:
		class UPrimalItem*                                         anItem;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BP_ShouldDisableCameraInterpolation
	 */
	struct APrimalCharacter_BP_ShouldDisableCameraInterpolation_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BP_OverrideTerminalVelocity
	 */
	struct APrimalCharacter_BP_OverrideTerminalVelocity_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BP_OverrideCameraTargetOriginLocation
	 */
	struct APrimalCharacter_BP_OverrideCameraTargetOriginLocation_Params
	{
	public:
		struct FVector                                             OutOverrideOrigin;                                       // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class FName                                                WithCameraStyle;                                         // 0x000C(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BP_OnZoomOut
	 */
	struct APrimalCharacter_BP_OnZoomOut_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.BP_OnZoomInOrbitCam
	 */
	struct APrimalCharacter_BP_OnZoomInOrbitCam_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.BP_OnZoomIn
	 */
	struct APrimalCharacter_BP_OnZoomIn_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.BP_OnStartCarried
	 */
	struct APrimalCharacter_BP_OnStartCarried_Params
	{
	public:
		class APrimalDinoCharacter*                                aDino;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BP_OnSetRunning
	 */
	struct APrimalCharacter_BP_OnSetRunning_Params
	{
	public:
		bool                                                       bNewIsRunning;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BP_OnSetDeath
	 */
	struct APrimalCharacter_BP_OnSetDeath_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.BP_OnPaintingComponentInitialized
	 */
	struct APrimalCharacter_BP_OnPaintingComponentInitialized_Params
	{
	public:
		class UStructurePaintingComponent*                         PaintingComp;                                            // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BP_OnJumpReleased
	 */
	struct APrimalCharacter_BP_OnJumpReleased_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.BP_OnJumpPressed
	 */
	struct APrimalCharacter_BP_OnJumpPressed_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacter.BP_OnEndCarried
	 */
	struct APrimalCharacter_BP_OnEndCarried_Params
	{
	public:
		bool                                                       bFromDino;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCancelAnyCarryBuffs;                                    // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BP_OnCameraStyleChangedNotify
	 */
	struct APrimalCharacter_BP_OnCameraStyleChangedNotify_Params
	{
	public:
		class FName                                                NewCameraStyle;                                          // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class FName                                                OldCameraStyle;                                          // 0x0008(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BP_ModifySavedMoveAcceleration_PreRep
	 */
	struct APrimalCharacter_BP_ModifySavedMoveAcceleration_PreRep_Params
	{
	public:
		struct FVector                                             ModifyClientAccel;                                       // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BP_ModifySavedMoveAcceleration_PostRep
	 */
	struct APrimalCharacter_BP_ModifySavedMoveAcceleration_PostRep_Params
	{
	public:
		struct FVector                                             ModifyServerAccel;                                       // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BP_ModifyInputAcceleration
	 */
	struct APrimalCharacter_BP_ModifyInputAcceleration_Params
	{
	public:
		struct FVector                                             ModifyInputAccel;                                        // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BP_IsCharacterHardAttached
	 */
	struct APrimalCharacter_BP_IsCharacterHardAttached_Params
	{
	public:
		bool                                                       bIgnoreRiding;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreCarried;                                          // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BP_GetMaxSpeedModifier
	 */
	struct APrimalCharacter_BP_GetMaxSpeedModifier_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BP_ForceAllowAddBuff
	 */
	struct APrimalCharacter_BP_ForceAllowAddBuff_Params
	{
	public:
		class UClass*                                              BuffClass;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BP_AnimationPreventsInput
	 */
	struct APrimalCharacter_BP_AnimationPreventsInput_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.BlueprintAnimNotifyCustomEvent
	 */
	struct APrimalCharacter_BlueprintAnimNotifyCustomEvent_Params
	{
	public:
		class FName                                                CustomEventName;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USkeletalMeshComponent*                              MeshComp;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UAnimSequenceBase*                                   Animation;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UAnimNotify*                                         AnimNotifyObject;                                        // 0x0018(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.AttachToOtherCharacter
	 */
	struct APrimalCharacter_AttachToOtherCharacter_Params
	{
	public:
		class APrimalCharacter*                                    characterToAttachTo;                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                InSocketName;                                            // 0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       enableMovementAndCollision;                              // 0x0010(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EAttachLocation                                            AttachLocation;                                          // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.AttachedToOtherCharacterUpdateWorldLocation
	 */
	struct APrimalCharacter_AttachedToOtherCharacterUpdateWorldLocation_Params
	{
	public:
		struct FVector                                             WorldLocation;                                           // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.ApplyCustomFallDamage
	 */
	struct APrimalCharacter_ApplyCustomFallDamage_Params
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             Velocity;                                                // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      FallDamageThreshold;                                     // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacter.AllowPlayMontage
	 */
	struct APrimalCharacter_AllowPlayMontage_Params
	{
	public:
		class UAnimMontage*                                        AnimMontage;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.UpdateTribeGroupRanks
	 */
	struct APrimalDinoCharacter_UpdateTribeGroupRanks_Params
	{
	public:
		unsigned char                                              NewTribeGroupPetOrderingRank;                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              NewTribeGroupPetRidingRank;                              // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.UpdateNextAllowedMatingTime
	 */
	struct APrimalDinoCharacter_UpdateNextAllowedMatingTime_Params
	{
	public:
		double                                                     fromTime;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.UpdateMateBoost
	 */
	struct APrimalDinoCharacter_UpdateMateBoost_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.UpdateImprintingQuality
	 */
	struct APrimalDinoCharacter_UpdateImprintingQuality_Params
	{
	public:
		float                                                      NewImprintingQuality;                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.UpdateImprintingDetailsForController
	 */
	struct APrimalDinoCharacter_UpdateImprintingDetailsForController_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.UpdateImprintingDetails
	 */
	struct APrimalDinoCharacter_UpdateImprintingDetails_Params
	{
	public:
		class FString                                              NewImprinterName;                                        // 0x0000(0x0010)  (Parm, ZeroConstructor)
		uint64_t                                                   NewImprinterPlayerDataID;                                // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.UpdateHasBuffPreventingUploading
	 */
	struct APrimalDinoCharacter_UpdateHasBuffPreventingUploading_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.UpdateBabyCuddling
	 */
	struct APrimalDinoCharacter_UpdateBabyCuddling_Params
	{
	public:
		double                                                     NewBabyNextCuddleTime;                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              NewBabyCuddleType;                                       // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_FGDP[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              NewBabyCuddleFood;                                       // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.UpdateAttackTargets
	 */
	struct APrimalDinoCharacter_UpdateAttackTargets_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.UntameDino
	 */
	struct APrimalDinoCharacter_UntameDino_Params
	{
	public:
		float                                                      TamingAffinityLimit;                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.UnclaimDino
	 */
	struct APrimalDinoCharacter_UnclaimDino_Params
	{
	public:
		bool                                                       bDestroyAI;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.TamedProcessOrder
	 */
	struct APrimalDinoCharacter_TamedProcessOrder_Params
	{
	public:
		class APrimalCharacter*                                    FromCharacter;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EDinoTamedOrder                                            OrderType;                                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForce;                                                  // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_TY92[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              enemyTarget;                                             // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.TameDino
	 */
	struct APrimalDinoCharacter_TameDino_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreMaxTameLimit;                                     // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_M5EQ[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    OverrideTamingTeamID;                                    // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPreventNameDialog;                                      // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSkipAddingTamedLevels;                                  // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSuppressNotifications;                                  // 0x0012(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.StopActiveState
	 */
	struct APrimalDinoCharacter_StopActiveState_Params
	{
	public:
		bool                                                       bShouldResetAttackIndex;                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.StartSurfaceCameraForPassengers
	 */
	struct APrimalDinoCharacter_StartSurfaceCameraForPassengers_Params
	{
	public:
		float                                                      Yaw;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Pitch;                                                   // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Roll;                                                    // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.StartSurfaceCameraForPassenger
	 */
	struct APrimalDinoCharacter_StartSurfaceCameraForPassenger_Params
	{
	public:
		class AShooterCharacter*                                   Passenger;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Yaw;                                                     // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Pitch;                                                   // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Roll;                                                    // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bInvertTurnInput;                                        // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.StartLanding
	 */
	struct APrimalDinoCharacter_StartLanding_Params
	{
	public:
		struct FVector                                             OverrideLandingLocation;                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SpawnNewAIController
	 */
	struct APrimalDinoCharacter_SpawnNewAIController_Params
	{
	public:
		class UClass*                                              NewAIController;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UBehaviorTree*                                       MissionBehaviorTreeOverride;                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SpawnFromDinoDataEx
	 */
	struct APrimalDinoCharacter_SpawnFromDinoDataEx_Params
	{
	public:
		struct FARKDinoData                                        InDinoData;                                              // 0x0000(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm)
		class UWorld*                                              inWorld;                                                 // 0x0040(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtLocation;                                              // 0x0048(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            AtRotation;                                              // 0x0054(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       dupedDino;                                               // 0x0060(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZLAJ[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ForTeam;                                                 // 0x0064(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bGenerateNewDinoID;                                      // 0x0068(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XCCZ[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AShooterPlayerController*                            TamerController;                                         // 0x0070(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalDinoCharacter*                                ReturnValue;                                             // 0x0078(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SpawnFromDinoData
	 */
	struct APrimalDinoCharacter_SpawnFromDinoData_Params
	{
	public:
		struct FARKDinoData                                        InDinoData;                                              // 0x0000(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm)
		class UWorld*                                              inWorld;                                                 // 0x0040(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtLocation;                                              // 0x0048(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            AtRotation;                                              // 0x0054(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		int32_t                                                    ForTeam;                                                 // 0x0060(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bGenerateNewDinoID;                                      // 0x0064(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_8QAS[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AShooterPlayerController*                            TamerController;                                         // 0x0068(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalDinoCharacter*                                ReturnValue;                                             // 0x0070(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SpawnedPlayerFor
	 */
	struct APrimalDinoCharacter_SpawnedPlayerFor_Params
	{
	public:
		class AShooterPlayerController*                            PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APawn*                                               ForPawn;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SpawnDino
	 */
	struct APrimalDinoCharacter_SpawnDino_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              DinoClass;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             SpawnLoc;                                                // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            SpawnRot;                                                // 0x001C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      LevelMultiplier;                                         // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ExtraLevelOffset;                                        // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       AddLevelOffsetBeforeMultiplier;                          // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOverrideBaseNPCLevel;                                   // 0x0031(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_F0B9[0x2];                                   // 0x0032(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    BaseLevelOverrideValue;                                  // 0x0034(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bNPCDontWander;                                          // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_F9O8[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      NPCAIRangeMultiplier;                                    // 0x003C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NPCAbsoluteBaseLevel;                                    // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSpawnWithoutCapsuleOffset;                              // 0x0044(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_DGYS[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalDinoCharacter*                                ReturnValue;                                             // 0x0048(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ShouldForceFlee
	 */
	struct APrimalDinoCharacter_ShouldForceFlee_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ShouldDisableBasedCharactersCameraInterpolation
	 */
	struct APrimalDinoCharacter_ShouldDisableBasedCharactersCameraInterpolation_Params
	{
	public:
		class APrimalCharacter*                                    ForBasedChar;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ShouldDealDamage
	 */
	struct APrimalDinoCharacter_ShouldDealDamage_Params
	{
	public:
		class AActor*                                              TestActor;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ShouldAttackOfPlayedAnimationStopMovement
	 */
	struct APrimalDinoCharacter_ShouldAttackOfPlayedAnimationStopMovement_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SetTurretModeMovementRestrictions
	 */
	struct APrimalDinoCharacter_SetTurretModeMovementRestrictions_Params
	{
	public:
		bool                                                       Enabled;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAlsoSetTurretMode;                                      // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SetTurretMode
	 */
	struct APrimalDinoCharacter_SetTurretMode_Params
	{
	public:
		bool                                                       Enabled;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SetState
	 */
	struct APrimalDinoCharacter_SetState_Params
	{
	public:
		class UPrimalAIState*                                      State;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SetStasisComponentRadius
	 */
	struct APrimalDinoCharacter_SetStasisComponentRadius_Params
	{
	public:
		float                                                      StasisOverrideRadius;                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SetRider
	 */
	struct APrimalDinoCharacter_SetRider_Params
	{
	public:
		class AShooterCharacter*                                   aRider;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SetPreventSaving
	 */
	struct APrimalDinoCharacter_SetPreventSaving_Params
	{
	public:
		bool                                                       fPreventSaving;                                          // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SetNextAllowedMatingTime
	 */
	struct APrimalDinoCharacter_SetNextAllowedMatingTime_Params
	{
	public:
		double                                                     NextAllowedMatingTime;                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SetMovementAccelerationVector
	 */
	struct APrimalDinoCharacter_SetMovementAccelerationVector_Params
	{
	public:
		struct FVector                                             fVector;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SetLeftDynamicActorBaseTime
	 */
	struct APrimalDinoCharacter_SetLeftDynamicActorBaseTime_Params
	{
	public:
		double                                                     NewLeftDynamicActorBaseTime;                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SetLastMovementDesiredRotation
	 */
	struct APrimalDinoCharacter_SetLastMovementDesiredRotation_Params
	{
	public:
		struct FRotator                                            InRotation;                                              // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SetLastAttackTimeForAttack
	 */
	struct APrimalDinoCharacter_SetLastAttackTimeForAttack_Params
	{
	public:
		int32_t                                                    AttackIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_H7K6[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		double                                                     NewTime;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SetImprintPlayer
	 */
	struct APrimalDinoCharacter_SetImprintPlayer_Params
	{
	public:
		class AShooterCharacter*                                   forChar;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SetGestationData
	 */
	struct APrimalDinoCharacter_SetGestationData_Params
	{
	public:
		struct FUnreplicatedEggData                                GestationData;                                           // 0x0000(0x0058)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SetForceDisableClientGravitySim
	 */
	struct APrimalDinoCharacter_SetForceDisableClientGravitySim_Params
	{
	public:
		bool                                                       bForceDisable;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SetFlight
	 */
	struct APrimalDinoCharacter_SetFlight_Params
	{
	public:
		bool                                                       bFly;                                                    // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCancelForceLand;                                        // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       SkipAnimsPreventInputCheck;                              // 0x0002(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SetCurrentAttackIndex
	 */
	struct APrimalDinoCharacter_SetCurrentAttackIndex_Params
	{
	public:
		unsigned char                                              index;                                                   // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SetColorizationData
	 */
	struct APrimalDinoCharacter_SetColorizationData_Params
	{
	public:
		TArray<unsigned char>                                      ColorData;                                               // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SetCharacterStatusTameable
	 */
	struct APrimalDinoCharacter_SetCharacterStatusTameable_Params
	{
	public:
		bool                                                       bSetTameable;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCreateInventory;                                        // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bInventoryForWakingTame;                                 // 0x0002(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SetBabyAge
	 */
	struct APrimalDinoCharacter_SetBabyAge_Params
	{
	public:
		float                                                      TheAge;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SetAnimWeightsForAttackAtIndex
	 */
	struct APrimalDinoCharacter_SetAnimWeightsForAttackAtIndex_Params
	{
	public:
		int32_t                                                    AttackIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_3IP5[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<float>                                              newWeights;                                              // 0x0008(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.SetAllowedPaintingColorRegion
	 */
	struct APrimalDinoCharacter_SetAllowedPaintingColorRegion_Params
	{
	public:
		int32_t                                                    RegionIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsAllowed;                                              // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ServerUpdateAttackTargets
	 */
	struct APrimalDinoCharacter_ServerUpdateAttackTargets_Params
	{
	public:
		class AActor*                                              attackTarget;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AttackLocation;                                          // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ServerToggleCharging
	 */
	struct APrimalDinoCharacter_ServerToggleCharging_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ServerToClientsPlayAttackAnimation
	 */
	struct APrimalDinoCharacter_ServerToClientsPlayAttackAnimation_Params
	{
	public:
		int8_t                                                     AttackinfoIndex;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int8_t                                                     animationIndex;                                          // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_OPDA[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      InPlayRate;                                              // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                StartSectionName;                                        // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceTickPoseAndServerUpdateMesh;                       // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceTickPoseOnServer;                                  // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XIW4[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              MyTarget;                                                // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ServerTamedTick
	 */
	struct APrimalDinoCharacter_ServerTamedTick_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ServerSleepingTick
	 */
	struct APrimalDinoCharacter_ServerSleepingTick_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ServerSetRiderMountedWeaponRotation
	 */
	struct APrimalDinoCharacter_ServerSetRiderMountedWeaponRotation_Params
	{
	public:
		struct FRotator                                            InVal;                                                   // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ServerRequestWaterSurfaceJump
	 */
	struct APrimalDinoCharacter_ServerRequestWaterSurfaceJump_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ServerRequestToggleFlight
	 */
	struct APrimalDinoCharacter_ServerRequestToggleFlight_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ServerRequestBraking
	 */
	struct APrimalDinoCharacter_ServerRequestBraking_Params
	{
	public:
		bool                                                       bWantsToBrake;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ServerRequestAttack
	 */
	struct APrimalDinoCharacter_ServerRequestAttack_Params
	{
	public:
		int32_t                                                    AttackIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ServerInterruptLanding
	 */
	struct APrimalDinoCharacter_ServerInterruptLanding_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ServerFinishedLanding
	 */
	struct APrimalDinoCharacter_ServerFinishedLanding_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ServerClearRider
	 */
	struct APrimalDinoCharacter_ServerClearRider_Params
	{
	public:
		int32_t                                                    OverrideUnboardDirection;                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.RidingTick
	 */
	struct APrimalDinoCharacter_RidingTick_Params
	{
	public:
		float                                                      DeltaSeconds;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ResetBrainComponent
	 */
	struct APrimalDinoCharacter_ResetBrainComponent_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.RequestTerminateEmbryo
	 */
	struct APrimalDinoCharacter_RequestTerminateEmbryo_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.RequestDisplayEmbryoData
	 */
	struct APrimalDinoCharacter_RequestDisplayEmbryoData_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEnable;                                                 // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.RemovePassenger
	 */
	struct APrimalDinoCharacter_RemovePassenger_Params
	{
	public:
		class APrimalCharacter*                                    ACharacter;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFromCharacter;                                          // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFromPlayerController;                                   // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.RemoveFromMeleeSwingHurtList
	 */
	struct APrimalDinoCharacter_RemoveFromMeleeSwingHurtList_Params
	{
	public:
		class AActor*                                              anActor;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.RemoveDinoReferenceFromLatchingStructure
	 */
	struct APrimalDinoCharacter_RemoveDinoReferenceFromLatchingStructure_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.RefreshColorization
	 */
	struct APrimalDinoCharacter_RefreshColorization_Params
	{
	public:
		bool                                                       bForceRefresh;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.RefreshBabyScaling
	 */
	struct APrimalDinoCharacter_RefreshBabyScaling_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ReassertColorization
	 */
	struct APrimalDinoCharacter_ReassertColorization_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ProcessOrderMoveTo
	 */
	struct APrimalDinoCharacter_ProcessOrderMoveTo_Params
	{
	public:
		struct FVector                                             MoveToLoc;                                               // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bClearFollowTargets;                                     // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ProcessOrderFollowTarget
	 */
	struct APrimalDinoCharacter_ProcessOrderFollowTarget_Params
	{
	public:
		class AActor*                                              TheTarget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bClearFollowTargets;                                     // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ProcessOrderAttackTarget
	 */
	struct APrimalDinoCharacter_ProcessOrderAttackTarget_Params
	{
	public:
		class AActor*                                              TheTarget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bClearFollowTargets;                                     // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.PreventShowingDinoTooltip
	 */
	struct APrimalDinoCharacter_PreventShowingDinoTooltip_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.PlayWeightedAttackAnimation
	 */
	struct APrimalDinoCharacter_PlayWeightedAttackAnimation_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.PlayHardEndChargingShake
	 */
	struct APrimalDinoCharacter_PlayHardEndChargingShake_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.PlayedAnimationHasAttack
	 */
	struct APrimalDinoCharacter_PlayedAnimationHasAttack_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.OverrideRandomWanderLocation
	 */
	struct APrimalDinoCharacter_OverrideRandomWanderLocation_Params
	{
	public:
		struct FVector                                             originalDestination;                                     // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             inVec;                                                   // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.OverrideFinalWanderLocation
	 */
	struct APrimalDinoCharacter_OverrideFinalWanderLocation_Params
	{
	public:
		struct FVector                                             outVec;                                                  // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.OverrideBasedCharactersCameraInterpSpeed
	 */
	struct APrimalDinoCharacter_OverrideBasedCharactersCameraInterpSpeed_Params
	{
	public:
		class APrimalCharacter*                                    ForBasedChar;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DefaultTPVCameraSpeedInterpMultiplier;                   // 0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DefaultTPVOffsetInterpSpeed;                             // 0x000C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TPVCameraSpeedInterpMultiplier;                          // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TPVOffsetInterpSpeed;                                    // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.OnVoiceTalkingStateChanged
	 */
	struct APrimalDinoCharacter_OnVoiceTalkingStateChanged_Params
	{
	public:
		bool                                                       isTalking;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsMuted;                                                // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.OnUpdateMountedDinoMeshHiding
	 */
	struct APrimalDinoCharacter_OnUpdateMountedDinoMeshHiding_Params
	{
	public:
		bool                                                       bshouldBeVisible;                                        // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.OnUncryo
	 */
	struct APrimalDinoCharacter_OnUncryo_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.OnSpawnedForItem
	 */
	struct APrimalDinoCharacter_OnSpawnedForItem_Params
	{
	public:
		class UPrimalItem*                                         ForItem;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.OnSetMountedDino__DelegateSignature
	 */
	struct APrimalDinoCharacter_OnSetMountedDino__DelegateSignature_Params
	{
	public:
		class APrimalDinoCharacter*                                MountDino;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalCharacter*                                    forCharacter;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.OnRep_Saddle
	 */
	struct APrimalDinoCharacter_OnRep_Saddle_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.OnRep_Rider
	 */
	struct APrimalDinoCharacter_OnRep_Rider_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.OnRep_PassengerPerSeat
	 */
	struct APrimalDinoCharacter_OnRep_PassengerPerSeat_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.OnRep_CarriedCharacter
	 */
	struct APrimalDinoCharacter_OnRep_CarriedCharacter_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.OnRep_bIsFlying
	 */
	struct APrimalDinoCharacter_OnRep_bIsFlying_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.OnRep_bIsCharging
	 */
	struct APrimalDinoCharacter_OnRep_bIsCharging_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.OnRep_bBonesHidden
	 */
	struct APrimalDinoCharacter_OnRep_bBonesHidden_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.OnCryo
	 */
	struct APrimalDinoCharacter_OnCryo_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.OnClearMountedDino__DelegateSignature
	 */
	struct APrimalDinoCharacter_OnClearMountedDino__DelegateSignature_Params
	{
	public:
		class APrimalDinoCharacter*                                UnmountedDino;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalCharacter*                                    forCharacter;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.NotifySetRider__DelegateSignature
	 */
	struct APrimalDinoCharacter_NotifySetRider__DelegateSignature_Params
	{
	public:
		class AShooterCharacter*                                   RiderSetting;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalDinoCharacter*                                ForDino;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.NotifyFlyerLanded__DelegateSignature
	 */
	struct APrimalDinoCharacter_NotifyFlyerLanded__DelegateSignature_Params
	{
	public:
		class APrimalDinoCharacter*                                ForDino;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.NotifyClientsEmbryoTerminated
	 */
	struct APrimalDinoCharacter_NotifyClientsEmbryoTerminated_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.NotifyClearRider__DelegateSignature
	 */
	struct APrimalDinoCharacter_NotifyClearRider__DelegateSignature_Params
	{
	public:
		class AShooterCharacter*                                   RiderClearing;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalDinoCharacter*                                ForDino;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.NotifyClearPassenger__DelegateSignature
	 */
	struct APrimalDinoCharacter_NotifyClearPassenger__DelegateSignature_Params
	{
	public:
		class APrimalCharacter*                                    Passenger;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalDinoCharacter*                                ForDino;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    SeatIndex;                                               // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.NotifyAddPassenger__DelegateSignature
	 */
	struct APrimalDinoCharacter_NotifyAddPassenger__DelegateSignature_Params
	{
	public:
		class APrimalCharacter*                                    Passenger;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalDinoCharacter*                                ForDino;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    SeatIndex;                                               // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.NetUpdateDinoOwnerData
	 */
	struct APrimalDinoCharacter_NetUpdateDinoOwnerData_Params
	{
	public:
		class FString                                              NewOwningPlayerName;                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    NewOwningPlayerID;                                       // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.NetUpdateDinoNameStrings
	 */
	struct APrimalDinoCharacter_NetUpdateDinoNameStrings_Params
	{
	public:
		class FString                                              NewTamerString;                                          // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              NewTamedName;                                            // 0x0010(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.MulticastUpdateAllColorSets
	 */
	struct APrimalDinoCharacter_MulticastUpdateAllColorSets_Params
	{
	public:
		int32_t                                                    Color0;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Color1;                                                  // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Color2;                                                  // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Color3;                                                  // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Color4;                                                  // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Color5;                                                  // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.Multi_OnCryo
	 */
	struct APrimalDinoCharacter_Multi_OnCryo_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.LowerDinoBP
	 */
	struct APrimalDinoCharacter_LowerDinoBP_Params
	{
	public:
		float                                                      val;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.KeepFlightTimer
	 */
	struct APrimalDinoCharacter_KeepFlightTimer_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.IsWakingTame
	 */
	struct APrimalDinoCharacter_IsWakingTame_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.IsVoiceTalking
	 */
	struct APrimalDinoCharacter_IsVoiceTalking_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.IsPassengerSeatAvailable
	 */
	struct APrimalDinoCharacter_IsPassengerSeatAvailable_Params
	{
	public:
		int32_t                                                    PassengerSeatIndex;                                      // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.IsMissionDino
	 */
	struct APrimalDinoCharacter_IsMissionDino_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.IsInTekShield
	 */
	struct APrimalDinoCharacter_IsInTekShield_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.IsInFlyerPreventionVolume
	 */
	struct APrimalDinoCharacter_IsInFlyerPreventionVolume_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.IsImprintPlayer
	 */
	struct APrimalDinoCharacter_IsImprintPlayer_Params
	{
	public:
		class AShooterCharacter*                                   forChar;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.IsFleeing
	 */
	struct APrimalDinoCharacter_IsFleeing_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.IsCurrentlyPlayingAttackAnimation
	 */
	struct APrimalDinoCharacter_IsCurrentlyPlayingAttackAnimation_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.IsCurrentAttackStopsMovement
	 */
	struct APrimalDinoCharacter_IsCurrentAttackStopsMovement_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.IsAttacking
	 */
	struct APrimalDinoCharacter_IsAttacking_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.IsAllowedToTransfer
	 */
	struct APrimalDinoCharacter_IsAllowedToTransfer_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.IsAllowedToMate
	 */
	struct APrimalDinoCharacter_IsAllowedToMate_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.IsActiveEventDino
	 */
	struct APrimalDinoCharacter_IsActiveEventDino_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.InterruptLatching
	 */
	struct APrimalDinoCharacter_InterruptLatching_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.InterruptLanding
	 */
	struct APrimalDinoCharacter_InterruptLanding_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.InterceptRiderEmoteAnim
	 */
	struct APrimalDinoCharacter_InterceptRiderEmoteAnim_Params
	{
	public:
		class UAnimMontage*                                        EmoteAnim;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.InterceptMountedOnPlayerEmoteAnim
	 */
	struct APrimalDinoCharacter_InterceptMountedOnPlayerEmoteAnim_Params
	{
	public:
		class UAnimMontage*                                        EmoteAnim;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ImprintOnPlayerTarget
	 */
	struct APrimalDinoCharacter_ImprintOnPlayerTarget_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreMaxTameLimit;                                     // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.HasTarget
	 */
	struct APrimalDinoCharacter_HasTarget_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.HasSelfBuried
	 */
	struct APrimalDinoCharacter_HasSelfBuried_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.HasOfflineRider
	 */
	struct APrimalDinoCharacter_HasOfflineRider_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.HasBuffPreventingFlight
	 */
	struct APrimalDinoCharacter_HasBuffPreventingFlight_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.HasBuffPreventingClearRiderOnDinoImmobilized
	 */
	struct APrimalDinoCharacter_HasBuffPreventingClearRiderOnDinoImmobilized_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.HandleMountedDinoAction
	 */
	struct APrimalDinoCharacter_HandleMountedDinoAction_Params
	{
	public:
		class AShooterPlayerController*                            PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GiveSaddleFromString
	 */
	struct APrimalDinoCharacter_GiveSaddleFromString_Params
	{
	public:
		class FString                                              blueprintPath;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor)
		float                                                      Quality;                                                 // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MinRandomQuality;                                        // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAutoEquip;                                              // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XG9I[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimalItem*                                         ReturnValue;                                             // 0x0020(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GiveSaddle
	 */
	struct APrimalDinoCharacter_GiveSaddle_Params
	{
	public:
		class UClass*                                              SaddleType;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Quality;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MinRandomQuality;                                        // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAutoEquip;                                              // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_W9ID[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimalItem*                                         ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GiveDeathDossier
	 */
	struct APrimalDinoCharacter_GiveDeathDossier_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetWiegthedAttack
	 */
	struct APrimalDinoCharacter_GetWiegthedAttack_Params
	{
	public:
		float                                                      Distance;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      attackRangeOffset;                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              OtherTarget;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetUntamedTargetingTeam
	 */
	struct APrimalDinoCharacter_GetUntamedTargetingTeam_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetTamedLandTarget
	 */
	struct APrimalDinoCharacter_GetTamedLandTarget_Params
	{
	public:
		class AActor*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetTamedFollowTarget
	 */
	struct APrimalDinoCharacter_GetTamedFollowTarget_Params
	{
	public:
		class AActor*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetStateOfPlayedAnimationAttack
	 */
	struct APrimalDinoCharacter_GetStateOfPlayedAnimationAttack_Params
	{
	public:
		class UPrimalAIState*                                      ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetSocketLocationTemp
	 */
	struct APrimalDinoCharacter_GetSocketLocationTemp_Params
	{
	public:
		class FName                                                SocketName;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetSocketForMeleeTraceForHitBlockers
	 */
	struct APrimalDinoCharacter_GetSocketForMeleeTraceForHitBlockers_Params
	{
	public:
		int32_t                                                    AttackIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ReturnValue;                                             // 0x0004(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetSeatIndexForPassenger
	 */
	struct APrimalDinoCharacter_GetSeatIndexForPassenger_Params
	{
	public:
		class APrimalCharacter*                                    PassengerChar;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetSaddleMeshComponents
	 */
	struct APrimalDinoCharacter_GetSaddleMeshComponents_Params
	{
	public:
		TArray<class UMeshComponent*>                              OutMeshes;                                               // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetSaddleMeshComponent
	 */
	struct APrimalDinoCharacter_GetSaddleMeshComponent_Params
	{
	public:
		class USkeletalMeshComponent*                              ReturnValue;                                             // 0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetSaddleActorComponents
	 */
	struct APrimalDinoCharacter_GetSaddleActorComponents_Params
	{
	public:
		TArray<class UActorComponent*>                             OutMeshes;                                               // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetRootYawSpeed
	 */
	struct APrimalDinoCharacter_GetRootYawSpeed_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetPlayerSpawnRotation
	 */
	struct APrimalDinoCharacter_GetPlayerSpawnRotation_Params
	{
	public:
		struct FRotator                                            ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetPlayerSpawnLocation
	 */
	struct APrimalDinoCharacter_GetPlayerSpawnLocation_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetPassengersSeatIndex
	 */
	struct APrimalDinoCharacter_GetPassengersSeatIndex_Params
	{
	public:
		class APrimalCharacter*                                    Passenger;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetPassengersAndSeatIndexes
	 */
	struct APrimalDinoCharacter_GetPassengersAndSeatIndexes_Params
	{
	public:
		TArray<class APrimalCharacter*>                            Passengers;                                              // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
		TArray<int32_t>                                            Indexes;                                                 // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetPassengers
	 */
	struct APrimalDinoCharacter_GetPassengers_Params
	{
	public:
		TArray<class APrimalCharacter*>                            ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetPassengerPerSeat
	 */
	struct APrimalDinoCharacter_GetPassengerPerSeat_Params
	{
	public:
		int32_t                                                    SeatIndex;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QDJW[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalCharacter*                                    ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetNumPassengerSeats
	 */
	struct APrimalDinoCharacter_GetNumPassengerSeats_Params
	{
	public:
		bool                                                       bOnlyManualPassengerSeats;                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7UT7[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetNumAvailablePassengerSeats
	 */
	struct APrimalDinoCharacter_GetNumAvailablePassengerSeats_Params
	{
	public:
		bool                                                       bOnlyManualPassengerSeats;                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JP2W[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetLastStartedTalkingTime
	 */
	struct APrimalDinoCharacter_GetLastStartedTalkingTime_Params
	{
	public:
		double                                                     ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetLandingLocation
	 */
	struct APrimalDinoCharacter_GetLandingLocation_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetGestationTimeRemaining
	 */
	struct APrimalDinoCharacter_GetGestationTimeRemaining_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetGestationData
	 */
	struct APrimalDinoCharacter_GetGestationData_Params
	{
	public:
		struct FUnreplicatedEggData                                GestationData;                                           // 0x0000(0x0058)  (Parm, OutParm)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetForceTickPose
	 */
	struct APrimalDinoCharacter_GetForceTickPose_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetFoodItemEffectivenessMultipliersIndex
	 */
	struct APrimalDinoCharacter_GetFoodItemEffectivenessMultipliersIndex_Params
	{
	public:
		class UPrimalItem*                                         foodItem;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetFirstAffinityFoodItemClass
	 */
	struct APrimalDinoCharacter_GetFirstAffinityFoodItemClass_Params
	{
	public:
		class UClass*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetDinoVelocity
	 */
	struct APrimalDinoCharacter_GetDinoVelocity_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetDinoTameSound
	 */
	struct APrimalDinoCharacter_GetDinoTameSound_Params
	{
	public:
		class USoundBase*                                          ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetDinoPlatformCollisionIgnoreActors
	 */
	struct APrimalDinoCharacter_GetDinoPlatformCollisionIgnoreActors_Params
	{
	public:
		TArray<class AActor*>                                      ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetDinoLevelUpAnimation
	 */
	struct APrimalDinoCharacter_GetDinoLevelUpAnimation_Params
	{
	public:
		class UAnimMontage*                                        ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetDinoIDsAsStrings
	 */
	struct APrimalDinoCharacter_GetDinoIDsAsStrings_Params
	{
	public:
		class FString                                              OutDinoID1;                                              // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
		class FString                                              OutDinoID2;                                              // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetDinoIDs
	 */
	struct APrimalDinoCharacter_GetDinoIDs_Params
	{
	public:
		int32_t                                                    OutDinoID1;                                              // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    OutDinoID2;                                              // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetDinoEntryIcon
	 */
	struct APrimalDinoCharacter_GetDinoEntryIcon_Params
	{
	public:
		class UTexture*                                            ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetDinoDescriptiveName
	 */
	struct APrimalDinoCharacter_GetDinoDescriptiveName_Params
	{
	public:
		bool                                                       IgnoreArticle;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       IncludeDetails;                                          // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_12N8[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetDinoDeathTime
	 */
	struct APrimalDinoCharacter_GetDinoDeathTime_Params
	{
	public:
		double                                                     ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetDinoData
	 */
	struct APrimalDinoCharacter_GetDinoData_Params
	{
	public:
		struct FARKDinoData                                        OutDinoData;                                             // 0x0000(0x0040)  (Parm, OutParm)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetDinoColor
	 */
	struct APrimalDinoCharacter_GetDinoColor_Params
	{
	public:
		int32_t                                                    ColorRegionIndex;                                        // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        ReturnValue;                                             // 0x0004(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetCurrentDinoName
	 */
	struct APrimalDinoCharacter_GetCurrentDinoName_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetCurrentAttackInfo
	 */
	struct APrimalDinoCharacter_GetCurrentAttackInfo_Params
	{
	public:
		int32_t                                                    AttackIndex;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KG43[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDinoAttackInfo                                     AttackInfo;                                              // 0x0008(0x0130)  (Parm, OutParm)
		bool                                                       ReturnValue;                                             // 0x0138(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetCurrentAimOffsetsRotation
	 */
	struct APrimalDinoCharacter_GetCurrentAimOffsetsRotation_Params
	{
	public:
		struct FRotator                                            ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetColorSetNamesAsArray
	 */
	struct APrimalDinoCharacter_GetColorSetNamesAsArray_Params
	{
	public:
		TArray<class FName>                                        ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetColorSetInidcesAsString
	 */
	struct APrimalDinoCharacter_GetColorSetInidcesAsString_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetColorizationData
	 */
	struct APrimalDinoCharacter_GetColorizationData_Params
	{
	public:
		TArray<unsigned char>                                      ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetColorForColorizationRegion
	 */
	struct APrimalDinoCharacter_GetColorForColorizationRegion_Params
	{
	public:
		int32_t                                                    Region;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ColorIndexOverride;                                      // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetBedFilterClass
	 */
	struct APrimalDinoCharacter_GetBedFilterClass_Params
	{
	public:
		class UClass*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetBabyCuddleInterval
	 */
	struct APrimalDinoCharacter_GetBabyCuddleInterval_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetAllowedPaintingColorRegion
	 */
	struct APrimalDinoCharacter_GetAllowedPaintingColorRegion_Params
	{
	public:
		int32_t                                                    RegionIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetAllAttachedExplosives
	 */
	struct APrimalDinoCharacter_GetAllAttachedExplosives_Params
	{
	public:
		bool                                                       bInlcudeAttachedChars;                                   // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CU0G[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class APrimalStructureExplosive*>                   ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetAimOffsetsTransform
	 */
	struct APrimalDinoCharacter_GetAimOffsetsTransform_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_UGRR[0xC];                                   // 0x0004(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          RootRotOffsetTransform;                                  // 0x0010(0x0030)  (Parm, OutParm, IsPlainOldData, NoDestructor)
		float                                                      TheRootYawSpeed;                                         // 0x0040(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxYawAimClamp;                                          // 0x0044(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             RootLocOffset;                                           // 0x0048(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0054(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetAIFollowStoppingDistanceOffset
	 */
	struct APrimalDinoCharacter_GetAIFollowStoppingDistanceOffset_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetAIFollowStoppingDistanceMultiplier
	 */
	struct APrimalDinoCharacter_GetAIFollowStoppingDistanceMultiplier_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetAffinityIncreaseForFoodItem
	 */
	struct APrimalDinoCharacter_GetAffinityIncreaseForFoodItem_Params
	{
	public:
		class UPrimalItem*                                         foodItem;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetActorCenterTraceLocation
	 */
	struct APrimalDinoCharacter_GetActorCenterTraceLocation_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.GetActiveState
	 */
	struct APrimalDinoCharacter_GetActiveState_Params
	{
	public:
		class UPrimalAIState*                                      ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ForceUpdateColorSets
	 */
	struct APrimalDinoCharacter_ForceUpdateColorSets_Params
	{
	public:
		int32_t                                                    ColorRegion;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ColorSet;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ForceSetTamedAggressionLevel
	 */
	struct APrimalDinoCharacter_ForceSetTamedAggressionLevel_Params
	{
	public:
		int32_t                                                    AggressionLevel;                                         // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ForceClearRider
	 */
	struct APrimalDinoCharacter_ForceClearRider_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.FireProjectile
	 */
	struct APrimalDinoCharacter_FireProjectile_Params
	{
	public:
		struct FVector                                             Origin;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector_NetQuantizeNormal                           ShootDir;                                                // 0x000C(0x000C)  (Parm)
		bool                                                       bScaleProjDamageByDinoDamage;                            // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.FireMultipleProjectilesEx
	 */
	struct APrimalDinoCharacter_FireMultipleProjectilesEx_Params
	{
	public:
		class UClass*                                              ProjectileClass;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FVector>                                     Locations;                                               // 0x0008(0x0010)  (ConstParm, Parm, ZeroConstructor)
		TArray<struct FVector>                                     Directions;                                              // 0x0018(0x0010)  (ConstParm, Parm, ZeroConstructor)
		bool                                                       bAddPawnVelocityToProjectile;                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bScaleProjDamageByDinoDamage;                            // 0x0029(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_N4O7[0x6];                                   // 0x002A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class USceneComponent*                                     HomingTarget;                                            // 0x0030(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FVector                                             HomingTargetOffset;                                      // 0x0038(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OverrideInitialSpeed;                                    // 0x0044(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.FireMultipleProjectiles
	 */
	struct APrimalDinoCharacter_FireMultipleProjectiles_Params
	{
	public:
		TArray<struct FVector>                                     Locations;                                               // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
		TArray<struct FVector>                                     Directions;                                              // 0x0010(0x0010)  (ConstParm, Parm, ZeroConstructor)
		bool                                                       bScaleProjectileDamageByDinoDamage;                      // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.FedWakingTameDino
	 */
	struct APrimalDinoCharacter_FedWakingTameDino_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.EndCharging
	 */
	struct APrimalDinoCharacter_EndCharging_Params
	{
	public:
		bool                                                       bForce;                                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ElevateDinoBP
	 */
	struct APrimalDinoCharacter_ElevateDinoBP_Params
	{
	public:
		float                                                      val;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.DoOverrideMountedAirControl
	 */
	struct APrimalDinoCharacter_DoOverrideMountedAirControl_Params
	{
	public:
		float                                                      AirControlIn;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.DoNeuter
	 */
	struct APrimalDinoCharacter_DoNeuter_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.DoDeathHarvestingFadeOut
	 */
	struct APrimalDinoCharacter_DoDeathHarvestingFadeOut_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.DoAttack
	 */
	struct APrimalDinoCharacter_DoAttack_Params
	{
	public:
		int32_t                                                    AttackIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSetCurrentAttack;                                       // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bInterruptCurrentAttack;                                 // 0x0005(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0006(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.DinoShoulderMountedLaunch
	 */
	struct APrimalDinoCharacter_DinoShoulderMountedLaunch_Params
	{
	public:
		struct FVector                                             launchDir;                                               // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QJ2C[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AShooterCharacter*                                   throwingCharacter;                                       // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.DinoFireProjectileEx
	 */
	struct APrimalDinoCharacter_DinoFireProjectileEx_Params
	{
	public:
		class UClass*                                              ProjectileClass;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Origin;                                                  // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector_NetQuantizeNormal                           ShootDir;                                                // 0x0014(0x000C)  (Parm)
		bool                                                       bScaleProjDamageByDinoDamage;                            // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAddDinoVelocityToProjectile;                            // 0x0021(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_9QEB[0x2];                                   // 0x0022(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      OverrideInitialSpeed;                                    // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OverrideMaxSpeed;                                        // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ExtraDirectDamageMultiplier;                             // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ExtraExplosionDamageMultiplier;                          // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       spawnOnOwningClient;                                     // 0x0034(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.Die
	 */
	struct APrimalDinoCharacter_Die_Params
	{
	public:
		float                                                      KillingDamage;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_EVT7[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0008(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AController*                                         Killer;                                                  // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0038(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.DestroyController
	 */
	struct APrimalDinoCharacter_DestroyController_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.CycleAttackWeightsForAttackAtIndex
	 */
	struct APrimalDinoCharacter_CycleAttackWeightsForAttackAtIndex_Params
	{
	public:
		int32_t                                                    AttackIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.CreateCloneFertilizedEgg
	 */
	struct APrimalDinoCharacter_CreateCloneFertilizedEgg_Params
	{
	public:
		struct FVector                                             AtLoc;                                                   // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            AtRot;                                                   // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              DroppedItemTemplateOverride;                             // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumMutationsToAdd;                                       // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_0E3N[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class ADroppedItem*                                        ReturnValue;                                             // 0x0028(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.CreateBabyDino
	 */
	struct APrimalDinoCharacter_CreateBabyDino_Params
	{
	public:
		class APrimalDinoCharacter*                                ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.CopySettingsToOtherDino
	 */
	struct APrimalDinoCharacter_CopySettingsToOtherDino_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalDinoCharacter*                                FromDino;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalDinoCharacter*                                OtherDino;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    SettingTypeUseIndex;                                     // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.CopyPaintingComponentFrom
	 */
	struct APrimalDinoCharacter_CopyPaintingComponentFrom_Params
	{
	public:
		class APrimalDinoCharacter*                                Other;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ClientStartLanding
	 */
	struct APrimalDinoCharacter_ClientStartLanding_Params
	{
	public:
		struct FVector                                             landingLoc;                                              // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ClientShouldNotifyLanded
	 */
	struct APrimalDinoCharacter_ClientShouldNotifyLanded_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ClientInterruptLanding
	 */
	struct APrimalDinoCharacter_ClientInterruptLanding_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ClearTamedLandTarget
	 */
	struct APrimalDinoCharacter_ClearTamedLandTarget_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ClearRider
	 */
	struct APrimalDinoCharacter_ClearRider_Params
	{
	public:
		bool                                                       bFromRider;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCancelForceLand;                                        // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       SpawnDinoDefaultController;                              // 0x0002(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_791S[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    OverrideUnboardDirection;                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceEvenIfBuffPreventsClear;                           // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ClearPassengers
	 */
	struct APrimalDinoCharacter_ClearPassengers_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ClearMountCharacter
	 */
	struct APrimalDinoCharacter_ClearMountCharacter_Params
	{
	public:
		bool                                                       bFromMountCharacter;                                     // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ClearCharacterAIMovement
	 */
	struct APrimalDinoCharacter_ClearCharacterAIMovement_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ClearCarriedCharacter
	 */
	struct APrimalDinoCharacter_ClearCarriedCharacter_Params
	{
	public:
		bool                                                       fromCarriedCharacter;                                    // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCancelAnyCarryBuffs;                                    // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.CheckForTamedFoodConsumption
	 */
	struct APrimalDinoCharacter_CheckForTamedFoodConsumption_Params
	{
	public:
		int32_t                                                    Steps;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.CarryCharacter
	 */
	struct APrimalDinoCharacter_CarryCharacter_Params
	{
	public:
		class APrimalCharacter*                                    aRider;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       byPassCanCarryCheck;                                     // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.CanTakePassenger
	 */
	struct APrimalDinoCharacter_CanTakePassenger_Params
	{
	public:
		class APrimalCharacter*                                    ACharacter;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    PassengerSeatIndex;                                      // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForcePassenger;                                         // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAllowFlyersAndWaterDinos;                               // 0x000D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSkipLineTrace;                                          // 0x000E(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000F(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.CanOrder
	 */
	struct APrimalDinoCharacter_CanOrder_Params
	{
	public:
		class APrimalCharacter*                                    FromCharacter;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bBuildingStructures;                                     // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.CanNurseDino
	 */
	struct APrimalDinoCharacter_CanNurseDino_Params
	{
	public:
		class APrimalDinoCharacter*                                OtherDino;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.CanMount
	 */
	struct APrimalDinoCharacter_CanMount_Params
	{
	public:
		class APrimalCharacter*                                    ACharacter;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.CanFly
	 */
	struct APrimalDinoCharacter_CanFly_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.CanDinoAttackTargetsWithoutRider
	 */
	struct APrimalDinoCharacter_CanDinoAttackTargetsWithoutRider_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.CanCryo
	 */
	struct APrimalDinoCharacter_CanCryo_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.CanClearRider
	 */
	struct APrimalDinoCharacter_CanClearRider_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.CancelCurrentAttack
	 */
	struct APrimalDinoCharacter_CancelCurrentAttack_Params
	{
	public:
		bool                                                       bStopCurrentAttackAnim;                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_AL95[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      AttackAnimBlendOutTime;                                  // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.CanCarryCharacter
	 */
	struct APrimalDinoCharacter_CanCarryCharacter_Params
	{
	public:
		class APrimalCharacter*                                    CanCarryPawn;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.CanAttack
	 */
	struct APrimalDinoCharacter_CanAttack_Params
	{
	public:
		int32_t                                                    AttackIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BSetupDinoTameable
	 */
	struct APrimalDinoCharacter_BSetupDinoTameable_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BrakeDinoBP
	 */
	struct APrimalDinoCharacter_BrakeDinoBP_Params
	{
	public:
		float                                                      val;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPUntamedConsumeFoodItem
	 */
	struct APrimalDinoCharacter_BPUntamedConsumeFoodItem_Params
	{
	public:
		class UPrimalItem*                                         foodItem;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPUnstasisConsumeFood
	 */
	struct APrimalDinoCharacter_BPUnstasisConsumeFood_Params
	{
	public:
		float                                                      FoodNeeded;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPUnstasis
	 */
	struct APrimalDinoCharacter_BPUnstasis_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPUnsetupDinoTameable
	 */
	struct APrimalDinoCharacter_BPUnsetupDinoTameable_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPTamedConsumeFoodItem
	 */
	struct APrimalDinoCharacter_BPTamedConsumeFoodItem_Params
	{
	public:
		class UPrimalItem*                                         foodItem;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPStaticCreateBabyDinoNoAncestors
	 */
	struct APrimalDinoCharacter_BPStaticCreateBabyDinoNoAncestors_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              EggDinoClassToSpawn;                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             theGroundLoc;                                            // 0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      actorRotationYaw;                                        // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<unsigned char>                                      EggColorSetIndices;                                      // 0x0020(0x0010)  (Parm, ZeroConstructor)
		TArray<unsigned char>                                      EggNumberOfLevelUpPointsApplied;                         // 0x0030(0x0010)  (Parm, ZeroConstructor)
		float                                                      EggTamedIneffectivenessModifier;                         // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NotifyTeamOverride;                                      // 0x0044(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    EggRandomMutationsFemale;                                // 0x0048(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    EggRandomMutationsMale;                                  // 0x004C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalDinoCharacter*                                ReturnValue;                                             // 0x0050(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPStaticCreateBabyDino
	 */
	struct APrimalDinoCharacter_BPStaticCreateBabyDino_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              EggDinoClassToSpawn;                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             theGroundLoc;                                            // 0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      actorRotationYaw;                                        // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<unsigned char>                                      EggColorSetIndices;                                      // 0x0020(0x0010)  (Parm, ZeroConstructor)
		TArray<unsigned char>                                      EggNumberOfLevelUpPointsApplied;                         // 0x0030(0x0010)  (Parm, ZeroConstructor)
		float                                                      EggTamedIneffectivenessModifier;                         // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_LHA2[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FDinoAncestorsEntry>                         EggDinoAncestors;                                        // 0x0048(0x0010)  (Parm, ZeroConstructor)
		TArray<struct FDinoAncestorsEntry>                         EggDinoAncestorsMale;                                    // 0x0058(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    NotifyTeamOverride;                                      // 0x0068(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    EggRandomMutationsFemale;                                // 0x006C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    EggRandomMutationsMale;                                  // 0x0070(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    EggGenderOverride;                                       // 0x0074(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalDinoCharacter*                                ReturnValue;                                             // 0x0078(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPShowTamingPanel
	 */
	struct APrimalDinoCharacter_BPShowTamingPanel_Params
	{
	public:
		bool                                                       currentVisibility;                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPShouldForceFlee
	 */
	struct APrimalDinoCharacter_BPShouldForceFlee_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPShouldCancelDoAttack
	 */
	struct APrimalDinoCharacter_BPShouldCancelDoAttack_Params
	{
	public:
		int32_t                                                    AttackIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPSetupTamed
	 */
	struct APrimalDinoCharacter_BPSetupTamed_Params
	{
	public:
		bool                                                       bWasJustTamed;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPSetSimulatedInterpRollOverride
	 */
	struct APrimalDinoCharacter_BPSetSimulatedInterpRollOverride_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPSetInitialAimOffsetTargets
	 */
	struct APrimalDinoCharacter_BPSetInitialAimOffsetTargets_Params
	{
	public:
		struct FVector                                             TargetRootLoc;                                           // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            TargetAimRot;                                            // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             OutTargetRootLoc;                                        // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            OutTargetAimRot;                                         // 0x0024(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPSetForcedAggro
	 */
	struct APrimalDinoCharacter_BPSetForcedAggro_Params
	{
	public:
		class AActor*                                              TargetableActor;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      AggroAmount;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ForcedAggroTime;                                         // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPSentKilledNotification
	 */
	struct APrimalDinoCharacter_BPSentKilledNotification_Params
	{
	public:
		class AShooterPlayerController*                            ToPC;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPResetClone
	 */
	struct APrimalDinoCharacter_BPResetClone_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPPreventSpawnForPlayer
	 */
	struct APrimalDinoCharacter_BPPreventSpawnForPlayer_Params
	{
	public:
		class AShooterPlayerController*                            PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCheckCooldownTime;                                      // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPPreventRiding
	 */
	struct APrimalDinoCharacter_BPPreventRiding_Params
	{
	public:
		class AShooterCharacter*                                   ByPawn;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDontCheckDistance;                                      // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPPreventOrderAllowed
	 */
	struct APrimalDinoCharacter_BPPreventOrderAllowed_Params
	{
	public:
		class APrimalCharacter*                                    FromCharacter;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EDinoTamedOrder                                            OrderType;                                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForce;                                                  // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_74DI[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              enemyTarget;                                             // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       orderNotExecuted;                                        // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0019(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPPrepareForLaunchFromShoulder
	 */
	struct APrimalDinoCharacter_BPPrepareForLaunchFromShoulder_Params
	{
	public:
		struct FVector                                             viewLoc;                                                 // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             viewDir;                                                 // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPOverrideTamingDescriptionLabel
	 */
	struct APrimalDinoCharacter_BPOverrideTamingDescriptionLabel_Params
	{
	public:
		struct FSlateColor                                         TextColor;                                               // 0x0000(0x0028)  (Parm, OutParm, ReferenceParm)
		class FString                                              ReturnValue;                                             // 0x0028(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPOverrideStencilAllianceForTarget
	 */
	struct APrimalDinoCharacter_BPOverrideStencilAllianceForTarget_Params
	{
	public:
		class APrimalCharacter*                                    TargetDino;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 Component;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		EStencilAlliance                                           ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPOverridePassengerAdditiveAnim
	 */
	struct APrimalDinoCharacter_BPOverridePassengerAdditiveAnim_Params
	{
	public:
		class APrimalCharacter*                                    ForPassenger;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UAnimSequence*                                       ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPOverrideMutationLabels
	 */
	struct APrimalDinoCharacter_BPOverrideMutationLabels_Params
	{
	public:
		bool                                                       male;                                                    // 0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_DX9R[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPOverrideMoveToOrder
	 */
	struct APrimalDinoCharacter_BPOverrideMoveToOrder_Params
	{
	public:
		struct FVector                                             MoveToLocation;                                          // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1H1X[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AShooterCharacter*                                   OrderingPlayer;                                          // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPOverrideIsSubmergedForWaterTargeting
	 */
	struct APrimalDinoCharacter_BPOverrideIsSubmergedForWaterTargeting_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPOverrideHealthBarOffset
	 */
	struct APrimalDinoCharacter_BPOverrideHealthBarOffset_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPOverrideGetAttackAnimationIndex
	 */
	struct APrimalDinoCharacter_BPOverrideGetAttackAnimationIndex_Params
	{
	public:
		int32_t                                                    AttackIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KL06[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class UAnimMontage*>                                AnimationArray;                                          // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPOverrideFloatingHUDLocation
	 */
	struct APrimalDinoCharacter_BPOverrideFloatingHUDLocation_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPOverrideCameraViewTarget
	 */
	struct APrimalDinoCharacter_BPOverrideCameraViewTarget_Params
	{
	public:
		class FName                                                CurrentCameraMode;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             DesiredCameraLocation;                                   // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            DesiredCameraRotation;                                   // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DesiredFOV;                                              // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOverrideCameraLocation;                                 // 0x0024(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JQ6Q[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             CameraLocation;                                          // 0x0028(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOverrideCameraRotation;                                 // 0x0034(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5LUY[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRotator                                            CameraRotation;                                          // 0x0038(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOverrideCameraFOV;                                      // 0x0044(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_91KX[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      CameraFOV;                                               // 0x0048(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPOrderedMoveToLoc
	 */
	struct APrimalDinoCharacter_BPOrderedMoveToLoc_Params
	{
	public:
		struct FVector                                             DestLoc;                                                 // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPOnTamedProcessOrder
	 */
	struct APrimalDinoCharacter_BPOnTamedProcessOrder_Params
	{
	public:
		class APrimalCharacter*                                    FromCharacter;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EDinoTamedOrder                                            OrderType;                                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForce;                                                  // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_6FVN[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              enemyTarget;                                             // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       orderNotExecuted;                                        // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPOnStopJump
	 */
	struct APrimalDinoCharacter_BPOnStopJump_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPOnStartJump
	 */
	struct APrimalDinoCharacter_BPOnStartJump_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPOnSetMountedDino
	 */
	struct APrimalDinoCharacter_BPOnSetMountedDino_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPOnSetFlight
	 */
	struct APrimalDinoCharacter_BPOnSetFlight_Params
	{
	public:
		bool                                                       bFly;                                                    // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPOnRepIsCharging
	 */
	struct APrimalDinoCharacter_BPOnRepIsCharging_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPOnRefreshColorization
	 */
	struct APrimalDinoCharacter_BPOnRefreshColorization_Params
	{
	public:
		TArray<struct FLinearColor>                                Colors;                                                  // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPOnEndCharging
	 */
	struct APrimalDinoCharacter_BPOnEndCharging_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPOnDinoStartled
	 */
	struct APrimalDinoCharacter_BPOnDinoStartled_Params
	{
	public:
		class UAnimMontage*                                        StartledAnimPlayed;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFromAIController;                                       // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPOnDinoFiredProjectile
	 */
	struct APrimalDinoCharacter_BPOnDinoFiredProjectile_Params
	{
	public:
		class AShooterProjectile*                                  Projectile;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPOnDinoCheat
	 */
	struct APrimalDinoCharacter_BPOnDinoCheat_Params
	{
	public:
		class FName                                                CheatName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSetValue;                                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_MVHS[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      Value;                                                   // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPOnClearMountedDino
	 */
	struct APrimalDinoCharacter_BPOnClearMountedDino_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPNotifyWildHarvestAttack
	 */
	struct APrimalDinoCharacter_BPNotifyWildHarvestAttack_Params
	{
	public:
		int32_t                                                    harvestIndex;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPNotifyStructurePlacedNearby
	 */
	struct APrimalDinoCharacter_BPNotifyStructurePlacedNearby_Params
	{
	public:
		class APrimalStructure*                                    NewStructure;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPNotifySetRider
	 */
	struct APrimalDinoCharacter_BPNotifySetRider_Params
	{
	public:
		class AShooterCharacter*                                   RiderSetting;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPNotifyNameEditText
	 */
	struct APrimalDinoCharacter_BPNotifyNameEditText_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPNotifyMateBoostChanged
	 */
	struct APrimalDinoCharacter_BPNotifyMateBoostChanged_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPNotifyIfPassengerLaunchShoulderMount
	 */
	struct APrimalDinoCharacter_BPNotifyIfPassengerLaunchShoulderMount_Params
	{
	public:
		class APrimalCharacter*                                    launchedCharacter;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPNotifyClearRider
	 */
	struct APrimalDinoCharacter_BPNotifyClearRider_Params
	{
	public:
		class AShooterCharacter*                                   RiderClearing;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPNotifyClearPassenger
	 */
	struct APrimalDinoCharacter_BPNotifyClearPassenger_Params
	{
	public:
		class APrimalCharacter*                                    PassengerChar;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    SeatIndex;                                               // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPNotifyClaimed
	 */
	struct APrimalDinoCharacter_BPNotifyClaimed_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPNotifyCarriedDinoBabyAgeIncrement
	 */
	struct APrimalDinoCharacter_BPNotifyCarriedDinoBabyAgeIncrement_Params
	{
	public:
		class APrimalDinoCharacter*                                AgingCarriedDino;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      PreviousAge;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      NewAge;                                                  // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPNotifyBabyAgeIncrement
	 */
	struct APrimalDinoCharacter_BPNotifyBabyAgeIncrement_Params
	{
	public:
		float                                                      PreviousAge;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      NewAge;                                                  // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPNotifyAddPassenger
	 */
	struct APrimalDinoCharacter_BPNotifyAddPassenger_Params
	{
	public:
		class APrimalCharacter*                                    PassengerChar;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    SeatIndex;                                               // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPModifyHarvestingWeightsArray
	 */
	struct APrimalDinoCharacter_BPModifyHarvestingWeightsArray_Params
	{
	public:
		TArray<float>                                              resourceWeightsIn;                                       // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class UPrimalItem*>                                 resourceItems;                                           // 0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<float>                                              resourceWeightsOut;                                      // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPModifyHarvestingQuantity
	 */
	struct APrimalDinoCharacter_BPModifyHarvestingQuantity_Params
	{
	public:
		float                                                      originalQuantity;                                        // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_O8S5[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              resourceSelected;                                        // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPModifyHarvestDamage
	 */
	struct APrimalDinoCharacter_BPModifyHarvestDamage_Params
	{
	public:
		class UPrimalHarvestingComponent*                          harvestComponent;                                        // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		float                                                      inDamage;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPModifyDesiredRotation
	 */
	struct APrimalDinoCharacter_BPModifyDesiredRotation_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            InDesiredRotation;                                       // 0x0004(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            OutDesiredRotation;                                      // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x001C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPModifyControlRotation
	 */
	struct APrimalDinoCharacter_BPModifyControlRotation_Params
	{
	public:
		struct FRotator                                            ControlRotation;                                         // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            outControlRotation;                                      // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPModifyAimOffsetTargetLocation
	 */
	struct APrimalDinoCharacter_BPModifyAimOffsetTargetLocation_Params
	{
	public:
		struct FVector                                             AimTargetLocation;                                       // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPModifyAimOffsetNoTarget
	 */
	struct APrimalDinoCharacter_BPModifyAimOffsetNoTarget_Params
	{
	public:
		struct FRotator                                            Aim;                                                     // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPKilledSomethingEvent
	 */
	struct APrimalDinoCharacter_BPKilledSomethingEvent_Params
	{
	public:
		class APrimalCharacter*                                    killedTarget;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPIsValidUnStasisCaster
	 */
	struct APrimalDinoCharacter_BPIsValidUnStasisCaster_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPIsTamed
	 */
	struct APrimalDinoCharacter_BPIsTamed_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPIsHidden
	 */
	struct APrimalDinoCharacter_BPIsHidden_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPIsBasedOnActor
	 */
	struct APrimalDinoCharacter_BPIsBasedOnActor_Params
	{
	public:
		class AActor*                                              Other;                                                   // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPHasCurrentAttack
	 */
	struct APrimalDinoCharacter_BPHasCurrentAttack_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPHandleUseButtonPress
	 */
	struct APrimalDinoCharacter_BPHandleUseButtonPress_Params
	{
	public:
		class AShooterPlayerController*                            RiderController;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPHandleOnStopTargeting
	 */
	struct APrimalDinoCharacter_BPHandleOnStopTargeting_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPHandleOnStopFire
	 */
	struct APrimalDinoCharacter_BPHandleOnStopFire_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPHandleControllerInitiatedAttack
	 */
	struct APrimalDinoCharacter_BPHandleControllerInitiatedAttack_Params
	{
	public:
		int32_t                                                    AttackIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPGetTargetingDesirability
	 */
	struct APrimalDinoCharacter_BPGetTargetingDesirability_Params
	{
	public:
		class AActor*                                              Attacker;                                                // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPGetRidingMultiUseEntries
	 */
	struct APrimalDinoCharacter_BPGetRidingMultiUseEntries_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FMultiUseEntry>                              MultiUseEntries;                                         // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
		TArray<struct FMultiUseEntry>                              ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPGetRiderUnboardLocation
	 */
	struct APrimalDinoCharacter_BPGetRiderUnboardLocation_Params
	{
	public:
		class APrimalCharacter*                                    RidingCharacter;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPGetRiderUnboardDirection
	 */
	struct APrimalDinoCharacter_BPGetRiderUnboardDirection_Params
	{
	public:
		class APrimalCharacter*                                    RidingCharacter;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPGetRiderSocket
	 */
	struct APrimalDinoCharacter_BPGetRiderSocket_Params
	{
	public:
		class FName                                                ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPGetPassengerDinoAdditionalOffset
	 */
	struct APrimalDinoCharacter_BPGetPassengerDinoAdditionalOffset_Params
	{
	public:
		class APrimalDinoCharacter*                                Passenger;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPGetOtherActorToIgnore
	 */
	struct APrimalDinoCharacter_BPGetOtherActorToIgnore_Params
	{
	public:
		class AActor*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPGetLookOffsetSocketName
	 */
	struct APrimalDinoCharacter_BPGetLookOffsetSocketName_Params
	{
	public:
		class APrimalCharacter*                                    ForPrimalChar;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPGetHealthBarColor
	 */
	struct APrimalDinoCharacter_BPGetHealthBarColor_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPGetDragSocketName
	 */
	struct APrimalDinoCharacter_BPGetDragSocketName_Params
	{
	public:
		class APrimalCharacter*                                    DraggingChar;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPGetDragSocketDinoName
	 */
	struct APrimalDinoCharacter_BPGetDragSocketDinoName_Params
	{
	public:
		class APrimalDinoCharacter*                                aGrabbedDino;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPGetCustomDinoSetup
	 */
	struct APrimalDinoCharacter_BPGetCustomDinoSetup_Params
	{
	public:
		struct FDinoSetup                                          ReturnValue;                                             // 0x0000(0x00F0)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPGetCurrentAttackIndex
	 */
	struct APrimalDinoCharacter_BPGetCurrentAttackIndex_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPGetCrosshairSpread
	 */
	struct APrimalDinoCharacter_BPGetCrosshairSpread_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPGetCrosshairLocation
	 */
	struct APrimalDinoCharacter_BPGetCrosshairLocation_Params
	{
	public:
		float                                                      CanvasClipX;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CanvasClipY;                                             // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OutX;                                                    // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OutY;                                                    // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPGetCrosshairColor
	 */
	struct APrimalDinoCharacter_BPGetCrosshairColor_Params
	{
	public:
		struct FLinearColor                                        ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPGetCrosshairAlpha
	 */
	struct APrimalDinoCharacter_BPGetCrosshairAlpha_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPGetAttackOfPlayedAnimation
	 */
	struct APrimalDinoCharacter_BPGetAttackOfPlayedAnimation_Params
	{
	public:
		struct FDinoAttackInfo                                     AttackInfo;                                              // 0x0000(0x0130)  (Parm, OutParm)
		bool                                                       ReturnValue;                                             // 0x0130(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPForceTurretFastTargeting
	 */
	struct APrimalDinoCharacter_BPForceTurretFastTargeting_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPForceReachedDestination
	 */
	struct APrimalDinoCharacter_BPForceReachedDestination_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPFedWakingTameEvent
	 */
	struct APrimalDinoCharacter_BPFedWakingTameEvent_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPDrawToRiderHUD
	 */
	struct APrimalDinoCharacter_BPDrawToRiderHUD_Params
	{
	public:
		class AShooterHUD*                                         HUD;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPDoHarvestAttack
	 */
	struct APrimalDinoCharacter_BPDoHarvestAttack_Params
	{
	public:
		int32_t                                                    harvestIndex;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPDoAttack
	 */
	struct APrimalDinoCharacter_BPDoAttack_Params
	{
	public:
		int32_t                                                    AttackIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPDisplayTamedMessage
	 */
	struct APrimalDinoCharacter_BPDisplayTamedMessage_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPDinoTooltipCustomTorpidityProgressBar
	 */
	struct APrimalDinoCharacter_BPDinoTooltipCustomTorpidityProgressBar_Params
	{
	public:
		bool                                                       overrideTorpidityProgressBarIfActive;                    // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_U7J3[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      progressPercent;                                         // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              Label;                                                   // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPDinoTooltipCustomTamingProgressBar
	 */
	struct APrimalDinoCharacter_BPDinoTooltipCustomTamingProgressBar_Params
	{
	public:
		bool                                                       overrideTamingProgressBarIfActive;                       // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_83DA[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      progressPercent;                                         // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              Label;                                                   // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPDinoPrepareForARKUploading
	 */
	struct APrimalDinoCharacter_BPDinoPrepareForARKUploading_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPDinoPostBeginPlay
	 */
	struct APrimalDinoCharacter_BPDinoPostBeginPlay_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPDinoARKDownloadedEnd
	 */
	struct APrimalDinoCharacter_BPDinoARKDownloadedEnd_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPDinoARKDownloadedBegin
	 */
	struct APrimalDinoCharacter_BPDinoARKDownloadedBegin_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPDidSetCarriedCharacter
	 */
	struct APrimalDinoCharacter_BPDidSetCarriedCharacter_Params
	{
	public:
		class APrimalCharacter*                                    PreviousCarriedCharacter;                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPDidClearCarriedCharacter
	 */
	struct APrimalDinoCharacter_BPDidClearCarriedCharacter_Params
	{
	public:
		class APrimalCharacter*                                    PreviousCarriedCharacter;                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPDesiredRotationIsLocalSpace
	 */
	struct APrimalDinoCharacter_BPDesiredRotationIsLocalSpace_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPConsumeInventoryFoodItem
	 */
	struct APrimalDinoCharacter_BPConsumeInventoryFoodItem_Params
	{
	public:
		class UPrimalItem*                                         foodItem;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bConsumeEntireStack;                                     // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_L46U[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AShooterCharacter*                                   ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPClampMaxHarvestHealth
	 */
	struct APrimalDinoCharacter_BPClampMaxHarvestHealth_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPCheckSeven
	 */
	struct APrimalDinoCharacter_BPCheckSeven_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPCheckCanSpawnFromLocation
	 */
	struct APrimalDinoCharacter_BPCheckCanSpawnFromLocation_Params
	{
	public:
		struct FVector                                             CheckLocation;                                           // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPChargingModifyInputAcceleration
	 */
	struct APrimalDinoCharacter_BPChargingModifyInputAcceleration_Params
	{
	public:
		struct FVector                                             inputAcceleration;                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPCarriedDinoBabyRescaled
	 */
	struct APrimalDinoCharacter_BPCarriedDinoBabyRescaled_Params
	{
	public:
		class APrimalDinoCharacter*                                AgingCarriedDino;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      NewAge;                                                  // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPCanTargetCorpse
	 */
	struct APrimalDinoCharacter_BPCanTargetCorpse_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPCanTakePassenger
	 */
	struct APrimalDinoCharacter_BPCanTakePassenger_Params
	{
	public:
		class APrimalCharacter*                                    Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    PassengerSeatIndex;                                      // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForcePassenger;                                         // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAllowFlyersAndWaterDinos;                               // 0x000D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000E(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPCanMountOnCharacter
	 */
	struct APrimalDinoCharacter_BPCanMountOnCharacter_Params
	{
	public:
		class APrimalCharacter*                                    Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPCanLand
	 */
	struct APrimalDinoCharacter_BPCanLand_Params
	{
	public:
		bool                                                       CanLand;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPCanIgnoreImmobilizationTrap
	 */
	struct APrimalDinoCharacter_BPCanIgnoreImmobilizationTrap_Params
	{
	public:
		class UClass*                                              TrapClass;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceTrigger;                                           // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPCanDragCharacter
	 */
	struct APrimalDinoCharacter_BPCanDragCharacter_Params
	{
	public:
		class APrimalCharacter*                                    Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPCanCryo
	 */
	struct APrimalDinoCharacter_BPCanCryo_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPCanAutodrag
	 */
	struct APrimalDinoCharacter_BPCanAutodrag_Params
	{
	public:
		class APrimalCharacter*                                    characterToDrag;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPBecomeBaby
	 */
	struct APrimalDinoCharacter_BPBecomeBaby_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPBecomeAdult
	 */
	struct APrimalDinoCharacter_BPBecomeAdult_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPBecameNewBaby
	 */
	struct APrimalDinoCharacter_BPBecameNewBaby_Params
	{
	public:
		class APrimalDinoCharacter*                                Parent;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPAllowEquippingItemType
	 */
	struct APrimalDinoCharacter_BPAllowEquippingItemType_Params
	{
	public:
		EPrimalEquipmentType                                       equipmentType;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPAllowClaiming
	 */
	struct APrimalDinoCharacter_BPAllowClaiming_Params
	{
	public:
		class AShooterPlayerController*                            ForPlayer;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPAllowCarryCharacter
	 */
	struct APrimalDinoCharacter_BPAllowCarryCharacter_Params
	{
	public:
		class APrimalCharacter*                                    checkCharacter;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BPAdjustAttackIndex
	 */
	struct APrimalDinoCharacter_BPAdjustAttackIndex_Params
	{
	public:
		int32_t                                                    AttackIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_ShouldDisableBasedCharactersCameraInterpolation
	 */
	struct APrimalDinoCharacter_BP_ShouldDisableBasedCharactersCameraInterpolation_Params
	{
	public:
		class APrimalCharacter*                                    ForBasedChar;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_PreventUnmounting
	 */
	struct APrimalDinoCharacter_BP_PreventUnmounting_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_PreventCarryingByCharacter
	 */
	struct APrimalDinoCharacter_BP_PreventCarryingByCharacter_Params
	{
	public:
		class APrimalCharacter*                                    ByCarrier;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_PreventCarrying
	 */
	struct APrimalDinoCharacter_BP_PreventCarrying_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_OverrideRiderCameraCollisionSweep
	 */
	struct APrimalDinoCharacter_BP_OverrideRiderCameraCollisionSweep_Params
	{
	public:
		struct FVector                                             SweepStart;                                              // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             SweepEnd;                                                // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FHitResult                                          ReturnValue;                                             // 0x0018(0x0088)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_OverrideDinoName
	 */
	struct APrimalDinoCharacter_BP_OverrideDinoName_Params
	{
	public:
		class FString                                              CurrentDinoName;                                         // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class APlayerController*                                   ForPC;                                                   // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_OverrideCarriedCharacterTransform
	 */
	struct APrimalDinoCharacter_BP_OverrideCarriedCharacterTransform_Params
	{
	public:
		class APrimalCharacter*                                    ForCarriedChar;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_OverrideBasedCharactersCameraInterpSpeed
	 */
	struct APrimalDinoCharacter_BP_OverrideBasedCharactersCameraInterpSpeed_Params
	{
	public:
		class APrimalCharacter*                                    ForBasedChar;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DefaultTPVCameraSpeedInterpMultiplier;                   // 0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DefaultTPVOffsetInterpSpeed;                             // 0x000C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TPVCameraSpeedInterpMultiplier;                          // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TPVOffsetInterpSpeed;                                    // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_OnUncryo
	 */
	struct APrimalDinoCharacter_BP_OnUncryo_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_OnTargetedByTamedOrder
	 */
	struct APrimalDinoCharacter_BP_OnTargetedByTamedOrder_Params
	{
	public:
		class APrimalCharacter*                                    OrderingCharacter;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalDinoCharacter*                                AttackingDino;                                           // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForced;                                                 // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_OnTamedOrderReceived
	 */
	struct APrimalDinoCharacter_BP_OnTamedOrderReceived_Params
	{
	public:
		class APrimalCharacter*                                    FromCharacter;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EDinoTamedOrder                                            OrderType;                                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForce;                                                  // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_VPSX[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              enemyTarget;                                             // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       orderNotExecuted;                                        // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_OnStartLandingNotify
	 */
	struct APrimalDinoCharacter_BP_OnStartLandingNotify_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_OnStartLandFailed
	 */
	struct APrimalDinoCharacter_BP_OnStartLandFailed_Params
	{
	public:
		int32_t                                                    ReasonIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_OnRiderChangeWeapons
	 */
	struct APrimalDinoCharacter_BP_OnRiderChangeWeapons_Params
	{
	public:
		class AShooterCharacter*                                   theRider;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         newWeapon;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_OnPostNetReplication
	 */
	struct APrimalDinoCharacter_BP_OnPostNetReplication_Params
	{
	public:
		struct FVector                                             ReplicatedLoc;                                           // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReplicatedRot;                                           // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_OnLandingInterruptedNotify
	 */
	struct APrimalDinoCharacter_BP_OnLandingInterruptedNotify_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_OnCryo
	 */
	struct APrimalDinoCharacter_BP_OnCryo_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_OnBasedPawnRemovedNotify
	 */
	struct APrimalDinoCharacter_BP_OnBasedPawnRemovedNotify_Params
	{
	public:
		class AActor*                                              RemovedActor;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_OnBasedPawnAddedNotify
	 */
	struct APrimalDinoCharacter_BP_OnBasedPawnAddedNotify_Params
	{
	public:
		class AActor*                                              AddedActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_InterceptTurnInput
	 */
	struct APrimalDinoCharacter_BP_InterceptTurnInput_Params
	{
	public:
		float                                                      AxisValue;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_InterceptMoveRight
	 */
	struct APrimalDinoCharacter_BP_InterceptMoveRight_Params
	{
	public:
		float                                                      AxisValue;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_InterceptMoveForward
	 */
	struct APrimalDinoCharacter_BP_InterceptMoveForward_Params
	{
	public:
		float                                                      AxisValue;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_GetCustomModifier_RotationRate
	 */
	struct APrimalDinoCharacter_BP_GetCustomModifier_RotationRate_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_GetCustomModifier_MaxSpeed
	 */
	struct APrimalDinoCharacter_BP_GetCustomModifier_MaxSpeed_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_ForceAllowMountedWeapon
	 */
	struct APrimalDinoCharacter_BP_ForceAllowMountedWeapon_Params
	{
	public:
		class UClass*                                              WeaponTemplate;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_CanFly
	 */
	struct APrimalDinoCharacter_BP_CanFly_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BP_AllowWalkableSlopeOverride
	 */
	struct APrimalDinoCharacter_BP_AllowWalkableSlopeOverride_Params
	{
	public:
		class UPrimitiveComponent*                                 ForComponent;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BlueprintTamedTick
	 */
	struct APrimalDinoCharacter_BlueprintTamedTick_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BlueprintPlayDying
	 */
	struct APrimalDinoCharacter_BlueprintPlayDying_Params
	{
	public:
		float                                                      KillingDamage;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_8YOY[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0008(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class APawn*                                               InstigatingPawn;                                         // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BlueprintOverrideWantsToRun
	 */
	struct APrimalDinoCharacter_BlueprintOverrideWantsToRun_Params
	{
	public:
		bool                                                       bInputWantsToRun;                                        // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BlueprintOverrideHarvestDamageType
	 */
	struct APrimalDinoCharacter_BlueprintOverrideHarvestDamageType_Params
	{
	public:
		float                                                      OutHarvestDamageMultiplier;                              // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_3380[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BlueprintGetAttackWeight
	 */
	struct APrimalDinoCharacter_BlueprintGetAttackWeight_Params
	{
	public:
		int32_t                                                    AttackIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      inputWeight;                                             // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Distance;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      attackRangeOffset;                                       // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              OtherTarget;                                             // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BlueprintExtraBabyScaling
	 */
	struct APrimalDinoCharacter_BlueprintExtraBabyScaling_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BlueprintDrawFloatingHUD
	 */
	struct APrimalDinoCharacter_BlueprintDrawFloatingHUD_Params
	{
	public:
		class AShooterHUD*                                         HUD;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CenterX;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CenterY;                                                 // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DrawScale;                                               // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BlueprintDestroyActor
	 */
	struct APrimalDinoCharacter_BlueprintDestroyActor_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BlueprintCanRiderAttack
	 */
	struct APrimalDinoCharacter_BlueprintCanRiderAttack_Params
	{
	public:
		int32_t                                                    AttackIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BlueprintCanAttack
	 */
	struct APrimalDinoCharacter_BlueprintCanAttack_Params
	{
	public:
		int32_t                                                    AttackIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Distance;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      attackRangeOffset;                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_Y0IN[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              OtherTarget;                                             // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.BlueprintAdjustOutputDamage
	 */
	struct APrimalDinoCharacter_BlueprintAdjustOutputDamage_Params
	{
	public:
		int32_t                                                    AttackIndex;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OriginalDamageAmount;                                    // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              HitActor;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              OutDamageType;                                           // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OutDamageImpulse;                                        // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x001C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.AssertColorNames
	 */
	struct APrimalDinoCharacter_AssertColorNames_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.AreSpawnerSublevelsLoaded
	 */
	struct APrimalDinoCharacter_AreSpawnerSublevelsLoaded_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ApplyRidingAttackExtraVelocity
	 */
	struct APrimalDinoCharacter_ApplyRidingAttackExtraVelocity_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.ApplyMutagen
	 */
	struct APrimalDinoCharacter_ApplyMutagen_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.AnimNotifyMountedDino
	 */
	struct APrimalDinoCharacter_AnimNotifyMountedDino_Params
	{	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.AllowWakingTame
	 */
	struct APrimalDinoCharacter_AllowWakingTame_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.AllowMountedWeaponry
	 */
	struct APrimalDinoCharacter_AllowMountedWeaponry_Params
	{
	public:
		bool                                                       bIgnoreCurrentWeapon;                                    // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bWeaponForcesMountedWeaponry;                            // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.AllowCarryCharacter
	 */
	struct APrimalDinoCharacter_AllowCarryCharacter_Params
	{
	public:
		class APrimalCharacter*                                    CanCarryPawn;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.AddToMeleeSwingHurtList
	 */
	struct APrimalDinoCharacter_AddToMeleeSwingHurtList_Params
	{
	public:
		class AActor*                                              anActor;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.AddPassenger
	 */
	struct APrimalDinoCharacter_AddPassenger_Params
	{
	public:
		class APrimalCharacter*                                    ACharacter;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    PassengerSeatIndex;                                      // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForcePassenger;                                         // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAllowFlyersAndWaterDinos;                               // 0x000D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSkipLineTrace;                                          // 0x000E(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000F(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.AddedImprintingQuality
	 */
	struct APrimalDinoCharacter_AddedImprintingQuality_Params
	{
	public:
		float                                                      amount;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalDinoCharacter.AddDinoReferenceInLatchingStructure
	 */
	struct APrimalDinoCharacter_AddDinoReferenceInLatchingStructure_Params
	{
	public:
		class APrimalStructure*                                    Structure;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBotCharacter.OnRep_RidingDino
	 */
	struct APrimalBotCharacter_OnRep_RidingDino_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBotCharacter.IsUsingAlternateSkelMesh
	 */
	struct APrimalBotCharacter_IsUsingAlternateSkelMesh_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBotCharacter.GetMinAttackRange
	 */
	struct APrimalBotCharacter_GetMinAttackRange_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBotCharacter.GetMaxAttackRange
	 */
	struct APrimalBotCharacter_GetMaxAttackRange_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBotCharacter.GetDinoRidingMoveAnimation
	 */
	struct APrimalBotCharacter_GetDinoRidingMoveAnimation_Params
	{
	public:
		class UAnimSequence*                                       ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBotCharacter.GetDinoRidingAnimation
	 */
	struct APrimalBotCharacter_GetDinoRidingAnimation_Params
	{
	public:
		class UAnimSequence*                                       ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBotCharacter.GetBotAnimSequenceOverride
	 */
	struct APrimalBotCharacter_GetBotAnimSequenceOverride_Params
	{
	public:
		class UAnimSequence*                                       AnimSeq;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UAnimSequence*                                       ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBotCharacter.CurrentlyRiddenDino
	 */
	struct APrimalBotCharacter_CurrentlyRiddenDino_Params
	{
	public:
		class APrimalDinoCharacter*                                ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBotCharacter.ClearRidingDino
	 */
	struct APrimalBotCharacter_ClearRidingDino_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBotCharacter.CanRideDino
	 */
	struct APrimalBotCharacter_CanRideDino_Params
	{
	public:
		class APrimalDinoCharacter*                                Dino;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBotCharacter.AttachToDino
	 */
	struct APrimalBotCharacter_AttachToDino_Params
	{
	public:
		class APrimalDinoCharacter*                                Dino;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalRaft.TempDisableForcedVelcoityDirection
	 */
	struct APrimalRaft_TempDisableForcedVelcoityDirection_Params
	{	};

	/**
	 * Function ShooterGame.PrimalRaft.BPOverrideSwimmingVelocity
	 */
	struct APrimalRaft_BPOverrideSwimmingVelocity_Params
	{
	public:
		struct FVector                                             InitialVelocity;                                         // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Gravity;                                                 // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      FluidFriction;                                           // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      NetBuoyancy;                                             // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0024(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalRaft.BPAllowMovementSound
	 */
	struct APrimalRaft_BPAllowMovementSound_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalRaft.BP_OverrideSwimmingAcceleration
	 */
	struct APrimalRaft_BP_OverrideSwimmingAcceleration_Params
	{
	public:
		struct FVector                                             ModifyAcceleration;                                      // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWheeledVehicleCharacter.StopHonk
	 */
	struct APrimalWheeledVehicleCharacter_StopHonk_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWheeledVehicleCharacter.StartHonk
	 */
	struct APrimalWheeledVehicleCharacter_StartHonk_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWheeledVehicleCharacter.ServerHonk
	 */
	struct APrimalWheeledVehicleCharacter_ServerHonk_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWheeledVehicleCharacter.NetHonk
	 */
	struct APrimalWheeledVehicleCharacter_NetHonk_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWheeledVehicleCharacter.GetVehicleMovementComponent
	 */
	struct APrimalWheeledVehicleCharacter_GetVehicleMovementComponent_Params
	{
	public:
		class UWheeledVehicleMovementComponent*                    ReturnValue;                                             // 0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.WeaponEvent__DelegateSignature
	 */
	struct AShooterCharacter_WeaponEvent__DelegateSignature_Params
	{
	public:
		class AShooterWeapon*                                      weapon;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.UseAlternateStandingAnim
	 */
	struct AShooterCharacter_UseAlternateStandingAnim_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.UseAltAimOffsetAnim
	 */
	struct AShooterCharacter_UseAltAimOffsetAnim_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.UseAdditiveStandingAnim
	 */
	struct AShooterCharacter_UseAdditiveStandingAnim_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.UpdateExpectedBase
	 */
	struct AShooterCharacter_UpdateExpectedBase_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.UpdateAutoTurn
	 */
	struct AShooterCharacter_UpdateAutoTurn_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.UpdateAutoPlayer
	 */
	struct AShooterCharacter_UpdateAutoPlayer_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.UpdateAutoMove
	 */
	struct AShooterCharacter_UpdateAutoMove_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.UpdateAutoJump
	 */
	struct AShooterCharacter_UpdateAutoJump_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.UpdateAutoFire
	 */
	struct AShooterCharacter_UpdateAutoFire_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.TryCutEnemyGrapplingCable
	 */
	struct AShooterCharacter_TryCutEnemyGrapplingCable_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.SyncGrapHookDistance
	 */
	struct AShooterCharacter_SyncGrapHookDistance_Params
	{
	public:
		float                                                      Distance;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.StructurePlacementUseAlternateOriginActor
	 */
	struct AShooterCharacter_StructurePlacementUseAlternateOriginActor_Params
	{
	public:
		class AActor*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.StartWeaponSwitch
	 */
	struct AShooterCharacter_StartWeaponSwitch_Params
	{
	public:
		class UPrimalItem*                                         aPrimalItem;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDontClearLastWeapon;                                    // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.StartCameraTransition
	 */
	struct AShooterCharacter_StartCameraTransition_Params
	{
	public:
		float                                                      Duration;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.ShowWeapon
	 */
	struct AShooterCharacter_ShowWeapon_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.SetPreventEquipAllWeapons
	 */
	struct AShooterCharacter_SetPreventEquipAllWeapons_Params
	{
	public:
		bool                                                       bPrevent;                                                // 0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.SetPlayerHexagonCount
	 */
	struct AShooterCharacter_SetPlayerHexagonCount_Params
	{
	public:
		int32_t                                                    NewHexagonCount;                                         // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.SetExpectedBase
	 */
	struct AShooterCharacter_SetExpectedBase_Params
	{
	public:
		class APrimalStructure*                                    BaseStructure;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.SetCarriedPitchYaw
	 */
	struct AShooterCharacter_SetCarriedPitchYaw_Params
	{
	public:
		float                                                      NewCarriedPitch;                                         // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      NewCarriedYaw;                                           // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.SetCameraMode
	 */
	struct AShooterCharacter_SetCameraMode_Params
	{
	public:
		bool                                                       bFirstperson;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreSettingFirstPersonRiding;                         // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForce;                                                  // 0x0002(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.SetAutoPlayer
	 */
	struct AShooterCharacter_SetAutoPlayer_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.ServerToClientsPlayFireBallistaAnimation
	 */
	struct AShooterCharacter_ServerToClientsPlayFireBallistaAnimation_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.ServerSwitchMap
	 */
	struct AShooterCharacter_ServerSwitchMap_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.ServerSwitchBallistaAmmo
	 */
	struct AShooterCharacter_ServerSwitchBallistaAmmo_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.ServerStopFireBallista
	 */
	struct AShooterCharacter_ServerStopFireBallista_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.ServerStartSurfaceCameraForPassenger
	 */
	struct AShooterCharacter_ServerStartSurfaceCameraForPassenger_Params
	{
	public:
		float                                                      Yaw;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Pitch;                                                   // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Roll;                                                    // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bShouldInvertInput;                                      // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.ServerSetViewingInventory
	 */
	struct AShooterCharacter_ServerSetViewingInventory_Params
	{
	public:
		bool                                                       bIsViewing;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.ServerSetTargeting
	 */
	struct AShooterCharacter_ServerSetTargeting_Params
	{
	public:
		bool                                                       bNewTargeting;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.ServerSetBallistaTargeting
	 */
	struct AShooterCharacter_ServerSetBallistaTargeting_Params
	{
	public:
		bool                                                       StartTargeting;                                          // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.ServerSetBallistaNewRotation
	 */
	struct AShooterCharacter_ServerSetBallistaNewRotation_Params
	{
	public:
		float                                                      Pitch;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Yaw;                                                     // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.ServerSeatingStructureAction
	 */
	struct AShooterCharacter_ServerSeatingStructureAction_Params
	{
	public:
		unsigned char                                              ActionNumber;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.ServerRequestHexagonTrade
	 */
	struct AShooterCharacter_ServerRequestHexagonTrade_Params
	{
	public:
		int32_t                                                    RequestedTradableItemIndex;                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Quantity;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.ServerReleaseGrapHookCable
	 */
	struct AShooterCharacter_ServerReleaseGrapHookCable_Params
	{
	public:
		bool                                                       bReleasing;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.ServerPrepareMountedDinoForLaunch
	 */
	struct AShooterCharacter_ServerPrepareMountedDinoForLaunch_Params
	{
	public:
		struct FVector                                             viewLoc;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             viewDir;                                                 // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.ServerPlayFireBallistaAnimation
	 */
	struct AShooterCharacter_ServerPlayFireBallistaAnimation_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.ServerNotifyBallistaShot
	 */
	struct AShooterCharacter_ServerNotifyBallistaShot_Params
	{
	public:
		struct FHitResult                                          Impact;                                                  // 0x0000(0x0088)  (Parm)
		struct FVector_NetQuantizeNormal                           ShootDir;                                                // 0x0088(0x000C)  (Parm)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.ServerNetEndClimbingLadder
	 */
	struct AShooterCharacter_ServerNetEndClimbingLadder_Params
	{
	public:
		bool                                                       bIsClimbOver;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_V5GX[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             ClimbOverLoc;                                            // 0x0004(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      RightDir;                                                // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.ServerLaunchMountedDino
	 */
	struct AShooterCharacter_ServerLaunchMountedDino_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.ServerForceUpdatedAimedActors
	 */
	struct AShooterCharacter_ServerForceUpdatedAimedActors_Params
	{
	public:
		float                                                      OverrideMaxDistance;                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReplicateToSimulatedClients;                            // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.ServerFireBallistaProjectile
	 */
	struct AShooterCharacter_ServerFireBallistaProjectile_Params
	{
	public:
		struct FVector                                             Origin;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector_NetQuantizeNormal                           ShootDir;                                                // 0x000C(0x000C)  (Parm)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.ServerDetachGrapHookCable
	 */
	struct AShooterCharacter_ServerDetachGrapHookCable_Params
	{
	public:
		bool                                                       bDoUpwardsJump;                                          // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZY7Y[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      UpwardsJumpYaw;                                          // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.ServerClearSwitchingWeapon
	 */
	struct AShooterCharacter_ServerClearSwitchingWeapon_Params
	{
	public:
		bool                                                       bOnlyIfDefaultWeapon;                                    // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bClientRequestNextWeaponID;                              // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.ServerCheckDrinkingWater
	 */
	struct AShooterCharacter_ServerCheckDrinkingWater_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.RenamePlayer
	 */
	struct AShooterCharacter_RenamePlayer_Params
	{
	public:
		class FString                                              NewName;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.RefreshRiderSocket
	 */
	struct AShooterCharacter_RefreshRiderSocket_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.PlayEmoteAnimation
	 */
	struct AShooterCharacter_PlayEmoteAnimation_Params
	{
	public:
		unsigned char                                              EmoteIndex;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.PlayDrinkingAnimation
	 */
	struct AShooterCharacter_PlayDrinkingAnimation_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.OnWeaponUnequipped
	 */
	struct AShooterCharacter_OnWeaponUnequipped_Params
	{
	public:
		class AShooterWeapon*                                      OldWeapon;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.OnWeaponEquipped
	 */
	struct AShooterCharacter_OnWeaponEquipped_Params
	{
	public:
		class AShooterWeapon*                                      newWeapon;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.OnThirdPersonCameraView__DelegateSignature
	 */
	struct AShooterCharacter_OnThirdPersonCameraView__DelegateSignature_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.OnRep_RawBoneModifiers
	 */
	struct AShooterCharacter_OnRep_RawBoneModifiers_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.OnRep_HatHidden
	 */
	struct AShooterCharacter_OnRep_HatHidden_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.OnRep_CurrentWeapon
	 */
	struct AShooterCharacter_OnRep_CurrentWeapon_Params
	{
	public:
		class AShooterWeapon*                                      LastWeapon;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.OnFirstPersonCameraView__DelegateSignature
	 */
	struct AShooterCharacter_OnFirstPersonCameraView__DelegateSignature_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.NetSimulatedForceUpdateAimedActors
	 */
	struct AShooterCharacter_NetSimulatedForceUpdateAimedActors_Params
	{
	public:
		float                                                      OverrideMaxDistance;                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.NetSetOverrideHeadHairColor
	 */
	struct AShooterCharacter_NetSetOverrideHeadHairColor_Params
	{
	public:
		struct FLinearColor                                        HairColor;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.NetSetOverrideFacialHairColor
	 */
	struct AShooterCharacter_NetSetOverrideFacialHairColor_Params
	{
	public:
		struct FLinearColor                                        HairColor;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.NetSetHeadHairPercent
	 */
	struct AShooterCharacter_NetSetHeadHairPercent_Params
	{
	public:
		float                                                      thePercent;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    newHeadHairIndex;                                        // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.NetSetFacialHairPercent
	 */
	struct AShooterCharacter_NetSetFacialHairPercent_Params
	{
	public:
		float                                                      thePercent;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    newFacialHairIndex;                                      // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.LinkedPlayerIDString
	 */
	struct AShooterCharacter_LinkedPlayerIDString_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.LaunchMountedDino
	 */
	struct AShooterCharacter_LaunchMountedDino_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.IsWatchingExplorerNote
	 */
	struct AShooterCharacter_IsWatchingExplorerNote_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.IsUsingShield
	 */
	struct AShooterCharacter_IsUsingShield_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.IsUsingClimbingPick
	 */
	struct AShooterCharacter_IsUsingClimbingPick_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.IsTargeting
	 */
	struct AShooterCharacter_IsTargeting_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.IsPlayingUpperBodyCallAnimation
	 */
	struct AShooterCharacter_IsPlayingUpperBodyCallAnimation_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.IsPlayingRepawnAnim
	 */
	struct AShooterCharacter_IsPlayingRepawnAnim_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.IsPlayingInitialSpawnAnim
	 */
	struct AShooterCharacter_IsPlayingInitialSpawnAnim_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.IsOutside
	 */
	struct AShooterCharacter_IsOutside_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.IsNearTopOfLadder
	 */
	struct AShooterCharacter_IsNearTopOfLadder_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.IsIndoorsAtLoc
	 */
	struct AShooterCharacter_IsIndoorsAtLoc_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             actorLoc;                                                // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.IsGrapplingHardAttached
	 */
	struct AShooterCharacter_IsGrapplingHardAttached_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.IsGrapplingAttachedToMe
	 */
	struct AShooterCharacter_IsGrapplingAttachedToMe_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.IsFiring
	 */
	struct AShooterCharacter_IsFiring_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.IsCurrentPassengerLimitCameraYaw
	 */
	struct AShooterCharacter_IsCurrentPassengerLimitCameraYaw_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.IsCarriedAsPassenger
	 */
	struct AShooterCharacter_IsCarriedAsPassenger_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.IsBlockingWithShield
	 */
	struct AShooterCharacter_IsBlockingWithShield_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.HideWeapon
	 */
	struct AShooterCharacter_HideWeapon_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.HasAnyOtherBuffsUsingConsolidatedMultiUse
	 */
	struct AShooterCharacter_HasAnyOtherBuffsUsingConsolidatedMultiUse_Params
	{
	public:
		class APrimalBuff*                                         BuffToSkip;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GivePrimalItemWeapon
	 */
	struct AShooterCharacter_GivePrimalItemWeapon_Params
	{
	public:
		class UPrimalItem*                                         aPrimalItem;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GiveHexagonsOnMissionReward
	 */
	struct AShooterCharacter_GiveHexagonsOnMissionReward_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    BonusEarnedHexagons;                                     // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    HexagonAmountOverride;                                   // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GiveHexagons
	 */
	struct AShooterCharacter_GiveHexagons_Params
	{
	public:
		int32_t                                                    NumHexagons;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    TriggerIndex;                                            // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OverrideHexGainFalloffRate;                              // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    OverrideHexGainFalloffMin;                               // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OverrideCollectSFXVolume;                                // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             OverrideVfxSpawnLoc;                                     // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    OverrideHexagonVFXActorCount;                            // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       VFXImmediatelyAttracts;                                  // 0x0024(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_E2AB[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x0028(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GiveDefaultWeaponTimer
	 */
	struct AShooterCharacter_GiveDefaultWeaponTimer_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.GiveDefaultWeapon
	 */
	struct AShooterCharacter_GiveDefaultWeapon_Params
	{
	public:
		bool                                                       bForceGiveDefaultWeapon;                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GetWeapon
	 */
	struct AShooterCharacter_GetWeapon_Params
	{
	public:
		class AShooterWeapon*                                      ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GetTargetingSpeedModifier
	 */
	struct AShooterCharacter_GetTargetingSpeedModifier_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GetSpawnedForController
	 */
	struct AShooterCharacter_GetSpawnedForController_Params
	{
	public:
		class AShooterPlayerController*                            ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GetSeatingAnimation
	 */
	struct AShooterCharacter_GetSeatingAnimation_Params
	{
	public:
		class UAnimSequence*                                       ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GetRidingDinoAnimSpeedRatio
	 */
	struct AShooterCharacter_GetRidingDinoAnimSpeedRatio_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GetRidingDino
	 */
	struct AShooterCharacter_GetRidingDino_Params
	{
	public:
		class APrimalDinoCharacter*                                ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GetPlayerHexagonCount
	 */
	struct AShooterCharacter_GetPlayerHexagonCount_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GetPlayerData
	 */
	struct AShooterCharacter_GetPlayerData_Params
	{
	public:
		class UPrimalPlayerData*                                   ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GetPercentageOfHeadHairGrowth
	 */
	struct AShooterCharacter_GetPercentageOfHeadHairGrowth_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GetPercentageOfFacialHairGrowth
	 */
	struct AShooterCharacter_GetPercentageOfFacialHairGrowth_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GetLastAttackTime
	 */
	struct AShooterCharacter_GetLastAttackTime_Params
	{
	public:
		double                                                     ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GetHeadHairIndex
	 */
	struct AShooterCharacter_GetHeadHairIndex_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GetHeadHairColor
	 */
	struct AShooterCharacter_GetHeadHairColor_Params
	{
	public:
		struct FLinearColor                                        ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GetFacialHairIndex
	 */
	struct AShooterCharacter_GetFacialHairIndex_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GetFacialHairColor
	 */
	struct AShooterCharacter_GetFacialHairColor_Params
	{
	public:
		struct FLinearColor                                        ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GetDinoRidingMoveAnimation
	 */
	struct AShooterCharacter_GetDinoRidingMoveAnimation_Params
	{
	public:
		class UAnimSequence*                                       ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GetDinoRidingAnimation
	 */
	struct AShooterCharacter_GetDinoRidingAnimation_Params
	{
	public:
		class UAnimSequence*                                       ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GetBlockingShieldOffsets
	 */
	struct AShooterCharacter_GetBlockingShieldOffsets_Params
	{
	public:
		struct FVector                                             OutBlockingShieldFPVTranslation;                         // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            OutBlockingShieldFPVRotation;                            // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GetAlternateStandingAnim
	 */
	struct AShooterCharacter_GetAlternateStandingAnim_Params
	{
	public:
		float                                                      OutBlendInTime;                                          // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OutBlendOutTime;                                         // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UAnimSequence*                                       ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GetAdditiveStandingAnimNonAdditive
	 */
	struct AShooterCharacter_GetAdditiveStandingAnimNonAdditive_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GetAdditiveStandingAnim
	 */
	struct AShooterCharacter_GetAdditiveStandingAnim_Params
	{
	public:
		float                                                      OutBlendInTime;                                          // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OutBlendOutTime;                                         // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UAnimSequence*                                       ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GetActualTargetingFOV
	 */
	struct AShooterCharacter_GetActualTargetingFOV_Params
	{
	public:
		float                                                      DefaultTargetingFOV;                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GetActiveMission
	 */
	struct AShooterCharacter_GetActiveMission_Params
	{
	public:
		class AMissionType*                                        ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.GameStateHandleEvent
	 */
	struct AShooterCharacter_GameStateHandleEvent_Params
	{
	public:
		class FName                                                NameParam;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             VecParam;                                                // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.FinishWeaponSwitch
	 */
	struct AShooterCharacter_FinishWeaponSwitch_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.FindForPlayerController
	 */
	struct AShooterCharacter_FindForPlayerController_Params
	{
	public:
		class AShooterPlayerController*                            aPC;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.DetachGrapHookCable
	 */
	struct AShooterCharacter_DetachGrapHookCable_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.DetachFromLadder
	 */
	struct AShooterCharacter_DetachFromLadder_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.ClientUpdateTranspondersInfo
	 */
	struct AShooterCharacter_ClientUpdateTranspondersInfo_Params
	{
	public:
		TArray<struct FTransponderInfo>                            TranspondersInfo;                                        // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
		bool                                                       bNewData;                                                // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.ClientsSpawnHexagonVFX
	 */
	struct AShooterCharacter_ClientsSpawnHexagonVFX_Params
	{
	public:
		int32_t                                                    NumHexagons;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OverrideCollectSFXVolume;                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             OverrideVfxSpawnLoc;                                     // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    OverrideHexagonVFXActorCount;                            // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       VFXImmediatelyAttracts;                                  // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.ClientSetExpectedBase
	 */
	struct AShooterCharacter_ClientSetExpectedBase_Params
	{
	public:
		uint32_t                                                   BaseID;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.ClientReceiveNextWeaponID
	 */
	struct AShooterCharacter_ClientReceiveNextWeaponID_Params
	{
	public:
		struct FItemNetID                                          theItemID;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.ClientPlayHarvestAnim
	 */
	struct AShooterCharacter_ClientPlayHarvestAnim_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.ClientNotifyTribeRequest
	 */
	struct AShooterCharacter_ClientNotifyTribeRequest_Params
	{
	public:
		class FString                                              RequestTribeName;                                        // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class AShooterCharacter*                                   PlayerCharacter;                                         // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.ClientNetEndClimbingLadder
	 */
	struct AShooterCharacter_ClientNetEndClimbingLadder_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.ClientInviteToAlliance
	 */
	struct AShooterCharacter_ClientInviteToAlliance_Params
	{
	public:
		int32_t                                                    RequestingTeam;                                          // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		uint32_t                                                   AllianceID;                                              // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              AllianceName;                                            // 0x0008(0x0010)  (Parm, ZeroConstructor)
		class FString                                              InviteeName;                                             // 0x0018(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.ClientClearTribeRequest
	 */
	struct AShooterCharacter_ClientClearTribeRequest_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.ClearSpawnAnim
	 */
	struct AShooterCharacter_ClearSpawnAnim_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.ClearRidingDino
	 */
	struct AShooterCharacter_ClearRidingDino_Params
	{
	public:
		bool                                                       bFromDino;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_WXDE[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    OverrideUnboardDirection;                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceEvenIfBuffPreventsClear;                           // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.CanEquipWeapons
	 */
	struct AShooterCharacter_CanEquipWeapons_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.CallGameStateHandleEvent
	 */
	struct AShooterCharacter_CallGameStateHandleEvent_Params
	{
	public:
		class FName                                                NameParam;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             VecParam;                                                // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.BuffsPreventFirstPerson
	 */
	struct AShooterCharacter_BuffsPreventFirstPerson_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.BreakGrapple
	 */
	struct AShooterCharacter_BreakGrapple_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.BPUnstasis
	 */
	struct AShooterCharacter_BPUnstasis_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.BPUnlockedAllExplorerNotes
	 */
	struct AShooterCharacter_BPUnlockedAllExplorerNotes_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.BPSetupFirstPersonHandsMesh
	 */
	struct AShooterCharacter_BPSetupFirstPersonHandsMesh_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.BPSetPlayerHexagonCount
	 */
	struct AShooterCharacter_BPSetPlayerHexagonCount_Params
	{
	public:
		int32_t                                                    NewHexagonCount;                                         // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.BPSetFirstPersonMasterPoseComponent
	 */
	struct AShooterCharacter_BPSetFirstPersonMasterPoseComponent_Params
	{
	public:
		class USkeletalMeshComponent*                              firstPersonMasterPosecomponent;                          // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.BPOverrideHealthBarOffset
	 */
	struct AShooterCharacter_BPOverrideHealthBarOffset_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.BPNonDedicatedPostAnimUpdate
	 */
	struct AShooterCharacter_BPNonDedicatedPostAnimUpdate_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.BPGetPlayerHexagonCount
	 */
	struct AShooterCharacter_BPGetPlayerHexagonCount_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.BPGetHealthBarColor
	 */
	struct AShooterCharacter_BPGetHealthBarColor_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.AuthPostSpawnInit
	 */
	struct AShooterCharacter_AuthPostSpawnInit_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.AttachToLadder
	 */
	struct AShooterCharacter_AttachToLadder_Params
	{
	public:
		class USceneComponent*                                     Parent;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.ApplyBoneModifiers
	 */
	struct AShooterCharacter_ApplyBoneModifiers_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacter.ApplyBodyColors
	 */
	struct AShooterCharacter_ApplyBodyColors_Params
	{
	public:
		class USkeletalMeshComponent*                              toMesh;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacter.AnimUseAimOffset
	 */
	struct AShooterCharacter_AnimUseAimOffset_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalUI.SetInputMode
	 */
	struct UPrimalUI_SetInputMode_Params
	{	};

	/**
	 * Function ShooterGame.PrimalUI.RemovedFromViewport
	 */
	struct UPrimalUI_RemovedFromViewport_Params
	{	};

	/**
	 * Function ShooterGame.PrimalUI.OnMouseButtonDownEvent
	 */
	struct UPrimalUI_OnMouseButtonDownEvent_Params
	{
	public:
		struct FGeometry                                           MyGeometry;                                              // 0x0000(0x0034)  (Parm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_TE2W[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FPointerEvent                                       MouseEvent;                                              // 0x0038(0x0078)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FEventReply                                         ReturnValue;                                             // 0x00B0(0x00A0)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalUI.OnKeyUpEvent
	 */
	struct UPrimalUI_OnKeyUpEvent_Params
	{
	public:
		struct FGeometry                                           MyGeometry;                                              // 0x0000(0x0034)  (Parm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_77X7[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FKeyboardEvent                                      InKeyboardEvent;                                         // 0x0038(0x0040)  (Parm)
		struct FEventReply                                         ReturnValue;                                             // 0x0078(0x00A0)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalUI.OnKeyDownEvent
	 */
	struct UPrimalUI_OnKeyDownEvent_Params
	{
	public:
		struct FGeometry                                           MyGeometry;                                              // 0x0000(0x0034)  (Parm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_88WV[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FKeyboardEvent                                      InKeyboardEvent;                                         // 0x0038(0x0040)  (Parm)
		struct FEventReply                                         ReturnValue;                                             // 0x0078(0x00A0)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalUI.OnHTTPGetResponse__DelegateSignature
	 */
	struct UPrimalUI_OnHTTPGetResponse__DelegateSignature_Params
	{
	public:
		bool                                                       bSuccess;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_DIKP[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              StringResult;                                            // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalUI.OnConfirmationDialogClosed
	 */
	struct UPrimalUI_OnConfirmationDialogClosed_Params
	{
	public:
		bool                                                       bAccept;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalUI.HTTPGetString
	 */
	struct UPrimalUI_HTTPGetString_Params
	{
	public:
		class FString                                              InURL;                                                   // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalUI.GetShooterHUD
	 */
	struct UPrimalUI_GetShooterHUD_Params
	{
	public:
		class AShooterHUD*                                         ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalUI.GetPlayerState
	 */
	struct UPrimalUI_GetPlayerState_Params
	{
	public:
		class AShooterPlayerState*                                 ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalUI.GetPC
	 */
	struct UPrimalUI_GetPC_Params
	{
	public:
		class AShooterPlayerController*                            ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalUI.GetPawn
	 */
	struct UPrimalUI_GetPawn_Params
	{
	public:
		class APrimalCharacter*                                    ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalUI.CloseWithAnimation
	 */
	struct UPrimalUI_CloseWithAnimation_Params
	{	};

	/**
	 * Function ShooterGame.PrimalUI.ClickedSecondaryButton
	 */
	struct UPrimalUI_ClickedSecondaryButton_Params
	{
	public:
		class UWidget*                                             clickedWidget;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalUI.ClickedButton
	 */
	struct UPrimalUI_ClickedButton_Params
	{
	public:
		class UWidget*                                             clickedWidget;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalUI.BPProcessSplitscreenAndAddToViewport
	 */
	struct UPrimalUI_BPProcessSplitscreenAndAddToViewport_Params
	{
	public:
		bool                                                       ScaleX;                                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalUI.AddedToViewport
	 */
	struct UPrimalUI_AddedToViewport_Params
	{	};

	/**
	 * Function ShooterGame.UI_Spawn.SlotButtonSelected
	 */
	struct UUI_Spawn_SlotButtonSelected_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Spawn.SavedPresetListButtonSelected
	 */
	struct UUI_Spawn_SavedPresetListButtonSelected_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Spawn.RespawnSlotButtonSelected
	 */
	struct UUI_Spawn_RespawnSlotButtonSelected_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Spawn.OnSaveToFileEditableCommitted
	 */
	struct UUI_Spawn_OnSaveToFileEditableCommitted_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		ETextCommit                                                CommitMethod;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Spawn.OnMoviePlaybackFinished_SPDownload
	 */
	struct UUI_Spawn_OnMoviePlaybackFinished_SPDownload_Params
	{
	public:
		class FString                                              MoviePath;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bPlaybackWasCancelled;                                   // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Spawn.OnMoviePlaybackFinished_SpawnAtPoint
	 */
	struct UUI_Spawn_OnMoviePlaybackFinished_SpawnAtPoint_Params
	{
	public:
		class FString                                              MoviePath;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bPlaybackWasCancelled;                                   // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Spawn.OnMoviePlaybackFinished_Download
	 */
	struct UUI_Spawn_OnMoviePlaybackFinished_Download_Params
	{
	public:
		class FString                                              MoviePath;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bPlaybackWasCancelled;                                   // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Spawn.OnMoviePlaybackFinished
	 */
	struct UUI_Spawn_OnMoviePlaybackFinished_Params
	{
	public:
		class FString                                              MoviePath;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bPlaybackWasCancelled;                                   // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Spawn.OnBedFilterChanged
	 */
	struct UUI_Spawn_OnBedFilterChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_Spawn.MultiSelectSpawnPointButtonSelected
	 */
	struct UUI_Spawn_MultiSelectSpawnPointButtonSelected_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.UpdateWeightStat
	 */
	struct UPrimalCharacterStatusComponent_UpdateWeightStat_Params
	{
	public:
		bool                                                       bForceSetValue;                                          // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.UpdatedCurrentStatusValue
	 */
	struct UPrimalCharacterStatusComponent_UpdatedCurrentStatusValue_Params
	{
	public:
		EPrimalCharacterStatusValue                                ValueType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ELVR[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      amount;                                                  // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bManualModification;                                     // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_Q3OB[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              DamageTypeClass;                                         // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDamageDontKill;                                         // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDontAdjustOtherStats;                                   // 0x0019(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.TickStatus
	 */
	struct UPrimalCharacterStatusComponent_TickStatus_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceStatusUpdate;                                      // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.SetTamed
	 */
	struct UPrimalCharacterStatusComponent_SetTamed_Params
	{
	public:
		float                                                      TameIneffectivenessModifier;                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSkipAddingTamedLevels;                                  // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.SetMaxStatusValue
	 */
	struct UPrimalCharacterStatusComponent_SetMaxStatusValue_Params
	{
	public:
		EPrimalCharacterStatusValue                                statType;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_870G[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      newValue;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.SetLevelUpPoints
	 */
	struct UPrimalCharacterStatusComponent_SetLevelUpPoints_Params
	{
	public:
		EPrimalCharacterStatusValue                                ValueType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTamedPoints;                                            // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_WMW6[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    newPoints;                                               // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.SetExtraCharacterLevel
	 */
	struct UPrimalCharacterStatusComponent_SetExtraCharacterLevel_Params
	{
	public:
		int32_t                                                    NewExtraCharacterLevel;                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.SetBaseLevelNoStatChange
	 */
	struct UPrimalCharacterStatusComponent_SetBaseLevelNoStatChange_Params
	{
	public:
		int32_t                                                    Level;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.SetBaseLevelCustomized
	 */
	struct UPrimalCharacterStatusComponent_SetBaseLevelCustomized_Params
	{
	public:
		int32_t                                                    Level;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_S812[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FStatValuePair>                              CustomBaseStats;                                         // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<EPrimalCharacterStatusValue>                        PrioritizeStats;                                         // 0x0018(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bDontCurrentSetToMax;                                    // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.SetBaseLevel
	 */
	struct UPrimalCharacterStatusComponent_SetBaseLevel_Params
	{
	public:
		int32_t                                                    Level;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDontCurrentSetToMax;                                    // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.SetAllStatsToMaximumExcluding
	 */
	struct UPrimalCharacterStatusComponent_SetAllStatsToMaximumExcluding_Params
	{
	public:
		EPrimalCharacterStatusValue                                exclude;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.SetAllStatsToMaximum
	 */
	struct UPrimalCharacterStatusComponent_SetAllStatsToMaximum_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.ServerSyncReplicatedValues
	 */
	struct UPrimalCharacterStatusComponent_ServerSyncReplicatedValues_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.RescaleMaxStat
	 */
	struct UPrimalCharacterStatusComponent_RescaleMaxStat_Params
	{
	public:
		EPrimalCharacterStatusValue                                LevelUpValueType;                                        // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_N01P[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      TargetValue;                                             // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsPercentOfTrueValue;                                   // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.RescaleAllStats
	 */
	struct UPrimalCharacterStatusComponent_RescaleAllStats_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.RemoveStatusValueModifierByInstigator
	 */
	struct UPrimalCharacterStatusComponent_RemoveStatusValueModifierByInstigator_Params
	{
	public:
		class AActor*                                              Instigator;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.RemoveStatusValueModifierByIndex
	 */
	struct UPrimalCharacterStatusComponent_RemoveStatusValueModifierByIndex_Params
	{
	public:
		int32_t                                                    index;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.OnRep_ReplicatedExperiencePoints
	 */
	struct UPrimalCharacterStatusComponent_OnRep_ReplicatedExperiencePoints_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.OnRep_GlobalMaxStatusValues
	 */
	struct UPrimalCharacterStatusComponent_OnRep_GlobalMaxStatusValues_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.OnRep_GlobalCurrentStatusValues
	 */
	struct UPrimalCharacterStatusComponent_OnRep_GlobalCurrentStatusValues_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.OnRep_GlobalBaseLevelMaxStatusValues
	 */
	struct UPrimalCharacterStatusComponent_OnRep_GlobalBaseLevelMaxStatusValues_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.OnRep_CurrentStatusValues
	 */
	struct UPrimalCharacterStatusComponent_OnRep_CurrentStatusValues_Params
	{	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.NetSyncMaxStatusValues
	 */
	struct UPrimalCharacterStatusComponent_NetSyncMaxStatusValues_Params
	{
	public:
		TArray<float>                                              NetMaxStatusValues;                                      // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
		TArray<float>                                              NetBaseMaxStatusValues;                                  // 0x0010(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.ModifyCurrentStatusValue
	 */
	struct UPrimalCharacterStatusComponent_ModifyCurrentStatusValue_Params
	{
	public:
		EPrimalCharacterStatusValue                                ValueType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_N2W5[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      amount;                                                  // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPercentOfMax;                                           // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPercentOfCurrent;                                       // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bManualModification;                                     // 0x000A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSetValue;                                               // 0x000B(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_FTMV[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              DamageTypeClass;                                         // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDamageDontKill;                                         // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceSetValue;                                          // 0x0019(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_HRXX[0x2];                                   // 0x001A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x001C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.IsInStatusState
	 */
	struct UPrimalCharacterStatusComponent_IsInStatusState_Params
	{
	public:
		EPrimalCharacterStatusState                                StateType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.IsAtMaxLevel
	 */
	struct UPrimalCharacterStatusComponent_IsAtMaxLevel_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.IsAtMaxExperience
	 */
	struct UPrimalCharacterStatusComponent_IsAtMaxExperience_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.HasExperienceForLevelUp
	 */
	struct UPrimalCharacterStatusComponent_HasExperienceForLevelUp_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.GetStatusValueString
	 */
	struct UPrimalCharacterStatusComponent_GetStatusValueString_Params
	{
	public:
		EPrimalCharacterStatusValue                                ValueType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bValueOnly;                                              // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5HDD[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.GetStatusValueRecoveryRate
	 */
	struct UPrimalCharacterStatusComponent_GetStatusValueRecoveryRate_Params
	{
	public:
		EPrimalCharacterStatusValue                                ValueType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XU3S[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.GetStatusNameString
	 */
	struct UPrimalCharacterStatusComponent_GetStatusNameString_Params
	{
	public:
		EPrimalCharacterStatusValue                                ValueType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CKT1[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.GetStatusMaxValueString
	 */
	struct UPrimalCharacterStatusComponent_GetStatusMaxValueString_Params
	{
	public:
		EPrimalCharacterStatusValue                                ValueType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bValueOnly;                                              // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_YWYF[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.GetRawStatusValueRecoveryRate
	 */
	struct UPrimalCharacterStatusComponent_GetRawStatusValueRecoveryRate_Params
	{
	public:
		EPrimalCharacterStatusValue                                ValueType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_DEQT[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.GetMovementSpeedModifier
	 */
	struct UPrimalCharacterStatusComponent_GetMovementSpeedModifier_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.GetMeleeDamageModifier
	 */
	struct UPrimalCharacterStatusComponent_GetMeleeDamageModifier_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.GetLevelUpPoints
	 */
	struct UPrimalCharacterStatusComponent_GetLevelUpPoints_Params
	{
	public:
		EPrimalCharacterStatusValue                                ValueType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTamedPoints;                                            // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_38ZS[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.GetExtraCharacterLevel
	 */
	struct UPrimalCharacterStatusComponent_GetExtraCharacterLevel_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.GetExperienceRequiredForPreviousLevelUp
	 */
	struct UPrimalCharacterStatusComponent_GetExperienceRequiredForPreviousLevelUp_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.GetExperienceRequiredForNextLevelUp
	 */
	struct UPrimalCharacterStatusComponent_GetExperienceRequiredForNextLevelUp_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.GetDinoFoodConsumptionRateMultiplier
	 */
	struct UPrimalCharacterStatusComponent_GetDinoFoodConsumptionRateMultiplier_Params
	{
	public:
		float                                                      amount;                                                  // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.GetDebugString
	 */
	struct UPrimalCharacterStatusComponent_GetDebugString_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.GetCraftingSpeedModifier
	 */
	struct UPrimalCharacterStatusComponent_GetCraftingSpeedModifier_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.GetCharacterLevel
	 */
	struct UPrimalCharacterStatusComponent_GetCharacterLevel_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.GetBaseLevelFromLevelUpPoints
	 */
	struct UPrimalCharacterStatusComponent_GetBaseLevelFromLevelUpPoints_Params
	{
	public:
		bool                                                       bIncludePlayerAddedLevels;                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_8B90[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.CopyPrimalStatusComponentValues
	 */
	struct UPrimalCharacterStatusComponent_CopyPrimalStatusComponentValues_Params
	{
	public:
		class UPrimalCharacterStatusComponent*                     src;                                                     // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.ConvertIntToCharacterStatusEnum
	 */
	struct UPrimalCharacterStatusComponent_ConvertIntToCharacterStatusEnum_Params
	{
	public:
		int32_t                                                    InInteger;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EPrimalCharacterStatusValue                                ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.ClientSyncMaxStatusValues
	 */
	struct UPrimalCharacterStatusComponent_ClientSyncMaxStatusValues_Params
	{
	public:
		TArray<float>                                              NetMaxStatusValues;                                      // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
		TArray<float>                                              NetBaseMaxStatusValues;                                  // 0x0010(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.ClearAllLevelUpPoints
	 */
	struct UPrimalCharacterStatusComponent_ClearAllLevelUpPoints_Params
	{
	public:
		bool                                                       bTamedPoints;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.CanLevelUp
	 */
	struct UPrimalCharacterStatusComponent_CanLevelUp_Params
	{
	public:
		EPrimalCharacterStatusValue                                LevelUpValueType;                                        // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCheckExperience;                                        // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.CanGainLevel
	 */
	struct UPrimalCharacterStatusComponent_CanGainLevel_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.BPSetRecoveryRateStatusValue
	 */
	struct UPrimalCharacterStatusComponent_BPSetRecoveryRateStatusValue_Params
	{
	public:
		EPrimalCharacterStatusValue                                ValueType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_B0I7[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      newValue;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.BPModifyMaxLevel
	 */
	struct UPrimalCharacterStatusComponent_BPModifyMaxLevel_Params
	{
	public:
		int32_t                                                    InMaxLevel;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.BPModifyMaxExperiencePoints
	 */
	struct UPrimalCharacterStatusComponent_BPModifyMaxExperiencePoints_Params
	{
	public:
		float                                                      InMaxExperiencePoints;                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.BPGetPercentStatusValue
	 */
	struct UPrimalCharacterStatusComponent_BPGetPercentStatusValue_Params
	{
	public:
		EPrimalCharacterStatusValue                                ValueType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_4CLW[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.BPGetMaxStatusValue
	 */
	struct UPrimalCharacterStatusComponent_BPGetMaxStatusValue_Params
	{
	public:
		EPrimalCharacterStatusValue                                ValueType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_SE7B[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.BPGetCurrentStatusValue
	 */
	struct UPrimalCharacterStatusComponent_BPGetCurrentStatusValue_Params
	{
	public:
		EPrimalCharacterStatusValue                                ValueType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1MG4[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.BPDirectSetMaxStatusValue
	 */
	struct UPrimalCharacterStatusComponent_BPDirectSetMaxStatusValue_Params
	{
	public:
		EPrimalCharacterStatusValue                                ValueType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_3CMV[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      newValue;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.BPDirectSetCurrentStatusValue
	 */
	struct UPrimalCharacterStatusComponent_BPDirectSetCurrentStatusValue_Params
	{
	public:
		EPrimalCharacterStatusValue                                ValueType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_8NRP[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      newValue;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.BPAdjustStatusValueModification
	 */
	struct UPrimalCharacterStatusComponent_BPAdjustStatusValueModification_Params
	{
	public:
		EPrimalCharacterStatusValue                                ValueType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_S6MP[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      amount;                                                  // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              DamageTypeClass;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bManualModification;                                     // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_3YIR[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.AddStatusValueModifier
	 */
	struct UPrimalCharacterStatusComponent_AddStatusValueModifier_Params
	{
	public:
		EPrimalCharacterStatusValue                                ValueType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_LYZQ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      amount;                                                  // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Speed;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bContinueOnUnchangedValue;                               // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSetValue;                                               // 0x000D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_P8UT[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    StatusValueModifierDescriptionIndex;                     // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bResetExistingModifierDescriptionIndex;                  // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_T8WY[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      LimitExistingModifierDescriptionToMaxAmount;             // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSetAdditionalValue;                                     // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EPrimalCharacterStatusValue                                StopAtValueNearMax;                                      // 0x001D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bMakeUntameable;                                         // 0x001E(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_K90Z[0x1];                                   // 0x001F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              ScaleValueByCharacterDamageType;                         // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              Instigator;                                              // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalCharacterStatusComponent.AddExperience
	 */
	struct UPrimalCharacterStatusComponent_AddExperience_Params
	{
	public:
		float                                                      HowMuch;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bShareWithTribe;                                         // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EXPType                                                    XPType;                                                  // 0x0005(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBotAIController.UpdateDinoClaim
	 */
	struct APrimalBotAIController_UpdateDinoClaim_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBotAIController.TimeSinceGivenAttackPriority
	 */
	struct APrimalBotAIController_TimeSinceGivenAttackPriority_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBotAIController.SetAttackCoordinator
	 */
	struct APrimalBotAIController_SetAttackCoordinator_Params
	{
	public:
		class AAIAttackCoordinator*                                Coordinator;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBotAIController.ReleaseClaimOnDino
	 */
	struct APrimalBotAIController_ReleaseClaimOnDino_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBotAIController.IsTooFarToAttack
	 */
	struct APrimalBotAIController_IsTooFarToAttack_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBotAIController.IsTooCloseToAttack
	 */
	struct APrimalBotAIController_IsTooCloseToAttack_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBotAIController.InitializeBlackboardValues
	 */
	struct APrimalBotAIController_InitializeBlackboardValues_Params
	{
	public:
		class APrimalBotCharacter*                                 Bot;                                                     // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBotAIController.ClaimDino
	 */
	struct APrimalBotAIController_ClaimDino_Params
	{
	public:
		class APrimalDinoCharacter*                                Dino;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.UpdateTethersByState
	 */
	struct APrimalBuff_Grappled_UpdateTethersByState_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.UpdateTetherMasterRef
	 */
	struct APrimalBuff_Grappled_UpdateTetherMasterRef_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		bool                                                       bInit;                                                   // 0x0168(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0169(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.UpdateOwnerSwingingVelocity
	 */
	struct APrimalBuff_Grappled_UpdateOwnerSwingingVelocity_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.UpdateOwnerMovementSpeed
	 */
	struct APrimalBuff_Grappled_UpdateOwnerMovementSpeed_Params
	{
	public:
		struct FVector                                             WithCharVelocity;                                        // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.UpdateGrappleTetherVars
	 */
	struct APrimalBuff_Grappled_UpdateGrappleTetherVars_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.UpdateBrokenTethers
	 */
	struct APrimalBuff_Grappled_UpdateBrokenTethers_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.UpdateAgainstSurfaceFromHits
	 */
	struct APrimalBuff_Grappled_UpdateAgainstSurfaceFromHits_Params
	{
	public:
		TArray<struct FHitResult>                                  Hits;                                                    // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.Tick_UpdateGrappleTethers
	 */
	struct APrimalBuff_Grappled_Tick_UpdateGrappleTethers_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.Tick_UpdateAgainstSurface
	 */
	struct APrimalBuff_Grappled_Tick_UpdateAgainstSurface_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.TetherHasValidMasterRef
	 */
	struct APrimalBuff_Grappled_TetherHasValidMasterRef_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		bool                                                       ReturnValue;                                             // 0x0168(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.SyncOwnerInputs
	 */
	struct APrimalBuff_Grappled_SyncOwnerInputs_Params
	{
	public:
		struct FVector2D                                           NewInputs;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.SyncGrappleTetherLengths
	 */
	struct APrimalBuff_Grappled_SyncGrappleTetherLengths_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.SimulateTetherFriction
	 */
	struct APrimalBuff_Grappled_SimulateTetherFriction_Params
	{
	public:
		struct FVector                                             WithCharVelocity;                                        // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.SimulateTautTetherForces
	 */
	struct APrimalBuff_Grappled_SimulateTautTetherForces_Params
	{
	public:
		struct FVector                                             WithCharVelocity;                                        // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      LastGravityZ;                                            // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.ShouldUseDynamicTetherTension
	 */
	struct APrimalBuff_Grappled_ShouldUseDynamicTetherTension_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		bool                                                       ReturnValue;                                             // 0x0168(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.ShouldTetherBreak
	 */
	struct APrimalBuff_Grappled_ShouldTetherBreak_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		class APrimalCharacter*                                    forChar;                                                 // 0x0168(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OverrideBreakPastDist;                                   // 0x0170(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0174(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.ShouldReturnToIdleGrappleState
	 */
	struct APrimalBuff_Grappled_ShouldReturnToIdleGrappleState_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.ShouldReplicateOwnerInputs
	 */
	struct APrimalBuff_Grappled_ShouldReplicateOwnerInputs_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.ShouldOwnerBeAffectedByTether
	 */
	struct APrimalBuff_Grappled_ShouldOwnerBeAffectedByTether_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		EGrappleState                                              ForGrappeState;                                          // 0x0168(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0169(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.ShouldForceOwnerIntoFallingState
	 */
	struct APrimalBuff_Grappled_ShouldForceOwnerIntoFallingState_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		struct FVector                                             WithOwnerVelocity;                                       // 0x0168(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		EMovementMode                                              CheckMovementModeOverride;                               // 0x0174(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0175(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.SetupDelegateBindingsForChar
	 */
	struct APrimalBuff_Grappled_SetupDelegateBindingsForChar_Params
	{
	public:
		class APrimalCharacter*                                    forChar;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDoBind;                                                 // 0x0008(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.SetGrappleTetherLength
	 */
	struct APrimalBuff_Grappled_SetGrappleTetherLength_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		float                                                      SetNewLength;                                            // 0x0168(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ForTetherIndex;                                          // 0x016C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0170(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.SetGrappleTetherAtIndexLength
	 */
	struct APrimalBuff_Grappled_SetGrappleTetherAtIndexLength_Params
	{
	public:
		int32_t                                                    AtIndex;                                                 // 0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SetNewLength;                                            // 0x0004(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.SetGrappleState
	 */
	struct APrimalBuff_Grappled_SetGrappleState_Params
	{
	public:
		EGrappleState                                              NewGrappleState;                                         // 0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceUpdate;                                            // 0x0001(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0002(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.Server_SyncOwnerInputs
	 */
	struct APrimalBuff_Grappled_Server_SyncOwnerInputs_Params
	{
	public:
		struct FVector2D                                           NewInputs;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.Server_SuggestTetherLengths
	 */
	struct APrimalBuff_Grappled_Server_SuggestTetherLengths_Params
	{
	public:
		TArray<float>                                              NewTetherLengths;                                        // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.Server_SuggestTetherLength
	 */
	struct APrimalBuff_Grappled_Server_SuggestTetherLength_Params
	{
	public:
		float                                                      NewTetherLength;                                         // 0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.Server_SetGrappleState
	 */
	struct APrimalBuff_Grappled_Server_SetGrappleState_Params
	{
	public:
		unsigned char                                              NewGrappleState;                                         // 0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceUpdate;                                            // 0x0001(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.ResetOwnerVars
	 */
	struct APrimalBuff_Grappled_ResetOwnerVars_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.ResetOwnerClientPositionErrorTolerance
	 */
	struct APrimalBuff_Grappled_ResetOwnerClientPositionErrorTolerance_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.RemoveGrappleTether
	 */
	struct APrimalBuff_Grappled_RemoveGrappleTether_Params
	{
	public:
		int32_t                                                    AtIndex;                                                 // 0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_N428[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              WithTag;                                                 // 0x0008(0x0010)  (ConstParm, Parm, ZeroConstructor)
		class APrimalBuff_Grappled*                                WithMasterBuff;                                          // 0x0018(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceNetSync;                                           // 0x0020(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRemoveAllTethersWithTag;                                // 0x0021(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0022(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.RefreshAllTetherMasterRefs
	 */
	struct APrimalBuff_Grappled_RefreshAllTetherMasterRefs_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.ReceiveTetherLengthSuggestion
	 */
	struct APrimalBuff_Grappled_ReceiveTetherLengthSuggestion_Params
	{
	public:
		int32_t                                                    ForTetherIndex;                                          // 0x0000(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      NewTetherLength;                                         // 0x0004(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.ReceiveTetherLengthsSuggestion
	 */
	struct APrimalBuff_Grappled_ReceiveTetherLengthsSuggestion_Params
	{
	public:
		TArray<float>                                              NewTetherLengths;                                        // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.OnRep_ReplicatedGrappleTethers
	 */
	struct APrimalBuff_Grappled_OnRep_ReplicatedGrappleTethers_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.OnRep_GrappleState
	 */
	struct APrimalBuff_Grappled_OnRep_GrappleState_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.OnReleasedPrimalChar
	 */
	struct APrimalBuff_Grappled_OnReleasedPrimalChar_Params
	{
	public:
		class APrimalCharacter*                                    ReleasedChar;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.OnOwnerSleepStateChanged
	 */
	struct APrimalBuff_Grappled_OnOwnerSleepStateChanged_Params
	{
	public:
		class APrimalCharacter*                                    forChar;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsSleeping;                                             // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.OnOwnerDeath
	 */
	struct APrimalBuff_Grappled_OnOwnerDeath_Params
	{
	public:
		class APrimalCharacter*                                    DyingChar;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.OnOwnerCapsuleHit
	 */
	struct APrimalBuff_Grappled_OnOwnerCapsuleHit_Params
	{
	public:
		class AActor*                                              OtherActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FVector                                             NormalImpulse;                                           // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NUXE[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          Hit;                                                     // 0x0020(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.OnGrappleTethersChanged
	 */
	struct APrimalBuff_Grappled_OnGrappleTethersChanged_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.OnGrappleTetherRemoved
	 */
	struct APrimalBuff_Grappled_OnGrappleTetherRemoved_Params
	{
	public:
		struct FGrappleTether                                      RemovedTether;                                           // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.OnGrappleTetherBroken
	 */
	struct APrimalBuff_Grappled_OnGrappleTetherBroken_Params
	{
	public:
		int32_t                                                    BrokenIndex;                                             // 0x0000(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.OnGrappleTetherAdded
	 */
	struct APrimalBuff_Grappled_OnGrappleTetherAdded_Params
	{
	public:
		struct FGrappleTether                                      AddedTether;                                             // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.OnGrappleStateChangedNotify
	 */
	struct APrimalBuff_Grappled_OnGrappleStateChangedNotify_Params
	{
	public:
		unsigned char                                              NewGrappleState;                                         // 0x0000(0x0001)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bIsEarlyNotify;                                          // 0x0001(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.OnGrappleStateChanged
	 */
	struct APrimalBuff_Grappled_OnGrappleStateChanged_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.OnGrappledPrimalChar
	 */
	struct APrimalBuff_Grappled_OnGrappledPrimalChar_Params
	{
	public:
		class APrimalCharacter*                                    GrappledChar;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FGrappleTether                                      WithMasterTether;                                        // 0x0008(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.OnGrappledCharSleepStateChange
	 */
	struct APrimalBuff_Grappled_OnGrappledCharSleepStateChange_Params
	{
	public:
		class APrimalCharacter*                                    forChar;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsSleeping;                                             // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.OnGrappledCharDeath
	 */
	struct APrimalBuff_Grappled_OnGrappledCharDeath_Params
	{
	public:
		class APrimalCharacter*                                    DyingChar;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.OnAgainstValidSurfaceUpdated
	 */
	struct APrimalBuff_Grappled_OnAgainstValidSurfaceUpdated_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.OnAgainstValidSurfaceStateChanged
	 */
	struct APrimalBuff_Grappled_OnAgainstValidSurfaceStateChanged_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.NetSyncGrappleTethers
	 */
	struct APrimalBuff_Grappled_NetSyncGrappleTethers_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.Multi_SyncGrappleTetherLengths
	 */
	struct APrimalBuff_Grappled_Multi_SyncGrappleTetherLengths_Params
	{
	public:
		TArray<float>                                              SyncedTetherLengths;                                     // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.Multi_SyncGrappleTetherLength
	 */
	struct APrimalBuff_Grappled_Multi_SyncGrappleTetherLength_Params
	{
	public:
		float                                                      SyncedTetherLength;                                      // 0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.ModifyTetherTensionLerpValue
	 */
	struct APrimalBuff_Grappled_ModifyTetherTensionLerpValue_Params
	{
	public:
		float                                                      CurrentLerpValue;                                        // 0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.ModifyTetherMoveVelocity
	 */
	struct APrimalBuff_Grappled_ModifyTetherMoveVelocity_Params
	{
	public:
		struct FVector                                             CurrentMoveVelocity;                                     // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NH9G[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FGrappleTether                                      ForTether;                                               // 0x0010(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.ModifyOverriddenCharVelocity
	 */
	struct APrimalBuff_Grappled_ModifyOverriddenCharVelocity_Params
	{
	public:
		struct FVector                                             CurrentCharVelocity;                                     // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x000C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.ModifyGrappledCharVelocity
	 */
	struct APrimalBuff_Grappled_ModifyGrappledCharVelocity_Params
	{
	public:
		struct FVector                                             CurrentCharVelocity;                                     // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KKT1[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FGrappleTether                                      ForTether;                                               // 0x0010(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		float                                                      DeltaTime;                                               // 0x0178(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.MakeGrappleTether
	 */
	struct APrimalBuff_Grappled_MakeGrappleTether_Params
	{
	public:
		struct FCreateGrappleTetherData                            FromData;                                                // 0x0000(0x0120)  (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		class APrimalBuff_Grappled*                                ForMasterBuff;                                           // 0x0120(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FGrappleTether                                      ReturnValue;                                             // 0x0128(0x0168)  (Parm, OutParm, ReturnParm, ContainsInstancedReference)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.IsValidSurfaceHit
	 */
	struct APrimalBuff_Grappled_IsValidSurfaceHit_Params
	{
	public:
		struct FHitResult                                          ForHit;                                                  // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0088(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.IsValidGrappleHit
	 */
	struct APrimalBuff_Grappled_IsValidGrappleHit_Params
	{
	public:
		struct FHitResult                                          ForHit;                                                  // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0088(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.IsTethersMasterGrappleBuff
	 */
	struct APrimalBuff_Grappled_IsTethersMasterGrappleBuff_Params
	{
	public:
		struct FGrappleTether                                      CheckTether;                                             // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		bool                                                       ReturnValue;                                             // 0x0168(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.IsTetherAtMaxLength
	 */
	struct APrimalBuff_Grappled_IsTetherAtMaxLength_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		bool                                                       ReturnValue;                                             // 0x0168(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.IsSwingingTowardsAxisCenter
	 */
	struct APrimalBuff_Grappled_IsSwingingTowardsAxisCenter_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		bool                                                       ReturnValue;                                             // 0x0168(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.IsOwnerLookingAtAgainstSurface
	 */
	struct APrimalBuff_Grappled_IsOwnerLookingAtAgainstSurface_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.IsOwnerAgainstValidSurface
	 */
	struct APrimalBuff_Grappled_IsOwnerAgainstValidSurface_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.IsOwnerAboveGround
	 */
	struct APrimalBuff_Grappled_IsOwnerAboveGround_Params
	{
	public:
		struct FVector                                             FoundGroundLocation;                                     // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CheckDistance;                                           // 0x000C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.IsHitWithinGrappleRange
	 */
	struct APrimalBuff_Grappled_IsHitWithinGrappleRange_Params
	{
	public:
		struct FHitResult                                          ForHit;                                                  // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0088(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.IsGrappleTetherValid
	 */
	struct APrimalBuff_Grappled_IsGrappleTetherValid_Params
	{
	public:
		struct FGrappleTether                                      CheckTether;                                             // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		bool                                                       ReturnValue;                                             // 0x0168(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.IsGrappledCharHardAttached
	 */
	struct APrimalBuff_Grappled_IsGrappledCharHardAttached_Params
	{
	public:
		class APrimalCharacter*                                    forChar;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.IsCharPastMaxTetherLength
	 */
	struct APrimalBuff_Grappled_IsCharPastMaxTetherLength_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		class APrimalCharacter*                                    forChar;                                                 // 0x0168(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0170(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.InitializeGrappleTether
	 */
	struct APrimalBuff_Grappled_InitializeGrappleTether_Params
	{
	public:
		struct FGrappleTether                                      InitTether;                                              // 0x0000(0x0168)  (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		class APrimalBuff_Grappled*                                ByGrappleBuff;                                           // 0x0168(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0170(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.InitGrappleBuff
	 */
	struct APrimalBuff_Grappled_InitGrappleBuff_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GrappleTick
	 */
	struct APrimalBuff_Grappled_GrappleTick_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetTetherMasterRef
	 */
	struct APrimalBuff_Grappled_GetTetherMasterRef_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		struct FGrappleTether                                      MasterRef;                                               // 0x0168(0x0168)  (Parm, OutParm, ContainsInstancedReference)
		bool                                                       ReturnValue;                                             // 0x02D0(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetTetherBreakLimit_OwnerPastCurrentLengthForTime
	 */
	struct APrimalBuff_Grappled_GetTetherBreakLimit_OwnerPastCurrentLengthForTime_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		float                                                      ReturnValue;                                             // 0x0168(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetTetherBreakLimit_OwnerPastCurrentLengthDelta
	 */
	struct APrimalBuff_Grappled_GetTetherBreakLimit_OwnerPastCurrentLengthDelta_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		float                                                      ReturnValue;                                             // 0x0168(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetTetherBreakLimit_GrappledActorAboveVelocity
	 */
	struct APrimalBuff_Grappled_GetTetherBreakLimit_GrappledActorAboveVelocity_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		float                                                      ReturnValue;                                             // 0x0168(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetRequiredTetherLengthForChar
	 */
	struct APrimalBuff_Grappled_GetRequiredTetherLengthForChar_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		class APrimalCharacter*                                    forChar;                                                 // 0x0168(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0170(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetReplicatedOwnerInputs
	 */
	struct APrimalBuff_Grappled_GetReplicatedOwnerInputs_Params
	{
	public:
		struct FVector2D                                           ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetOwnerAppendedTetherTag
	 */
	struct APrimalBuff_Grappled_GetOwnerAppendedTetherTag_Params
	{
	public:
		class FString                                              WithRootTag;                                             // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
		class APrimalBuff_Grappled*                                OwnerGrappleBuff;                                        // 0x0010(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetNumValidTethers
	 */
	struct APrimalBuff_Grappled_GetNumValidTethers_Params
	{
	public:
		bool                                                       bOnlyReservedTethers;                                    // 0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_FAIO[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetNumReservedTethers
	 */
	struct APrimalBuff_Grappled_GetNumReservedTethers_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetMinTetherLength
	 */
	struct APrimalBuff_Grappled_GetMinTetherLength_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		float                                                      ReturnValue;                                             // 0x0168(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetMaxTetherLength
	 */
	struct APrimalBuff_Grappled_GetMaxTetherLength_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		float                                                      ReturnValue;                                             // 0x0168(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetInitGrappleAnchorRelativeOffset
	 */
	struct APrimalBuff_Grappled_GetInitGrappleAnchorRelativeOffset_Params
	{
	public:
		struct FGrappleAnchor                                      ForAnchorData;                                           // 0x0000(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		class AActor*                                              WithAnchorOwner;                                         // 0x0040(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0048(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetGrappleVelocityDampingRate
	 */
	struct APrimalBuff_Grappled_GetGrappleVelocityDampingRate_Params
	{
	public:
		class APrimalCharacter*                                    forChar;                                                 // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FGrappleTether                                      ForTether;                                               // 0x0008(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		float                                                      ReturnValue;                                             // 0x0170(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetGrappleTetherRootTag
	 */
	struct APrimalBuff_Grappled_GetGrappleTetherRootTag_Params
	{
	public:
		class FString                                              ForTag;                                                  // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetGrappleTetherReleaseMaxVelocity
	 */
	struct APrimalBuff_Grappled_GetGrappleTetherReleaseMaxVelocity_Params
	{
	public:
		class APrimalCharacter*                                    ForReleasingChar;                                        // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FGrappleTether                                      ForTether;                                               // 0x0008(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		float                                                      ReturnValue;                                             // 0x0170(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetGrappleTetherPullMaxVelocity
	 */
	struct APrimalBuff_Grappled_GetGrappleTetherPullMaxVelocity_Params
	{
	public:
		class APrimalCharacter*                                    ForPullingChar;                                          // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FGrappleTether                                      ForTether;                                               // 0x0008(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		float                                                      ReturnValue;                                             // 0x0170(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetGrappleTetherPullAcceleration
	 */
	struct APrimalBuff_Grappled_GetGrappleTetherPullAcceleration_Params
	{
	public:
		class APrimalCharacter*                                    ForPullingChar;                                          // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FGrappleTether                                      ForTether;                                               // 0x0008(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		float                                                      ReturnValue;                                             // 0x0170(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetGrappleAnchorWorldLocation
	 */
	struct APrimalBuff_Grappled_GetGrappleAnchorWorldLocation_Params
	{
	public:
		struct FGrappleAnchor                                      ForAnchorData;                                           // 0x0000(0x0040)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		class AActor*                                              WithAnchorOwner;                                         // 0x0040(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0048(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetCurrentTetherMoveDir
	 */
	struct APrimalBuff_Grappled_GetCurrentTetherMoveDir_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		struct FVector                                             ReturnValue;                                             // 0x0168(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetCurrentSwingingAxisValues
	 */
	struct APrimalBuff_Grappled_GetCurrentSwingingAxisValues_Params
	{
	public:
		struct FVector2D                                           ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetCurrentGrappleState
	 */
	struct APrimalBuff_Grappled_GetCurrentGrappleState_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		EGrappleState                                              ReturnValue;                                             // 0x0168(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetCharDistanceFromTetherEndRatio
	 */
	struct APrimalBuff_Grappled_GetCharDistanceFromTetherEndRatio_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		class APrimalCharacter*                                    forChar;                                                 // 0x0168(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0170(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetCharAngleToGrappleTetherEnd
	 */
	struct APrimalBuff_Grappled_GetCharAngleToGrappleTetherEnd_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		class APrimalCharacter*                                    forChar;                                                 // 0x0168(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0170(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetAverageTetherEndLocation
	 */
	struct APrimalBuff_Grappled_GetAverageTetherEndLocation_Params
	{
	public:
		bool                                                       bReservedTethersOnly;                                    // 0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_OW7U[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             ReturnValue;                                             // 0x0004(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetAllCurrentGrapplers
	 */
	struct APrimalBuff_Grappled_GetAllCurrentGrapplers_Params
	{
	public:
		TArray<class APrimalCharacter*>                            ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.GetActorAttachParentChar
	 */
	struct APrimalBuff_Grappled_GetActorAttachParentChar_Params
	{
	public:
		class AActor*                                              forActor;                                                // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalCharacter*                                    ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.EndGrapple
	 */
	struct APrimalBuff_Grappled_EndGrapple_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.DisplayGrappleSystemHudNotification
	 */
	struct APrimalBuff_Grappled_DisplayGrappleSystemHudNotification_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              FromActor;                                               // 0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              NotificationType;                                        // 0x0010(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_RJD2[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    NotificationID;                                          // 0x0014(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReasonString;                                            // 0x0018(0x0010)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0028(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.CustomGrappleTick
	 */
	struct APrimalBuff_Grappled_CustomGrappleTick_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.ClampOwnerReleasingVelocity
	 */
	struct APrimalBuff_Grappled_ClampOwnerReleasingVelocity_Params
	{
	public:
		struct FVector                                             WithReleasingVelocity;                                   // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.ClampGrappleVelocity
	 */
	struct APrimalBuff_Grappled_ClampGrappleVelocity_Params
	{
	public:
		struct FVector                                             ClampVelocity;                                           // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.CheckForTetherBreak
	 */
	struct APrimalBuff_Grappled_CheckForTetherBreak_Params
	{
	public:
		struct FGrappleTether                                      CheckTether;                                             // 0x0000(0x0168)  (Parm, OutParm, ContainsInstancedReference)
		int32_t                                                    WithIndex;                                               // 0x0168(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OverrideBreakPastDist;                                   // 0x016C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.CheckForAutoBreakTether
	 */
	struct APrimalBuff_Grappled_CheckForAutoBreakTether_Params
	{
	public:
		struct FGrappleTether                                      CheckTether;                                             // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		bool                                                       ReturnValue;                                             // 0x0168(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.CanUpdateTetherLength
	 */
	struct APrimalBuff_Grappled_CanUpdateTetherLength_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		float                                                      WithLength;                                              // 0x0168(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x016C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.CanTetherOwnerPullGrappledChar
	 */
	struct APrimalBuff_Grappled_CanTetherOwnerPullGrappledChar_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		bool                                                       ReturnValue;                                             // 0x0168(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.CanSyncGrappleTetherLengths
	 */
	struct APrimalBuff_Grappled_CanSyncGrappleTetherLengths_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.CanReceiveNewGrappleTether
	 */
	struct APrimalBuff_Grappled_CanReceiveNewGrappleTether_Params
	{
	public:
		class FString                                              WithTag;                                                 // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.CanPullChar
	 */
	struct APrimalBuff_Grappled_CanPullChar_Params
	{
	public:
		class APrimalCharacter*                                    PullChar;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForStart;                                               // 0x0008(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.CanOwnerGrappleSwing
	 */
	struct APrimalBuff_Grappled_CanOwnerGrappleSwing_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.CanManipulateOwnerVelocity
	 */
	struct APrimalBuff_Grappled_CanManipulateOwnerVelocity_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.CanGrappleTetherAffectOwnerMovement
	 */
	struct APrimalBuff_Grappled_CanGrappleTetherAffectOwnerMovement_Params
	{
	public:
		struct FGrappleTether                                      ForTether;                                               // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		bool                                                       ReturnValue;                                             // 0x0168(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.CanCharControlGrappleTether
	 */
	struct APrimalBuff_Grappled_CanCharControlGrappleTether_Params
	{
	public:
		class APrimalCharacter*                                    forChar;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FGrappleTether                                      ForTether;                                               // 0x0008(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		bool                                                       bAllowSlaveGrappleToControl;                             // 0x0170(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0171(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.CanChangeGrappleState
	 */
	struct APrimalBuff_Grappled_CanChangeGrappleState_Params
	{
	public:
		unsigned char                                              DesiredGrappleState;                                     // 0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.CanBeGrappledAgainstSurface
	 */
	struct APrimalBuff_Grappled_CanBeGrappledAgainstSurface_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.BreakGrappleTether
	 */
	struct APrimalBuff_Grappled_BreakGrappleTether_Params
	{
	public:
		int32_t                                                    AtIndex;                                                 // 0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_N3DV[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              WithTag;                                                 // 0x0008(0x0010)  (ConstParm, Parm, ZeroConstructor)
		class APrimalBuff_Grappled*                                WithMasterBuff;                                          // 0x0018(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bBreakAllTethersWithTag;                                 // 0x0020(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0021(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.BreakChildTetherOnGrappledChar
	 */
	struct APrimalBuff_Grappled_BreakChildTetherOnGrappledChar_Params
	{
	public:
		struct FGrappleTether                                      WithTether;                                              // 0x0000(0x0168)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		bool                                                       ReturnValue;                                             // 0x0168(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.BreakAllTethers
	 */
	struct APrimalBuff_Grappled_BreakAllTethers_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.BP_InterceptGrappleLogic
	 */
	struct APrimalBuff_Grappled_BP_InterceptGrappleLogic_Params
	{
	public:
		struct FVector                                             CharVelocity;                                            // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.AreGrappleTetherTagsEqual
	 */
	struct APrimalBuff_Grappled_AreGrappleTetherTagsEqual_Params
	{
	public:
		class FString                                              TagA;                                                    // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
		class FString                                              TagB;                                                    // 0x0010(0x0010)  (ConstParm, Parm, ZeroConstructor)
		bool                                                       bOnlyCompareRootTag;                                     // 0x0020(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0021(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.ApplyTetherMoveVelocity
	 */
	struct APrimalBuff_Grappled_ApplyTetherMoveVelocity_Params
	{
	public:
		struct FVector                                             CurrentVelocity;                                         // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.ApplyOwnerSwingingVelocity
	 */
	struct APrimalBuff_Grappled_ApplyOwnerSwingingVelocity_Params
	{
	public:
		struct FVector                                             CurrentVelocity;                                         // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.AllowGrappleLogic
	 */
	struct APrimalBuff_Grappled_AllowGrappleLogic_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.AdjustMovementVectorIfAgainstSurface
	 */
	struct APrimalBuff_Grappled_AdjustMovementVectorIfAgainstSurface_Params
	{
	public:
		struct FVector                                             AdjustVector;                                            // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_Grappled.AddGrappleTether
	 */
	struct APrimalBuff_Grappled_AddGrappleTether_Params
	{
	public:
		struct FCreateGrappleTetherData                            FromData;                                                // 0x0000(0x0120)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		bool                                                       bPreventNetSync;                                         // 0x0120(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JOQI[0x3];                                   // 0x0121(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    AddAtIndex;                                              // 0x0124(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0128(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.UnloadLevelsForMissionTag
	 */
	struct APrimalBuff_MissionData_UnloadLevelsForMissionTag_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.SetMissionData_Vector
	 */
	struct APrimalBuff_MissionData_SetMissionData_Vector_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Key;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Value;                                                   // 0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.SetMissionData_Struct
	 */
	struct APrimalBuff_MissionData_SetMissionData_Struct_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Key;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UProperty*                                           Value;                                                   // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.SetMissionData_String
	 */
	struct APrimalBuff_MissionData_SetMissionData_String_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Key;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              Value;                                                   // 0x0010(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.SetMissionData_Rotator
	 */
	struct APrimalBuff_MissionData_SetMissionData_Rotator_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Key;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Value;                                                   // 0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.SetMissionData_Int
	 */
	struct APrimalBuff_MissionData_SetMissionData_Int_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Key;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Value;                                                   // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.SetMissionData_Float
	 */
	struct APrimalBuff_MissionData_SetMissionData_Float_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Key;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Value;                                                   // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.SetMissionData_Double
	 */
	struct APrimalBuff_MissionData_SetMissionData_Double_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Key;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     Value;                                                   // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.SetMissionData_Bool
	 */
	struct APrimalBuff_MissionData_SetMissionData_Bool_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Key;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       Value;                                                   // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.ServerRequestToggleWeapon
	 */
	struct APrimalBuff_MissionData_ServerRequestToggleWeapon_Params
	{
	public:
		class AMissionType*                                        Mission;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.ServerRequestStartMissionWithMissionTag
	 */
	struct APrimalBuff_MissionData_ServerRequestStartMissionWithMissionTag_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AMissionDispatcher*                                  FromDispatcher;                                          // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.ServerRequestStartMission
	 */
	struct APrimalBuff_MissionData_ServerRequestStartMission_Params
	{
	public:
		class UClass*                                              MissionType;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AMissionDispatcher*                                  FromDispatcher;                                          // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.ServerRequestMissionEligibilityCheck
	 */
	struct APrimalBuff_MissionData_ServerRequestMissionEligibilityCheck_Params
	{
	public:
		class AMissionDispatcher*                                  dispatcherFilter;                                        // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.ServerRequestEquipMissionItem
	 */
	struct APrimalBuff_MissionData_ServerRequestEquipMissionItem_Params
	{
	public:
		class AMissionType*                                        Mission;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.ServerRequestCancelMission
	 */
	struct APrimalBuff_MissionData_ServerRequestCancelMission_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.ServerMulticastRequiredProps
	 */
	struct APrimalBuff_MissionData_ServerMulticastRequiredProps_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.ReplicatedMissionDataUpdated
	 */
	struct APrimalBuff_MissionData_ReplicatedMissionDataUpdated_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.OnRep_MissionIndicatorParticles
	 */
	struct APrimalBuff_MissionData_OnRep_MissionIndicatorParticles_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.OnRep_CurrentMissions
	 */
	struct APrimalBuff_MissionData_OnRep_CurrentMissions_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.OnRep_ActiveMissionIndex
	 */
	struct APrimalBuff_MissionData_OnRep_ActiveMissionIndex_Params
	{	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.OnMissionClientEvent__DelegateSignature
	 */
	struct APrimalBuff_MissionData_OnMissionClientEvent__DelegateSignature_Params
	{
	public:
		class APrimalBuff_MissionData*                             MissionDataBuff;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AMissionType*                                        Mission;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.OnMissionClientDataUpdated__DelegateSignature
	 */
	struct APrimalBuff_MissionData_OnMissionClientDataUpdated__DelegateSignature_Params
	{
	public:
		class APrimalBuff_MissionData*                             MissionDataBuff;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.OnMissionClientBoolEvent__DelegateSignature
	 */
	struct APrimalBuff_MissionData_OnMissionClientBoolEvent__DelegateSignature_Params
	{
	public:
		class APrimalBuff_MissionData*                             MissionDataBuff;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AMissionType*                                        Mission;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSuccess;                                                // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.OnActiveMissionPhaseStarted
	 */
	struct APrimalBuff_MissionData_OnActiveMissionPhaseStarted_Params
	{
	public:
		class AMissionType*                                        Mission;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                OldPhase;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                NewPhase;                                                // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.OnActiveMissionPhaseEnded
	 */
	struct APrimalBuff_MissionData_OnActiveMissionPhaseEnded_Params
	{
	public:
		class AMissionType*                                        Mission;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                OldPhase;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                NewPhase;                                                // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.MultiUpdateMissionData_Int
	 */
	struct APrimalBuff_MissionData_MultiUpdateMissionData_Int_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Key;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Value;                                                   // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.MultiUpdateMissionData_Bool
	 */
	struct APrimalBuff_MissionData_MultiUpdateMissionData_Bool_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Key;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       Value;                                                   // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.MultiClearParticleIndicator
	 */
	struct APrimalBuff_MissionData_MultiClearParticleIndicator_Params
	{
	public:
		float                                                      RemoveAfterDuration;                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.LoadLevelsForMissionTag
	 */
	struct APrimalBuff_MissionData_LoadLevelsForMissionTag_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.IsPlayerEligibleForMission_CheckFromClient
	 */
	struct APrimalBuff_MissionData_IsPlayerEligibleForMission_CheckFromClient_Params
	{
	public:
		class UClass*                                              MissionType;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOutIsRecentData;                                        // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_AH6U[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FClientMissionEligibility                           OutEligibilityData;                                      // 0x0010(0x0038)  (Parm, OutParm)
		float                                                      MaxTimeConsideredRecent;                                 // 0x0048(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_LZCW[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AMissionDispatcher*                                  dispatcherFilter;                                        // 0x0050(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0058(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.IsMissionTypeActiveWithMissionTag
	 */
	struct APrimalBuff_MissionData_IsMissionTypeActiveWithMissionTag_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.IsMissionTypeActive
	 */
	struct APrimalBuff_MissionData_IsMissionTypeActive_Params
	{
	public:
		class UClass*                                              MissionType;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bExactClassMatch;                                        // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.GetWorldIndicatorsForMission
	 */
	struct APrimalBuff_MissionData_GetWorldIndicatorsForMission_Params
	{
	public:
		class AMissionType*                                        Mission;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FMissionWorldIndicator>                      WorldIndicators;                                         // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bCompanionOnly;                                          // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSortByPriority;                                         // 0x0019(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.GetMissionDebugData
	 */
	struct APrimalBuff_MissionData_GetMissionDebugData_Params
	{
	public:
		TArray<struct FSerializedMissionData>                      OutMissionData;                                          // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.GetMissionData_Vector
	 */
	struct APrimalBuff_MissionData_GetMissionData_Vector_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Key;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             OutValue;                                                // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x001C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.GetMissionData_Struct
	 */
	struct APrimalBuff_MissionData_GetMissionData_Struct_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Key;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UProperty*                                           DestStruct;                                              // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.GetMissionData_String
	 */
	struct APrimalBuff_MissionData_GetMissionData_String_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Key;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              OutValue;                                                // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.GetMissionData_Rotator
	 */
	struct APrimalBuff_MissionData_GetMissionData_Rotator_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Key;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            OutValue;                                                // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x001C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.GetMissionData_Int
	 */
	struct APrimalBuff_MissionData_GetMissionData_Int_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Key;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    OutValue;                                                // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.GetMissionData_Float
	 */
	struct APrimalBuff_MissionData_GetMissionData_Float_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Key;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OutValue;                                                // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.GetMissionData_Double
	 */
	struct APrimalBuff_MissionData_GetMissionData_Double_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Key;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     OutValue;                                                // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.GetMissionData_Bool
	 */
	struct APrimalBuff_MissionData_GetMissionData_Bool_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Key;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       OutValue;                                                // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0011(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.GetBiomeMissionTag
	 */
	struct APrimalBuff_MissionData_GetBiomeMissionTag_Params
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class FName                                                ReturnValue;                                             // 0x000C(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.GetAllCurrentMissions
	 */
	struct APrimalBuff_MissionData_GetAllCurrentMissions_Params
	{
	public:
		TArray<class AMissionType*>                                OutMissions;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.GetActiveMission
	 */
	struct APrimalBuff_MissionData_GetActiveMission_Params
	{
	public:
		class AMissionType*                                        ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.ClientUnloadMissionLevels
	 */
	struct APrimalBuff_MissionData_ClientUnloadMissionLevels_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.ClientSpawnEmitter
	 */
	struct APrimalBuff_MissionData_ClientSpawnEmitter_Params
	{
	public:
		class UClass*                                              EmitterType;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_OQNZ[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          EmitterTransform;                                        // 0x0010(0x0030)  (Parm, IsPlainOldData, NoDestructor)
		float                                                      EmitterLifespan;                                         // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.ClientSendMissionNotification
	 */
	struct APrimalBuff_MissionData_ClientSendMissionNotification_Params
	{
	public:
		class AMissionType*                                        FromMission;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                NotificationTag;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        MessageColor;                                            // 0x0010(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTexture2D*                                          MessageIcon;                                             // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DisplayTime;                                             // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DisplayScale;                                            // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsSingleton;                                            // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7YJ5[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class USoundBase*                                          MessageSound;                                            // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.ClientSendMissionAlert
	 */
	struct APrimalBuff_MissionData_ClientSendMissionAlert_Params
	{
	public:
		EMissionAlertType                                          AlertType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_53EC[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              AlertTitle;                                              // 0x0008(0x0010)  (Parm, ZeroConstructor)
		TArray<struct FMissionAlertEntry>                          AlertEntries;                                            // 0x0018(0x0010)  (ConstParm, Parm, ZeroConstructor)
		float                                                      DisplayTime;                                             // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_IZ06[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class USoundBase*                                          Sound;                                                   // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       FlyoutFromTop;                                           // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.ClientMissionEvent
	 */
	struct APrimalBuff_MissionData_ClientMissionEvent_Params
	{
	public:
		class AMissionType*                                        Mission;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bMissionStarted;                                         // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bMissionCompletedSuccessfully;                           // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.ClientMissionEligibilityResponse
	 */
	struct APrimalBuff_MissionData_ClientMissionEligibilityResponse_Params
	{
	public:
		TArray<struct FMissionEligibilityData>                     EligibilityData;                                         // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.ClientLoadMissionLevels
	 */
	struct APrimalBuff_MissionData_ClientLoadMissionLevels_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalBuff_MissionData.AutoHideIndicatorParticles
	 */
	struct APrimalBuff_MissionData_AutoHideIndicatorParticles_Params
	{	};

	/**
	 * Function ShooterGame.PrimalHarvestingComponent.OnItemHarvested__DelegateSignature
	 */
	struct UPrimalHarvestingComponent_OnItemHarvested__DelegateSignature_Params
	{
	public:
		class AActor*                                              Harvester;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         HarvestedItem;                                           // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ItemQuantity;                                            // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalHarvestingComponent.BPRecieveComponentDamage
	 */
	struct UPrimalHarvestingComponent_BPRecieveComponentDamage_Params
	{
	public:
		float                                                      Damage;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_MNYV[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0008(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AController*                                         EventInstigator;                                         // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalHarvestingComponent.BPCustomHarvestResource
	 */
	struct UPrimalHarvestingComponent_BPCustomHarvestResource_Params
	{
	public:
		class UPrimalInventoryComponent*                           invComp;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    NumToGive;                                               // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KXB7[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              DamageTypeClass;                                         // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              ToActor;                                                 // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0020(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalRichTextBlock.SetText
	 */
	struct UPrimalRichTextBlock_SetText_Params
	{
	public:
		class FText                                                InText;                                                  // 0x0000(0x0018)  (Parm)
		bool                                                       bDoParse;                                                // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalRichTextBlock.SetString
	 */
	struct UPrimalRichTextBlock_SetString_Params
	{
	public:
		class FString                                              InString;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalRichTextBlock.GetText
	 */
	struct UPrimalRichTextBlock_GetText_Params
	{
	public:
		class FText                                                ReturnValue;                                             // 0x0000(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalStructurePlacer.SetForceDisplayMissionAreaStructureNoBuildZones
	 */
	struct APrimalStructurePlacer_SetForceDisplayMissionAreaStructureNoBuildZones_Params
	{
	public:
		bool                                                       bForceDisplay;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructurePlacer.SetChoosingRotation
	 */
	struct APrimalStructurePlacer_SetChoosingRotation_Params
	{
	public:
		bool                                                       bNewChoosingRotation;                                    // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructurePlacer.IsPlacingActive
	 */
	struct APrimalStructurePlacer_IsPlacingActive_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructurePlacer.GetLastPlacementProperties
	 */
	struct APrimalStructurePlacer_GetLastPlacementProperties_Params
	{
	public:
		struct FVector                                             OutLastHitLoc;                                           // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            OutLastHitRot;                                           // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            OutLastViewRot;                                          // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructurePlacer.DrawStructurePreviewHUD
	 */
	struct APrimalStructurePlacer_DrawStructurePreviewHUD_Params
	{
	public:
		class AShooterHUD*                                         HUD;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalStructure*                                    PlacingStructure;                                        // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureBearTrap.TriggerTouched
	 */
	struct APrimalStructureBearTrap_TriggerTouched_Params
	{
	public:
		class AActor*                                              Other;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    OtherBodyIndex;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFromSweep;                                              // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_2BA1[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          SweepResult;                                             // 0x0018(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalStructureBearTrap.PeriodicalTrapDamageTimer
	 */
	struct APrimalStructureBearTrap_PeriodicalTrapDamageTimer_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureBearTrap.OnRep_CurrentTrapState
	 */
	struct APrimalStructureBearTrap_OnRep_CurrentTrapState_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureBearTrap.NetGotoTrapState
	 */
	struct APrimalStructureBearTrap_NetGotoTrapState_Params
	{
	public:
		int8_t                                                     TrapState;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureBearTrap.IsTrapPrepared
	 */
	struct APrimalStructureBearTrap_IsTrapPrepared_Params
	{
	public:
		float                                                      AnimSetupTime;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureBearTrap.HideAnimatedSK
	 */
	struct APrimalStructureBearTrap_HideAnimatedSK_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureBearTrap.DecreaseDamageTimer
	 */
	struct APrimalStructureBearTrap_DecreaseDamageTimer_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureBearTrap.BPNotifyImmobilizedCharacterIsDeadOrInConscious
	 */
	struct APrimalStructureBearTrap_BPNotifyImmobilizedCharacterIsDeadOrInConscious_Params
	{
	public:
		bool                                                       IsDead;                                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       IsConscious;                                             // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureBearTrap.BPDie
	 */
	struct APrimalStructureBearTrap_BPDie_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureDoor.OnRep_DoorOpenState
	 */
	struct APrimalStructureDoor_OnRep_DoorOpenState_Params
	{
	public:
		int8_t                                                     PrevDoorOpenState;                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureDoor.NetGotoDoorState
	 */
	struct APrimalStructureDoor_NetGotoDoorState_Params
	{
	public:
		int8_t                                                     DoorState;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureDoor.HasSamePinCode
	 */
	struct APrimalStructureDoor_HasSamePinCode_Params
	{
	public:
		class APrimalStructureItemContainer*                       otherContainer;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureDoor.GetDoorState
	 */
	struct APrimalStructureDoor_GetDoorState_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureDoor.DelayedGotoDoorStateTimer
	 */
	struct APrimalStructureDoor_DelayedGotoDoorStateTimer_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureDoor.CanOpen
	 */
	struct APrimalStructureDoor_CanOpen_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureDoor.BPSetDoorState
	 */
	struct APrimalStructureDoor_BPSetDoorState_Params
	{
	public:
		int32_t                                                    DoorState;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureDoor.BPGotoDoorState
	 */
	struct APrimalStructureDoor_BPGotoDoorState_Params
	{
	public:
		int32_t                                                    NewDoorState;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureSkeletalDoor.OnEndOverlap
	 */
	struct APrimalStructureSkeletalDoor_OnEndOverlap_Params
	{
	public:
		class AActor*                                              OtherActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    OtherBodyIndex;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureSkeletalDoor.OnBeginOverlap
	 */
	struct APrimalStructureSkeletalDoor_OnBeginOverlap_Params
	{
	public:
		class AActor*                                              OtherActor;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    OtherBodyIndex;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFromSweep;                                              // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_TCX3[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          SweepResult;                                             // 0x0018(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalStructureSkeletalDoor.GetDoorOpenState
	 */
	struct APrimalStructureSkeletalDoor_GetDoorOpenState_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureElevatorPlatform.ServerActivate
	 */
	struct APrimalStructureElevatorPlatform_ServerActivate_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceDirection;                                         // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EPrimalStructureElevatorState                              Dir;                                                     // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureElevatorPlatform.PlatformIsActive
	 */
	struct APrimalStructureElevatorPlatform_PlatformIsActive_Params
	{
	public:
		EPrimalStructureElevatorState                              Direction;                                               // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureElevatorPlatform.OnRep_bIsActivated
	 */
	struct APrimalStructureElevatorPlatform_OnRep_bIsActivated_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureElevatorPlatform.HasSamePinCode
	 */
	struct APrimalStructureElevatorPlatform_HasSamePinCode_Params
	{
	public:
		class APrimalStructureItemContainer*                       otherContainer;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureElevatorPlatform.HasReachedMaxWeight
	 */
	struct APrimalStructureElevatorPlatform_HasReachedMaxWeight_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureElevatorPlatform.GetTrackHeight
	 */
	struct APrimalStructureElevatorPlatform_GetTrackHeight_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureElevatorPlatform.GetCurrentLiftedWeight
	 */
	struct APrimalStructureElevatorPlatform_GetCurrentLiftedWeight_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureElevatorPlatform.GetAllTrackStructures
	 */
	struct APrimalStructureElevatorPlatform_GetAllTrackStructures_Params
	{
	public:
		TArray<class AActor*>                                      Tracks;                                                  // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureElevatorPlatform.Deactivate
	 */
	struct APrimalStructureElevatorPlatform_Deactivate_Params
	{
	public:
		bool                                                       bSwitchDirection;                                        // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureElevatorPlatform.BPElevatorStopped
	 */
	struct APrimalStructureElevatorPlatform_BPElevatorStopped_Params
	{
	public:
		bool                                                       bSwitchedDirection;                                      // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EPrimalStructureElevatorState                              NewDirection;                                            // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureElevatorPlatform.Activate
	 */
	struct APrimalStructureElevatorPlatform_Activate_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceDirection;                                         // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EPrimalStructureElevatorState                              Dir;                                                     // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_FR8C[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      DistanceToTravelOverride;                                // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureExplosive.NetIgnoreDestructionEvents
	 */
	struct APrimalStructureExplosive_NetIgnoreDestructionEvents_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureExplosive.ApplyPlacementPreview
	 */
	struct APrimalStructureExplosive_ApplyPlacementPreview_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureExplosiveTransGPS.NetSetLocation
	 */
	struct APrimalStructureExplosiveTransGPS_NetSetLocation_Params
	{
	public:
		struct FVector                                             NewLocation;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureTripwire.WireCheck
	 */
	struct APrimalStructureTripwire_WireCheck_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureTripwire.TriggerTouched
	 */
	struct APrimalStructureTripwire_TriggerTouched_Params
	{
	public:
		class AActor*                                              Other;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    OtherBodyIndex;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFromSweep;                                              // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_2HFP[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          SweepResult;                                             // 0x0018(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalStructureTripwire.OnRep_UnwiredTrap
	 */
	struct APrimalStructureTripwire_OnRep_UnwiredTrap_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureTripwire.OnRep_ConnectedTo
	 */
	struct APrimalStructureTripwire_OnRep_ConnectedTo_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureTripwire.NetUpdateBoxName
	 */
	struct APrimalStructureTripwire_NetUpdateBoxName_Params
	{
	public:
		class FString                                              NewName;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureTripwire.DisconnectMe
	 */
	struct APrimalStructureTripwire_DisconnectMe_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureElevatorTrack.HasPlatformAttachedToTheTrack
	 */
	struct APrimalStructureElevatorTrack_HasPlatformAttachedToTheTrack_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureElevatorTrack.ClientHasPlatform
	 */
	struct APrimalStructureElevatorTrack_ClientHasPlatform_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureElevatorTrack.BPGetElevatorPlatform
	 */
	struct APrimalStructureElevatorTrack_BPGetElevatorPlatform_Params
	{
	public:
		class APrimalStructureElevatorPlatform*                    ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer_CropPlot.RemovePlantedCrop
	 */
	struct APrimalStructureItemContainer_CropPlot_RemovePlantedCrop_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer_CropPlot.OnRep_PlantedCrop
	 */
	struct APrimalStructureItemContainer_CropPlot_OnRep_PlantedCrop_Params
	{
	public:
		class UClass*                                              PrevPlantedCrop;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer_CropPlot.OnRep_HasFruitItems
	 */
	struct APrimalStructureItemContainer_CropPlot_OnRep_HasFruitItems_Params
	{
	public:
		bool                                                       bPreviousHasFruitItems;                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer_CropPlot.OnRep_CurrentCropPhase
	 */
	struct APrimalStructureItemContainer_CropPlot_OnRep_CurrentCropPhase_Params
	{
	public:
		ESeedCropPhase                                             PrevCropPhase;                                           // 0x0000(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer_CropPlot.BPGetAdditionalGrowthMultiplier
	 */
	struct APrimalStructureItemContainer_CropPlot_BPGetAdditionalGrowthMultiplier_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer_CropPlot.AutoWaterRefreshCrop
	 */
	struct APrimalStructureItemContainer_CropPlot_AutoWaterRefreshCrop_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer_CropPlot.AddWater
	 */
	struct APrimalStructureItemContainer_CropPlot_AddWater_Params
	{
	public:
		float                                                      amount;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAllowNetworking;                                        // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_WZRB[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer_CropPlot_VisualItems.OnRep_HasItems
	 */
	struct APrimalStructureItemContainer_CropPlot_VisualItems_OnRep_HasItems_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer_CropPlot_VisualItems.BPUpdateItemVisuals
	 */
	struct APrimalStructureItemContainer_CropPlot_VisualItems_BPUpdateItemVisuals_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer_SupplyCrate.StartLosingHealth
	 */
	struct APrimalStructureItemContainer_SupplyCrate_StartLosingHealth_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer_SupplyCrate.SetAppliedBuff
	 */
	struct APrimalStructureItemContainer_SupplyCrate_SetAppliedBuff_Params
	{
	public:
		bool                                                       bSet;                                                    // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer_SupplyCrate.LoseHealth
	 */
	struct APrimalStructureItemContainer_SupplyCrate_LoseHealth_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer_HordeCrate.SpawnElementNodePostProcess
	 */
	struct APrimalStructureItemContainer_HordeCrate_SpawnElementNodePostProcess_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer_VisualItems.UpdateVisuals
	 */
	struct APrimalStructureItemContainer_VisualItems_UpdateVisuals_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer_VisualItems.OnRep_HasItems
	 */
	struct APrimalStructureItemContainer_VisualItems_OnRep_HasItems_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureItemContainer_VisualItems.BPUpdateItemVisuals
	 */
	struct APrimalStructureItemContainer_VisualItems_BPUpdateItemVisuals_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureKeypad.ActivateKeypad
	 */
	struct APrimalStructureKeypad_ActivateKeypad_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    pinCode;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEnable;                                                 // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000D(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureSeating.Release
	 */
	struct APrimalStructureSeating_Release_Params
	{
	public:
		class AShooterCharacter*                                   ShooterCharacter;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureSeating.OnRep_SeatedCharacter
	 */
	struct APrimalStructureSeating_OnRep_SeatedCharacter_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureSeating.OnRep_CharacterPerSeat
	 */
	struct APrimalStructureSeating_OnRep_CharacterPerSeat_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureSeating.GetNearestFreeSpot
	 */
	struct APrimalStructureSeating_GetNearestFreeSpot_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             CharacterLocation;                                       // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureSeating.Control
	 */
	struct APrimalStructureSeating_Control_Params
	{
	public:
		class AShooterCharacter*                                   ShooterCharacter;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    SeatNumber;                                              // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bLockedToSeat;                                           // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureSeating.ClearSeats
	 */
	struct APrimalStructureSeating_ClearSeats_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureSeating.CanSeat
	 */
	struct APrimalStructureSeating_CanSeat_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   forCharacter;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForce;                                                  // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0011(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureSeating.BPSeatedPlayer
	 */
	struct APrimalStructureSeating_BPSeatedPlayer_Params
	{
	public:
		class AShooterCharacter*                                   SeatedChar;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    AtSeatNumber;                                            // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureSeating.BPReleasedPlayer
	 */
	struct APrimalStructureSeating_BPReleasedPlayer_Params
	{
	public:
		class AShooterCharacter*                                   ReleasedChar;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    AtSeatNumber;                                            // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureSeating.BPPreventReleaseSeatingStructure
	 */
	struct APrimalStructureSeating_BPPreventReleaseSeatingStructure_Params
	{
	public:
		class AShooterCharacter*                                   ForSitter;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureSeating.BPOnStopTargeting
	 */
	struct APrimalStructureSeating_BPOnStopTargeting_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureSeating.BPOnStartTargeting
	 */
	struct APrimalStructureSeating_BPOnStartTargeting_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureSeating.BPHandleSitterPoop
	 */
	struct APrimalStructureSeating_BPHandleSitterPoop_Params
	{
	public:
		class AShooterCharacter*                                   ForSitter;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureSeating.BPGetBestSeatNumber
	 */
	struct APrimalStructureSeating_BPGetBestSeatNumber_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    InBestSeatNumber;                                        // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureSeating.BPAllowSeating
	 */
	struct APrimalStructureSeating_BPAllowSeating_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureBed.SpawnedPlayerFor
	 */
	struct APrimalStructureBed_SpawnedPlayerFor_Params
	{
	public:
		class AShooterPlayerController*                            PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APawn*                                               ForPawn;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureTurretBallista.TryFiring
	 */
	struct APrimalStructureTurretBallista_TryFiring_Params
	{
	public:
		bool                                                       shouldFire;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureTurretBallista.ServerSwitchAmmoType
	 */
	struct APrimalStructureTurretBallista_ServerSwitchAmmoType_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureTurretBallista.ServerSetTargeting
	 */
	struct APrimalStructureTurretBallista_ServerSetTargeting_Params
	{
	public:
		bool                                                       bTargeting;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureTurretBallista.GetCurrentAmmoType
	 */
	struct APrimalStructureTurretBallista_GetCurrentAmmoType_Params
	{
	public:
		class UClass*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureTurretBallista.ClientsPlayFireAnim
	 */
	struct APrimalStructureTurretBallista_ClientsPlayFireAnim_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureTurretBallista.ClientsFireProjectile
	 */
	struct APrimalStructureTurretBallista_ClientsFireProjectile_Params
	{
	public:
		struct FVector                                             Origin;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector_NetQuantizeNormal                           ShootDir;                                                // 0x000C(0x000C)  (Parm)
	};

	/**
	 * Function ShooterGame.PrimalStructureTurretBallista.BPGetDamageMultiplier
	 */
	struct APrimalStructureTurretBallista_BPGetDamageMultiplier_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureTurretBallista.BPFiredWeapon
	 */
	struct APrimalStructureTurretBallista_BPFiredWeapon_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureTurretBallista.BPCanFire
	 */
	struct APrimalStructureTurretBallista_BPCanFire_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureTurret.UpdatedTargeting
	 */
	struct APrimalStructureTurret_UpdatedTargeting_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureTurret.StartWarning
	 */
	struct APrimalStructureTurret_StartWarning_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureTurret.GetTargetAltAimSocket
	 */
	struct APrimalStructureTurret_GetTargetAltAimSocket_Params
	{
	public:
		class APrimalCharacter*                                    forTarget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureTurret.ClientsFireProjectile
	 */
	struct APrimalStructureTurret_ClientsFireProjectile_Params
	{
	public:
		struct FVector                                             Origin;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector_NetQuantizeNormal                           ShootDir;                                                // 0x000C(0x000C)  (Parm)
	};

	/**
	 * Function ShooterGame.PrimalStructureTurret.BPTurretPreventsTargeting
	 */
	struct APrimalStructureTurret_BPTurretPreventsTargeting_Params
	{
	public:
		class APrimalCharacter*                                    PotentialTarget;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureTurret.BPCopyCustomSettingsFromTurret
	 */
	struct APrimalStructureTurret_BPCopyCustomSettingsFromTurret_Params
	{
	public:
		class APrimalStructureTurret*                              FromTurret;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureTurretPlant.RecoverHealthTimer
	 */
	struct APrimalStructureTurretPlant_RecoverHealthTimer_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureUnderwaterBase.UpdateCurrentPinCodes
	 */
	struct APrimalStructureUnderwaterBase_UpdateCurrentPinCodes_Params
	{
	public:
		TArray<uint32_t>                                           NewPinCodes;                                             // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureUnderwaterBase.SetPortholeState
	 */
	struct APrimalStructureUnderwaterBase_SetPortholeState_Params
	{
	public:
		int32_t                                                    index;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOpen;                                                   // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureUnderwaterBase.SetPortholeLocked
	 */
	struct APrimalStructureUnderwaterBase_SetPortholeLocked_Params
	{
	public:
		int32_t                                                    index;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bLocked;                                                 // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureUnderwaterBase.OnRep_IsFlooded
	 */
	struct APrimalStructureUnderwaterBase_OnRep_IsFlooded_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureUnderwaterBase.MultiSetPortholeStates
	 */
	struct APrimalStructureUnderwaterBase_MultiSetPortholeStates_Params
	{
	public:
		TArray<bool>                                               portholes;                                               // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureUnderwaterBase.ChangedCompartmentFloodState
	 */
	struct APrimalStructureUnderwaterBase_ChangedCompartmentFloodState_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureUnderwaterBase.BPRefreshFloodState
	 */
	struct APrimalStructureUnderwaterBase_BPRefreshFloodState_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureLadder.UpdateRetraction
	 */
	struct APrimalStructureLadder_UpdateRetraction_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureLadder.EndClimbingLadder
	 */
	struct APrimalStructureLadder_EndClimbingLadder_Params
	{
	public:
		class AShooterCharacter*                                   TheCharacter;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bServerClimbOver;                                        // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ONZT[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             ServerClimbOverLoc;                                      // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureLadder.BP_SetLaddersRetracted
	 */
	struct APrimalStructureLadder_BP_SetLaddersRetracted_Params
	{
	public:
		bool                                                       bRetract;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructurePortableLadder.UpdateLadder
	 */
	struct APrimalStructurePortableLadder_UpdateLadder_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructurePortableLadder.UpdateBoxCollisionForRetraction
	 */
	struct APrimalStructurePortableLadder_UpdateBoxCollisionForRetraction_Params
	{
	public:
		bool                                                       bRetracted;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructurePortableLadder.PlaySetupAnimation
	 */
	struct APrimalStructurePortableLadder_PlaySetupAnimation_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructurePortableLadder.BuildLadder
	 */
	struct APrimalStructurePortableLadder_BuildLadder_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureSeaMine.RefreshSeaMineTarget
	 */
	struct APrimalStructureSeaMine_RefreshSeaMineTarget_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureSeaMine.OnTriggerEndOverlap
	 */
	struct APrimalStructureSeaMine_OnTriggerEndOverlap_Params
	{
	public:
		class AActor*                                              Other;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    OtherBodyIndex;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureSeaMine.OnTriggerBeginOverlap
	 */
	struct APrimalStructureSeaMine_OnTriggerBeginOverlap_Params
	{
	public:
		class AActor*                                              Other;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    OtherBodyIndex;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFromSweep;                                              // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5GYN[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          SweepResult;                                             // 0x0018(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalStructureSeaMine.OnRep_SeaMineTarget
	 */
	struct APrimalStructureSeaMine_OnRep_SeaMineTarget_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureSeaMine.OnHit
	 */
	struct APrimalStructureSeaMine_OnHit_Params
	{
	public:
		class AActor*                                              SelfActor;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              OtherActor;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NormalImpulse;                                           // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NCP9[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          Hit;                                                     // 0x0020(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalStructureSeaMine.OnExplodingTriggerBeginOverlap
	 */
	struct APrimalStructureSeaMine_OnExplodingTriggerBeginOverlap_Params
	{
	public:
		class AActor*                                              Other;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    OtherBodyIndex;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFromSweep;                                              // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_Y5QV[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          SweepResult;                                             // 0x0018(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalStructureSeaMine.Explode
	 */
	struct APrimalStructureSeaMine_Explode_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureSign.OnRep_SignText
	 */
	struct APrimalStructureSign_OnRep_SignText_Params
	{
	public:
		class FString                                              PreviousSignText;                                        // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureWaterPipe.SetHasWater
	 */
	struct APrimalStructureWaterPipe_SetHasWater_Params
	{
	public:
		bool                                                       bNewHasWater;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureWaterPipe.RefreshWaterState
	 */
	struct APrimalStructureWaterPipe_RefreshWaterState_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureWaterPipe.RefreshHasSourceMaterials
	 */
	struct APrimalStructureWaterPipe_RefreshHasSourceMaterials_Params
	{	};

	/**
	 * Function ShooterGame.PrimalStructureWaterPipe.OnRep_HasWater
	 */
	struct APrimalStructureWaterPipe_OnRep_HasWater_Params
	{
	public:
		bool                                                       bPreviousHasWater;                                       // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureWaterPipe.BPOnWaterStateChange
	 */
	struct APrimalStructureWaterPipe_BPOnWaterStateChange_Params
	{
	public:
		bool                                                       bPipeHasWaterOrPower;                                    // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalStructureWaterPipe.BPOnRefreshPipeMaterials
	 */
	struct APrimalStructureWaterPipe_BPOnRefreshPipeMaterials_Params
	{
	public:
		bool                                                       bPipeHasWaterOrPower;                                    // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_G0ED[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UMaterialInterface*                                  NewMaterial;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.DinoListButtonWidget.OnGetContextMenuContent
	 */
	struct UDinoListButtonWidget_OnGetContextMenuContent_Params
	{
	public:
		class UWidget*                                             ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDActiveMissionWidget.ShowMissionAlert
	 */
	struct UHUDActiveMissionWidget_ShowMissionAlert_Params
	{
	public:
		EMissionAlertType                                          AlertType;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_32VP[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              AlertTitle;                                              // 0x0008(0x0010)  (Parm, ZeroConstructor)
		TArray<struct FMissionAlertEntry>                          NewEntries;                                              // 0x0018(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bInstant;                                                // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFlyoutFromTop;                                          // 0x0029(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDActiveMissionWidget.SetRacePositionText
	 */
	struct UHUDActiveMissionWidget_SetRacePositionText_Params
	{
	public:
		class FText                                                PositionText;                                            // 0x0000(0x0018)  (Parm)
	};

	/**
	 * Function ShooterGame.HUDActiveMissionWidget.SetRacePanelVisibility
	 */
	struct UHUDActiveMissionWidget_SetRacePanelVisibility_Params
	{
	public:
		ESlateVisibility                                           NewVisibility;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDActiveMissionWidget.IsMissionAlertVisible
	 */
	struct UHUDActiveMissionWidget_IsMissionAlertVisible_Params
	{
	public:
		bool                                                       bIsTop;                                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDActiveMissionWidget.HideMissionAlert
	 */
	struct UHUDActiveMissionWidget_HideMissionAlert_Params
	{
	public:
		bool                                                       bInstant;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bHideTop;                                                // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDActiveMissionWidget.HaveActiveMission
	 */
	struct UHUDActiveMissionWidget_HaveActiveMission_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDActiveMissionWidget.GetActiveMissionWidget
	 */
	struct UHUDActiveMissionWidget_GetActiveMissionWidget_Params
	{
	public:
		class APlayerController*                                   PlayerController;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UHUDActiveMissionWidget*                             ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.SetHUDElementVisibility
	 */
	struct UHUDCustomStatusWidget_SetHUDElementVisibility_Params
	{
	public:
		struct FHUDElement                                         ElementInfo;                                             // 0x0000(0x0150)  (Parm, OutParm, ReferenceParm)
		bool                                                       bIsVisible;                                              // 0x0150(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.SetHUDElementTitle
	 */
	struct UHUDCustomStatusWidget_SetHUDElementTitle_Params
	{
	public:
		struct FHUDElement                                         ElementInfo;                                             // 0x0000(0x0150)  (Parm, OutParm, ReferenceParm)
		class FString                                              NewTitle;                                                // 0x0150(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.SetHUDElementTextScale
	 */
	struct UHUDCustomStatusWidget_SetHUDElementTextScale_Params
	{
	public:
		struct FHUDElement                                         ElementInfo;                                             // 0x0000(0x0150)  (Parm, OutParm, ReferenceParm)
		float                                                      NewScale;                                                // 0x0150(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.SetHUDElementTextPadding
	 */
	struct UHUDCustomStatusWidget_SetHUDElementTextPadding_Params
	{
	public:
		struct FHUDElement                                         ElementInfo;                                             // 0x0000(0x0150)  (Parm, OutParm, ReferenceParm)
		struct FMargin                                             NewPadding;                                              // 0x0150(0x0010)  (Parm)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.SetHUDElementTextColor
	 */
	struct UHUDCustomStatusWidget_SetHUDElementTextColor_Params
	{
	public:
		struct FHUDElement                                         ElementInfo;                                             // 0x0000(0x0150)  (Parm, OutParm, ReferenceParm)
		struct FLinearColor                                        NewColor;                                                // 0x0150(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.SetHUDElementTextAlignment_Title
	 */
	struct UHUDCustomStatusWidget_SetHUDElementTextAlignment_Title_Params
	{
	public:
		struct FHUDElement                                         ElementInfo;                                             // 0x0000(0x0150)  (Parm, OutParm, ReferenceParm)
		ETextJustify                                               NewAlignment;                                            // 0x0150(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.SetHUDElementTextAlignment_Label
	 */
	struct UHUDCustomStatusWidget_SetHUDElementTextAlignment_Label_Params
	{
	public:
		struct FHUDElement                                         ElementInfo;                                             // 0x0000(0x0150)  (Parm, OutParm, ReferenceParm)
		ETextJustify                                               NewAlignment;                                            // 0x0150(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.SetHUDElementSize
	 */
	struct UHUDCustomStatusWidget_SetHUDElementSize_Params
	{
	public:
		struct FHUDElement                                         ElementInfo;                                             // 0x0000(0x0150)  (Parm, OutParm, ReferenceParm)
		struct FVector2D                                           NewSize;                                                 // 0x0150(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.SetHUDElementScale
	 */
	struct UHUDCustomStatusWidget_SetHUDElementScale_Params
	{
	public:
		struct FHUDElement                                         ElementInfo;                                             // 0x0000(0x0150)  (Parm, OutParm, ReferenceParm)
		struct FVector2D                                           NewScale;                                                // 0x0150(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.SetHUDElementProgressColor
	 */
	struct UHUDCustomStatusWidget_SetHUDElementProgressColor_Params
	{
	public:
		struct FHUDElement                                         ElementInfo;                                             // 0x0000(0x0150)  (Parm, OutParm, ReferenceParm)
		struct FLinearColor                                        NewColor;                                                // 0x0150(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.SetHUDElementProgressBarScale
	 */
	struct UHUDCustomStatusWidget_SetHUDElementProgressBarScale_Params
	{
	public:
		struct FHUDElement                                         ElementInfo;                                             // 0x0000(0x0150)  (Parm, OutParm, ReferenceParm)
		struct FVector2D                                           NewScale;                                                // 0x0150(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.SetHUDElementProgressBarPadding
	 */
	struct UHUDCustomStatusWidget_SetHUDElementProgressBarPadding_Params
	{
	public:
		struct FHUDElement                                         ElementInfo;                                             // 0x0000(0x0150)  (Parm, OutParm, ReferenceParm)
		struct FMargin                                             NewPadding;                                              // 0x0150(0x0010)  (Parm)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.SetHUDElementProgress
	 */
	struct UHUDCustomStatusWidget_SetHUDElementProgress_Params
	{
	public:
		struct FHUDElement                                         ElementInfo;                                             // 0x0000(0x0150)  (Parm, OutParm, ReferenceParm)
		float                                                      NewProgress;                                             // 0x0150(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.SetHUDElementLocation
	 */
	struct UHUDCustomStatusWidget_SetHUDElementLocation_Params
	{
	public:
		struct FHUDElement                                         ElementInfo;                                             // 0x0000(0x0150)  (Parm, OutParm, ReferenceParm)
		struct FVector2D                                           NewLocation;                                             // 0x0150(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.SetHUDElementLabelNumeric
	 */
	struct UHUDCustomStatusWidget_SetHUDElementLabelNumeric_Params
	{
	public:
		struct FHUDElement                                         ElementInfo;                                             // 0x0000(0x0150)  (Parm, OutParm, ReferenceParm)
		float                                                      LabelValue;                                              // 0x0150(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ERoundingMode                                              RoundingMode;                                            // 0x0154(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bUseGrouping;                                            // 0x0155(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_M9LM[0x2];                                   // 0x0156(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    MinIntDigits;                                            // 0x0158(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		int32_t                                                    MaxIntDigits;                                            // 0x015C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		int32_t                                                    MinFractionalDigits;                                     // 0x0160(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		int32_t                                                    MaxFractionalDigits;                                     // 0x0164(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bAddPercentSymbol;                                       // 0x0168(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.SetHUDElementLabel
	 */
	struct UHUDCustomStatusWidget_SetHUDElementLabel_Params
	{
	public:
		struct FHUDElement                                         ElementInfo;                                             // 0x0000(0x0150)  (Parm, OutParm, ReferenceParm)
		class FString                                              NewLabel;                                                // 0x0150(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.SetHUDElementImage
	 */
	struct UHUDCustomStatusWidget_SetHUDElementImage_Params
	{
	public:
		struct FHUDElement                                         ElementInfo;                                             // 0x0000(0x0150)  (Parm, OutParm, ReferenceParm)
		class UTexture2D*                                          NewIcon;                                                 // 0x0150(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSetIcon;                                                // 0x0158(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSetProgressBarFillImage;                                // 0x0159(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSetBackgroundImage;                                     // 0x015A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.SetHUDElementIconScale
	 */
	struct UHUDCustomStatusWidget_SetHUDElementIconScale_Params
	{
	public:
		struct FHUDElement                                         ElementInfo;                                             // 0x0000(0x0150)  (Parm, OutParm, ReferenceParm)
		struct FVector2D                                           NewScale;                                                // 0x0150(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.SetHUDElementIconRotation
	 */
	struct UHUDCustomStatusWidget_SetHUDElementIconRotation_Params
	{
	public:
		struct FHUDElement                                         ElementInfo;                                             // 0x0000(0x0150)  (Parm, OutParm, ReferenceParm)
		float                                                      NewAngle;                                                // 0x0150(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.SetHUDElementIconPadding
	 */
	struct UHUDCustomStatusWidget_SetHUDElementIconPadding_Params
	{
	public:
		struct FHUDElement                                         ElementInfo;                                             // 0x0000(0x0150)  (Parm, OutParm, ReferenceParm)
		struct FMargin                                             NewPadding;                                              // 0x0150(0x0010)  (Parm)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.SetHUDElementIconColor
	 */
	struct UHUDCustomStatusWidget_SetHUDElementIconColor_Params
	{
	public:
		struct FHUDElement                                         ElementInfo;                                             // 0x0000(0x0150)  (Parm, OutParm, ReferenceParm)
		struct FLinearColor                                        NewColor;                                                // 0x0150(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.SetHUDElementBackgroundImageColor
	 */
	struct UHUDCustomStatusWidget_SetHUDElementBackgroundImageColor_Params
	{
	public:
		struct FHUDElement                                         ElementInfo;                                             // 0x0000(0x0150)  (Parm, OutParm, ReferenceParm)
		struct FLinearColor                                        NewColor;                                                // 0x0150(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.SetHUDElementAnchor
	 */
	struct UHUDCustomStatusWidget_SetHUDElementAnchor_Params
	{
	public:
		struct FHUDElement                                         ElementInfo;                                             // 0x0000(0x0150)  (Parm, OutParm, ReferenceParm)
		struct FAnchors                                            NewAnchor;                                               // 0x0150(0x0010)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.IsHUDElementVisible
	 */
	struct UHUDCustomStatusWidget_IsHUDElementVisible_Params
	{
	public:
		class AActor*                                              WidgetOwner;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FHUDElement                                         WidgetInfo;                                              // 0x0008(0x0150)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0158(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDCustomStatusWidget.GetHUDElementRootWidget
	 */
	struct UHUDCustomStatusWidget_GetHUDElementRootWidget_Params
	{
	public:
		class APlayerController*                                   PlayerController;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UHUDCustomStatusWidget*                              ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDPingWidget.UpdateWidgetPingData
	 */
	struct UHUDPingWidget_UpdateWidgetPingData_Params
	{
	public:
		struct FPingData                                           WithPingData;                                            // 0x0000(0x0050)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		bool                                                       ReturnValue;                                             // 0x0050(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDPingWidget.RemovePingWidget
	 */
	struct UHUDPingWidget_RemovePingWidget_Params
	{	};

	/**
	 * Function ShooterGame.HUDPingWidget.OnPingWidgetRemoved
	 */
	struct UHUDPingWidget_OnPingWidgetRemoved_Params
	{	};

	/**
	 * Function ShooterGame.HUDPingWidget.OnPingWidgetCreated
	 */
	struct UHUDPingWidget_OnPingWidgetCreated_Params
	{	};

	/**
	 * Function ShooterGame.HUDPingWidget.OnPingUnhovered
	 */
	struct UHUDPingWidget_OnPingUnhovered_Params
	{
	public:
		class AShooterCharacter*                                   UnhoveringPlayer;                                        // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDPingWidget.OnPingResponseReceived
	 */
	struct UHUDPingWidget_OnPingResponseReceived_Params
	{
	public:
		class AShooterCharacter*                                   RespondingPlayer;                                        // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDPingWidget.OnPingHovered
	 */
	struct UHUDPingWidget_OnPingHovered_Params
	{
	public:
		class AShooterCharacter*                                   HoveringPlayer;                                          // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDPingWidget.IsPingValid
	 */
	struct UHUDPingWidget_IsPingValid_Params
	{
	public:
		struct FPingData                                           ForPingData;                                             // 0x0000(0x0050)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		bool                                                       ReturnValue;                                             // 0x0050(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDPingWidget.InitializePingWidget
	 */
	struct UHUDPingWidget_InitializePingWidget_Params
	{
	public:
		struct FPingData                                           FromPingData;                                            // 0x0000(0x0050)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	};

	/**
	 * Function ShooterGame.HUDPingWidget.HasValidPingData
	 */
	struct UHUDPingWidget_HasValidPingData_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDPingWidget.GetPingWorldLocation
	 */
	struct UHUDPingWidget_GetPingWorldLocation_Params
	{
	public:
		struct FPingData                                           FromPingData;                                            // 0x0000(0x0050)  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
		struct FVector                                             ReturnValue;                                             // 0x0050(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDPingWidget.GetPingData
	 */
	struct UHUDPingWidget_GetPingData_Params
	{
	public:
		struct FPingData                                           ReturnValue;                                             // 0x0000(0x0050)  (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, ContainsInstancedReference)
	};

	/**
	 * Function ShooterGame.HUDPointOfInterestWidget.UpdateWidgetPointOfInterestData
	 */
	struct UHUDPointOfInterestWidget_UpdateWidgetPointOfInterestData_Params
	{
	public:
		struct FPointOfInterestData                                WithPointData;                                           // 0x0000(0x0140)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0140(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDPointOfInterestWidget.IsPointOfInterestValid
	 */
	struct UHUDPointOfInterestWidget_IsPointOfInterestValid_Params
	{
	public:
		struct FPointOfInterestData                                ForPointData;                                            // 0x0000(0x0140)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0140(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDPointOfInterestWidget.IsPointOfInterestInitialized
	 */
	struct UHUDPointOfInterestWidget_IsPointOfInterestInitialized_Params
	{
	public:
		struct FPointOfInterestData                                ForPointData;                                            // 0x0000(0x0140)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0140(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDPointOfInterestWidget.InitializePointOfInterestWidget
	 */
	struct UHUDPointOfInterestWidget_InitializePointOfInterestWidget_Params
	{
	public:
		struct FPointOfInterestData                                FromPointData;                                           // 0x0000(0x0140)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.HUDPointOfInterestWidget.HasValidPointOfInterestData
	 */
	struct UHUDPointOfInterestWidget_HasValidPointOfInterestData_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDPointOfInterestWidget.GetPointOfInterestWorldRotation
	 */
	struct UHUDPointOfInterestWidget_GetPointOfInterestWorldRotation_Params
	{
	public:
		struct FPointOfInterestData                                FromPointData;                                           // 0x0000(0x0140)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FRotator                                            ReturnValue;                                             // 0x0140(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDPointOfInterestWidget.GetPointOfInterestWorldLocation
	 */
	struct UHUDPointOfInterestWidget_GetPointOfInterestWorldLocation_Params
	{
	public:
		struct FPointOfInterestData                                FromPointData;                                           // 0x0000(0x0140)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector                                             ReturnValue;                                             // 0x0140(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDPointOfInterestWidget.GetPointOfInterestTransform
	 */
	struct UHUDPointOfInterestWidget_GetPointOfInterestTransform_Params
	{
	public:
		struct FPointOfInterestData                                FromPointData;                                           // 0x0000(0x0140)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FTransform                                          ReturnValue;                                             // 0x0140(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDPointOfInterestWidget.GetPointOfInterestReachedSound
	 */
	struct UHUDPointOfInterestWidget_GetPointOfInterestReachedSound_Params
	{
	public:
		class USoundBase*                                          ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDPointOfInterestWidget.GetPointOfInterestData
	 */
	struct UHUDPointOfInterestWidget_GetPointOfInterestData_Params
	{
	public:
		struct FPointOfInterestData                                ReturnValue;                                             // 0x0000(0x0140)  (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.HUDPointOfInterestWidget.GetPointOfInterestCosmeticActorTransform
	 */
	struct UHUDPointOfInterestWidget_GetPointOfInterestCosmeticActorTransform_Params
	{
	public:
		struct FPointOfInterestData                                FromPointData;                                           // 0x0000(0x0140)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FTransform                                          ReturnValue;                                             // 0x0140(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDPointOfInterestWidget.GetPointOfInterestAddedSound
	 */
	struct UHUDPointOfInterestWidget_GetPointOfInterestAddedSound_Params
	{
	public:
		class USoundBase*                                          ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.HUDPointOfInterestWidget.DestroyPointOfInterestWidget
	 */
	struct UHUDPointOfInterestWidget_DestroyPointOfInterestWidget_Params
	{	};

	/**
	 * Function ShooterGame.HUDPointOfInterestWidget.CanActorViewPointOfInterest
	 */
	struct UHUDPointOfInterestWidget_CanActorViewPointOfInterest_Params
	{
	public:
		class AActor*                                              forActor;                                                // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5X1D[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FPointOfInterestData                                CanViewPointData;                                        // 0x0010(0x0140)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0150(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.InventoryArkCreaturesPanel.UploadedDinoSlotButtonSelected
	 */
	struct UInventoryArkCreaturesPanel_UploadedDinoSlotButtonSelected_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.InventoryArkCreaturesPanel.LocalDinoSlotButtonSelected
	 */
	struct UInventoryArkCreaturesPanel_LocalDinoSlotButtonSelected_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Inventory.SetInventoryVisibility
	 */
	struct UUI_Inventory_SetInventoryVisibility_Params
	{
	public:
		bool                                                       bVisible;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.InventoryPanelWidget.SearchTextChanged
	 */
	struct UInventoryPanelWidget_SearchTextChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.InventoryPanelWidget.OnGetSortContextMenuContent
	 */
	struct UInventoryPanelWidget_OnGetSortContextMenuContent_Params
	{
	public:
		class UWidget*                                             ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.InventoryPanelWidget.OnGamepadPressSortIcon
	 */
	struct UInventoryPanelWidget_OnGamepadPressSortIcon_Params
	{	};

	/**
	 * Function ShooterGame.LeaderboardRowWidget.SetRowContents
	 */
	struct ULeaderboardRowWidget_SetRowContents_Params
	{
	public:
		struct FLeaderboardDisplayRow                              RowData;                                                 // 0x0000(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		float                                                      ContainerWidth;                                          // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      RowHeight;                                               // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       IsHeaderRow;                                             // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ManuallySetPlayersOwnRowStyling;                         // 0x0029(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       UsePlayersOwnRowStyling;                                 // 0x002A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_DinoOrderGroups.DinoOrderGroupSelected
	 */
	struct UUI_DinoOrderGroups_DinoOrderGroupSelected_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_DinoOrderGroups.DinoClassSelected
	 */
	struct UUI_DinoOrderGroups_DinoClassSelected_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_DinoOrderGroups.DinoCharSelected
	 */
	struct UUI_DinoOrderGroups_DinoCharSelected_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_EngramsMenu.OnEngramsFilterChanged
	 */
	struct UUI_EngramsMenu_OnEngramsFilterChanged_Params
	{
	public:
		bool                                                       bIsChecked;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_EngramsMenu.OnEngramFilterChanged
	 */
	struct UUI_EngramsMenu_OnEngramFilterChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_EngramsMenu.EngramSelected
	 */
	struct UUI_EngramsMenu_EngramSelected_Params
	{
	public:
		class UDataListEntryButton*                                theButton;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_EngramsMenu.EngramDoubleClicked
	 */
	struct UUI_EngramsMenu_EngramDoubleClicked_Params
	{
	public:
		class UDataListEntryButton*                                theButton;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_MissionList.OnMissionFilterChanged
	 */
	struct UUI_MissionList_OnMissionFilterChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_OptionsMenu.OptionsGraphTick
	 */
	struct UUI_OptionsMenu_OptionsGraphTick_Params
	{
	public:
		struct FGeometry                                           MyGeometry;                                              // 0x0000(0x0034)  (Parm, IsPlainOldData, NoDestructor)
		float                                                      InDeltaTime;                                             // 0x0034(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_OptionsMenu.OnWidthChanged
	 */
	struct UUI_OptionsMenu_OnWidthChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_OptionsMenu.OnResolutionsComboBoxSelectionChanged
	 */
	struct UUI_OptionsMenu_OnResolutionsComboBoxSelectionChanged_Params
	{
	public:
		class FString                                              SelectedItem;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		ESelectInfo                                                SelectionType;                                           // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_OptionsMenu.OnHeightChanged
	 */
	struct UUI_OptionsMenu_OnHeightChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_OptionsMenu.OnGraphicsQualityComboBoxChanged
	 */
	struct UUI_OptionsMenu_OnGraphicsQualityComboBoxChanged_Params
	{
	public:
		class FString                                              SelectedItem;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.UI_OptionsMenu.OnGraphicsPresetValueChanged
	 */
	struct UUI_OptionsMenu_OnGraphicsPresetValueChanged_Params
	{	};

	/**
	 * Function ShooterGame.UI_OptionsMenu_UWP.OptionsGraphTick
	 */
	struct UUI_OptionsMenu_UWP_OptionsGraphTick_Params
	{
	public:
		struct FGeometry                                           MyGeometry;                                              // 0x0000(0x0034)  (Parm, IsPlainOldData, NoDestructor)
		float                                                      InDeltaTime;                                             // 0x0034(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_OptionsMenu_UWP.OnWidthChanged
	 */
	struct UUI_OptionsMenu_UWP_OnWidthChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_OptionsMenu_UWP.OnViewDistanceComboBoxSelectionChanged
	 */
	struct UUI_OptionsMenu_UWP_OnViewDistanceComboBoxSelectionChanged_Params
	{
	public:
		class FString                                              SelectedItem;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		ESelectInfo                                                SelectionType;                                           // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_OptionsMenu_UWP.OnResolutionsComboBoxSelectionChanged
	 */
	struct UUI_OptionsMenu_UWP_OnResolutionsComboBoxSelectionChanged_Params
	{
	public:
		class FString                                              SelectedItem;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		ESelectInfo                                                SelectionType;                                           // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_OptionsMenu_UWP.OnResolutionScaleChanged
	 */
	struct UUI_OptionsMenu_UWP_OnResolutionScaleChanged_Params
	{
	public:
		float                                                      SliderValue;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_OptionsMenu_UWP.OnHeightChanged
	 */
	struct UUI_OptionsMenu_UWP_OnHeightChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_OptionsMenu_UWP.OnGraphicsQualityComboBoxChanged
	 */
	struct UUI_OptionsMenu_UWP_OnGraphicsQualityComboBoxChanged_Params
	{
	public:
		class FString                                              SelectedItem;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.UI_OptionsMenu_UWP.OnGraphicsPresetValueChanged
	 */
	struct UUI_OptionsMenu_UWP_OnGraphicsPresetValueChanged_Params
	{	};

	/**
	 * Function ShooterGame.UI_SurvivorProfile.OnSubtitlesCheckboxChanged
	 */
	struct UUI_SurvivorProfile_OnSubtitlesCheckboxChanged_Params
	{
	public:
		bool                                                       InNewState;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_SurvivorProfile.OnNoteNameFilterChanged
	 */
	struct UUI_SurvivorProfile_OnNoteNameFilterChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_SurvivorProfile.HideDossier
	 */
	struct UUI_SurvivorProfile_HideDossier_Params
	{	};

	/**
	 * Function ShooterGame.UI_TamingList.SearchTextChanged
	 */
	struct UUI_TamingList_SearchTextChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_TribeManager.TribeWarEntryButtonSelected
	 */
	struct UUI_TribeManager_TribeWarEntryButtonSelected_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_TribeManager.TribeAllianceMemberButtonSelected
	 */
	struct UUI_TribeManager_TribeAllianceMemberButtonSelected_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_TribeManager.TribeAllianceEntryButtonSelected
	 */
	struct UUI_TribeManager_TribeAllianceEntryButtonSelected_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_TribeManager.RankGroupButtonSelected
	 */
	struct UUI_TribeManager_RankGroupButtonSelected_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_TribeManager.PlayerEntryButtonSelected
	 */
	struct UUI_TribeManager_PlayerEntryButtonSelected_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_TribeManager.OnGroupRankSelected
	 */
	struct UUI_TribeManager_OnGroupRankSelected_Params
	{
	public:
		class FString                                              SelectedItem;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		ESelectInfo                                                SelectionType;                                           // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_AdminMangment.OnTextCommittedWhiteListed
	 */
	struct UUI_AdminMangment_OnTextCommittedWhiteListed_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		ETextCommit                                                CommitMethod;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_AdminMangment.OnTextCommittedMessageOfTheDay
	 */
	struct UUI_AdminMangment_OnTextCommittedMessageOfTheDay_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		ETextCommit                                                CommitMethod;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_AdminMangment.OnTextCommittedManualBan
	 */
	struct UUI_AdminMangment_OnTextCommittedManualBan_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		ETextCommit                                                CommitMethod;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_AdminMangment.OnTextCommitted
	 */
	struct UUI_AdminMangment_OnTextCommitted_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		ETextCommit                                                CommitMethod;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_AdminMangment.OnTextChangedMessageOfTheDay
	 */
	struct UUI_AdminMangment_OnTextChangedMessageOfTheDay_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_AdminMangment.OnTextChangedManulaBan
	 */
	struct UUI_AdminMangment_OnTextChangedManulaBan_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_AdminMangment.OnTextChangedManualWhiteLised
	 */
	struct UUI_AdminMangment_OnTextChangedManualWhiteLised_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_AdminMangment.OnTextChanged
	 */
	struct UUI_AdminMangment_OnTextChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_AllPlayersList.OnTribeNameFilterChanged
	 */
	struct UUI_AllPlayersList_OnTribeNameFilterChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_AllPlayersList.OnPlayerNameFilterChanged
	 */
	struct UUI_AllPlayersList_OnPlayerNameFilterChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_ChangeTransponderFreqencyEntry.HandleFilterStringTextChanged
	 */
	struct UUI_ChangeTransponderFreqencyEntry_HandleFilterStringTextChanged_Params
	{
	public:
		class FText                                                NewText;                                                 // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_ChatBox.HandleChatTextCommitted
	 */
	struct UUI_ChatBox_HandleChatTextCommitted_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		ETextCommit                                                CommitMethod;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_ChatBox.HandleChatTextChanged
	 */
	struct UUI_ChatBox_HandleChatTextChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_ConsoleDedicated.PlayerDoubleClicked
	 */
	struct UUI_ConsoleDedicated_PlayerDoubleClicked_Params
	{
	public:
		class UDataListEntryButton*                                theButton;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_ConsoleDedicated.OnTextChanged
	 */
	struct UUI_ConsoleDedicated_OnTextChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_ConsoleDedicated.HandleTextMessageTextCommitted
	 */
	struct UUI_ConsoleDedicated_HandleTextMessageTextCommitted_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		ETextCommit                                                CommitMethod;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Cooking.RefreshItemLists
	 */
	struct UUI_Cooking_RefreshItemLists_Params
	{	};

	/**
	 * Function ShooterGame.UI_Cooking.OnRedSliderValueChanged
	 */
	struct UUI_Cooking_OnRedSliderValueChanged_Params
	{
	public:
		float                                                      SliderValue;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Cooking.OnItemNameChanged
	 */
	struct UUI_Cooking_OnItemNameChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_Cooking.OnItemDescriptionChanged
	 */
	struct UUI_Cooking_OnItemDescriptionChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_Cooking.OnGreenSliderValueChanged
	 */
	struct UUI_Cooking_OnGreenSliderValueChanged_Params
	{
	public:
		float                                                      SliderValue;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Cooking.OnBlueSliderValueChanged
	 */
	struct UUI_Cooking_OnBlueSliderValueChanged_Params
	{
	public:
		float                                                      SliderValue;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Cooking.MyInventoryItemDoubleClicked
	 */
	struct UUI_Cooking_MyInventoryItemDoubleClicked_Params
	{
	public:
		class UDataListEntryButton*                                theButton;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_DyeItem.DyeItemDoubleClicked
	 */
	struct UUI_DyeItem_DyeItemDoubleClicked_Params
	{
	public:
		class UDataListEntryButton*                                theButton;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_GenericConfirmationDialog.OnConfirmationDialogClosedEvent__DelegateSignature
	 */
	struct UUI_GenericConfirmationDialog_OnConfirmationDialogClosedEvent__DelegateSignature_Params
	{
	public:
		bool                                                       bAccept;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Hairstyle.OnHeadHairStyleButtonClicked
	 */
	struct UUI_Hairstyle_OnHeadHairStyleButtonClicked_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Hairstyle.OnHairStyleAccepted__DelegateSignature
	 */
	struct UUI_Hairstyle_OnHairStyleAccepted__DelegateSignature_Params
	{
	public:
		int32_t                                                    newHeadHairIndex;                                        // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    newFacialHairIndex;                                      // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      NewHeadHairPercent;                                      // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      NewFacialHairPercent;                                    // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    HeadHairDyeID1;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    HeadHairDyeID2;                                          // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    FacialHairDyeID1;                                        // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    FacialHairDyeID2;                                        // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Hairstyle.OnFacialHairStyleButtonClicked
	 */
	struct UUI_Hairstyle_OnFacialHairStyleButtonClicked_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Hairstyle.ClearHairButtonClicked__DelegateSignature
	 */
	struct UUI_Hairstyle_ClearHairButtonClicked__DelegateSignature_Params
	{	};

	/**
	 * Function ShooterGame.UI_HexagonConversion.TradableItemSelected
	 */
	struct UUI_HexagonConversion_TradableItemSelected_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_HexagonConversion.PopulateAvailableTradeItems
	 */
	struct UUI_HexagonConversion_PopulateAvailableTradeItems_Params
	{
	public:
		TArray<bool>                                               AvailableItems;                                          // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.UI_HexagonConversion.OnSearchTextChanged
	 */
	struct UUI_HexagonConversion_OnSearchTextChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_HexagonConversion.HideItem
	 */
	struct UUI_HexagonConversion_HideItem_Params
	{
	public:
		int32_t                                                    ItemIndex;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_HexagonConversion.GetWidgetIndexOfAssociatedItemIndex
	 */
	struct UUI_HexagonConversion_GetWidgetIndexOfAssociatedItemIndex_Params
	{
	public:
		int32_t                                                    ItemIndex;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_HexagonConversion.GetCurrentlySelectedTradeItemWidgetIndex
	 */
	struct UUI_HexagonConversion_GetCurrentlySelectedTradeItemWidgetIndex_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_HexagonConversion.FilterAvailableTradeItems
	 */
	struct UUI_HexagonConversion_FilterAvailableTradeItems_Params
	{
	public:
		TArray<bool>                                               AvailableTradableItems;                                  // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              FilterText;                                              // 0x0010(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.UI_HostSession.SlotButtonSelected
	 */
	struct UUI_HostSession_SlotButtonSelected_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_HostSession.OnSliderValueChanged
	 */
	struct UUI_HostSession_OnSliderValueChanged_Params
	{
	public:
		float                                                      SliderValue;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_HostSession.OnSessionPasswordTextCommitted
	 */
	struct UUI_HostSession_OnSessionPasswordTextCommitted_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		ETextCommit                                                CommitMethod;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_HostSession.OnSessionPasswordTextChanged
	 */
	struct UUI_HostSession_OnSessionPasswordTextChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_HostSession.OnSessionNameTextCommitted
	 */
	struct UUI_HostSession_OnSessionNameTextCommitted_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		ETextCommit                                                CommitMethod;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_HostSession.OnSessionNameTextChanged
	 */
	struct UUI_HostSession_OnSessionNameTextChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_HostSession.OnNumericValueCommitted
	 */
	struct UUI_HostSession_OnNumericValueCommitted_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		ETextCommit                                                CommitMethod;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_HostSession.OnDeleteMapServerDataButtonClicked
	 */
	struct UUI_HostSession_OnDeleteMapServerDataButtonClicked_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_HostSession.OnDeleteMapSaveDataButtonClicked
	 */
	struct UUI_HostSession_OnDeleteMapSaveDataButtonClicked_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_HostSession.OnAdminPasswordTextCommitted
	 */
	struct UUI_HostSession_OnAdminPasswordTextCommitted_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		ETextCommit                                                CommitMethod;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_HostSession.OnAdminPasswordTextChanged
	 */
	struct UUI_HostSession_OnAdminPasswordTextChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_HostSession.ModSelected
	 */
	struct UUI_HostSession_ModSelected_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_HostSession.EngramDoubleClicked
	 */
	struct UUI_HostSession_EngramDoubleClicked_Params
	{
	public:
		class UDataListEntryButton*                                theButton;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_HostSession.ActiveModSelected
	 */
	struct UUI_HostSession_ActiveModSelected_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Hub.RecenterHub
	 */
	struct UUI_Hub_RecenterHub_Params
	{	};

	/**
	 * Function ShooterGame.UI_HudOverlay.ShowOverlayTooltip
	 */
	struct UUI_HudOverlay_ShowOverlayTooltip_Params
	{
	public:
		class AShooterPlayerController*                            HUDOwner;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObject*                                             SponsorObject;                                           // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ToolTipPrefab;                                           // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ScreenPos;                                               // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EAlignHorizontalUI                                         HorizontalAlignment;                                     // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EAlignVerticalUI                                           VerticalAlignment;                                       // 0x0021(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZIXC[0x2];                                   // 0x0022(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector2D                                           Padding;                                                 // 0x0024(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector2D                                           OverlayScale;                                            // 0x002C(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bRetainScreenProjectionFromWorld;                        // 0x0034(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7Q4N[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             ScreenProjectionWorldPosition;                           // 0x0038(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ScreenProjectionPositionOffset;                          // 0x0044(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_LeaderboardWidget.SetRows
	 */
	struct UUI_LeaderboardWidget_SetRows_Params
	{
	public:
		class UClass*                                              LeaderboardRowWidget;                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLeaderboardDisplayRow                              HeaderRow;                                               // 0x0008(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		TArray<struct FLeaderboardDisplayRow>                      Rows;                                                    // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_LeaderboardWidget.SetLeaderboardWidgetVisible
	 */
	struct UUI_LeaderboardWidget_SetLeaderboardWidgetVisible_Params
	{
	public:
		bool                                                       bIsVisible;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_ListCharacterData.OnArkCharacterPlayerDataChosen__DelegateSignature
	 */
	struct UUI_ListCharacterData_OnArkCharacterPlayerDataChosen__DelegateSignature_Params
	{
	public:
		TArray<unsigned char>                                      ChoosenPlayerDataBytes;                                  // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.UI_ListCharacterData.CharacterSlotButtonSelected
	 */
	struct UUI_ListCharacterData_CharacterSlotButtonSelected_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_ListSessions.SlotButtonSelected
	 */
	struct UUI_ListSessions_SlotButtonSelected_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_ListSessions.RefreshSlotButtons
	 */
	struct UUI_ListSessions_RefreshSlotButtons_Params
	{	};

	/**
	 * Function ShooterGame.UI_ListSessions.OnTextCommitted
	 */
	struct UUI_ListSessions_OnTextCommitted_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		ETextCommit                                                CommitMethod;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_ListSessions.OnTextChanged
	 */
	struct UUI_ListSessions_OnTextChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_ListSessions.OnSortComboBoxSelectionChanged
	 */
	struct UUI_ListSessions_OnSortComboBoxSelectionChanged_Params
	{
	public:
		class FString                                              SelectedItem;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		ESelectInfo                                                SelectionType;                                           // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_ListSessions.OnServersFilterComboBoxSelectionChanged
	 */
	struct UUI_ListSessions_OnServersFilterComboBoxSelectionChanged_Params
	{
	public:
		class FString                                              SelectedItem;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		ESelectInfo                                                SelectionType;                                           // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_ListSessions.OnMapComboBoxSelectionChanged
	 */
	struct UUI_ListSessions_OnMapComboBoxSelectionChanged_Params
	{
	public:
		class FString                                              SelectedItem;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		ESelectInfo                                                SelectionType;                                           // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_ListSessions.OnGameModeComboBoxSelectionChanged
	 */
	struct UUI_ListSessions_OnGameModeComboBoxSelectionChanged_Params
	{
	public:
		class FString                                              SelectedItem;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		ESelectInfo                                                SelectionType;                                           // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_ListSessions.OnCheckBoxChecked
	 */
	struct UUI_ListSessions_OnCheckBoxChecked_Params
	{
	public:
		bool                                                       InNewState;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_ListSessions.OnAutoFavoriteChecked
	 */
	struct UUI_ListSessions_OnAutoFavoriteChecked_Params
	{
	public:
		bool                                                       InNewState;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_MainMenu.TotalConversionSelected
	 */
	struct UUI_MainMenu_TotalConversionSelected_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_MainMenu.HandleDLCInstalledEvent
	 */
	struct UUI_MainMenu_HandleDLCInstalledEvent_Params
	{	};

	/**
	 * Function ShooterGame.UI_MapMarkersEntry.OnTextCommitted
	 */
	struct UUI_MapMarkersEntry_OnTextCommitted_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		ETextCommit                                                CommitMethod;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_MapMarkersEntry.OnTextChanged
	 */
	struct UUI_MapMarkersEntry_OnTextChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_MapMarkersEntry.OnColorSliderValueChanged
	 */
	struct UUI_MapMarkersEntry_OnColorSliderValueChanged_Params
	{
	public:
		float                                                      SliderValue;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_MapMarkersEntry.MarkerButtonSelected
	 */
	struct UUI_MapMarkersEntry_MarkerButtonSelected_Params
	{
	public:
		class UWidget*                                             theWidget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_MultiUse.ClickedEntry
	 */
	struct UUI_MultiUse_ClickedEntry_Params
	{
	public:
		class UWidget*                                             clickedWidget;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_ProceduralSettings.OnTextCommitted
	 */
	struct UUI_ProceduralSettings_OnTextCommitted_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		ETextCommit                                                CommitMethod;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_ProceduralSettings.OnPresetSelectionChanged
	 */
	struct UUI_ProceduralSettings_OnPresetSelectionChanged_Params
	{
	public:
		class FString                                              SelectedItem;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		ESelectInfo                                                SelectionType;                                           // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_SavePainting.HandleFilterStringTextCommitted
	 */
	struct UUI_SavePainting_HandleFilterStringTextCommitted_Params
	{
	public:
		class FText                                                NewText;                                                 // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		ETextCommit                                                CommitMethod;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_SavePainting.HandleFilterStringTextChanged
	 */
	struct UUI_SavePainting_HandleFilterStringTextChanged_Params
	{
	public:
		class FText                                                NewText;                                                 // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_Subtitles.SetSubtitleFromText
	 */
	struct UUI_Subtitles_SetSubtitleFromText_Params
	{
	public:
		class FText                                                SubtitleTextLine;                                        // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_Subtitles.SetSubtitleFromStringWithDurationAndIcon
	 */
	struct UUI_Subtitles_SetSubtitleFromStringWithDurationAndIcon_Params
	{
	public:
		class FString                                              SubtitleTextLine;                                        // 0x0000(0x0010)  (Parm, ZeroConstructor)
		float                                                      AutoHideAfterSeconds;                                    // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CVKC[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UMaterialInterface*                                  DialogueIcon;                                            // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Subtitles.SetSubtitleFromString
	 */
	struct UUI_Subtitles_SetSubtitleFromString_Params
	{
	public:
		class FString                                              SubtitleTextLine;                                        // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.UI_Subtitles.SetSubtitleFromSoundWave
	 */
	struct UUI_Subtitles_SetSubtitleFromSoundWave_Params
	{
	public:
		class USoundWave*                                          SoundWave;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      AutoHideAfterSeconds;                                    // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5IW0[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UMaterialInterface*                                  DialogueIcon;                                            // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Subtitles.SetSubtitleFromSoundCue
	 */
	struct UUI_Subtitles_SetSubtitleFromSoundCue_Params
	{
	public:
		class USoundCue*                                           SoundCueWithSubtitles;                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      AutoHideAfterSeconds;                                    // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_PCU3[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UMaterialInterface*                                  DialogueIcon;                                            // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Subtitles.SetIconMaterialParams
	 */
	struct UUI_Subtitles_SetIconMaterialParams_Params
	{
	public:
		TArray<struct FNameScalarPair>                             scalarParams;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<struct FNameColorPair>                              colorParams;                                             // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class UTexture2D*                                          CurrentAT;                                               // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Subtitles.ProcessDynamicMaterialForDialogueIconDelegate__DelegateSignature
	 */
	struct UUI_Subtitles_ProcessDynamicMaterialForDialogueIconDelegate__DelegateSignature_Params
	{
	public:
		class FName                                                MaterialFName;                                           // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialInstanceDynamic*                            LoadedMaterial;                                          // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Subtitles.OnShowSubtitles
	 */
	struct UUI_Subtitles_OnShowSubtitles_Params
	{	};

	/**
	 * Function ShooterGame.UI_Subtitles.OnHideSubtitles
	 */
	struct UUI_Subtitles_OnHideSubtitles_Params
	{	};

	/**
	 * Function ShooterGame.UI_Subtitles.IsIconVisible
	 */
	struct UUI_Subtitles_IsIconVisible_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Subtitles.IsCurrentIconEqualToGivenIcon
	 */
	struct UUI_Subtitles_IsCurrentIconEqualToGivenIcon_Params
	{
	public:
		class UMaterialInterface*                                  DialogueIcon;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_Subtitles.HideSubtitles
	 */
	struct UUI_Subtitles_HideSubtitles_Params
	{	};

	/**
	 * Function ShooterGame.UI_Subtitles.ForceSetSubtitlesManualTime
	 */
	struct UUI_Subtitles_ForceSetSubtitlesManualTime_Params
	{
	public:
		float                                                      ManualGlobalStartTime;                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_TextEntry.OnTextCommitted
	 */
	struct UUI_TextEntry_OnTextCommitted_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		ETextCommit                                                CommitMethod;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_TextEntry.OnTextChanged
	 */
	struct UUI_TextEntry_OnTextChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.UI_TribeWarEntry.OnTextCommitted
	 */
	struct UUI_TribeWarEntry_OnTextCommitted_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		ETextCommit                                                CommitMethod;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.UI_TribeWarEntry.OnTextChanged
	 */
	struct UUI_TribeWarEntry_OnTextChanged_Params
	{
	public:
		class FText                                                Text;                                                    // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalWorldBuffCustomImplement.UpdateBuffCustomPersistantData
	 */
	struct UPrimalWorldBuffCustomImplement_UpdateBuffCustomPersistantData_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWorldBuffCustomImplement.Tick
	 */
	struct UPrimalWorldBuffCustomImplement_Tick_Params
	{
	public:
		float                                                      DeltaSeconds;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWorldBuffCustomImplement.PreDeconstruction
	 */
	struct UPrimalWorldBuffCustomImplement_PreDeconstruction_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWorldBuffCustomImplement.PostConstruction
	 */
	struct UPrimalWorldBuffCustomImplement_PostConstruction_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWorldBuffCustomImplement.GetWorld
	 */
	struct UPrimalWorldBuffCustomImplement_GetWorld_Params
	{
	public:
		class UWorld*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWorldBuffCustomImplement.GetOwner
	 */
	struct UPrimalWorldBuffCustomImplement_GetOwner_Params
	{
	public:
		class UObject*                                             ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWorldBuffCustomImplement.BuffTimerRefreshed
	 */
	struct UPrimalWorldBuffCustomImplement_BuffTimerRefreshed_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWorldBuffCustomImplement.BuffStackIncreased
	 */
	struct UPrimalWorldBuffCustomImplement_BuffStackIncreased_Params
	{
	public:
		int32_t                                                    newStackCount;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWorldBuffCustomImplement.BuffStackDecrease
	 */
	struct UPrimalWorldBuffCustomImplement_BuffStackDecrease_Params
	{
	public:
		int32_t                                                    newStackCount;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWorldBuffData.UnsuspendWorldBuffs
	 */
	struct UPrimalWorldBuffData_UnsuspendWorldBuffs_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWorldBuffData.SuspendWorldBuffs
	 */
	struct UPrimalWorldBuffData_SuspendWorldBuffs_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWorldBuffData.RemoveWorldBuff
	 */
	struct UPrimalWorldBuffData_RemoveWorldBuff_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                WorldBuffIdentifier;                                     // 0x0008(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWorldBuffData.GetWorldBuffSet
	 */
	struct UPrimalWorldBuffData_GetWorldBuffSet_Params
	{
	public:
		class FName                                                WorldBuffSetName;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FWorldBuffDefinition>                        ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.PrimalWorldBuffData.GetWorldBuffDefinitionByName
	 */
	struct UPrimalWorldBuffData_GetWorldBuffDefinitionByName_Params
	{
	public:
		class FName                                                WorldBuffIdentifier;                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FWorldBuffDefinition                                outWorldBuffDefinition;                                  // 0x0008(0x00D8)  (Parm, OutParm)
		bool                                                       ReturnValue;                                             // 0x00E0(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWorldBuffData.GetWorldBuffData
	 */
	struct UPrimalWorldBuffData_GetWorldBuffData_Params
	{
	public:
		class UPrimalWorldBuffData*                                ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWorldBuffData.CanActivateWorldBuff
	 */
	struct UPrimalWorldBuffData_CanActivateWorldBuff_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                WorldBuffIdentifier;                                     // 0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class FName>                                        OutWorldBuffsToBeReplaced;                               // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWorldBuffData.AddWorldBuff
	 */
	struct UPrimalWorldBuffData_AddWorldBuff_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                WorldBuffIdentifier;                                     // 0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    StacksToGive;                                            // 0x0010(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWorldModifier.TrySublevelSwaps
	 */
	struct APrimalWorldModifier_TrySublevelSwaps_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWorldModifier.TryStaticMeshActorReskin
	 */
	struct APrimalWorldModifier_TryStaticMeshActorReskin_Params
	{
	public:
		class AStaticMeshActor*                                    ForStaticMeshActor;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FSublevelOverrideGroup                              CurrentSublevelOverrideGroup;                            // 0x0008(0x0038)  (Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.PrimalWorldModifier.TryFoliageReskin
	 */
	struct APrimalWorldModifier_TryFoliageReskin_Params
	{
	public:
		class AInstancedFoliageActor*                              ForFoliageActor;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWorldModifier.RescanForMapStaticMeshes
	 */
	struct APrimalWorldModifier_RescanForMapStaticMeshes_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWorldModifier.RescanForFoliage
	 */
	struct APrimalWorldModifier_RescanForFoliage_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWorldModifier.NotifyOnFoliageSkinned__DelegateSignature
	 */
	struct APrimalWorldModifier_NotifyOnFoliageSkinned__DelegateSignature_Params
	{
	public:
		class UHierarchicalInstancedStaticMeshComponent*           FoliageInstance;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWorldModifier.IsAllowedOnCurrentMap
	 */
	struct APrimalWorldModifier_IsAllowedOnCurrentMap_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWorldModifier.HasPriority
	 */
	struct APrimalWorldModifier_HasPriority_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWorldModifier.GetCurrentSublevelOverrideGroup
	 */
	struct APrimalWorldModifier_GetCurrentSublevelOverrideGroup_Params
	{
	public:
		struct FSublevelOverrideGroup                              outSublevelOverrideGroup;                                // 0x0000(0x0038)  (Parm, OutParm)
	};

	/**
	 * Function ShooterGame.PrimalWorldModifier.DoRescanForSublevelLoaded
	 */
	struct APrimalWorldModifier_DoRescanForSublevelLoaded_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWorldModifier.BPSkinFoliage
	 */
	struct APrimalWorldModifier_BPSkinFoliage_Params
	{
	public:
		class UHierarchicalInstancedStaticMeshComponent*           FoliageInstance;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWorldModifier.BPPreFoliageScan
	 */
	struct APrimalWorldModifier_BPPreFoliageScan_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWorldModifier.BPPostInitializationHasPriority
	 */
	struct APrimalWorldModifier_BPPostInitializationHasPriority_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWorldModifier.BPPostFoliageScan
	 */
	struct APrimalWorldModifier_BPPostFoliageScan_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWorldSettings.IsAllowedInLevelBounds
	 */
	struct APrimalWorldSettings_IsAllowedInLevelBounds_Params
	{
	public:
		struct FVector                                             AtLocat;                                                 // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWorldSettings.GetMissionMetaData
	 */
	struct APrimalWorldSettings_GetMissionMetaData_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FMissionMetaData                                    Value;                                                   // 0x0008(0x0010)  (Parm, OutParm)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacterMovement.UpdateAnalogueInputModifier
	 */
	struct UShooterCharacterMovement_UpdateAnalogueInputModifier_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCharacterMovement.SetCurrentAcceleration
	 */
	struct UShooterCharacterMovement_SetCurrentAcceleration_Params
	{
	public:
		struct FVector                                             NewAcceleration;                                         // 0x0000(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacterMovement.SetClimbingTarget
	 */
	struct UShooterCharacterMovement_SetClimbingTarget_Params
	{
	public:
		struct FVector                                             TargetPosition;                                          // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            TargetRotation;                                          // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacterMovement.IsWaterWalking
	 */
	struct UShooterCharacterMovement_IsWaterWalking_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacterMovement.BPApplyVelocityBraking
	 */
	struct UShooterCharacterMovement_BPApplyVelocityBraking_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Friction;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BrakingDeceleration;                                     // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             InOutVelocity;                                           // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacterMovement.BP_PhysicsRotation
	 */
	struct UShooterCharacterMovement_BP_PhysicsRotation_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacterMovement.BP_PerformMovement
	 */
	struct UShooterCharacterMovement_BP_PerformMovement_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCharacterMovement.BP_GetAnalogueInputModifier
	 */
	struct UShooterCharacterMovement_BP_GetAnalogueInputModifier_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.WhatIsMyTarget
	 */
	struct UShooterCheatManager_WhatIsMyTarget_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.VisualizeWorldGeo
	 */
	struct UShooterCheatManager_VisualizeWorldGeo_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.VisualizeWorld
	 */
	struct UShooterCheatManager_VisualizeWorld_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.VisualizeClass
	 */
	struct UShooterCheatManager_VisualizeClass_Params
	{
	public:
		class FString                                              ClassIn;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    MaxTotal;                                                // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.VerifyTransferInventory
	 */
	struct UShooterCheatManager_VerifyTransferInventory_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.UnlockEngram
	 */
	struct UShooterCheatManager_UnlockEngram_Params
	{
	public:
		class FString                                              ItemClassName;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.UnlockEmote
	 */
	struct UShooterCheatManager_UnlockEmote_Params
	{
	public:
		class FString                                              EmoteName;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.UnlockAllExplorerNotes
	 */
	struct UShooterCheatManager_UnlockAllExplorerNotes_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.UnlockAchievement
	 */
	struct UShooterCheatManager_UnlockAchievement_Params
	{
	public:
		class FString                                              AchievementID;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.UnbanPlayer
	 */
	struct UShooterCheatManager_UnbanPlayer_Params
	{
	public:
		class FString                                              PlayerSteamName;                                         // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.TTC
	 */
	struct UShooterCheatManager_TTC_Params
	{
	public:
		class FString                                              DinoID;                                                  // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.TribeStructureAudit
	 */
	struct UShooterCheatManager_TribeStructureAudit_Params
	{
	public:
		int32_t                                                    TribeTeamID;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.TribeMessage
	 */
	struct UShooterCheatManager_TribeMessage_Params
	{
	public:
		int32_t                                                    TribeTeamID;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CRQS[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Message;                                                 // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.TribeDinoAudit
	 */
	struct UShooterCheatManager_TribeDinoAudit_Params
	{
	public:
		int32_t                                                    TribeTeamID;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.TransferImprints
	 */
	struct UShooterCheatManager_TransferImprints_Params
	{
	public:
		int32_t                                                    oldPlayerId;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    newPlayerId;                                             // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              NewImprinterName;                                        // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.TPName
	 */
	struct UShooterCheatManager_TPName_Params
	{
	public:
		class FString                                              PlayerName;                                              // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.TPCoords
	 */
	struct UShooterCheatManager_TPCoords_Params
	{
	public:
		float                                                      lat;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      lon;                                                     // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Z;                                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.TP
	 */
	struct UShooterCheatManager_TP_Params
	{
	public:
		class FString                                              LocationName;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ToggleLowGravSpin
	 */
	struct UShooterCheatManager_ToggleLowGravSpin_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ToggleLocation
	 */
	struct UShooterCheatManager_ToggleLocation_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ToggleHud
	 */
	struct UShooterCheatManager_ToggleHud_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ToggleGun
	 */
	struct UShooterCheatManager_ToggleGun_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ToggleFreezeStatusValues
	 */
	struct UShooterCheatManager_ToggleFreezeStatusValues_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ToggleDamageNumbers
	 */
	struct UShooterCheatManager_ToggleDamageNumbers_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ToggleDamageLogging
	 */
	struct UShooterCheatManager_ToggleDamageLogging_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ToggleClawStepping
	 */
	struct UShooterCheatManager_ToggleClawStepping_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.TOD
	 */
	struct UShooterCheatManager_TOD_Params
	{
	public:
		class FString                                              timeString;                                              // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.TestSteamRefreshItems
	 */
	struct UShooterCheatManager_TestSteamRefreshItems_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.TeleportToPlayerName
	 */
	struct UShooterCheatManager_TeleportToPlayerName_Params
	{
	public:
		class FString                                              PlayerName;                                              // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.TeleportToPlayer
	 */
	struct UShooterCheatManager_TeleportToPlayer_Params
	{
	public:
		int64_t                                                    PlayerId;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.TeleportToCreature
	 */
	struct UShooterCheatManager_TeleportToCreature_Params
	{
	public:
		class FString                                              DinoID;                                                  // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.TeleportToActorLocation
	 */
	struct UShooterCheatManager_TeleportToActorLocation_Params
	{
	public:
		class FString                                              ActorName;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.TeleportToActiveHorde
	 */
	struct UShooterCheatManager_TeleportToActiveHorde_Params
	{
	public:
		int32_t                                                    EventIndex;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.TeleportPlayerNameToMe
	 */
	struct UShooterCheatManager_TeleportPlayerNameToMe_Params
	{
	public:
		class FString                                              PlayerName;                                              // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.TeleportPlayerIDToMe
	 */
	struct UShooterCheatManager_TeleportPlayerIDToMe_Params
	{
	public:
		int64_t                                                    PlayerId;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.TeleportCreatureToMe
	 */
	struct UShooterCheatManager_TeleportCreatureToMe_Params
	{
	public:
		class FString                                              DinoID;                                                  // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.TCTM
	 */
	struct UShooterCheatManager_TCTM_Params
	{
	public:
		class FString                                              DinoID;                                                  // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.TameAOE
	 */
	struct UShooterCheatManager_TameAOE_Params
	{
	public:
		float                                                      Radius;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      affinity;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      effectiveness;                                           // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.TakeTribe
	 */
	struct UShooterCheatManager_TakeTribe_Params
	{
	public:
		int32_t                                                    TribeTeamID;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.TakeAllStructure
	 */
	struct UShooterCheatManager_TakeAllStructure_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.TakeAllDino
	 */
	struct UShooterCheatManager_TakeAllDino_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SummonTamed
	 */
	struct UShooterCheatManager_SummonTamed_Params
	{
	public:
		class FString                                              ClassName;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.Suicide
	 */
	struct UShooterCheatManager_Suicide_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.StartSaveBackup
	 */
	struct UShooterCheatManager_StartSaveBackup_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.StartNearestHorde
	 */
	struct UShooterCheatManager_StartNearestHorde_Params
	{
	public:
		class FName                                                HordeType;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    DifficultyLevel;                                         // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.StartMissionWithMetaData
	 */
	struct UShooterCheatManager_StartMissionWithMetaData_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.StartMission
	 */
	struct UShooterCheatManager_StartMission_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SPI
	 */
	struct UShooterCheatManager_SPI_Params
	{
	public:
		float                                                      X;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Y;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Z;                                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Yaw;                                                     // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Pitch;                                                   // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SpawnSetupDino
	 */
	struct UShooterCheatManager_SpawnSetupDino_Params
	{
	public:
		class FString                                              DinoBlueprintPath;                                       // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              SaddleBlueprintPath;                                     // 0x0010(0x0010)  (Parm, ZeroConstructor)
		float                                                      SaddleQuality;                                           // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    DinoLevel;                                               // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              DinoStats;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor)
		float                                                      spawnDistance;                                           // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      YOffset;                                                 // 0x003C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ZOffset;                                                 // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SpawnExactDino
	 */
	struct UShooterCheatManager_SpawnExactDino_Params
	{
	public:
		class FString                                              DinoBlueprintPath;                                       // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              SaddleBlueprintPath;                                     // 0x0010(0x0010)  (Parm, ZeroConstructor)
		float                                                      SaddleQuality;                                           // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    BaseLevel;                                               // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ExtraLevels;                                             // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5AJA[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              BaseStats;                                               // 0x0030(0x0010)  (Parm, ZeroConstructor)
		class FString                                              AddedStats;                                              // 0x0040(0x0010)  (Parm, ZeroConstructor)
		class FString                                              DinoName;                                                // 0x0050(0x0010)  (Parm, ZeroConstructor)
		int8_t                                                     Cloned;                                                  // 0x0060(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int8_t                                                     Neutered;                                                // 0x0061(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NID1[0x6];                                   // 0x0062(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              TamedOn;                                                 // 0x0068(0x0010)  (Parm, ZeroConstructor)
		class FString                                              UploadedFrom;                                            // 0x0078(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ImprinterName;                                           // 0x0088(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    ImprinterPlayerID;                                       // 0x0098(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ImprintQuality;                                          // 0x009C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              Colors;                                                  // 0x00A0(0x0010)  (Parm, ZeroConstructor)
		int64_t                                                    DinoID;                                                  // 0x00B0(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int64_t                                                    Exp;                                                     // 0x00B8(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      spawnDistance;                                           // 0x00C0(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      YOffset;                                                 // 0x00C4(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ZOffset;                                                 // 0x00C8(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SpawnDino
	 */
	struct UShooterCheatManager_SpawnDino_Params
	{
	public:
		class FString                                              blueprintPath;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor)
		float                                                      spawnDistance;                                           // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      spawnYOffset;                                            // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ZOffset;                                                 // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    DinoLevel;                                               // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SpawnActorTamed
	 */
	struct UShooterCheatManager_SpawnActorTamed_Params
	{
	public:
		class FString                                              blueprintPath;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor)
		float                                                      spawnDistance;                                           // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      spawnYOffset;                                            // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ZOffset;                                                 // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SpawnActorSpreadTamed
	 */
	struct UShooterCheatManager_SpawnActorSpreadTamed_Params
	{
	public:
		class FString                                              blueprintPath;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor)
		float                                                      spawnDistance;                                           // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      spawnYOffset;                                            // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ZOffset;                                                 // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumberActors;                                            // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SpreadAmount;                                            // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SpawnActorSpread
	 */
	struct UShooterCheatManager_SpawnActorSpread_Params
	{
	public:
		class FString                                              blueprintPath;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor)
		float                                                      spawnDistance;                                           // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      spawnYOffset;                                            // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ZOffset;                                                 // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumberActors;                                            // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SpreadAmount;                                            // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SpawnActor
	 */
	struct UShooterCheatManager_SpawnActor_Params
	{
	public:
		class FString                                              blueprintPath;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor)
		float                                                      spawnDistance;                                           // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      spawnYOffset;                                            // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ZOffset;                                                 // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ShowTutorial
	 */
	struct UShooterCheatManager_ShowTutorial_Params
	{
	public:
		int32_t                                                    TutorialIndex;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceDisplay;                                           // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ShowMessageOfTheDay
	 */
	struct UShooterCheatManager_ShowMessageOfTheDay_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ShowInGameMenu
	 */
	struct UShooterCheatManager_ShowInGameMenu_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ShowAvailableMissionTags
	 */
	struct UShooterCheatManager_ShowAvailableMissionTags_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ShowActiveMissions
	 */
	struct UShooterCheatManager_ShowActiveMissions_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetTimeOfDay
	 */
	struct UShooterCheatManager_SetTimeOfDay_Params
	{
	public:
		class FString                                              timeString;                                              // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetTargetPlayerColorVal
	 */
	struct UShooterCheatManager_SetTargetPlayerColorVal_Params
	{
	public:
		int32_t                                                    ColorValIndex;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ColorVal;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetTargetPlayerBodyVal
	 */
	struct UShooterCheatManager_SetTargetPlayerBodyVal_Params
	{
	public:
		int32_t                                                    BodyValIndex;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      BodyVal;                                                 // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetTargetDinoColor
	 */
	struct UShooterCheatManager_SetTargetDinoColor_Params
	{
	public:
		int32_t                                                    ColorRegion;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ColorID;                                                 // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetTamingEffectivenessModifier
	 */
	struct UShooterCheatManager_SetTamingEffectivenessModifier_Params
	{
	public:
		float                                                      tameEff;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetStatOnTarget
	 */
	struct UShooterCheatManager_SetStatOnTarget_Params
	{
	public:
		class FName                                                StatName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Value;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetShowAllPlayers
	 */
	struct UShooterCheatManager_SetShowAllPlayers_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetPlayerPos
	 */
	struct UShooterCheatManager_SetPlayerPos_Params
	{
	public:
		float                                                      X;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Y;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Z;                                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetPlayerLevel
	 */
	struct UShooterCheatManager_SetPlayerLevel_Params
	{
	public:
		int64_t                                                    PlayerId;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int16_t                                                    Level;                                                   // 0x0008(0x0002)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetPerfCheck
	 */
	struct UShooterCheatManager_SetPerfCheck_Params
	{
	public:
		int32_t                                                    PerfCheckLocation;                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetNetworkTime
	 */
	struct UShooterCheatManager_SetNetworkTime_Params
	{
	public:
		float                                                      NewTime;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetMyTargetSleeping
	 */
	struct UShooterCheatManager_SetMyTargetSleeping_Params
	{
	public:
		bool                                                       bIsSleeping;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetMessageOfTheDay
	 */
	struct UShooterCheatManager_SetMessageOfTheDay_Params
	{
	public:
		class FString                                              Message;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetMaterialParamaterCollectionByNameAndFloatValue
	 */
	struct UShooterCheatManager_SetMaterialParamaterCollectionByNameAndFloatValue_Params
	{
	public:
		class FName                                                ParamaterName;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ParamaterValue;                                          // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetInstantHarvest
	 */
	struct UShooterCheatManager_SetInstantHarvest_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetInfiniteStats
	 */
	struct UShooterCheatManager_SetInfiniteStats_Params
	{
	public:
		bool                                                       bInfinite;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetImprintQuality
	 */
	struct UShooterCheatManager_SetImprintQuality_Params
	{
	public:
		float                                                      ImprintQuality;                                          // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetImprintedPlayer
	 */
	struct UShooterCheatManager_SetImprintedPlayer_Params
	{
	public:
		class FString                                              NewImprinterName;                                        // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    PlayerId;                                                // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetHeadHairstyle
	 */
	struct UShooterCheatManager_SetHeadHairstyle_Params
	{
	public:
		int32_t                                                    hairStyleIndex;                                          // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetHeadHairPercent
	 */
	struct UShooterCheatManager_SetHeadHairPercent_Params
	{
	public:
		float                                                      thePercent;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetGraphicsQuality
	 */
	struct UShooterCheatManager_SetGraphicsQuality_Params
	{
	public:
		int32_t                                                    val;                                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetGodMode
	 */
	struct UShooterCheatManager_SetGodMode_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetGlobalPause
	 */
	struct UShooterCheatManager_SetGlobalPause_Params
	{
	public:
		bool                                                       bIsPaused;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetFacialHairstyle
	 */
	struct UShooterCheatManager_SetFacialHairstyle_Params
	{
	public:
		int32_t                                                    hairStyleIndex;                                          // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetFacialHairPercent
	 */
	struct UShooterCheatManager_SetFacialHairPercent_Params
	{
	public:
		float                                                      thePercent;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetDifficultyValue
	 */
	struct UShooterCheatManager_SetDifficultyValue_Params
	{
	public:
		float                                                      NewTime;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetDebugMeleeAttacks
	 */
	struct UShooterCheatManager_SetDebugMeleeAttacks_Params
	{
	public:
		bool                                                       bDebugMelee;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_AHT4[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      DrawDuration;                                            // 0x0004(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetDay
	 */
	struct UShooterCheatManager_SetDay_Params
	{
	public:
		int32_t                                                    day;                                                     // 0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetChatLogMaxAgeInDays
	 */
	struct UShooterCheatManager_SetChatLogMaxAgeInDays_Params
	{
	public:
		int32_t                                                    NumDays;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetBabyAgeAOE
	 */
	struct UShooterCheatManager_SetBabyAgeAOE_Params
	{
	public:
		float                                                      AgeValue;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetBabyAge
	 */
	struct UShooterCheatManager_SetBabyAge_Params
	{
	public:
		float                                                      AgeValue;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetAllAvailableMissionsComplete
	 */
	struct UShooterCheatManager_SetAllAvailableMissionsComplete_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SetActiveMissionDebugFlags
	 */
	struct UShooterCheatManager_SetActiveMissionDebugFlags_Params
	{
	public:
		int32_t                                                    DebugFlags;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ServerChatToPlayer
	 */
	struct UShooterCheatManager_ServerChatToPlayer_Params
	{
	public:
		class FString                                              PlayerName;                                              // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              MessageText;                                             // 0x0010(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ServerChatTo
	 */
	struct UShooterCheatManager_ServerChatTo_Params
	{
	public:
		class FString                                              SteamID;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              MessageText;                                             // 0x0010(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ServerChat
	 */
	struct UShooterCheatManager_ServerChat_Params
	{
	public:
		class FString                                              MessageText;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SendDataDogMetric
	 */
	struct UShooterCheatManager_SendDataDogMetric_Params
	{
	public:
		class FString                                              Message;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SDFRide
	 */
	struct UShooterCheatManager_SDFRide_Params
	{
	public:
		class FName                                                DinoBlueprintPath;                                       // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		int32_t                                                    DinoLevel;                                               // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SDF
	 */
	struct UShooterCheatManager_SDF_Params
	{
	public:
		class FName                                                DinoBlueprintPath;                                       // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bIsTamed;                                                // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_TSZH[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    DinoLevel;                                               // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ScriptCommand
	 */
	struct UShooterCheatManager_ScriptCommand_Params
	{
	public:
		class FString                                              commandString;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SaveWorldDisableTransfer
	 */
	struct UShooterCheatManager_SaveWorldDisableTransfer_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SaveWorld
	 */
	struct UShooterCheatManager_SaveWorld_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.SAP
	 */
	struct UShooterCheatManager_SAP_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.RespawnPlayer
	 */
	struct UShooterCheatManager_RespawnPlayer_Params
	{
	public:
		bool                                                       KeepGender;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ResetLiveTuningOverloads
	 */
	struct UShooterCheatManager_ResetLiveTuningOverloads_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ResetLeaderboards
	 */
	struct UShooterCheatManager_ResetLeaderboards_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.RequestUpdateActiveMissionTags
	 */
	struct UShooterCheatManager_RequestUpdateActiveMissionTags_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ReportSpawnManagers
	 */
	struct UShooterCheatManager_ReportSpawnManagers_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ReportLeastSpawnManagers
	 */
	struct UShooterCheatManager_ReportLeastSpawnManagers_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.RepairArea
	 */
	struct UShooterCheatManager_RepairArea_Params
	{
	public:
		float                                                      Radius;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.RenameTribeID
	 */
	struct UShooterCheatManager_RenameTribeID_Params
	{
	public:
		int32_t                                                    TribeId;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_YX72[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              NewName;                                                 // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.RenameTribe
	 */
	struct UShooterCheatManager_RenameTribe_Params
	{
	public:
		class FString                                              TribeName;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              NewName;                                                 // 0x0010(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.RenamePlayerId
	 */
	struct UShooterCheatManager_RenamePlayerId_Params
	{
	public:
		int32_t                                                    PlayerId;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_2ZLX[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              NewName;                                                 // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.RenamePlayer
	 */
	struct UShooterCheatManager_RenamePlayer_Params
	{
	public:
		class FString                                              PlayerName;                                              // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              NewName;                                                 // 0x0010(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.RemoveWorldBuff
	 */
	struct UShooterCheatManager_RemoveWorldBuff_Params
	{
	public:
		class FString                                              WorldBuffIdentifier;                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.RemoveTribeAdmin
	 */
	struct UShooterCheatManager_RemoveTribeAdmin_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.RemoveAllWorldBuffs
	 */
	struct UShooterCheatManager_RemoveAllWorldBuffs_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.RegrowFoliage
	 */
	struct UShooterCheatManager_RegrowFoliage_Params
	{
	public:
		float                                                      Radius;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.RefillStats
	 */
	struct UShooterCheatManager_RefillStats_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ReassertColorization
	 */
	struct UShooterCheatManager_ReassertColorization_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.RainMonkeys
	 */
	struct UShooterCheatManager_RainMonkeys_Params
	{
	public:
		int32_t                                                    NumberActors;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SpreadAmount;                                            // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ZOffset;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.RainDinos
	 */
	struct UShooterCheatManager_RainDinos_Params
	{
	public:
		int32_t                                                    NumberActors;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SpreadAmount;                                            // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ZOffset;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.RainDanger
	 */
	struct UShooterCheatManager_RainDanger_Params
	{
	public:
		int32_t                                                    NumberActors;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SpreadAmount;                                            // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ZOffset;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.RainCritters
	 */
	struct UShooterCheatManager_RainCritters_Params
	{
	public:
		int32_t                                                    NumberActors;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SpreadAmount;                                            // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ZOffset;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.psc
	 */
	struct UShooterCheatManager_psc_Params
	{
	public:
		class FString                                              Command;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.PrintActorLocation
	 */
	struct UShooterCheatManager_PrintActorLocation_Params
	{
	public:
		class FString                                              ActorName;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.PlayerCommand
	 */
	struct UShooterCheatManager_PlayerCommand_Params
	{
	public:
		class FString                                              TheCommand;                                              // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.pgosweep
	 */
	struct UShooterCheatManager_pgosweep_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.OpenMap
	 */
	struct UShooterCheatManager_OpenMap_Params
	{
	public:
		class FString                                              MapName;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.OnToggleInGameMenu
	 */
	struct UShooterCheatManager_OnToggleInGameMenu_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.NextPerfCheck
	 */
	struct UShooterCheatManager_NextPerfCheck_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.MoveTargetTo
	 */
	struct UShooterCheatManager_MoveTargetTo_Params
	{
	public:
		float                                                      X;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Y;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Z;                                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.Mission
	 */
	struct UShooterCheatManager_Mission_Params
	{
	public:
		class FName                                                CheatName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Value;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.MaxAscend
	 */
	struct UShooterCheatManager_MaxAscend_Params
	{
	public:
		int32_t                                                    PlayerId;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.MakeTribeFounder
	 */
	struct UShooterCheatManager_MakeTribeFounder_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.MakeTribeAdmin
	 */
	struct UShooterCheatManager_MakeTribeAdmin_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.LvlUp
	 */
	struct UShooterCheatManager_LvlUp_Params
	{
	public:
		int64_t                                                    PlayerId;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int16_t                                                    Level;                                                   // 0x0008(0x0002)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.LogStackTrace
	 */
	struct UShooterCheatManager_LogStackTrace_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.LMA
	 */
	struct UShooterCheatManager_LMA_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ListPlayers
	 */
	struct UShooterCheatManager_ListPlayers_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ListMyTargetBuffs
	 */
	struct UShooterCheatManager_ListMyTargetBuffs_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ListMyBuffs
	 */
	struct UShooterCheatManager_ListMyBuffs_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ListDinos
	 */
	struct UShooterCheatManager_ListDinos_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ListAllPlayerBuffs
	 */
	struct UShooterCheatManager_ListAllPlayerBuffs_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ListAllItems
	 */
	struct UShooterCheatManager_ListAllItems_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ListActiveHordeEvents
	 */
	struct UShooterCheatManager_ListActiveHordeEvents_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.LevelUpTarget
	 */
	struct UShooterCheatManager_LevelUpTarget_Params
	{
	public:
		class FName                                                StatName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumLevels;                                               // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.LevelUpAOE
	 */
	struct UShooterCheatManager_LevelUpAOE_Params
	{
	public:
		class FName                                                StatName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumLevels;                                               // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.LevelUp
	 */
	struct UShooterCheatManager_LevelUp_Params
	{
	public:
		class FName                                                StatName;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumLevels;                                               // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.LessThan
	 */
	struct UShooterCheatManager_LessThan_Params
	{
	public:
		int32_t                                                    TribeTeamID;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Connections;                                             // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       includeContainers;                                       // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.LeaveMission
	 */
	struct UShooterCheatManager_LeaveMission_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.LeaveMeAlone
	 */
	struct UShooterCheatManager_LeaveMeAlone_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.KillPlayer
	 */
	struct UShooterCheatManager_KillPlayer_Params
	{
	public:
		int64_t                                                    PlayerId;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.KillAOETribe
	 */
	struct UShooterCheatManager_KillAOETribe_Params
	{
	public:
		class FName                                                Category;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    TribeId;                                                 // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       destroyOnly;                                             // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.KillAOE
	 */
	struct UShooterCheatManager_KillAOE_Params
	{
	public:
		class FName                                                Category;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.Kill
	 */
	struct UShooterCheatManager_Kill_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.KickPlayer
	 */
	struct UShooterCheatManager_KickPlayer_Params
	{
	public:
		class FString                                              PlayerSteamName;                                         // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.JoinTribe
	 */
	struct UShooterCheatManager_JoinTribe_Params
	{
	public:
		int64_t                                                    PlayerId;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    TribeTeamID;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.IsUndermesh
	 */
	struct UShooterCheatManager_IsUndermesh_Params
	{
	public:
		float                                                      debugDrawSeconds;                                        // 0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.InfiniteWeight
	 */
	struct UShooterCheatManager_InfiniteWeight_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.InfiniteStats
	 */
	struct UShooterCheatManager_InfiniteStats_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.HurtMyTarget
	 */
	struct UShooterCheatManager_HurtMyTarget_Params
	{
	public:
		int32_t                                                    HowMuch;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.HurtMyAOE
	 */
	struct UShooterCheatManager_HurtMyAOE_Params
	{
	public:
		int32_t                                                    HowMuch;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.HiWarp
	 */
	struct UShooterCheatManager_HiWarp_Params
	{
	public:
		class FString                                              ClassName;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    index;                                                   // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.HideTutorial
	 */
	struct UShooterCheatManager_HideTutorial_Params
	{
	public:
		int32_t                                                    TutorialIndex;                                           // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.HibernationReport
	 */
	struct UShooterCheatManager_HibernationReport_Params
	{
	public:
		class FString                                              ClassName;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.HatchEgg
	 */
	struct UShooterCheatManager_HatchEgg_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GTIPL
	 */
	struct UShooterCheatManager_GTIPL_Params
	{
	public:
		int32_t                                                    TribeId;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GTIDPL
	 */
	struct UShooterCheatManager_GTIDPL_Params
	{
	public:
		int32_t                                                    TribeId;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GoToFirstMutagenDrop
	 */
	struct UShooterCheatManager_GoToFirstMutagenDrop_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GMSummon
	 */
	struct UShooterCheatManager_GMSummon_Params
	{
	public:
		class FString                                              ClassName;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    Level;                                                   // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GMComp
	 */
	struct UShooterCheatManager_GMComp_Params
	{
	public:
		int32_t                                                    Level;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GMBuff
	 */
	struct UShooterCheatManager_GMBuff_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GlobalObjectCount
	 */
	struct UShooterCheatManager_GlobalObjectCount_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveWeaponSet
	 */
	struct UShooterCheatManager_GiveWeaponSet_Params
	{
	public:
		class FName                                                Tier;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Quality;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveToMeAOE
	 */
	struct UShooterCheatManager_GiveToMeAOE_Params
	{
	public:
		float                                                      Radius;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveToMe
	 */
	struct UShooterCheatManager_GiveToMe_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveTekEngramsTo
	 */
	struct UShooterCheatManager_GiveTekEngramsTo_Params
	{
	public:
		int64_t                                                    PlayerId;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                blueprintPath;                                           // 0x0008(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveResources
	 */
	struct UShooterCheatManager_GiveResources_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveMaxLevel
	 */
	struct UShooterCheatManager_GiveMaxLevel_Params
	{
	public:
		int32_t                                                    PlayerId;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveItemToPlayer
	 */
	struct UShooterCheatManager_GiveItemToPlayer_Params
	{
	public:
		int32_t                                                    PlayerId;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_X4DC[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              blueprintPath;                                           // 0x0008(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    quantityOverride;                                        // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      qualityOverride;                                         // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceBlueprint;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveItemSkins
	 */
	struct UShooterCheatManager_GiveItemSkins_Params
	{
	public:
		class FString                                              equipmentType;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveItemSet
	 */
	struct UShooterCheatManager_GiveItemSet_Params
	{
	public:
		class FName                                                Tier;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveItemNumToPlayer
	 */
	struct UShooterCheatManager_GiveItemNumToPlayer_Params
	{
	public:
		int32_t                                                    PlayerId;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MasterIndexNum;                                          // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    quantityOverride;                                        // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      qualityOverride;                                         // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceBlueprint;                                         // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveItemNum
	 */
	struct UShooterCheatManager_GiveItemNum_Params
	{
	public:
		int32_t                                                    MasterIndexNum;                                          // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    quantityOverride;                                        // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      qualityOverride;                                         // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceBlueprint;                                         // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveItem
	 */
	struct UShooterCheatManager_GiveItem_Params
	{
	public:
		class FString                                              blueprintPath;                                           // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    quantityOverride;                                        // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      qualityOverride;                                         // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceBlueprint;                                         // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveInfiniteStatsToTarget
	 */
	struct UShooterCheatManager_GiveInfiniteStatsToTarget_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveExpToTarget
	 */
	struct UShooterCheatManager_GiveExpToTarget_Params
	{
	public:
		float                                                      HowMuch;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       fromTribeShare;                                          // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPreventSharingWithTribe;                                // 0x0005(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveExpToPlayer
	 */
	struct UShooterCheatManager_GiveExpToPlayer_Params
	{
	public:
		int64_t                                                    PlayerId;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HowMuch;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       fromTribeShare;                                          // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPreventSharingWithTribe;                                // 0x000D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveExplorerNote
	 */
	struct UShooterCheatManager_GiveExplorerNote_Params
	{
	public:
		int32_t                                                    NoteIndex;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveEngramsTekOnly
	 */
	struct UShooterCheatManager_GiveEngramsTekOnly_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveEngrams
	 */
	struct UShooterCheatManager_GiveEngrams_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveDinoSet
	 */
	struct UShooterCheatManager_GiveDinoSet_Params
	{
	public:
		class FName                                                Tier;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumDinos;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveCreativeModeToTarget
	 */
	struct UShooterCheatManager_GiveCreativeModeToTarget_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveCreativeModeToPlayer
	 */
	struct UShooterCheatManager_GiveCreativeModeToPlayer_Params
	{
	public:
		int64_t                                                    PlayerId;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveCreativeMode
	 */
	struct UShooterCheatManager_GiveCreativeMode_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveBossItems
	 */
	struct UShooterCheatManager_GiveBossItems_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveBossEngrams
	 */
	struct UShooterCheatManager_GiveBossEngrams_Params
	{
	public:
		int32_t                                                    PlayerId;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                BossName;                                                // 0x0004(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int8_t                                                     difficulty;                                              // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveArmorSet
	 */
	struct UShooterCheatManager_GiveArmorSet_Params
	{
	public:
		class FName                                                Tier;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Quality;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveAllStructure
	 */
	struct UShooterCheatManager_GiveAllStructure_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GiveAllExplorerNotes
	 */
	struct UShooterCheatManager_GiveAllExplorerNotes_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GFI
	 */
	struct UShooterCheatManager_GFI_Params
	{
	public:
		class FName                                                blueprintPath;                                           // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		int32_t                                                    quantityOverride;                                        // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      qualityOverride;                                         // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceBlueprint;                                         // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GetTribeIdPlayerList
	 */
	struct UShooterCheatManager_GetTribeIdPlayerList_Params
	{
	public:
		int32_t                                                    TribeId;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GetTribe
	 */
	struct UShooterCheatManager_GetTribe_Params
	{
	public:
		int32_t                                                    TribeId;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GetSteamIDForPlayerID
	 */
	struct UShooterCheatManager_GetSteamIDForPlayerID_Params
	{
	public:
		int32_t                                                    PlayerId;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GetPlayerIDForSteamID
	 */
	struct UShooterCheatManager_GetPlayerIDForSteamID_Params
	{
	public:
		int32_t                                                    SteamID;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GetGameLog
	 */
	struct UShooterCheatManager_GetGameLog_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GetEgg
	 */
	struct UShooterCheatManager_GetEgg_Params
	{
	public:
		int32_t                                                    NumMutationsToAdd;                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GetChat
	 */
	struct UShooterCheatManager_GetChat_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GetAllTamesNumber
	 */
	struct UShooterCheatManager_GetAllTamesNumber_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GetAllStructuresNumber
	 */
	struct UShooterCheatManager_GetAllStructuresNumber_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GetAllNumbers
	 */
	struct UShooterCheatManager_GetAllNumbers_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GetAllItemsNumber
	 */
	struct UShooterCheatManager_GetAllItemsNumber_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GCMT
	 */
	struct UShooterCheatManager_GCMT_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GCMP
	 */
	struct UShooterCheatManager_GCMP_Params
	{
	public:
		int64_t                                                    PlayerId;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GCM
	 */
	struct UShooterCheatManager_GCM_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.GameCommand
	 */
	struct UShooterCheatManager_GameCommand_Params
	{
	public:
		class FString                                              TheCommand;                                              // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ForceUpdateDynamicConfig
	 */
	struct UShooterCheatManager_ForceUpdateDynamicConfig_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ForceTribes
	 */
	struct UShooterCheatManager_ForceTribes_Params
	{
	public:
		class FString                                              PlayerName1;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              PlayerName2;                                             // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class FString                                              NewTribeName;                                            // 0x0020(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ForceTameAOE
	 */
	struct UShooterCheatManager_ForceTameAOE_Params
	{
	public:
		float                                                      Radius;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ForceTame
	 */
	struct UShooterCheatManager_ForceTame_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ForceStartMission
	 */
	struct UShooterCheatManager_ForceStartMission_Params
	{
	public:
		class FName                                                MissionTag;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ForceReturnIsXboxOneBuildOnPC
	 */
	struct UShooterCheatManager_ForceReturnIsXboxOneBuildOnPC_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ForceReturnIsPS4BuildOnPC
	 */
	struct UShooterCheatManager_ForceReturnIsPS4BuildOnPC_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ForcePoop
	 */
	struct UShooterCheatManager_ForcePoop_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ForcePlayerToJoinTribeId
	 */
	struct UShooterCheatManager_ForcePlayerToJoinTribeId_Params
	{
	public:
		int64_t                                                    PlayerId;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    TribeTeamID;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ForcePlayerToJoinTribe
	 */
	struct UShooterCheatManager_ForcePlayerToJoinTribe_Params
	{
	public:
		int64_t                                                    PlayerId;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              TribeName;                                               // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ForcePlayerToJoinTargetTribe
	 */
	struct UShooterCheatManager_ForcePlayerToJoinTargetTribe_Params
	{
	public:
		int64_t                                                    PlayerId;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ForceMutagenSpawn
	 */
	struct UShooterCheatManager_ForceMutagenSpawn_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ForceJoinTribe
	 */
	struct UShooterCheatManager_ForceJoinTribe_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ForceGiveBuff
	 */
	struct UShooterCheatManager_ForceGiveBuff_Params
	{
	public:
		class FName                                                BuffBlueprintPath;                                       // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bEnable;                                                 // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ForceEnableMeshCheckingOnMe
	 */
	struct UShooterCheatManager_ForceEnableMeshCheckingOnMe_Params
	{
	public:
		bool                                                       bEnableKillChecking;                                     // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEnableTeleportingChecking;                              // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ForceCompleteActiveMission
	 */
	struct UShooterCheatManager_ForceCompleteActiveMission_Params
	{
	public:
		class FString                                              MissionStateSimValues;                                   // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ForceCheckInMesh
	 */
	struct UShooterCheatManager_ForceCheckInMesh_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.FindMutagenDrops
	 */
	struct UShooterCheatManager_FindMutagenDrops_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.FEMCOM
	 */
	struct UShooterCheatManager_FEMCOM_Params
	{
	public:
		bool                                                       bEnableKillChecking;                                     // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bEnableTeleportingChecking;                              // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.EnemyInVisible
	 */
	struct UShooterCheatManager_EnemyInVisible_Params
	{
	public:
		bool                                                       Invisible;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.EnableSpectator
	 */
	struct UShooterCheatManager_EnableSpectator_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.EnableCheats
	 */
	struct UShooterCheatManager_EnableCheats_Params
	{
	public:
		class FString                                              pass;                                                    // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.EnableAllMating
	 */
	struct UShooterCheatManager_EnableAllMating_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DupeLastItem
	 */
	struct UShooterCheatManager_DupeLastItem_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DumpFallbackSeeds
	 */
	struct UShooterCheatManager_DumpFallbackSeeds_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DumpDinoStats
	 */
	struct UShooterCheatManager_DumpDinoStats_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DumpAssetProperties
	 */
	struct UShooterCheatManager_DumpAssetProperties_Params
	{
	public:
		class FString                                              Asset;                                                   // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DrawDebugBoxForVolumes
	 */
	struct UShooterCheatManager_DrawDebugBoxForVolumes_Params
	{
	public:
		float                                                      Duration;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    VolumeClassIndex;                                        // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDebugAllVolumeClasses;                                  // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDrawSolidBox;                                           // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_32XZ[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      LineThickness;                                           // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DrainWater
	 */
	struct UShooterCheatManager_DrainWater_Params
	{
	public:
		float                                                      HowMuch;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DrainFood
	 */
	struct UShooterCheatManager_DrainFood_Params
	{
	public:
		float                                                      HowMuch;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DoTestingThing
	 */
	struct UShooterCheatManager_DoTestingThing_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DoTame
	 */
	struct UShooterCheatManager_DoTame_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DoRestartLevel
	 */
	struct UShooterCheatManager_DoRestartLevel_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DoHang
	 */
	struct UShooterCheatManager_DoHang_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DoExit
	 */
	struct UShooterCheatManager_DoExit_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DisallowPlayerToJoinNoCheck
	 */
	struct UShooterCheatManager_DisallowPlayerToJoinNoCheck_Params
	{
	public:
		class FString                                              SteamID;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DisableSpectator
	 */
	struct UShooterCheatManager_DisableSpectator_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DisableAllMating
	 */
	struct UShooterCheatManager_DisableAllMating_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DinoSet
	 */
	struct UShooterCheatManager_DinoSet_Params
	{
	public:
		class FName                                                CheatName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Value;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.Dino
	 */
	struct UShooterCheatManager_Dino_Params
	{
	public:
		class FName                                                CheatName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DetachChar
	 */
	struct UShooterCheatManager_DetachChar_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DestroyWildDinos
	 */
	struct UShooterCheatManager_DestroyWildDinos_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DestroyWildDinoClasses
	 */
	struct UShooterCheatManager_DestroyWildDinoClasses_Params
	{
	public:
		class FString                                              ClassName;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bExactMatch;                                             // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DestroyTribeStructuresLessThan
	 */
	struct UShooterCheatManager_DestroyTribeStructuresLessThan_Params
	{
	public:
		int32_t                                                    TribeTeamID;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Connections;                                             // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       includeContainers;                                       // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       includeLargeGates;                                       // 0x0009(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DestroyTribeStructures
	 */
	struct UShooterCheatManager_DestroyTribeStructures_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DestroyTribePlayers
	 */
	struct UShooterCheatManager_DestroyTribePlayers_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DestroyTribeIdStructures
	 */
	struct UShooterCheatManager_DestroyTribeIdStructures_Params
	{
	public:
		int32_t                                                    TribeTeamID;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DestroyTribeIdPlayers
	 */
	struct UShooterCheatManager_DestroyTribeIdPlayers_Params
	{
	public:
		int32_t                                                    TribeTeamID;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DestroyTribeIdDinos
	 */
	struct UShooterCheatManager_DestroyTribeIdDinos_Params
	{
	public:
		int32_t                                                    TribeTeamID;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DestroyTribeId
	 */
	struct UShooterCheatManager_DestroyTribeId_Params
	{
	public:
		int32_t                                                    TribeTeamID;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DestroyTribeDinos
	 */
	struct UShooterCheatManager_DestroyTribeDinos_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DestroyStructures
	 */
	struct UShooterCheatManager_DestroyStructures_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DestroyMyTarget4
	 */
	struct UShooterCheatManager_DestroyMyTarget4_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DestroyMyTarget3
	 */
	struct UShooterCheatManager_DestroyMyTarget3_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DestroyMyTarget2
	 */
	struct UShooterCheatManager_DestroyMyTarget2_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DestroyMyTarget
	 */
	struct UShooterCheatManager_DestroyMyTarget_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DestroyMyPawn
	 */
	struct UShooterCheatManager_DestroyMyPawn_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DestroyFoliage
	 */
	struct UShooterCheatManager_DestroyFoliage_Params
	{
	public:
		float                                                      Radius;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       PutFoliageResourcesInInventory;                          // 0x0004(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DestroyAOE
	 */
	struct UShooterCheatManager_DestroyAOE_Params
	{
	public:
		class FName                                                Category;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DestroyAllTames
	 */
	struct UShooterCheatManager_DestroyAllTames_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DestroyAllEnemies
	 */
	struct UShooterCheatManager_DestroyAllEnemies_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DestroyActors
	 */
	struct UShooterCheatManager_DestroyActors_Params
	{
	public:
		class FString                                              ClassName;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bExactMatch;                                             // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DefeatBoss
	 */
	struct UShooterCheatManager_DefeatBoss_Params
	{
	public:
		int32_t                                                    PlayerId;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                BossName;                                                // 0x0004(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int8_t                                                     difficulty;                                              // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DefeatAllBosses
	 */
	struct UShooterCheatManager_DefeatAllBosses_Params
	{
	public:
		int32_t                                                    PlayerId;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DeepPockets
	 */
	struct UShooterCheatManager_DeepPockets_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DebugToggleHLNAMonologue
	 */
	struct UShooterCheatManager_DebugToggleHLNAMonologue_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DebugMyTarget
	 */
	struct UShooterCheatManager_DebugMyTarget_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DebugCompanionReactions
	 */
	struct UShooterCheatManager_DebugCompanionReactions_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DebugCompanionAsyncLoadedFiles
	 */
	struct UShooterCheatManager_DebugCompanionAsyncLoadedFiles_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DebugAllowVRMissionTeleport
	 */
	struct UShooterCheatManager_DebugAllowVRMissionTeleport_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DeactivateMission
	 */
	struct UShooterCheatManager_DeactivateMission_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.DCMSet
	 */
	struct UShooterCheatManager_DCMSet_Params
	{
	public:
		class FName                                                Cheat;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      val;                                                     // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.CryoMyTarget
	 */
	struct UShooterCheatManager_CryoMyTarget_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.CryoAOE
	 */
	struct UShooterCheatManager_CryoAOE_Params
	{
	public:
		float                                                      Radius;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.Cryo
	 */
	struct UShooterCheatManager_Cryo_Params
	{
	public:
		class FString                                              DinoID;                                                  // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.CompleteMission
	 */
	struct UShooterCheatManager_CompleteMission_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ClearTutorials
	 */
	struct UShooterCheatManager_ClearTutorials_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ClearPlayerInventory
	 */
	struct UShooterCheatManager_ClearPlayerInventory_Params
	{
	public:
		int32_t                                                    PlayerId;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bClearInventory;                                         // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bClearSlotItems;                                         // 0x0005(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bClearEquippedItems;                                     // 0x0006(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ClearMyBuffs
	 */
	struct UShooterCheatManager_ClearMyBuffs_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ClearMessageOfTheDay
	 */
	struct UShooterCheatManager_ClearMessageOfTheDay_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.ClearCryoSickness
	 */
	struct UShooterCheatManager_ClearCryoSickness_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.CamZoomOut
	 */
	struct UShooterCheatManager_CamZoomOut_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.CamZoomIn
	 */
	struct UShooterCheatManager_CamZoomIn_Params
	{	};

	/**
	 * Function ShooterGame.ShooterCheatManager.Broadcast
	 */
	struct UShooterCheatManager_Broadcast_Params
	{
	public:
		class FString                                              MessageText;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.BanPlayer
	 */
	struct UShooterCheatManager_BanPlayer_Params
	{
	public:
		class FString                                              PlayerSteamName;                                         // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.AllowPlayerToJoinNoCheck
	 */
	struct UShooterCheatManager_AllowPlayerToJoinNoCheck_Params
	{
	public:
		class FString                                              SteamID;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.AddWorldBuff
	 */
	struct UShooterCheatManager_AddWorldBuff_Params
	{
	public:
		class FString                                              WorldBuffIdentifier;                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.AddItemToAllClustersInventory
	 */
	struct UShooterCheatManager_AddItemToAllClustersInventory_Params
	{
	public:
		class FString                                              UserId;                                                  // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    MasterIndexNum;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.AddHexagons
	 */
	struct UShooterCheatManager_AddHexagons_Params
	{
	public:
		float                                                      HowMuch;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.AddExperienceToTarget
	 */
	struct UShooterCheatManager_AddExperienceToTarget_Params
	{
	public:
		float                                                      HowMuch;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       fromTribeShare;                                          // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPreventSharingWithTribe;                                // 0x0005(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.AddExperience
	 */
	struct UShooterCheatManager_AddExperience_Params
	{
	public:
		float                                                      HowMuch;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       fromTribeShare;                                          // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPreventSharingWithTribe;                                // 0x0005(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.AddEquipmentDurability
	 */
	struct UShooterCheatManager_AddEquipmentDurability_Params
	{
	public:
		float                                                      durability;                                              // 0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.AddChibiExpToPlayer
	 */
	struct UShooterCheatManager_AddChibiExpToPlayer_Params
	{
	public:
		int64_t                                                    PlayerId;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HowMuch;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.AddChibiExp
	 */
	struct UShooterCheatManager_AddChibiExp_Params
	{
	public:
		float                                                      HowMuch;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterCheatManager.AddBuffPreventTagToSelf
	 */
	struct UShooterCheatManager_AddBuffPreventTagToSelf_Params
	{
	public:
		class FName                                                TagName;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterDamageType.OverrideBuffToGiveVictimCharacter
	 */
	struct UShooterDamageType_OverrideBuffToGiveVictimCharacter_Params
	{
	public:
		class APrimalCharacter*                                    Victim;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      IncomingDamage;                                          // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1UW2[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        TheDamageEvent;                                          // 0x0010(0x0020)  (Parm)
		class AController*                                         EventInstigator;                                         // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ReturnValue;                                             // 0x0040(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterDamageType.BPAdjustHarvestingDamage
	 */
	struct UShooterDamageType_BPAdjustHarvestingDamage_Params
	{
	public:
		class AActor*                                              Victim;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      IncomingDamage;                                          // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_Z0AQ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        TheDamageEvent;                                          // 0x0010(0x0020)  (Parm)
		class AController*                                         EventInstigator;                                         // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0040(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterDamageType.BPAdjustDamage
	 */
	struct UShooterDamageType_BPAdjustDamage_Params
	{
	public:
		class AActor*                                              Victim;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      IncomingDamage;                                          // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZZLG[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        TheDamageEvent;                                          // 0x0010(0x0020)  (Parm)
		class AController*                                         EventInstigator;                                         // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0040(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterDamageType.BPAdjustAggro
	 */
	struct UShooterDamageType_BPAdjustAggro_Params
	{
	public:
		class APrimalDinoAIController*                             DamagedCharacterController;                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalCharacter*                                    DamagedCharacter;                                        // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DesiredAggroValue;                                       // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      IncomingDamage;                                          // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FDamageEvent                                        TheDamageEvent;                                          // 0x0018(0x0020)  (Parm)
		class AController*                                         EventInstigator;                                         // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0040(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0048(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGame_Menu.PlayMusic
	 */
	struct AShooterGame_Menu_PlayMusic_Params
	{	};

	/**
	 * Function ShooterGame.ShooterGame_Menu.GetMainMenuOverrideData
	 */
	struct AShooterGame_Menu_GetMainMenuOverrideData_Params
	{
	public:
		struct FActiveEventMainMenuOverride                        OverrideData;                                            // 0x0000(0x0020)  (Parm, OutParm)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGame_Menu.GetMainMenuBackgroundTexture
	 */
	struct AShooterGame_Menu_GetMainMenuBackgroundTexture_Params
	{
	public:
		class UTexture2D*                                          ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameInstance.LoadTheGameMedia
	 */
	struct UShooterGameInstance_LoadTheGameMedia_Params
	{	};

	/**
	 * Function ShooterGame.ShooterGameInstance.DisplayGlobalMainMenuNotification
	 */
	struct UShooterGameInstance_DisplayGlobalMainMenuNotification_Params
	{	};

	/**
	 * Function ShooterGame.ShooterGameInstance.AsyncUnloadAssetFromPath
	 */
	struct UShooterGameInstance_AsyncUnloadAssetFromPath_Params
	{
	public:
		class FString                                              AssetPathToUnload;                                       // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bForceGarbageCollection;                                 // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameInstance.AsyncUnloadAssetFromObject
	 */
	struct UShooterGameInstance_AsyncUnloadAssetFromObject_Params
	{
	public:
		class UObject*                                             AssetObjectToUnload;                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceGarbageCollection;                                 // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameInstance.AsyncLoadAssetFromPath
	 */
	struct UShooterGameInstance_AsyncLoadAssetFromPath_Params
	{
	public:
		class FString                                              AssetPath;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterGameInstance.AsyncAssetLoadedDelegate__DelegateSignature
	 */
	struct UShooterGameInstance_AsyncAssetLoadedDelegate__DelegateSignature_Params
	{
	public:
		class FString                                              AssetPath;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class UObject*                                             LoadedAsset;                                             // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TerrainActor.GenerateTerrain
	 */
	struct ATerrainActor_GenerateTerrain_Params
	{	};

	/**
	 * Function ShooterGame.TerrainComponent.OnRep_TerrainInfo
	 */
	struct UTerrainComponent_OnRep_TerrainInfo_Params
	{	};

	/**
	 * Function ShooterGame.TerrainComponent.OnConstruct
	 */
	struct UTerrainComponent_OnConstruct_Params
	{	};

	/**
	 * Function ShooterGame.TerrainComponent.ApplyToTexture
	 */
	struct UTerrainComponent_ApplyToTexture_Params
	{
	public:
		class UFloatMap*                                           FloatMap;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTexture2D*                                          Texture;                                                 // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Minimum;                                                 // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Maximum;                                                 // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.TryGetIntOptionIni
	 */
	struct AShooterGameMode_TryGetIntOptionIni_Params
	{
	public:
		class FString                                              Section;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              OptionName;                                              // 0x0010(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    Value;                                                   // 0x0020(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0024(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.TryGetIntOption
	 */
	struct AShooterGameMode_TryGetIntOption_Params
	{
	public:
		class FString                                              Section;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Options;                                                 // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class FString                                              OptionName;                                              // 0x0020(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    Value;                                                   // 0x0030(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0034(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.TryGetBoolOptionIni
	 */
	struct AShooterGameMode_TryGetBoolOptionIni_Params
	{
	public:
		class FString                                              Section;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              OptionName;                                              // 0x0010(0x0010)  (Parm, ZeroConstructor)
		bool                                                       Value;                                                   // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0021(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.TryGetBoolOption
	 */
	struct AShooterGameMode_TryGetBoolOption_Params
	{
	public:
		class FString                                              Section;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Options;                                                 // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class FString                                              OptionName;                                              // 0x0020(0x0010)  (Parm, ZeroConstructor)
		bool                                                       Value;                                                   // 0x0030(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0031(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.TriggerLevelCustomEvents
	 */
	struct AShooterGameMode_TriggerLevelCustomEvents_Params
	{
	public:
		class UWorld*                                              inWorld;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              EventName;                                               // 0x0008(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    IDtoOnlyAllowExecutionOncePerFrame;                      // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x001C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.TimeSinceMissionDeactivated
	 */
	struct AShooterGameMode_TimeSinceMissionDeactivated_Params
	{
	public:
		class UClass*                                              MissionType;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.ShooterCharacterSpawned__DelegateSignature
	 */
	struct AShooterGameMode_ShooterCharacterSpawned__DelegateSignature_Params
	{
	public:
		class AShooterCharacter*                                   TheShooterCharacter;                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.ShooterCharacterDied__DelegateSignature
	 */
	struct AShooterGameMode_ShooterCharacterDied__DelegateSignature_Params
	{
	public:
		class AShooterCharacter*                                   TheShooterCharacter;                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.SetTimeOfDay
	 */
	struct AShooterGameMode_SetTimeOfDay_Params
	{
	public:
		class FString                                              timeString;                                              // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.SetLastMissionDeactivatedUtcTime
	 */
	struct AShooterGameMode_SetLastMissionDeactivatedUtcTime_Params
	{
	public:
		class UClass*                                              MissionType;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     UtcTime;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.SendServerNotification
	 */
	struct AShooterGameMode_SendServerNotification_Params
	{
	public:
		class FString                                              MessageText;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
		struct FLinearColor                                        MessageColor;                                            // 0x0010(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DisplayScale;                                            // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DisplayTime;                                             // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTexture2D*                                          MessageIcon;                                             // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USoundBase*                                          SoundToPlay;                                             // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReceiverTeamId;                                          // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReceiverPlayerID;                                        // 0x003C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDoBillboard;                                            // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.SendServerDirectMessage
	 */
	struct AShooterGameMode_SendServerDirectMessage_Params
	{
	public:
		class FString                                              PlayerSteamIDconst;                                      // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              MessageText;                                             // 0x0010(0x0010)  (Parm, ZeroConstructor)
		struct FLinearColor                                        MessageColor;                                            // 0x0020(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsBold;                                                 // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_D3SU[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReceiverTeamId;                                          // 0x0034(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReceiverPlayerID;                                        // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZVG4[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              PlayerName;                                              // 0x0040(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.SendServerChatMessage
	 */
	struct AShooterGameMode_SendServerChatMessage_Params
	{
	public:
		class FString                                              MessageText;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
		struct FLinearColor                                        MessageColor;                                            // 0x0010(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsBold;                                                 // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_0WXZ[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReceiverTeamId;                                          // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReceiverPlayerID;                                        // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.RestartServer
	 */
	struct AShooterGameMode_RestartServer_Params
	{	};

	/**
	 * Function ShooterGame.ShooterGameMode.RemovePlayerData
	 */
	struct AShooterGameMode_RemovePlayerData_Params
	{
	public:
		class AShooterPlayerState*                                 PlayerState;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.RemoveInactivePlayersAndTribes
	 */
	struct AShooterGameMode_RemoveInactivePlayersAndTribes_Params
	{	};

	/**
	 * Function ShooterGame.ShooterGameMode.ReassertColorization
	 */
	struct AShooterGameMode_ReassertColorization_Params
	{	};

	/**
	 * Function ShooterGame.ShooterGameMode.PrintToServerGameLog
	 */
	struct AShooterGameMode_PrintToServerGameLog_Params
	{
	public:
		class FString                                              InString;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bSendChatToAllAdmins;                                    // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.PrintToGameplayLog
	 */
	struct AShooterGameMode_PrintToGameplayLog_Params
	{
	public:
		class FString                                              InString;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.PreSpawnedDino__DelegateSignature
	 */
	struct AShooterGameMode_PreSpawnedDino__DelegateSignature_Params
	{
	public:
		class APrimalDinoCharacter*                                theDino;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.PostAlarmNotificationTribe
	 */
	struct AShooterGameMode_PostAlarmNotificationTribe_Params
	{
	public:
		int32_t                                                    TribeId;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_PWJT[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Title;                                                   // 0x0008(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Message;                                                 // 0x0018(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.PostAlarmNotificationPlayerID
	 */
	struct AShooterGameMode_PostAlarmNotificationPlayerID_Params
	{
	public:
		int32_t                                                    PlayerId;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_2B9I[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Title;                                                   // 0x0008(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Message;                                                 // 0x0018(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.PostAlarmNotification
	 */
	struct AShooterGameMode_PostAlarmNotification_Params
	{
	public:
		class FString                                              SteamID;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Title;                                                   // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Message;                                                 // 0x0020(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.OnStartNewPlayer__DelegateSignature
	 */
	struct AShooterGameMode_OnStartNewPlayer__DelegateSignature_Params
	{
	public:
		class APlayerController*                                   NewPlayer;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.OnServerNotification__DelegateSignature
	 */
	struct AShooterGameMode_OnServerNotification__DelegateSignature_Params
	{
	public:
		class FString                                              MessageText;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    ReceiverTeamId;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReceiverPlayerID;                                        // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.OnServerDirectMessage__DelegateSignature
	 */
	struct AShooterGameMode_OnServerDirectMessage__DelegateSignature_Params
	{
	public:
		class FString                                              PlayerSteamIDconst;                                      // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              MessageText;                                             // 0x0010(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    ReceiverTeamId;                                          // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReceiverPlayerID;                                        // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              PlayerName;                                              // 0x0028(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.OnServerChatMessage__DelegateSignature
	 */
	struct AShooterGameMode_OnServerChatMessage__DelegateSignature_Params
	{
	public:
		class FString                                              MessageText;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    ReceiverTeamId;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReceiverPlayerID;                                        // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.OnSerializeForSaveFile__DelegateSignature
	 */
	struct AShooterGameMode_OnSerializeForSaveFile__DelegateSignature_Params
	{	};

	/**
	 * Function ShooterGame.ShooterGameMode.OnRemoveTribe__DelegateSignature
	 */
	struct AShooterGameMode_OnRemoveTribe__DelegateSignature_Params
	{
	public:
		int32_t                                                    TribeId;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.OnRemovePlayerFromTribe__DelegateSignature
	 */
	struct AShooterGameMode_OnRemovePlayerFromTribe__DelegateSignature_Params
	{
	public:
		int32_t                                                    TribeId;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    PlayerDataID;                                            // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.OnPostLogin__DelegateSignature
	 */
	struct AShooterGameMode_OnPostLogin__DelegateSignature_Params
	{
	public:
		class APlayerController*                                   NewPlayer;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.OnNotifyDamage__DelegateSignature
	 */
	struct AShooterGameMode_OnNotifyDamage__DelegateSignature_Params
	{
	public:
		class AActor*                                              Victim;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DamageAmount;                                            // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KCMD[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0010(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AController*                                         EventInstigator;                                         // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.OnLogout
	 */
	struct AShooterGameMode_OnLogout_Params
	{
	public:
		class AController*                                         Exiting;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.OnLandscapeLevelUnloaded
	 */
	struct AShooterGameMode_OnLandscapeLevelUnloaded_Params
	{	};

	/**
	 * Function ShooterGame.ShooterGameMode.OnLandscapeLevelLoaded
	 */
	struct AShooterGameMode_OnLandscapeLevelLoaded_Params
	{	};

	/**
	 * Function ShooterGame.ShooterGameMode.OnKilled__DelegateSignature
	 */
	struct AShooterGameMode_OnKilled__DelegateSignature_Params
	{
	public:
		class AController*                                         Killer;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AController*                                         KilledPlayer;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APawn*                                               KilledPawn;                                              // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UDamageType*                                         DamageType;                                              // 0x0018(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.OnAddNewTribe__DelegateSignature
	 */
	struct AShooterGameMode_OnAddNewTribe__DelegateSignature_Params
	{
	public:
		class AShooterPlayerState*                                 PlayerOwner;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              TribeName;                                               // 0x0008(0x0010)  (Parm, ZeroConstructor)
		struct FTribeGovernment                                    TribeGovernment;                                         // 0x0018(0x0014)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.MissionTriggerEndOverlap__DelegateSignature
	 */
	struct AShooterGameMode_MissionTriggerEndOverlap__DelegateSignature_Params
	{
	public:
		class AMissionTrigger*                                     Trigger;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                TriggerKey;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              OtherActor;                                              // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0018(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    OtherBodyIndex;                                          // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.MissionTriggerBeginOverlap__DelegateSignature
	 */
	struct AShooterGameMode_MissionTriggerBeginOverlap__DelegateSignature_Params
	{
	public:
		class AMissionTrigger*                                     Trigger;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                TriggerKey;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              OtherActor;                                              // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 OtherComp;                                               // 0x0018(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    OtherBodyIndex;                                          // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.LoadedWorld
	 */
	struct AShooterGameMode_LoadedWorld_Params
	{	};

	/**
	 * Function ShooterGame.ShooterGameMode.KickPlayerController
	 */
	struct AShooterGameMode_KickPlayerController_Params
	{
	public:
		class APlayerController*                                   thePC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              KickMessage;                                             // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.KickAllPlayersAndReload
	 */
	struct AShooterGameMode_KickAllPlayersAndReload_Params
	{	};

	/**
	 * Function ShooterGame.ShooterGameMode.IsTimeSinceMissionDeactivated
	 */
	struct AShooterGameMode_IsTimeSinceMissionDeactivated_Params
	{
	public:
		class UClass*                                              MissionType;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CheckTimeSince;                                          // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceTrueAtZeroTime;                                    // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000D(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.IsPlayerControllerAllowedToJoinNoCheck
	 */
	struct AShooterGameMode_IsPlayerControllerAllowedToJoinNoCheck_Params
	{
	public:
		class AShooterPlayerController*                            ForPlayer;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.IsPlayerControllerAllowedToExclusiveJoin
	 */
	struct AShooterGameMode_IsPlayerControllerAllowedToExclusiveJoin_Params
	{
	public:
		class AShooterPlayerController*                            ForPlayer;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.IsPlayerAllowedToCheat
	 */
	struct AShooterGameMode_IsPlayerAllowedToCheat_Params
	{
	public:
		class AShooterPlayerController*                            ForPlayer;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.InitOptionString
	 */
	struct AShooterGameMode_InitOptionString_Params
	{
	public:
		class FString                                              Commandline;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Section;                                                 // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Option;                                                  // 0x0020(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.InitOptionInteger
	 */
	struct AShooterGameMode_InitOptionInteger_Params
	{
	public:
		class FString                                              Commandline;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Section;                                                 // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Option;                                                  // 0x0020(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    CurrentValue;                                            // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.InitOptionFloat
	 */
	struct AShooterGameMode_InitOptionFloat_Params
	{
	public:
		class FString                                              Commandline;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Section;                                                 // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Option;                                                  // 0x0020(0x0010)  (Parm, ZeroConstructor)
		float                                                      CurrentValue;                                            // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.InitOptionBool
	 */
	struct AShooterGameMode_InitOptionBool_Params
	{
	public:
		class FString                                              Commandline;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Section;                                                 // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Option;                                                  // 0x0020(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bDefaultValue;                                           // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.InitGameStateDataSets
	 */
	struct AShooterGameMode_InitGameStateDataSets_Params
	{	};

	/**
	 * Function ShooterGame.ShooterGameMode.IncrementNumDeaths
	 */
	struct AShooterGameMode_IncrementNumDeaths_Params
	{
	public:
		class FString                                              PlayerDataID;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.HandleNewPlayer
	 */
	struct AShooterGameMode_HandleNewPlayer_Params
	{
	public:
		class AShooterPlayerController*                            NewPlayer;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalPlayerData*                                   PlayerData;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   PlayerCharacter;                                         // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsFromLogin;                                            // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0019(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.GetTribeDataBlueprint
	 */
	struct AShooterGameMode_GetTribeDataBlueprint_Params
	{
	public:
		int32_t                                                    TribeId;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_OF3L[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTribeData                                          ReturnValue;                                             // 0x0008(0x0138)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.GetStringOption
	 */
	struct AShooterGameMode_GetStringOption_Params
	{
	public:
		class FString                                              Section;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              OptionName;                                              // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.GetSessionTimeString
	 */
	struct AShooterGameMode_GetSessionTimeString_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.GetServerSettingsFloat
	 */
	struct AShooterGameMode_GetServerSettingsFloat_Params
	{
	public:
		class FString                                              KeyValue;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		float                                                      OutFloat;                                                // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.GetServerName
	 */
	struct AShooterGameMode_GetServerName_Params
	{
	public:
		bool                                                       bNumbersAndLettersOnly;                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_GH0K[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.GetPlayerDataByInt
	 */
	struct AShooterGameMode_GetPlayerDataByInt_Params
	{
	public:
		uint64_t                                                   PlayerDataIDInt;                                         // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalPlayerData*                                   ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.GetPlayerData
	 */
	struct AShooterGameMode_GetPlayerData_Params
	{
	public:
		class FString                                              PlayerDataID;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class UPrimalPlayerData*                                   ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.GetOverlappingDinoCharactersOfTeamAndClass
	 */
	struct AShooterGameMode_GetOverlappingDinoCharactersOfTeamAndClass_Params
	{
	public:
		struct FVector                                             AtLocation;                                              // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      OverlapRange;                                            // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              DinoClass;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    DinoTeam;                                                // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bExactClassMatch;                                        // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreClass;                                            // 0x001D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_0ZZN[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class APrimalDinoCharacter*>                        ReturnValue;                                             // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.GetNumDeaths
	 */
	struct AShooterGameMode_GetNumDeaths_Params
	{
	public:
		class FString                                              PlayerDataID;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.GetNumberOfLivePlayersOnTribe
	 */
	struct AShooterGameMode_GetNumberOfLivePlayersOnTribe_Params
	{
	public:
		class FString                                              TribeName;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.GetLaunchOptionFloat
	 */
	struct AShooterGameMode_GetLaunchOptionFloat_Params
	{
	public:
		class FString                                              LaunchOptionKey;                                         // 0x0000(0x0010)  (Parm, ZeroConstructor)
		float                                                      ReturnVal;                                               // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.GetLastMissionDeactivatedUtcTime
	 */
	struct AShooterGameMode_GetLastMissionDeactivatedUtcTime_Params
	{
	public:
		class UClass*                                              MissionType;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.GetIntOptionIni
	 */
	struct AShooterGameMode_GetIntOptionIni_Params
	{
	public:
		class FString                                              Section;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              OptionName;                                              // 0x0010(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    ReturnValue;                                             // 0x0020(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.GetFloatOptionIni
	 */
	struct AShooterGameMode_GetFloatOptionIni_Params
	{
	public:
		class FString                                              Section;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              OptionName;                                              // 0x0010(0x0010)  (Parm, ZeroConstructor)
		float                                                      ReturnValue;                                             // 0x0020(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.GetBoolOptionIni
	 */
	struct AShooterGameMode_GetBoolOptionIni_Params
	{
	public:
		class FString                                              Section;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              OptionName;                                              // 0x0010(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bDefaultValue;                                           // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0021(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.ForceRepopulateFoliageAtPoint
	 */
	struct AShooterGameMode_ForceRepopulateFoliageAtPoint_Params
	{
	public:
		struct FVector                                             AtPoint;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxRangeFromPoint;                                       // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MaxNumFoliages;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_E5JH[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              RepopulatedEmitter;                                      // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             StructureDownTraceVector;                                // 0x0020(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             StructureUpTraceVector;                                  // 0x002C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bDontCheckForOverlaps;                                   // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_786W[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    TriggeredByTeamID;                                       // 0x003C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCheckAreaAroundEachIndividualFoliage;                   // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_4Y0M[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      RadiusAroundEachIndivitualFoliageToCheck;                // 0x0044(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.ForceRepopulateAllHarvestElements
	 */
	struct AShooterGameMode_ForceRepopulateAllHarvestElements_Params
	{
	public:
		struct FVector                                             AtPoint;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxRangeFromPoint;                                       // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.ForceCreateTribe
	 */
	struct AShooterGameMode_ForceCreateTribe_Params
	{
	public:
		class FString                                              TribeName;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    TeamOverride;                                            // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.ForceAddPlayerToTribe
	 */
	struct AShooterGameMode_ForceAddPlayerToTribe_Params
	{
	public:
		class AShooterPlayerState*                                 ForPlayerState;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              TribeName;                                               // 0x0008(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.CountOverlappingDinoCharactersOfTeamAndClass
	 */
	struct AShooterGameMode_CountOverlappingDinoCharactersOfTeamAndClass_Params
	{
	public:
		struct FVector                                             AtLocation;                                              // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      OverlapRange;                                            // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              DinoClass;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    DinoTeam;                                                // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bExactClassMatch;                                        // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreClass;                                            // 0x001D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_711D[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x0020(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.ClearLastMissionDeactivatedTime
	 */
	struct AShooterGameMode_ClearLastMissionDeactivatedTime_Params
	{
	public:
		class UClass*                                              MissionType;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.CheckJoinInProgress
	 */
	struct AShooterGameMode_CheckJoinInProgress_Params
	{
	public:
		bool                                                       bIsFromLogin;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_OMVI[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APlayerController*                                   NewPlayer;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.CharacterPossessionByPlayer__DelegateSignature
	 */
	struct AShooterGameMode_CharacterPossessionByPlayer__DelegateSignature_Params
	{
	public:
		class APrimalCharacter*                                    TheCharacter;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APlayerController*                                   ByPlayerController;                                      // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.BPPreSpawnedDino
	 */
	struct AShooterGameMode_BPPreSpawnedDino_Params
	{
	public:
		class APrimalDinoCharacter*                                theDino;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.BPIsSpawnpointPreferred
	 */
	struct AShooterGameMode_BPIsSpawnpointPreferred_Params
	{
	public:
		class APlayerStart*                                        SpawnPoint;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AController*                                         Player;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.BPIsSpawnpointAllowed
	 */
	struct AShooterGameMode_BPIsSpawnpointAllowed_Params
	{
	public:
		class APlayerStart*                                        SpawnPoint;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AController*                                         Player;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.AreTribesAllied
	 */
	struct AShooterGameMode_AreTribesAllied_Params
	{
	public:
		int32_t                                                    TribeID1;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    TribeID2;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.AllowTaming
	 */
	struct AShooterGameMode_AllowTaming_Params
	{
	public:
		int32_t                                                    ForTeam;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.AllowDamage
	 */
	struct AShooterGameMode_AllowDamage_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    TargetingTeam1;                                          // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    TargetingTeam2;                                          // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreDamageIfAllied;                                   // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0011(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameMode.AddToTribeLog
	 */
	struct AShooterGameMode_AddToTribeLog_Params
	{
	public:
		int32_t                                                    TribeId;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_TCLW[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              NewLog;                                                  // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.SaveIntToConfig
	 */
	struct ACustomGameMode_SaveIntToConfig_Params
	{
	public:
		int32_t                                                    IntValue;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_DUP8[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              KeyValue;                                                // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.SaveFloatToConfig
	 */
	struct ACustomGameMode_SaveFloatToConfig_Params
	{
	public:
		float                                                      IntValue;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_FQMJ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              KeyValue;                                                // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.SaveBoolToConfig
	 */
	struct ACustomGameMode_SaveBoolToConfig_Params
	{
	public:
		bool                                                       IntValue;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QIXT[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              KeyValue;                                                // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.OnUpdateTribeData
	 */
	struct ACustomGameMode_OnUpdateTribeData_Params
	{
	public:
		struct FTribeData                                          NewTribeData;                                            // 0x0000(0x0138)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0138(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.OnRemoveTribe
	 */
	struct ACustomGameMode_OnRemoveTribe_Params
	{
	public:
		int32_t                                                    TribeId;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.OnPlayerCanRestart
	 */
	struct ACustomGameMode_OnPlayerCanRestart_Params
	{
	public:
		class APlayerController*                                   Player;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.OnIsUsedSpawnPointStillSupported
	 */
	struct ACustomGameMode_OnIsUsedSpawnPointStillSupported_Params
	{
	public:
		class APlayerStart*                                        SpawnPoint;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AController*                                         Player;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.OnIsSpawnpointAllowed
	 */
	struct ACustomGameMode_OnIsSpawnpointAllowed_Params
	{
	public:
		class APlayerStart*                                        SpawnPoint;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AController*                                         Player;                                                  // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.OnInitOptionEvent
	 */
	struct ACustomGameMode_OnInitOptionEvent_Params
	{
	public:
		class FString                                              Options;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.OnInitGameState
	 */
	struct ACustomGameMode_OnInitGameState_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.OnInitGame
	 */
	struct ACustomGameMode_OnInitGame_Params
	{
	public:
		class FString                                              MapName;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Options;                                                 // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ErrorMessage;                                            // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0030(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.OnHandleLeavingMap
	 */
	struct ACustomGameMode_OnHandleLeavingMap_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.OnDoGameCommand
	 */
	struct ACustomGameMode_OnDoGameCommand_Params
	{
	public:
		class FString                                              TheCommand;                                              // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.CustomGameMode.OnAllowRenameTribe
	 */
	struct ACustomGameMode_OnAllowRenameTribe_Params
	{
	public:
		class AShooterPlayerState*                                 ForPlayerState;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              TribeName;                                               // 0x0008(0x0010)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.OnAllowNotifyRemotePlayerDeath
	 */
	struct ACustomGameMode_OnAllowNotifyRemotePlayerDeath_Params
	{
	public:
		class AShooterCharacter*                                   forChar;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.OnAllowModifyStatusValue
	 */
	struct ACustomGameMode_OnAllowModifyStatusValue_Params
	{
	public:
		class UPrimalCharacterStatusComponent*                     forComp;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		EPrimalCharacterStatusValue                                ValueType;                                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QK4W[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      amount;                                                  // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.OnAllowClearTribe
	 */
	struct ACustomGameMode_OnAllowClearTribe_Params
	{
	public:
		class AShooterPlayerState*                                 ForPlayerState;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.OnAllowAddXP
	 */
	struct ACustomGameMode_OnAllowAddXP_Params
	{
	public:
		class UPrimalCharacterStatusComponent*                     forComp;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.OnAllowAddToTribe
	 */
	struct ACustomGameMode_OnAllowAddToTribe_Params
	{
	public:
		class AShooterPlayerState*                                 ForPlayerState;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FTribeData                                          MyNewTribe;                                              // 0x0008(0x0138)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0140(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.OnAdjustDamage
	 */
	struct ACustomGameMode_OnAdjustDamage_Params
	{
	public:
		class AActor*                                              Victim;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DefaultDamage;                                           // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_P1PO[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDamageEvent                                        DamageEvent;                                             // 0x0010(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AController*                                         EventInstigator;                                         // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0040(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.MakeTribeData
	 */
	struct ACustomGameMode_MakeTribeData_Params
	{
	public:
		class FString                                              TribeName;                                               // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
		int32_t                                                    OwnerPlayerDataID;                                       // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    TribeId;                                                 // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class FString>                                      MembersPlayerName;                                       // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor)
		TArray<int32_t>                                            MembersPlayerDataID;                                     // 0x0028(0x0010)  (Parm, OutParm, ZeroConstructor)
		TArray<int32_t>                                            TribeAdmins;                                             // 0x0038(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bSetGovernment;                                          // 0x0048(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7OAE[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTribeGovernment                                    TribeGovernment;                                         // 0x004C(0x0014)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FPrimalPlayerCharacterConfigStructReplicated> MembersConfigs;                                          // 0x0060(0x0010)  (Parm, OutParm, ZeroConstructor)
		struct FTribeData                                          ReturnValue;                                             // 0x0070(0x0138)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.CustomGameMode.KickPlayer
	 */
	struct ACustomGameMode_KickPlayer_Params
	{
	public:
		class APlayerController*                                   NewPlayer;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.IsInAllowedToCheatList
	 */
	struct ACustomGameMode_IsInAllowedToCheatList_Params
	{
	public:
		class APlayerController*                                   NewPlayer;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.InitOptionFloatToINI
	 */
	struct ACustomGameMode_InitOptionFloatToINI_Params
	{
	public:
		class FString                                              Options;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
		float                                                      FloatValue;                                              // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JZT7[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              KeyValue;                                                // 0x0018(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.GetValueFromINI
	 */
	struct ACustomGameMode_GetValueFromINI_Params
	{
	public:
		class FString                                              KeyValue;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.GetIntValueFromINI
	 */
	struct ACustomGameMode_GetIntValueFromINI_Params
	{
	public:
		class FString                                              KeyValue;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.GetIniFloatValue
	 */
	struct ACustomGameMode_GetIniFloatValue_Params
	{
	public:
		class FString                                              Section;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              KeyValue;                                                // 0x0010(0x0010)  (Parm, ZeroConstructor)
		float                                                      ReturnValue;                                             // 0x0020(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.GetFloatValueFromINI
	 */
	struct ACustomGameMode_GetFloatValueFromINI_Params
	{
	public:
		class FString                                              KeyValue;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.GetBoolValueFromINI
	 */
	struct ACustomGameMode_GetBoolValueFromINI_Params
	{
	public:
		class FString                                              KeyValue;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.CleanUpSotfNotificationManager
	 */
	struct ACustomGameMode_CleanUpSotfNotificationManager_Params
	{	};

	/**
	 * Function ShooterGame.CustomGameMode.CheckForCommand
	 */
	struct ACustomGameMode_CheckForCommand_Params
	{
	public:
		class FString                                              CommandName;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameMode.BreakTribeData
	 */
	struct ACustomGameMode_BreakTribeData_Params
	{
	public:
		struct FTribeData                                          Data;                                                    // 0x0000(0x0138)  (ConstParm, Parm)
		class FString                                              TribeName;                                               // 0x0138(0x0010)  (Parm, OutParm, ZeroConstructor)
		int32_t                                                    OwnerPlayerDataID;                                       // 0x0148(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    TribeId;                                                 // 0x014C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class FString>                                      MembersPlayerName;                                       // 0x0150(0x0010)  (Parm, OutParm, ZeroConstructor)
		TArray<int32_t>                                            MembersPlayerDataID;                                     // 0x0160(0x0010)  (Parm, OutParm, ZeroConstructor)
		TArray<int32_t>                                            TribeAdmins;                                             // 0x0170(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bSetGovernment;                                          // 0x0180(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_BS89[0x3];                                   // 0x0181(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTribeGovernment                                    TribeGovernment;                                         // 0x0184(0x0014)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FPrimalPlayerCharacterConfigStructReplicated> MembersConfigs;                                          // 0x0198(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.StartMassTeleport
	 */
	struct AShooterGameState_StartMassTeleport_Params
	{
	public:
		struct FMassTeleportData                                   MassTeleportData;                                        // 0x0000(0x00D0)  (Parm, OutParm)
		struct FTeleportDestination                                TeleportDestination;                                     // 0x00D0(0x0028)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AActor*                                              InitiatingActor;                                         // 0x00F8(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      TeleportActors;                                          // 0x0100(0x0010)  (Parm, ZeroConstructor)
		class UClass*                                              BuffToApply;                                             // 0x0110(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TeleportDuration;                                        // 0x0118(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TeleportRadius;                                          // 0x011C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTeleportingSnapsToGround;                               // 0x0120(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bMaintainRotation;                                       // 0x0121(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0122(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.ShouldMassTeleportMoveActor
	 */
	struct AShooterGameState_ShouldMassTeleportMoveActor_Params
	{
	public:
		class AActor*                                              forActor;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_LO5T[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FMassTeleportData                                   WithMassTeleportData;                                    // 0x0010(0x00D0)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x00E0(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.SetNextEnvironmentIndex
	 */
	struct AShooterGameState_SetNextEnvironmentIndex_Params
	{
	public:
		int32_t                                                    newNextEnvironmentIndex;                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.SetEnvironmentIndex
	 */
	struct AShooterGameState_SetEnvironmentIndex_Params
	{
	public:
		int32_t                                                    newEnvironmentIndex;                                     // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.RemoveRelevantPOIActor
	 */
	struct AShooterGameState_RemoveRelevantPOIActor_Params
	{
	public:
		class AActor*                                              POI;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.QueueExplorerNoteForDeferredUnlock
	 */
	struct AShooterGameState_QueueExplorerNoteForDeferredUnlock_Params
	{
	public:
		int32_t                                                    ExplorerNoteIndex;                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.PrepareActorForMassTeleport
	 */
	struct AShooterGameState_PrepareActorForMassTeleport_Params
	{
	public:
		class AActor*                                              PrepareActor;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_AB0X[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FMassTeleportData                                   WithMassTeleportData;                                    // 0x0010(0x00D0)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.ShooterGameState.OnRep_SupportedSpawnRegions
	 */
	struct AShooterGameState_OnRep_SupportedSpawnRegions_Params
	{	};

	/**
	 * Function ShooterGame.ShooterGameState.OnRep_ReplicateLocalizedChatRadius
	 */
	struct AShooterGameState_OnRep_ReplicateLocalizedChatRadius_Params
	{	};

	/**
	 * Function ShooterGame.ShooterGameState.OnRep_ReplicateLiveTuningOverloadChunks
	 */
	struct AShooterGameState_OnRep_ReplicateLiveTuningOverloadChunks_Params
	{	};

	/**
	 * Function ShooterGame.ShooterGameState.OnHTTPPostResponse__DelegateSignature
	 */
	struct AShooterGameState_OnHTTPPostResponse__DelegateSignature_Params
	{
	public:
		bool                                                       bSuccess;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_EC1N[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              StringResult;                                            // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.OnHTTPGetProcessed__DelegateSignature
	 */
	struct AShooterGameState_OnHTTPGetProcessed__DelegateSignature_Params
	{
	public:
		bool                                                       bSuccess;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KHSL[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              StringResult;                                            // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.OnDinoUploaded__DelegateSignature
	 */
	struct AShooterGameState_OnDinoUploaded__DelegateSignature_Params
	{
	public:
		class APrimalDinoCharacter*                                theDino;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.OnDinoDownloaded__DelegateSignature
	 */
	struct AShooterGameState_OnDinoDownloaded__DelegateSignature_Params
	{
	public:
		class APrimalDinoCharacter*                                theDino;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            TamerController;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.NetUpdateOfflinePvPLiveTeams
	 */
	struct AShooterGameState_NetUpdateOfflinePvPLiveTeams_Params
	{
	public:
		TArray<int32_t>                                            NewPreventOfflinePvPLiveTeams;                           // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.NetUpdateOfflinePvPExpiringTeams
	 */
	struct AShooterGameState_NetUpdateOfflinePvPExpiringTeams_Params
	{
	public:
		TArray<int32_t>                                            NewPreventOfflinePvPExpiringTeams;                       // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
		TArray<double>                                             NewPreventOfflinePvPExpiringTimes;                       // 0x0010(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.NetAddFloatingText
	 */
	struct AShooterGameState_NetAddFloatingText_Params
	{
	public:
		struct FVector                                             AtLocation;                                              // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_9ZYU[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              FloatingTextString;                                      // 0x0010(0x0010)  (Parm, ZeroConstructor)
		struct FColor                                              FloatingTextColor;                                       // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScaleX;                                                  // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScaleY;                                                  // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TextLifeSpan;                                            // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             TextVelocity;                                            // 0x0030(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MinScale;                                                // 0x003C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      FadeInTime;                                              // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      FadeOutTime;                                             // 0x0044(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    OnlySendToTeamID;                                        // 0x0048(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.NetAddFloatingDamageText
	 */
	struct AShooterGameState_NetAddFloatingDamageText_Params
	{
	public:
		struct FVector                                             AtLocation;                                              // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    DamageAmount;                                            // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    FromTeamID;                                              // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    OnlySendToTeamID;                                        // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.Multi_SpawnCosmeticActor
	 */
	struct AShooterGameState_Multi_SpawnCosmeticActor_Params
	{
	public:
		class UClass*                                              SpawnActorOfClass;                                       // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             SpawnAtLocation;                                         // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            SpawnWithRotation;                                       // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.LoadedWorld
	 */
	struct AShooterGameState_LoadedWorld_Params
	{	};

	/**
	 * Function ShooterGame.ShooterGameState.IsValidMassTeleportData
	 */
	struct AShooterGameState_IsValidMassTeleportData_Params
	{
	public:
		struct FMassTeleportData                                   CheckData;                                               // 0x0000(0x00D0)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x00D0(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.IsTeamIDInvincible
	 */
	struct AShooterGameState_IsTeamIDInvincible_Params
	{
	public:
		int32_t                                                    TargetingTeamID;                                         // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bInvincibleOnlyWhenOffline;                              // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0005(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.IsMassTeleportInProgress
	 */
	struct AShooterGameState_IsMassTeleportInProgress_Params
	{
	public:
		class AActor*                                              InitiatingActor;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.IsEngramClassHidden
	 */
	struct AShooterGameState_IsEngramClassHidden_Params
	{
	public:
		class UClass*                                              ForItemClass;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.HTTPPostRequest
	 */
	struct AShooterGameState_HTTPPostRequest_Params
	{
	public:
		class FString                                              InURL;                                                   // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              Content;                                                 // 0x0010(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.HTTPGetRequest
	 */
	struct AShooterGameState_HTTPGetRequest_Params
	{
	public:
		class FString                                              InURL;                                                   // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.HandleInitializedGameState
	 */
	struct AShooterGameState_HandleInitializedGameState_Params
	{	};

	/**
	 * Function ShooterGame.ShooterGameState.GetOfflineDamagePreventionTime
	 */
	struct AShooterGameState_GetOfflineDamagePreventionTime_Params
	{
	public:
		int32_t                                                    TargetingTeamID;                                         // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_VNMV[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		double                                                     ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.GetNetworkTimeDelta
	 */
	struct AShooterGameState_GetNetworkTimeDelta_Params
	{
	public:
		class AShooterGameState*                                   GameState;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     netTime;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTimeUntil;                                              // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_PPXE[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		double                                                     ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.GetItemMaxQuantityOverride
	 */
	struct AShooterGameState_GetItemMaxQuantityOverride_Params
	{
	public:
		class UClass*                                              ForClass;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FMaxItemQuantityOverride                            OutMaxQuantity;                                          // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.GetIniArray
	 */
	struct AShooterGameState_GetIniArray_Params
	{
	public:
		class FString                                              SectionName;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<struct FGameIniData>                                ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterGameState.GetDayTimeString
	 */
	struct AShooterGameState_GetDayTimeString_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterGameState.GetCleanServerSessionName
	 */
	struct AShooterGameState_GetCleanServerSessionName_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterGameState.DisplayWelcomeUI
	 */
	struct AShooterGameState_DisplayWelcomeUI_Params
	{	};

	/**
	 * Function ShooterGame.ShooterGameState.CancelMassTeleport
	 */
	struct AShooterGameState_CancelMassTeleport_Params
	{
	public:
		class AActor*                                              WithInitiatingActor;                                     // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.BPDrawGameStateHUD
	 */
	struct AShooterGameState_BPDrawGameStateHUD_Params
	{
	public:
		class AShooterHUD*                                         HUD;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.BaseSpawnBuffAndAttachToCharacter
	 */
	struct AShooterGameState_BaseSpawnBuffAndAttachToCharacter_Params
	{
	public:
		class UClass*                                              Buff;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalCharacter*                                    PrimalCharacter;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ExperiencePoints;                                        // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_7J1Y[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalBuff*                                         ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.BaseProjectWorldToScreenPosition
	 */
	struct AShooterGameState_BaseProjectWorldToScreenPosition_Params
	{
	public:
		struct FVector                                             WorldLocation;                                           // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JHW6[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APlayerController*                                   thePC;                                                   // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.BaseIsTribeID
	 */
	struct AShooterGameState_BaseIsTribeID_Params
	{
	public:
		int32_t                                                    TeamId;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.BaseGetCustomActors
	 */
	struct AShooterGameState_BaseGetCustomActors_Params
	{
	public:
		class FName                                                SearchCustomTag;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class ACustomActorList*                                    ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.BaseGetAllShooterControllers
	 */
	struct AShooterGameState_BaseGetAllShooterControllers_Params
	{
	public:
		TArray<class AShooterPlayerController*>                    ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterGameState.BaseGetAllShooterCharactersOfTeam
	 */
	struct AShooterGameState_BaseGetAllShooterCharactersOfTeam_Params
	{
	public:
		int32_t                                                    KillerTeam;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ONTB[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AShooterCharacter*>                           ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterGameState.BaseGetAllShooterCharacters
	 */
	struct AShooterGameState_BaseGetAllShooterCharacters_Params
	{
	public:
		TArray<class AShooterCharacter*>                           ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterGameState.BaseGetAllDinoCharactersOfTeam
	 */
	struct AShooterGameState_BaseGetAllDinoCharactersOfTeam_Params
	{
	public:
		int32_t                                                    KillerTeam;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_DXK5[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class APrimalDinoCharacter*>                        ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterGameState.BaseDrawTileOnCanvas
	 */
	struct AShooterGameState_BaseDrawTileOnCanvas_Params
	{
	public:
		class AShooterHUD*                                         HUD;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTexture*                                            Tex;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      X;                                                       // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Y;                                                       // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      XL;                                                      // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      YL;                                                      // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      U;                                                       // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      V;                                                       // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      UL;                                                      // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      VL;                                                      // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FColor                                              DrawColor;                                               // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.AllowDownloadDino
	 */
	struct AShooterGameState_AllowDownloadDino_Params
	{
	public:
		class UClass*                                              TheDinoClass;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.AllowDinoTame
	 */
	struct AShooterGameState_AllowDinoTame_Params
	{
	public:
		class APrimalDinoCharacter*                                dinoChar;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            ForPC;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.AllowDinoClassTame
	 */
	struct AShooterGameState_AllowDinoClassTame_Params
	{
	public:
		class UClass*                                              DinoCharClass;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            ForPC;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.AddRelevantPOIActor
	 */
	struct AShooterGameState_AddRelevantPOIActor_Params
	{
	public:
		class AActor*                                              POI;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameState.AddFloatingText
	 */
	struct AShooterGameState_AddFloatingText_Params
	{
	public:
		struct FVector                                             AtLocation;                                              // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_C5X8[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              FloatingTextString;                                      // 0x0010(0x0010)  (Parm, ZeroConstructor)
		struct FColor                                              FloatingTextColor;                                       // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScaleX;                                                  // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ScaleY;                                                  // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TextLifeSpan;                                            // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             TextVelocity;                                            // 0x0030(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MinScale;                                                // 0x003C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      FadeInTime;                                              // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      FadeOutTime;                                             // 0x0044(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.SpawnBuffAndAttachToCharacter
	 */
	struct ACustomGameState_SpawnBuffAndAttachToCharacter_Params
	{
	public:
		class UClass*                                              Buff;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalCharacter*                                    PrimalCharacter;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ExperiencePoints;                                        // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1Z28[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalBuff*                                         ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.SetActionReportItem
	 */
	struct ACustomGameState_SetActionReportItem_Params
	{
	public:
		struct FActionReportItem                                   Data;                                                    // 0x0000(0x0050)  (Parm, OutParm)
		class FString                                              PlayerName;                                              // 0x0050(0x0010)  (Parm, ZeroConstructor)
		class FString                                              TribeName;                                               // 0x0060(0x0010)  (Parm, ZeroConstructor)
		class FString                                              TimeOfDeath;                                             // 0x0070(0x0010)  (Parm, ZeroConstructor)
		class FString                                              LevelOfDeath;                                            // 0x0080(0x0010)  (Parm, ZeroConstructor)
		class FString                                              DeathMessage;                                            // 0x0090(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.ProjectWorldToScreenPosition
	 */
	struct ACustomGameState_ProjectWorldToScreenPosition_Params
	{
	public:
		struct FVector                                             WorldLocation;                                           // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_07GQ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APlayerController*                                   thePC;                                                   // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.OnSetHudEvent
	 */
	struct ACustomGameState_OnSetHudEvent_Params
	{	};

	/**
	 * Function ShooterGame.CustomGameState.OnOverrideDynamicMusic
	 */
	struct ACustomGameState_OnOverrideDynamicMusic_Params
	{
	public:
		class APrimalCharacter*                                    forCharacter;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USoundBase*                                          ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.OnNotifyPlayerDied
	 */
	struct ACustomGameState_OnNotifyPlayerDied_Params
	{
	public:
		class AShooterCharacter*                                   theShooterChar;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            prevController;                                          // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APawn*                                               InstigatingPawn;                                         // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.OnHasGameModeMatchStarted
	 */
	struct ACustomGameState_OnHasGameModeMatchStarted_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.OnHandleActorEvent
	 */
	struct ACustomGameState_OnHandleActorEvent_Params
	{
	public:
		class AActor*                                              forActor;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                NameParam;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             VecParam;                                                // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.OnForceOccludedFloatingHUD
	 */
	struct ACustomGameState_OnForceOccludedFloatingHUD_Params
	{
	public:
		class AActor*                                              anActor;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            ForPC;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.OnExtraShooterCharacterTick
	 */
	struct ACustomGameState_OnExtraShooterCharacterTick_Params
	{
	public:
		class AShooterCharacter*                                   forChar;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.OnDrawingHUDNotifications
	 */
	struct ACustomGameState_OnDrawingHUDNotifications_Params
	{
	public:
		class AShooterHUD*                                         HUD;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.OnDrawHUD
	 */
	struct ACustomGameState_OnDrawHUD_Params
	{
	public:
		class AShooterHUD*                                         HUD;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.OnDrawExtraPlayerFloatingHUD
	 */
	struct ACustomGameState_OnDrawExtraPlayerFloatingHUD_Params
	{
	public:
		class AShooterHUD*                                         HUD;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   theShooterChar;                                          // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtLoc;                                                   // 0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.OnCheckGameStateIfCanRespawn
	 */
	struct ACustomGameState_OnCheckGameStateIfCanRespawn_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.OnAllowTribeManager
	 */
	struct ACustomGameState_OnAllowTribeManager_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.OnAllowTribeManagement
	 */
	struct ACustomGameState_OnAllowTribeManagement_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.OnAllowStartSupplyCrateSpawns
	 */
	struct ACustomGameState_OnAllowStartSupplyCrateSpawns_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.OnAllowShowPlayerHudUI
	 */
	struct ACustomGameState_OnAllowShowPlayerHudUI_Params
	{
	public:
		class APrimalCharacter*                                    ForPawn;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.OnAllowRemoveItems
	 */
	struct ACustomGameState_OnAllowRemoveItems_Params
	{
	public:
		class UPrimalInventoryComponent*                           ForInv;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            PC;                                                      // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalItem*                                         anItemToTransfer;                                        // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.OnAllowPopUps
	 */
	struct ACustomGameState_OnAllowPopUps_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.OnAllowOrbitCamera
	 */
	struct ACustomGameState_OnAllowOrbitCamera_Params
	{
	public:
		class APrimalCharacter*                                    forCharacter;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.OnAllowFastTravel
	 */
	struct ACustomGameState_OnAllowFastTravel_Params
	{
	public:
		class APrimalStructureBed*                                 ForBed;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            ForPC;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.OnAllowDaytimeTransitionSounds
	 */
	struct ACustomGameState_OnAllowDaytimeTransitionSounds_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.OnAllowCreateSurvivor
	 */
	struct ACustomGameState_OnAllowCreateSurvivor_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.MakePlayerDeathNotification
	 */
	struct ACustomGameState_MakePlayerDeathNotification_Params
	{
	public:
		class FString                                              PlayerDeathStringEnemy;                                  // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              PlayerDeathStringAlly;                                   // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class FString                                              PlayerDeathStringYou;                                    // 0x0020(0x0010)  (Parm, ZeroConstructor)
		class FString                                              DeathReason;                                             // 0x0030(0x0010)  (Parm, ZeroConstructor)
		TArray<class FString>                                      DeadPlayerNames;                                         // 0x0040(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bIsTribeDeath;                                           // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NL7U[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              DeathTribeName;                                          // 0x0058(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    TargetingTeamID;                                         // 0x0068(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_9QKZ[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              LinkedPlayerID;                                          // 0x0070(0x0010)  (Parm, ZeroConstructor)
		TArray<struct FPrimalPlayerCharacterConfigStructReplicated> PlayersData;                                             // 0x0080(0x0010)  (Parm, ZeroConstructor)
		struct FPlayerDeathNotification                            ReturnValue;                                             // 0x0090(0x0088)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.CustomGameState.MakeBattleTribeData
	 */
	struct ACustomGameState_MakeBattleTribeData_Params
	{
	public:
		class FString                                              TribeName;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    TribeId;                                                 // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_I19P[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FBattleTribeData                                    ReturnValue;                                             // 0x0018(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.CustomGameState.MakeBattlePlayerData
	 */
	struct ACustomGameState_MakeBattlePlayerData_Params
	{
	public:
		class FString                                              PlayerName;                                              // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bConnected;                                              // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAlive;                                                  // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_V1ZF[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    TribeId;                                                 // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              PlayerId;                                                // 0x0018(0x0010)  (Parm, ZeroConstructor)
		struct FBattlePlayerData                                   ReturnValue;                                             // 0x0028(0x0020)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.CustomGameState.KickPlayer
	 */
	struct ACustomGameState_KickPlayer_Params
	{
	public:
		class APlayerController*                                   Controller;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              Reason;                                                  // 0x0008(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.IsTribeID
	 */
	struct ACustomGameState_IsTribeID_Params
	{
	public:
		int32_t                                                    TeamId;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.IsAuthorityRole
	 */
	struct ACustomGameState_IsAuthorityRole_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.HideUIScene
	 */
	struct ACustomGameState_HideUIScene_Params
	{
	public:
		class UClass*                                              SceneClass;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.GetTimeSeconds
	 */
	struct ACustomGameState_GetTimeSeconds_Params
	{
	public:
		double                                                     ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.GetPlayerDatasForTribe
	 */
	struct ACustomGameState_GetPlayerDatasForTribe_Params
	{
	public:
		int32_t                                                    TribeId;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_518Y[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FBattlePlayerData>                           AllPlayerDatas;                                          // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<struct FBattlePlayerData>                           ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.CustomGameState.GetPawnName
	 */
	struct ACustomGameState_GetPawnName_Params
	{
	public:
		class APawn*                                               Pawn;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.CustomGameState.GetPawnKillerName
	 */
	struct ACustomGameState_GetPawnKillerName_Params
	{
	public:
		class APawn*                                               Pawn;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.CustomGameState.GetDeathNotificationText
	 */
	struct ACustomGameState_GetDeathNotificationText_Params
	{
	public:
		class AShooterCharacter*                                   theShooterChar;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APawn*                                               InstigatingPawn;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              Killer;                                                  // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		class FString                                              KillerAndTribe;                                          // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor)
		class FString                                              theNotificationStringYou;                                // 0x0030(0x0010)  (Parm, OutParm, ZeroConstructor)
		class FString                                              theNotificationStringAlly;                               // 0x0040(0x0010)  (Parm, OutParm, ZeroConstructor)
		class FString                                              theNotificationStringEnemy;                              // 0x0050(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.GetCustomActors
	 */
	struct ACustomGameState_GetCustomActors_Params
	{
	public:
		class FName                                                SearchCustomTag;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class ACustomActorList*                                    ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.GetAllShooterControllers
	 */
	struct ACustomGameState_GetAllShooterControllers_Params
	{
	public:
		TArray<class AShooterPlayerController*>                    ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.CustomGameState.GetAllShooterCharactersOfTeam
	 */
	struct ACustomGameState_GetAllShooterCharactersOfTeam_Params
	{
	public:
		int32_t                                                    KillerTeam;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QAOY[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AShooterCharacter*>                           ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.CustomGameState.GetAllShooterCharacters
	 */
	struct ACustomGameState_GetAllShooterCharacters_Params
	{
	public:
		TArray<class AShooterCharacter*>                           ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.CustomGameState.GetAllDinoCharactersOfTeam
	 */
	struct ACustomGameState_GetAllDinoCharactersOfTeam_Params
	{
	public:
		int32_t                                                    KillerTeam;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_8BJ5[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class APrimalDinoCharacter*>                        ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.CustomGameState.DrawTileOnCanvas
	 */
	struct ACustomGameState_DrawTileOnCanvas_Params
	{
	public:
		class AShooterHUD*                                         HUD;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UTexture*                                            Tex;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      X;                                                       // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Y;                                                       // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      XL;                                                      // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      YL;                                                      // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      U;                                                       // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      V;                                                       // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      UL;                                                      // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      VL;                                                      // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FColor                                              DrawColor;                                               // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.CreateDeathNotification
	 */
	struct ACustomGameState_CreateDeathNotification_Params
	{
	public:
		class AShooterCharacter*                                   theShooterChar;                                          // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            prevController;                                          // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APawn*                                               InstigatingPawn;                                         // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MaxNumberOfRespawns;                                     // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_AX6U[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FPlayerDeathNotification                            ReturnValue;                                             // 0x0020(0x0088)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.CustomGameState.CreateDamageEvent
	 */
	struct ACustomGameState_CreateDamageEvent_Params
	{
	public:
		struct FDamageEvent                                        ReturnValue;                                             // 0x0000(0x0020)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.CustomGameState.CheckTimeSince
	 */
	struct ACustomGameState_CheckTimeSince_Params
	{
	public:
		float                                                      Time;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.BroadcastActorCustomEvent
	 */
	struct ACustomGameState_BroadcastActorCustomEvent_Params
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                EventCustomName;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              EventCustomString;                                       // 0x0010(0x0010)  (Parm, ZeroConstructor)
		class AActor*                                              InstigatorActor;                                         // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.BreakTribeData
	 */
	struct ACustomGameState_BreakTribeData_Params
	{
	public:
		struct FTribeData                                          InData;                                                  // 0x0000(0x0138)  (ConstParm, Parm)
		class FString                                              TribeName;                                               // 0x0138(0x0010)  (Parm, OutParm, ZeroConstructor)
		int32_t                                                    OwnerPlayerDataID;                                       // 0x0148(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    TribeId;                                                 // 0x014C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class FString>                                      MembersPlayerName;                                       // 0x0150(0x0010)  (Parm, OutParm, ZeroConstructor)
		TArray<int32_t>                                            MembersPlayerDataID;                                     // 0x0160(0x0010)  (Parm, OutParm, ZeroConstructor)
		TArray<int32_t>                                            TribeAdmins;                                             // 0x0170(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bSetGovernment;                                          // 0x0180(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_PCIO[0x7];                                   // 0x0181(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FPrimalPlayerCharacterConfigStructReplicated> MembersConfigs;                                          // 0x0188(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.BreakPlayerDeathNotification
	 */
	struct ACustomGameState_BreakPlayerDeathNotification_Params
	{
	public:
		struct FPlayerDeathNotification                            Data;                                                    // 0x0000(0x0088)  (ConstParm, Parm)
		class FString                                              PlayerDeathStringEnemy;                                  // 0x0088(0x0010)  (Parm, OutParm, ZeroConstructor)
		class FString                                              PlayerDeathStringAlly;                                   // 0x0098(0x0010)  (Parm, OutParm, ZeroConstructor)
		class FString                                              PlayerDeathStringYou;                                    // 0x00A8(0x0010)  (Parm, OutParm, ZeroConstructor)
		class FString                                              DeathReason;                                             // 0x00B8(0x0010)  (Parm, OutParm, ZeroConstructor)
		TArray<class FString>                                      DeadPlayerNames;                                         // 0x00C8(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bIsTribeDeath;                                           // 0x00D8(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_VJWG[0x7];                                   // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              DeathTribeName;                                          // 0x00E0(0x0010)  (Parm, OutParm, ZeroConstructor)
		int32_t                                                    TargetingTeamID;                                         // 0x00F0(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5LIW[0x4];                                   // 0x00F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              LinkedPlayerID;                                          // 0x00F8(0x0010)  (Parm, OutParm, ZeroConstructor)
		TArray<struct FPrimalPlayerCharacterConfigStructReplicated> PlayersData;                                             // 0x0108(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.BreakBattleTribeData
	 */
	struct ACustomGameState_BreakBattleTribeData_Params
	{
	public:
		struct FBattleTribeData                                    InData;                                                  // 0x0000(0x0018)  (ConstParm, Parm)
		class FString                                              TribeName;                                               // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor)
		int32_t                                                    TribeId;                                                 // 0x0028(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.BreakBattlePlayerData
	 */
	struct ACustomGameState_BreakBattlePlayerData_Params
	{
	public:
		struct FBattlePlayerData                                   Data;                                                    // 0x0000(0x0020)  (ConstParm, Parm)
		class FString                                              PlayerName;                                              // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bConnected;                                              // 0x0030(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAlive;                                                  // 0x0031(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JIDE[0x2];                                   // 0x0032(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    TribeId;                                                 // 0x0034(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              PlayerId;                                                // 0x0038(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.CustomGameState.BreakActionReportItem
	 */
	struct ACustomGameState_BreakActionReportItem_Params
	{
	public:
		struct FActionReportItem                                   Data;                                                    // 0x0000(0x0050)  (ConstParm, Parm, OutParm, ReferenceParm)
		class FString                                              PlayerName;                                              // 0x0050(0x0010)  (Parm, OutParm, ZeroConstructor)
		class FString                                              TribeName;                                               // 0x0060(0x0010)  (Parm, OutParm, ZeroConstructor)
		class FString                                              TimeOfDeath;                                             // 0x0070(0x0010)  (Parm, OutParm, ZeroConstructor)
		class FString                                              LevelOfDeath;                                            // 0x0080(0x0010)  (Parm, OutParm, ZeroConstructor)
		class FString                                              DeathMessage;                                            // 0x0090(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterGameUserSettings.GetUserSettings
	 */
	struct UShooterGameUserSettings_GetUserSettings_Params
	{
	public:
		class UShooterGameUserSettings*                            ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameViewportClient.IsAnyUIConsumingInput
	 */
	struct UShooterGameViewportClient_IsAnyUIConsumingInput_Params
	{
	public:
		class UClass*                                              PrimalUIClass;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            Owner;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalUI*                                           ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameViewportClient.GetViewportClient
	 */
	struct UShooterGameViewportClient_GetViewportClient_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UShooterGameViewportClient*                          ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameViewportClient.GetUIScenesFromClass
	 */
	struct UShooterGameViewportClient_GetUIScenesFromClass_Params
	{
	public:
		class UClass*                                              PrimalUIClass;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class UPrimalUI*>                                   ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterGameViewportClient.GetUISceneFromClass
	 */
	struct UShooterGameViewportClient_GetUISceneFromClass_Params
	{
	public:
		class UClass*                                              PrimalUIClass;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterPlayerController*                            Owner;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalUI*                                           ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameViewportClient.GetGameWorld
	 */
	struct UShooterGameViewportClient_GetGameWorld_Params
	{
	public:
		class UWorld*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameViewportClient.AnyScenesWithMouseCapture
	 */
	struct UShooterGameViewportClient_AnyScenesWithMouseCapture_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterGameViewportClient.AnyNonInventoryScenesWithMouseCapture
	 */
	struct UShooterGameViewportClient_AnyNonInventoryScenesWithMouseCapture_Params
	{
	public:
		class AShooterPlayerController*                            ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterImpactEffect.StaticSpawnImpactEffects
	 */
	struct AShooterImpactEffect_StaticSpawnImpactEffects_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ImpactEffectClass;                                       // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FHitResult                                          SurfaceHit;                                              // 0x0010(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector                                             ShotDirection;                                           // 0x0098(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       useShotDirectionForImpactEffectActorClassRotation;       // 0x00A4(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       attachImpactEffectActorToSurfaceHitActor;                // 0x00A5(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_IAWV[0x2];                                   // 0x00A6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UParticleSystemComponent*                            ReturnValue;                                             // 0x00A8(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerCameraManager.StartCameraTransition
	 */
	struct AShooterPlayerCameraManager_StartCameraTransition_Params
	{
	public:
		float                                                      TransitionDuration;                                      // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bUseFinalModifiedViewTarget;                             // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerCameraManager.IsInFrustum
	 */
	struct AShooterPlayerCameraManager_IsInFrustum_Params
	{
	public:
		struct FVector                                             BoxLocation;                                             // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             BoxExtents;                                              // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerCameraManager.GetTPVCollisionHeight
	 */
	struct AShooterPlayerCameraManager_GetTPVCollisionHeight_Params
	{
	public:
		class AActor*                                              forTarget;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIncludeHeightScalar;                                    // 0x0008(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_PM1X[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerCameraManager.GetColorCodedStencil
	 */
	struct AShooterPlayerCameraManager_GetColorCodedStencil_Params
	{
	public:
		EStencilAlliance                                           InAlliance;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_YP1I[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      HealthPercent;                                           // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerCameraManager.GetCameraStyle
	 */
	struct AShooterPlayerCameraManager_GetCameraStyle_Params
	{
	public:
		class FName                                                ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerCameraManager.GetCameraAimViewPoint
	 */
	struct AShooterPlayerCameraManager_GetCameraAimViewPoint_Params
	{
	public:
		struct FVector                                             OutCamLoc;                                               // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            OutCamRot;                                               // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerCameraManager.GetCahcedCameraStyle
	 */
	struct AShooterPlayerCameraManager_GetCahcedCameraStyle_Params
	{
	public:
		class FName                                                ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterPlayerCameraManager.GetBlendableFromMIC
	 */
	struct AShooterPlayerCameraManager_GetBlendableFromMIC_Params
	{
	public:
		class UMaterialInterface*                                  InInterface;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObject*                                             ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.UsesAmmo
	 */
	struct AShooterWeapon_UsesAmmo_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.UseAmmo
	 */
	struct AShooterWeapon_UseAmmo_Params
	{
	public:
		int32_t                                                    UseAmmoAmountOverride;                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.ToggleAccessory
	 */
	struct AShooterWeapon_ToggleAccessory_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.StopWeaponAnimation
	 */
	struct AShooterWeapon_StopWeaponAnimation_Params
	{
	public:
		struct FWeaponAnim                                         Animation;                                               // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bReplicate;                                              // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReplicateToInstigator;                                  // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.StopSecondaryActionEvent
	 */
	struct AShooterWeapon_StopSecondaryActionEvent_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.StopFire
	 */
	struct AShooterWeapon_StopFire_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.StopAltFire
	 */
	struct AShooterWeapon_StopAltFire_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.StartUnequipEvent
	 */
	struct AShooterWeapon_StartUnequipEvent_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.StartUnequip
	 */
	struct AShooterWeapon_StartUnequip_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.StartSecondaryActionEvent
	 */
	struct AShooterWeapon_StartSecondaryActionEvent_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.StartFire
	 */
	struct AShooterWeapon_StartFire_Params
	{
	public:
		bool                                                       bFromGamepad;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.StartAltFire
	 */
	struct AShooterWeapon_StartAltFire_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.SetAmmoInClip
	 */
	struct AShooterWeapon_SetAmmoInClip_Params
	{
	public:
		int32_t                                                    newAmmo;                                                 // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.SetAccessoryEnabled
	 */
	struct AShooterWeapon_SetAccessoryEnabled_Params
	{
	public:
		bool                                                       bEnabled;                                                // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.ServerToggleAccessory
	 */
	struct AShooterWeapon_ServerToggleAccessory_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.ServerStopSecondaryAction
	 */
	struct AShooterWeapon_ServerStopSecondaryAction_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.ServerStopFire
	 */
	struct AShooterWeapon_ServerStopFire_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.ServerStopAltFire
	 */
	struct AShooterWeapon_ServerStopAltFire_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.ServerStartSecondaryAction
	 */
	struct AShooterWeapon_ServerStartSecondaryAction_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.ServerStartReload
	 */
	struct AShooterWeapon_ServerStartReload_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.ServerStartFire
	 */
	struct AShooterWeapon_ServerStartFire_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.ServerStartAltFire
	 */
	struct AShooterWeapon_ServerStartAltFire_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.ServerSetColorizeRegion
	 */
	struct AShooterWeapon_ServerSetColorizeRegion_Params
	{
	public:
		int32_t                                                    theRegion;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bValToUse;                                               // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.SelectMeleeAttackAnim
	 */
	struct AShooterWeapon_SelectMeleeAttackAnim_Params
	{
	public:
		struct FWeaponAnim                                         ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.ReloadWeapon
	 */
	struct AShooterWeapon_ReloadWeapon_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.PlayWeaponSound
	 */
	struct AShooterWeapon_PlayWeaponSound_Params
	{
	public:
		class USoundCue*                                           Sound;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UAudioComponent*                                     ReturnValue;                                             // 0x0008(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.PlayWeaponBreakAnimation
	 */
	struct AShooterWeapon_PlayWeaponBreakAnimation_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.PlayWeaponAnimationEx
	 */
	struct AShooterWeapon_PlayWeaponAnimationEx_Params
	{
	public:
		struct FWeaponAnim                                         Animation;                                               // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      InPlayRate;                                              // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPlayBothFirstAndThirdPerson;                            // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReplicate;                                              // 0x0015(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReplicateToInstigator;                                  // 0x0016(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPauseOnFinish1P;                                        // 0x0017(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceTickPoseAndServerUpdateMesh;                       // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceTickPoseOnServer;                                  // 0x0019(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_2DWC[0x2];                                   // 0x001A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x001C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.PlayWeaponAnimation
	 */
	struct AShooterWeapon_PlayWeaponAnimation_Params
	{
	public:
		struct FWeaponAnim                                         Animation;                                               // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bPlayBothFirstAndThirdPerson;                            // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReplicate;                                              // 0x0011(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReplicateToInstigator;                                  // 0x0012(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPauseOnFinish1P;                                        // 0x0013(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceTickPoseAndServerUpdateMesh;                       // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceTickPoseOnServer;                                  // 0x0015(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_WZ7C[0x2];                                   // 0x0016(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.PlayUseHarvestAnimation
	 */
	struct AShooterWeapon_PlayUseHarvestAnimation_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.OnRep_NetLoopedWeaponFire
	 */
	struct AShooterWeapon_OnRep_NetLoopedWeaponFire_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.OnRep_MyPawn
	 */
	struct AShooterWeapon_OnRep_MyPawn_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.OnRep_CurrentAmmoInClip
	 */
	struct AShooterWeapon_OnRep_CurrentAmmoInClip_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.OnRep_AccessoryToggle
	 */
	struct AShooterWeapon_OnRep_AccessoryToggle_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.OnInstigatorPlayDyingEvent
	 */
	struct AShooterWeapon_OnInstigatorPlayDyingEvent_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.OnAttachedToPawn
	 */
	struct AShooterWeapon_OnAttachedToPawn_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.IsPlayingWeaponAnimMontage
	 */
	struct AShooterWeapon_IsPlayingWeaponAnimMontage_Params
	{
	public:
		struct FWeaponAnim                                         WeaponAnimMontage;                                       // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      TimeFromEndToConsiderFinished;                           // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.IsOwningClient
	 */
	struct AShooterWeapon_IsOwningClient_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.IsLocallyOwned
	 */
	struct AShooterWeapon_IsLocallyOwned_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.IsInMeleeAttack
	 */
	struct AShooterWeapon_IsInMeleeAttack_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.IsFiring
	 */
	struct AShooterWeapon_IsFiring_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.IsClimbing
	 */
	struct AShooterWeapon_IsClimbing_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.HasInfiniteAmmo
	 */
	struct AShooterWeapon_HasInfiniteAmmo_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.GetWeaponMesh
	 */
	struct AShooterWeapon_GetWeaponMesh_Params
	{
	public:
		class USkeletalMeshComponent*                              ReturnValue;                                             // 0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.GetWeaponDamageMultiplier
	 */
	struct AShooterWeapon_GetWeaponDamageMultiplier_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.GetWeaponAttackPlayRate
	 */
	struct AShooterWeapon_GetWeaponAttackPlayRate_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.GetStandingAnimation
	 */
	struct AShooterWeapon_GetStandingAnimation_Params
	{
	public:
		float                                                      OutBlendInTime;                                          // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OutBlendOutTime;                                         // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UAnimSequence*                                       ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.GetPawnOwner
	 */
	struct AShooterWeapon_GetPawnOwner_Params
	{
	public:
		class AShooterCharacter*                                   ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.GetMuzzleLocation
	 */
	struct AShooterWeapon_GetMuzzleLocation_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.GetMuzzleDirection
	 */
	struct AShooterWeapon_GetMuzzleDirection_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.GetDebugInfoString
	 */
	struct AShooterWeapon_GetDebugInfoString_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.GetCurrentAmmoInClip
	 */
	struct AShooterWeapon_GetCurrentAmmoInClip_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.GetCurrentAmmo
	 */
	struct AShooterWeapon_GetCurrentAmmo_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.GetAdjustedAim
	 */
	struct AShooterWeapon_GetAdjustedAim_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.ForceUpdateClientAmmo
	 */
	struct AShooterWeapon_ForceUpdateClientAmmo_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.ForceTPVTargetingAnimation
	 */
	struct AShooterWeapon_ForceTPVTargetingAnimation_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.ForcesTPVCameraOffset
	 */
	struct AShooterWeapon_ForcesTPVCameraOffset_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.ForceMeshUpdate
	 */
	struct AShooterWeapon_ForceMeshUpdate_Params
	{
	public:
		bool                                                       bIsFirstPerson;                                          // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.FindComponentByName
	 */
	struct AShooterWeapon_FindComponentByName_Params
	{
	public:
		class FName                                                ComponentName;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USceneComponent*                                     ReturnValue;                                             // 0x0008(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.DoMeleeAttack
	 */
	struct AShooterWeapon_DoMeleeAttack_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.DoHandleFiring
	 */
	struct AShooterWeapon_DoHandleFiring_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.ConsumeAmmoItem
	 */
	struct AShooterWeapon_ConsumeAmmoItem_Params
	{
	public:
		int32_t                                                    Quantity;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.ClientStopSimulatingWeaponFire
	 */
	struct AShooterWeapon_ClientStopSimulatingWeaponFire_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.ClientStartReload
	 */
	struct AShooterWeapon_ClientStartReload_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.ClientStartMuzzleFX
	 */
	struct AShooterWeapon_ClientStartMuzzleFX_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.ClientSpawnMeleeEffects
	 */
	struct AShooterWeapon_ClientSpawnMeleeEffects_Params
	{
	public:
		struct FVector                                             Impact;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ShootDir;                                                // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.ClientSimulateWeaponFire
	 */
	struct AShooterWeapon_ClientSimulateWeaponFire_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.ClientSetClipAmmo
	 */
	struct AShooterWeapon_ClientSetClipAmmo_Params
	{
	public:
		int32_t                                                    NewClipAmmo;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOnlyUpdateItem;                                         // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.ClientPlayShieldHitAnim
	 */
	struct AShooterWeapon_ClientPlayShieldHitAnim_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.ClearClientReload
	 */
	struct AShooterWeapon_ClearClientReload_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.CheckItemAssocation
	 */
	struct AShooterWeapon_CheckItemAssocation_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.CanReload
	 */
	struct AShooterWeapon_CanReload_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.CanMeleeAttack
	 */
	struct AShooterWeapon_CanMeleeAttack_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.CanFire
	 */
	struct AShooterWeapon_CanFire_Params
	{
	public:
		bool                                                       bForceAllowSubmergedFiring;                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPWeaponZoom
	 */
	struct AShooterWeapon_BPWeaponZoom_Params
	{
	public:
		bool                                                       bZoomingIn;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPWeaponDealDamage
	 */
	struct AShooterWeapon_BPWeaponDealDamage_Params
	{
	public:
		struct FHitResult                                          Impact;                                                  // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector                                             ShootDir;                                                // 0x0088(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		int32_t                                                    DamageAmount;                                            // 0x0094(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              DamageType;                                              // 0x0098(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Impulse;                                                 // 0x00A0(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x00A4(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPWeaponCanFire
	 */
	struct AShooterWeapon_BPWeaponCanFire_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPTryFireWeapon
	 */
	struct AShooterWeapon_BPTryFireWeapon_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPToggleAccessoryFailed
	 */
	struct AShooterWeapon_BPToggleAccessoryFailed_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPToggleAccessory
	 */
	struct AShooterWeapon_BPToggleAccessory_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPStopMeleeAttack
	 */
	struct AShooterWeapon_BPStopMeleeAttack_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPStartEquippedNotify
	 */
	struct AShooterWeapon_BPStartEquippedNotify_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPSpawnMeleeEffects
	 */
	struct AShooterWeapon_BPSpawnMeleeEffects_Params
	{
	public:
		struct FVector                                             Impact;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ShootDir;                                                // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPShouldDealDamage
	 */
	struct AShooterWeapon_BPShouldDealDamage_Params
	{
	public:
		class AActor*                                              TestActor;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPRequestReload
	 */
	struct AShooterWeapon_BPRequestReload_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPRemainEquipped
	 */
	struct AShooterWeapon_BPRemainEquipped_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPPreventSwitchingWeapon
	 */
	struct AShooterWeapon_BPPreventSwitchingWeapon_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPPostSpawnMuzzleEffect
	 */
	struct AShooterWeapon_BPPostSpawnMuzzleEffect_Params
	{
	public:
		class UParticleSystemComponent*                            NewMuzzlePSC;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPOverrideRootRotationOffset
	 */
	struct AShooterWeapon_BPOverrideRootRotationOffset_Params
	{
	public:
		struct FRotator                                            InRootRotation;                                          // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPOverrideFPVMasterPoseComponent
	 */
	struct AShooterWeapon_BPOverrideFPVMasterPoseComponent_Params
	{
	public:
		class USkeletalMeshComponent*                              ReturnValue;                                             // 0x0000(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPOverrideAimDirection
	 */
	struct AShooterWeapon_BPOverrideAimDirection_Params
	{
	public:
		struct FVector                                             DesiredAimDirection;                                     // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPOnWeaponAnimPlayedNotify
	 */
	struct AShooterWeapon_BPOnWeaponAnimPlayedNotify_Params
	{
	public:
		struct FWeaponAnim                                         Animation;                                               // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      InPlayRate;                                              // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPlayBothFirstAndThirdPerson;                            // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReplicate;                                              // 0x0015(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReplicateToInstigator;                                  // 0x0016(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPauseOnFinish1P;                                        // 0x0017(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceTickPoseAndServerUpdateMesh;                       // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceTickPoseOnServer;                                  // 0x0019(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPOnStopTargeting
	 */
	struct AShooterWeapon_BPOnStopTargeting_Params
	{
	public:
		bool                                                       bFromGamepadLeft;                                        // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPOnStartTargeting
	 */
	struct AShooterWeapon_BPOnStartTargeting_Params
	{
	public:
		bool                                                       bFromGamepadLeft;                                        // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPOnScoped
	 */
	struct AShooterWeapon_BPOnScoped_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPOnBurstStarted
	 */
	struct AShooterWeapon_BPOnBurstStarted_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPOnBurstFinished
	 */
	struct AShooterWeapon_BPOnBurstFinished_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPModifyFOV
	 */
	struct AShooterWeapon_BPModifyFOV_Params
	{
	public:
		float                                                      inFOV;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPMeleeAttackStarted
	 */
	struct AShooterWeapon_BPMeleeAttackStarted_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPLostController
	 */
	struct AShooterWeapon_BPLostController_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPIsValidUnStasisCaster
	 */
	struct AShooterWeapon_BPIsValidUnStasisCaster_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPHandleMeleeAttack
	 */
	struct AShooterWeapon_BPHandleMeleeAttack_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPGlobalFireWeapon
	 */
	struct AShooterWeapon_BPGlobalFireWeapon_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPGetTPVCameraOffset
	 */
	struct AShooterWeapon_BPGetTPVCameraOffset_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPGetTargetingTooltipInfoLabel
	 */
	struct AShooterWeapon_BPGetTargetingTooltipInfoLabel_Params
	{
	public:
		class FText                                                ReturnValue;                                             // 0x0000(0x0018)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPGetSelectedMeleeAttackAnim
	 */
	struct AShooterWeapon_BPGetSelectedMeleeAttackAnim_Params
	{
	public:
		struct FWeaponAnim                                         ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPGetSeatingAnimation
	 */
	struct AShooterWeapon_BPGetSeatingAnimation_Params
	{
	public:
		class UAnimSequence*                                       ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPGetDebugInfoString
	 */
	struct AShooterWeapon_BPGetDebugInfoString_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPGetCrosshairColor
	 */
	struct AShooterWeapon_BPGetCrosshairColor_Params
	{
	public:
		struct FColor                                              ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPGetActorForTargetingTooltip
	 */
	struct AShooterWeapon_BPGetActorForTargetingTooltip_Params
	{
	public:
		class AActor*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPForceTPVTargetingAnimation
	 */
	struct AShooterWeapon_BPForceTPVTargetingAnimation_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPFireWeapon
	 */
	struct AShooterWeapon_BPFireWeapon_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPFiredWeapon
	 */
	struct AShooterWeapon_BPFiredWeapon_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPDrawHud
	 */
	struct AShooterWeapon_BPDrawHud_Params
	{
	public:
		class AShooterHUD*                                         HUD;                                                     // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPConstrainAspectRatio
	 */
	struct AShooterWeapon_BPConstrainAspectRatio_Params
	{
	public:
		float                                                      OutAspectRatio;                                          // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPCanToggleAccessory
	 */
	struct AShooterWeapon_BPCanToggleAccessory_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPCanMeleeAttack
	 */
	struct AShooterWeapon_BPCanMeleeAttack_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPCanEquip
	 */
	struct AShooterWeapon_BPCanEquip_Params
	{
	public:
		class AShooterCharacter*                                   ByCharacter;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPAppliedPrimalItemToWeapon
	 */
	struct AShooterWeapon_BPAppliedPrimalItemToWeapon_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPAnimNotifyCustomState_End
	 */
	struct AShooterWeapon_BPAnimNotifyCustomState_End_Params
	{
	public:
		class FName                                                CustomEventName;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USkeletalMeshComponent*                              MeshComp;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UAnimSequenceBase*                                   Animation;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UAnimNotifyState*                                    AnimNotifyObject;                                        // 0x0018(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPAnimNotifyCustomState_Begin
	 */
	struct AShooterWeapon_BPAnimNotifyCustomState_Begin_Params
	{
	public:
		class FName                                                CustomEventName;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USkeletalMeshComponent*                              MeshComp;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UAnimSequenceBase*                                   Animation;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TotalDuration;                                           // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_U3AZ[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UAnimNotifyState*                                    AnimNotifyObject;                                        // 0x0020(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPAnimNotifyCustomEvent
	 */
	struct AShooterWeapon_BPAnimNotifyCustomEvent_Params
	{
	public:
		class FName                                                CustomEventName;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USkeletalMeshComponent*                              MeshComp;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UAnimSequenceBase*                                   Animation;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UAnimNotify*                                         AnimNotifyObject;                                        // 0x0018(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPAllowNativeFireWeapon
	 */
	struct AShooterWeapon_BPAllowNativeFireWeapon_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BPAdjustAmmoPerShot
	 */
	struct AShooterWeapon_BPAdjustAmmoPerShot_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.BP_OnReloadNotify
	 */
	struct AShooterWeapon_BP_OnReloadNotify_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon.AllowUnequip
	 */
	struct AShooterWeapon_AllowUnequip_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.AllowTargeting
	 */
	struct AShooterWeapon_AllowTargeting_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon.AllowedToFire
	 */
	struct AShooterWeapon_AllowedToFire_Params
	{
	public:
		bool                                                       bForceAllowSubmergedFiring;                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0001(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Projectile.SetLockedTarget
	 */
	struct AShooterWeapon_Projectile_SetLockedTarget_Params
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsLocked;                                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Projectile.ServerFireProjectileEx
	 */
	struct AShooterWeapon_Projectile_ServerFireProjectileEx_Params
	{
	public:
		struct FVector                                             Origin;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector_NetQuantizeNormal                           ShootDir;                                                // 0x000C(0x000C)  (Parm)
		float                                                      Speed;                                                   // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    RandomSeed;                                              // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Projectile.ServerFireProjectile
	 */
	struct AShooterWeapon_Projectile_ServerFireProjectile_Params
	{
	public:
		struct FVector                                             Origin;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector_NetQuantizeNormal                           ShootDir;                                                // 0x000C(0x000C)  (Parm)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Projectile.OnUnHideProjectile
	 */
	struct AShooterWeapon_Projectile_OnUnHideProjectile_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_Projectile.OnHideProjectile
	 */
	struct AShooterWeapon_Projectile_OnHideProjectile_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_Projectile.Listener_LockOn_Update
	 */
	struct AShooterWeapon_Projectile_Listener_LockOn_Update_Params
	{
	public:
		bool                                                       Reset;                                                   // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Projectile.Listener_LockOn_Stop
	 */
	struct AShooterWeapon_Projectile_Listener_LockOn_Stop_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_Projectile.GetTrajectoryTarget
	 */
	struct AShooterWeapon_Projectile_GetTrajectoryTarget_Params
	{
	public:
		int32_t                                                    SubSteps;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TotalTime;                                               // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FHitResult                                          ReturnValue;                                             // 0x0008(0x0088)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Projectile.ClientsFireProjectileEx
	 */
	struct AShooterWeapon_Projectile_ClientsFireProjectileEx_Params
	{
	public:
		struct FVector                                             Origin;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector_NetQuantizeNormal                           ShootDir;                                                // 0x000C(0x000C)  (Parm)
		float                                                      Speed;                                                   // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    RandomSeed;                                              // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Projectile.ClientsFireProjectile
	 */
	struct AShooterWeapon_Projectile_ClientsFireProjectile_Params
	{
	public:
		struct FVector                                             Origin;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector_NetQuantizeNormal                           ShootDir;                                                // 0x000C(0x000C)  (Parm)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Projectile.CheckRefireTimer
	 */
	struct AShooterWeapon_Projectile_CheckRefireTimer_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_Projectile.BPSelectProjectileToFire
	 */
	struct AShooterWeapon_Projectile_BPSelectProjectileToFire_Params
	{
	public:
		class UClass*                                              ProjectileClassOverride;                                 // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USoundCue*                                           FireSoundOverride;                                       // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSpawnOnClient;                                          // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_O09V[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      OverrideMaxSpeed;                                        // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Projectile.BPOnSpawnedProjectile
	 */
	struct AShooterWeapon_Projectile_BPOnSpawnedProjectile_Params
	{
	public:
		class AShooterProjectile*                                  Projectile;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.UpdateTargetPhysics
	 */
	struct AShooterProjectile_UpdateTargetPhysics_Params
	{	};

	/**
	 * Function ShooterGame.ShooterProjectile.StopProjectileMovement
	 */
	struct AShooterProjectile_StopProjectileMovement_Params
	{	};

	/**
	 * Function ShooterGame.ShooterProjectile.SpawnImpactEffect
	 */
	struct AShooterProjectile_SpawnImpactEffect_Params
	{
	public:
		struct FHitResult                                          Impact;                                                  // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.RestartProjectileMovement
	 */
	struct AShooterProjectile_RestartProjectileMovement_Params
	{	};

	/**
	 * Function ShooterGame.ShooterProjectile.Reset
	 */
	struct AShooterProjectile_Reset_Params
	{	};

	/**
	 * Function ShooterGame.ShooterProjectile.ProjectileBounced
	 */
	struct AShooterProjectile_ProjectileBounced_Params
	{
	public:
		struct FHitResult                                          ImpactResult;                                            // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector                                             ImpactVelocity;                                          // 0x0088(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.PreventExplosionEmitter
	 */
	struct AShooterProjectile_PreventExplosionEmitter_Params
	{
	public:
		struct FHitResult                                          Impact;                                                  // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0088(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.OnTouch
	 */
	struct AShooterProjectile_OnTouch_Params
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.OnProjectileStop
	 */
	struct AShooterProjectile_OnProjectileStop_Params
	{
	public:
		struct FHitResult                                          HitResult;                                               // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.OnImpact
	 */
	struct AShooterProjectile_OnImpact_Params
	{
	public:
		struct FHitResult                                          HitResult;                                               // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       bFromReplication;                                        // 0x0088(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.OnExplode
	 */
	struct AShooterProjectile_OnExplode_Params
	{
	public:
		struct FHitResult                                          Result;                                                  // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.NetUpdateTimer
	 */
	struct AShooterProjectile_NetUpdateTimer_Params
	{	};

	/**
	 * Function ShooterGame.ShooterProjectile.NetResetTransformAndVelocity
	 */
	struct AShooterProjectile_NetResetTransformAndVelocity_Params
	{
	public:
		struct FVector                                             NewLocation;                                             // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            NewRotation;                                             // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             NewVelocity;                                             // 0x0018(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_98A6[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      NewMoveIgnoreActors;                                     // 0x0028(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.GetSocketForFinalTraceCheckFromInstigatorToDirectDamageVictim
	 */
	struct AShooterProjectile_GetSocketForFinalTraceCheckFromInstigatorToDirectDamageVictim_Params
	{
	public:
		class FName                                                ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.ExplodeAtLocation
	 */
	struct AShooterProjectile_ExplodeAtLocation_Params
	{
	public:
		struct FVector                                             AtLocation;                                              // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtNormal;                                                // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.Explode
	 */
	struct AShooterProjectile_Explode_Params
	{
	public:
		struct FHitResult                                          Impact;                                                  // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.DisableAndDestroy
	 */
	struct AShooterProjectile_DisableAndDestroy_Params
	{
	public:
		bool                                                       forceOnClient;                                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.DeactivateProjectileEffects
	 */
	struct AShooterProjectile_DeactivateProjectileEffects_Params
	{	};

	/**
	 * Function ShooterGame.ShooterProjectile.Colorize
	 */
	struct AShooterProjectile_Colorize_Params
	{	};

	/**
	 * Function ShooterGame.ShooterProjectile.ClientOnImpact
	 */
	struct AShooterProjectile_ClientOnImpact_Params
	{
	public:
		struct FVector                                             ProjectileLocation;                                      // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ProjectileRotation;                                      // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FHitResult                                          HitResult;                                               // 0x0018(0x0088)  (Parm)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.ClientNetImpactFX
	 */
	struct AShooterProjectile_ClientNetImpactFX_Params
	{
	public:
		struct FHitResult                                          HitResult;                                               // 0x0000(0x0088)  (Parm)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.ClientNetExplode
	 */
	struct AShooterProjectile_ClientNetExplode_Params
	{
	public:
		struct FHitResult                                          HitResult;                                               // 0x0000(0x0088)  (Parm)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.ClientNetDestroy
	 */
	struct AShooterProjectile_ClientNetDestroy_Params
	{	};

	/**
	 * Function ShooterGame.ShooterProjectile.ClearHomingTarget
	 */
	struct AShooterProjectile_ClearHomingTarget_Params
	{	};

	/**
	 * Function ShooterGame.ShooterProjectile.BPSpawnedFragments
	 */
	struct AShooterProjectile_BPSpawnedFragments_Params
	{
	public:
		TArray<class AShooterProjectile*>                          FragmentArray;                                           // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.BPProjectileBounced
	 */
	struct AShooterProjectile_BPProjectileBounced_Params
	{
	public:
		struct FHitResult                                          ImpactResult;                                            // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector                                             ImpactVelocity;                                          // 0x0088(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.BPInitVelocity
	 */
	struct AShooterProjectile_BPInitVelocity_Params
	{
	public:
		struct FVector                                             ShootDirection;                                          // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.BPInitializedVelocity
	 */
	struct AShooterProjectile_BPInitializedVelocity_Params
	{
	public:
		struct FVector                                             InVelocity;                                              // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      CustomSpeed;                                             // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.BPIgnoreRadialDamageVictim
	 */
	struct AShooterProjectile_BPIgnoreRadialDamageVictim_Params
	{
	public:
		class AActor*                                              Victim;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.BPDestroyLikeDamage
	 */
	struct AShooterProjectile_BPDestroyLikeDamage_Params
	{	};

	/**
	 * Function ShooterGame.ShooterProjectile.BPDamageScalarApplied
	 */
	struct AShooterProjectile_BPDamageScalarApplied_Params
	{
	public:
		float                                                      Scalar;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.BPApplyExplosionDamageAndVFX
	 */
	struct AShooterProjectile_BPApplyExplosionDamageAndVFX_Params
	{
	public:
		struct FHitResult                                          Impact;                                                  // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       bForceSpawnExplosionEmitter;                             // 0x0088(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.BP_IgnoreProjectileImpact
	 */
	struct AShooterProjectile_BP_IgnoreProjectileImpact_Params
	{
	public:
		struct FHitResult                                          ImpactHit;                                               // 0x0000(0x0088)  (Parm)
		bool                                                       ReturnValue;                                             // 0x0088(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.ApplyDamageScalar
	 */
	struct AShooterProjectile_ApplyDamageScalar_Params
	{
	public:
		float                                                      Scalar;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterProjectile.AddMoveIgnoreActor
	 */
	struct AShooterProjectile_AddMoveIgnoreActor_Params
	{
	public:
		class AActor*                                              IgnoreActor;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalProjectileArrow.PickUpCheck
	 */
	struct APrimalProjectileArrow_PickUpCheck_Params
	{	};

	/**
	 * Function ShooterGame.PrimalProjectileArrow.PickedUp
	 */
	struct APrimalProjectileArrow_PickedUp_Params
	{
	public:
		class AShooterCharacter*                                   ByCharacter;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.VTraceSphereBP_IgnoreActorsArray
	 */
	struct UVictoryCore_VTraceSphereBP_IgnoreActorsArray_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FHitResult                                          HitOut;                                                  // 0x0020(0x0088)  (Parm, OutParm)
		float                                                      Radius;                                                  // 0x00A8(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_797A[0x4];                                   // 0x00AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ExtraIgnoreActors;                                       // 0x00B0(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class AActor*                                              InIgnoreActor;                                           // 0x00C0(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          Channel;                                                 // 0x00C8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_SIPL[0x3];                                   // 0x00C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    CollisionGroups;                                         // 0x00CC(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReturnPhysMaterial;                                     // 0x00D0(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x00D1(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_UL7P[0x2];                                   // 0x00D2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FName                                                TraceTag;                                                // 0x00D4(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DebugDrawDuration;                                       // 0x00DC(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x00E0(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.VTraceSphereBP
	 */
	struct UVictoryCore_VTraceSphereBP_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FHitResult                                          HitOut;                                                  // 0x0020(0x0088)  (Parm, OutParm)
		float                                                      Radius;                                                  // 0x00A8(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_HLNH[0x4];                                   // 0x00AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              ActorToIgnore;                                           // 0x00B0(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          Channel;                                                 // 0x00B8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_IVNP[0x3];                                   // 0x00B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    CollisionGroups;                                         // 0x00BC(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReturnPhysMaterial;                                     // 0x00C0(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x00C1(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_LKP3[0x2];                                   // 0x00C2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FName                                                TraceTag;                                                // 0x00C4(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XMHF[0x4];                                   // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              OtherActorToIgnore;                                      // 0x00D0(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              AnotherActorToIgnore;                                    // 0x00D8(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DebugDrawDuration;                                       // 0x00E0(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x00E4(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.VTraceSingleBP_IgnoreActorsArray
	 */
	struct UVictoryCore_VTraceSingleBP_IgnoreActorsArray_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FHitResult                                          OutHit;                                                  // 0x0008(0x0088)  (Parm, OutParm)
		struct FVector                                             Start;                                                   // 0x0090(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x009C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ExtraIgnoreActors;                                       // 0x00A8(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class AActor*                                              InIgnoreActor;                                           // 0x00B8(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          TraceChannel;                                            // 0x00C0(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_3G7R[0x3];                                   // 0x00C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    CollisionGroups;                                         // 0x00C4(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                TraceTag;                                                // 0x00C8(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReturnPhysMaterial;                                     // 0x00D0(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x00D1(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_PQK9[0x2];                                   // 0x00D2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      DebugDrawDuration;                                       // 0x00D4(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x00D8(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.VTraceSingleBP
	 */
	struct UVictoryCore_VTraceSingleBP_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FHitResult                                          OutHit;                                                  // 0x0008(0x0088)  (Parm, OutParm)
		struct FVector                                             Start;                                                   // 0x0090(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x009C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          TraceChannel;                                            // 0x00A8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NFI9[0x3];                                   // 0x00A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    CollisionGroups;                                         // 0x00AC(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                TraceTag;                                                // 0x00B0(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x00B8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_E42F[0x7];                                   // 0x00B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              ActorToIgnore;                                           // 0x00C0(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DebugDrawDuration;                                       // 0x00C8(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x00CC(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.VTraceShapeMultiBP
	 */
	struct UVictoryCore_VTraceShapeMultiBP_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FHitResult>                                  OutHits;                                                 // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		struct FVector                                             Start;                                                   // 0x0018(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0024(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ExtraIgnoreActors;                                       // 0x0030(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class AActor*                                              InIgnoreActor;                                           // 0x0040(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ShapeRadius;                                             // 0x0048(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ShapeHalfHeight;                                         // 0x004C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ShapeBoxExtent;                                          // 0x0050(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ShapeRotation;                                           // 0x005C(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          Channel;                                                 // 0x0068(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_76C1[0x3];                                   // 0x0069(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    CollisionGroups;                                         // 0x006C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReturnPhysMaterial;                                     // 0x0070(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x0071(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_6LYK[0x2];                                   // 0x0072(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FName                                                TraceTag;                                                // 0x0074(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DebugDrawDuration;                                       // 0x007C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0080(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.VTraceShapeBP
	 */
	struct UVictoryCore_VTraceShapeBP_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FHitResult                                          HitOut;                                                  // 0x0020(0x0088)  (Parm, OutParm)
		TArray<class AActor*>                                      ExtraIgnoreActors;                                       // 0x00A8(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class AActor*                                              InIgnoreActor;                                           // 0x00B8(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ShapeRadius;                                             // 0x00C0(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ShapeHalfHeight;                                         // 0x00C4(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ShapeBoxExtent;                                          // 0x00C8(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ShapeRotation;                                           // 0x00D4(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          Channel;                                                 // 0x00E0(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1CCM[0x3];                                   // 0x00E1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    CollisionGroups;                                         // 0x00E4(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReturnPhysMaterial;                                     // 0x00E8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x00E9(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_4II9[0x2];                                   // 0x00EA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FName                                                TraceTag;                                                // 0x00EC(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DebugDrawDuration;                                       // 0x00F4(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x00F8(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.VTraceMultiBP_IgnoreActorsArray
	 */
	struct UVictoryCore_VTraceMultiBP_IgnoreActorsArray_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FHitResult>                                  OutHits;                                                 // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		struct FVector                                             Start;                                                   // 0x0018(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0024(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ExtraIgnoreActors;                                       // 0x0030(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class AActor*                                              InIgnoreActor;                                           // 0x0040(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    CollisionGroups;                                         // 0x0048(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SphereRadius;                                            // 0x004C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             BoxExtent;                                               // 0x0050(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bReturnPhysMaterial;                                     // 0x005C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          TraceChannel;                                            // 0x005D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x005E(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_Z9FJ[0x1];                                   // 0x005F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FName                                                TraceTag;                                                // 0x0060(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceChannelForceOverlap;                               // 0x0068(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDoSort;                                                 // 0x0069(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bJustDoSphereOverlapAtStartLoc;                          // 0x006A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_G918[0x1];                                   // 0x006B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      DebugDrawDuration;                                       // 0x006C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0070(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.VTraceMultiBP
	 */
	struct UVictoryCore_VTraceMultiBP_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FHitResult>                                  OutHits;                                                 // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		struct FVector                                             Start;                                                   // 0x0018(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0024(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class AActor*                                              InIgnoreActor;                                           // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    CollisionGroups;                                         // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SphereRadius;                                            // 0x003C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             BoxExtent;                                               // 0x0040(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bReturnPhysMaterial;                                     // 0x004C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          TraceChannel;                                            // 0x004D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x004E(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_AQZR[0x1];                                   // 0x004F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FName                                                TraceTag;                                                // 0x0050(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceChannelForceOverlap;                               // 0x0058(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDoSort;                                                 // 0x0059(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_EZML[0x6];                                   // 0x005A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              AdditionalIgnoreActor;                                   // 0x0060(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              AnotherIgnoreActor;                                      // 0x0068(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bJustDoSphereOverlapAtStartLoc;                          // 0x0070(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XEA0[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      DebugDrawDuration;                                       // 0x0074(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0078(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.VTraceAgainstActorExpensive
	 */
	struct UVictoryCore_VTraceAgainstActorExpensive_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FHitResult                                          HitOut;                                                  // 0x0020(0x0088)  (Parm, OutParm)
		class AActor*                                              ActorToTraceAgainst;                                     // 0x00A8(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          Channel;                                                 // 0x00B0(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_UX9B[0x3];                                   // 0x00B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    CollisionGroups;                                         // 0x00B4(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SphereRadius;                                            // 0x00B8(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReturnPhysMaterial;                                     // 0x00BC(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x00BD(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_MVYT[0x2];                                   // 0x00BE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             BoxExtent;                                               // 0x00C0(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class FName                                                TraceTag;                                                // 0x00CC(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSort;                                                   // 0x00D4(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x00D5(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.VNewObjectTransient
	 */
	struct UVictoryCore_VNewObjectTransient_Params
	{
	public:
		class UClass*                                              classToUse;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObject*                                             ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.VNewObjectFromBlueprintOuter
	 */
	struct UVictoryCore_VNewObjectFromBlueprintOuter_Params
	{
	public:
		class UObject*                                             OuterObject;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              classToUse;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObject*                                             ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.VNewObjectFromBlueprint
	 */
	struct UVictoryCore_VNewObjectFromBlueprint_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              classToUse;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObject*                                             ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.VisualLog_Print
	 */
	struct UVictoryCore_VisualLog_Print_Params
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              Message;                                                 // 0x0008(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bIsError;                                                // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.VisualLog_Location
	 */
	struct UVictoryCore_VisualLog_Location_Params
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              Message;                                                 // 0x0008(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bIsError;                                                // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_LXMV[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             Location;                                                // 0x001C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        PointColor;                                              // 0x0028(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Size;                                                    // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAlsoPrintMessage;                                       // 0x003C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.VisualLog_LineSegment
	 */
	struct UVictoryCore_VisualLog_LineSegment_Params
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              Message;                                                 // 0x0008(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bIsError;                                                // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_4HEK[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             Start;                                                   // 0x001C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0028(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x0034(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Thickness;                                               // 0x0044(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAlsoPrintMessage;                                       // 0x0048(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.VisualLog_Histogram
	 */
	struct UVictoryCore_VisualLog_Histogram_Params
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           DataSample;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                GraphName;                                               // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                DataName;                                                // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.VisualLog_AxisAlignedBox
	 */
	struct UVictoryCore_VisualLog_AxisAlignedBox_Params
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              Message;                                                 // 0x0008(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bIsError;                                                // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_40SY[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             BoxMin;                                                  // 0x001C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             BoxMax;                                                  // 0x0028(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        BoxColor;                                                // 0x0034(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAlsoPrintMessage;                                       // 0x0044(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ViewTrailer
	 */
	struct UVictoryCore_ViewTrailer_Params
	{
	public:
		bool                                                       bAnimatedSeriesTrailer;                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bARK2Trailer;                                            // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ViewDirectionAngleOffset
	 */
	struct UVictoryCore_ViewDirectionAngleOffset_Params
	{
	public:
		struct FVector                                             ViewDirection;                                           // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             RightVector;                                             // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      AngleOffsetDegrees;                                      // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxAngleDegreesBeforeInterpToUp;                         // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0020(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.VectorDistance
	 */
	struct UVictoryCore_VectorDistance_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.UseCooldown
	 */
	struct UVictoryCore_UseCooldown_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     CooldownClock;                                           // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.UnRegisterComponentBP
	 */
	struct UVictoryCore_UnRegisterComponentBP_Params
	{
	public:
		class UActorComponent*                                     Component;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.TrimArray_Vector
	 */
	struct UVictoryCore_TrimArray_Vector_Params
	{
	public:
		TArray<struct FVector>                                     Array;                                                   // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    MaxLength;                                               // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRemoveFromEnd;                                          // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.TrimArray_Float
	 */
	struct UVictoryCore_TrimArray_Float_Params
	{
	public:
		TArray<float>                                              Array;                                                   // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    MaxLength;                                               // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRemoveFromEnd;                                          // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.TransformVectorByScreenProjectionGlobalTransform
	 */
	struct UVictoryCore_TransformVectorByScreenProjectionGlobalTransform_Params
	{
	public:
		struct FVector2D                                           outVec;                                                  // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.TraceProjectileArc
	 */
	struct UVictoryCore_TraceProjectileArc_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FProjectileArc                                      Arc;                                                     // 0x0008(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FHitResult                                          HitResult;                                               // 0x0038(0x0088)  (Parm, OutParm)
		struct FVector                                             EndLocation;                                             // 0x00C0(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      EndArcTime;                                              // 0x00CC(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ArcPeakLocation;                                         // 0x00D0(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxArcLength;                                            // 0x00DC(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x00E0(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		float                                                      ArcTimeStep;                                             // 0x00F0(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          CollisionChannel;                                        // 0x00F4(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceObjectTypeOnly;                                    // 0x00F5(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDrawDebug;                                              // 0x00F6(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_FGGW[0x1];                                   // 0x00F7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      DebugDrawDuration;                                       // 0x00F8(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x00FC(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.TimeSince_Utc
	 */
	struct UVictoryCore_TimeSince_Utc_Params
	{
	public:
		double                                                     OldTime;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.TimeSince_Network
	 */
	struct UVictoryCore_TimeSince_Network_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     OldTime;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.TimeSince
	 */
	struct UVictoryCore_TimeSince_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     OldTime;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.TimeSeconds
	 */
	struct UVictoryCore_TimeSeconds_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SupportsShaderModel5
	 */
	struct UVictoryCore_SupportsShaderModel5_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.StringToIntAscii
	 */
	struct UVictoryCore_StringToIntAscii_Params
	{
	public:
		class FString                                              SourceString;                                            // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    StringIndex;                                             // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.StringReferenceToClass
	 */
	struct UVictoryCore_StringReferenceToClass_Params
	{
	public:
		class FString                                              StringReference;                                         // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class UClass*                                              ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.StopMusic
	 */
	struct UVictoryCore_StopMusic_Params
	{	};

	/**
	 * Function ShooterGame.VictoryCore.StopMovie
	 */
	struct UVictoryCore_StopMovie_Params
	{	};

	/**
	 * Function ShooterGame.VictoryCore.StopCompanionEventForPlayer
	 */
	struct UVictoryCore_StopCompanionEventForPlayer_Params
	{
	public:
		class APrimalCharacter*                                    Player;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SteamOverlayOpenURL
	 */
	struct UVictoryCore_SteamOverlayOpenURL_Params
	{
	public:
		class FString                                              ToURL;                                                   // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.StaticGetTimeSince
	 */
	struct UVictoryCore_StaticGetTimeSince_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     Time;                                                    // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.StaticCheckForCommand
	 */
	struct UVictoryCore_StaticCheckForCommand_Params
	{
	public:
		class FString                                              CommandName;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.StartCompanionEventForPlayer
	 */
	struct UVictoryCore_StartCompanionEventForPlayer_Params
	{
	public:
		class APrimalCharacter*                                    Player;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FCompanionEventData                                 EventData;                                               // 0x0008(0x0050)  (Parm, OutParm, ReferenceParm)
		class AActor*                                              EventActor;                                              // 0x0058(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SplineLineTrace
	 */
	struct UVictoryCore_SplineLineTrace_Params
	{
	public:
		class USplineComponent*                                    SplineComponent;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<struct FHitResult>                                  OutHits;                                                 // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor)
		int32_t                                                    NumTracesPerSegment;                                     // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          Channel;                                                 // 0x002C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bStopOnBlockingHit;                                      // 0x002D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_MDCB[0x2];                                   // 0x002E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      DebugDrawDuration;                                       // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0034(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SphereOverlapFast
	 */
	struct UVictoryCore_SphereOverlapFast_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Loc;                                                     // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0014(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SpawnSaddleAttachedStructure
	 */
	struct UVictoryCore_SpawnSaddleAttachedStructure_Params
	{
	public:
		class APrimalDinoCharacter*                                ParentDino;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              StructureToSpawn;                                        // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x001C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalStructure*                                    ParentStructure;                                         // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bLinkToParent;                                           // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QVU8[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ConfigIndex;                                             // 0x0034(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                SKAttachmentSocketOrBoneName;                            // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalStructure*                                    ReturnValue;                                             // 0x0040(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SpawnCustomDino
	 */
	struct UVictoryCore_SpawnCustomDino_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             SpawnLocation;                                           // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            SpawnRotation;                                           // 0x0014(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FDinoSetup                                          DinoSetup;                                               // 0x0020(0x00F0)  (ConstParm, Parm, OutParm, ReferenceParm)
		class AShooterPlayerController*                            OwnerPlayerController;                                   // 0x0110(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DebugDrawDuration;                                       // 0x0118(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bApplyRotationToSpawnOffset;                             // 0x011C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bUseExactSpawnLocation;                                  // 0x011D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSkipAddingTamedLevels;                                  // 0x011E(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSuppressTamingNotifications;                            // 0x011F(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AMissionType*                                        Mission;                                                 // 0x0120(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ColorSet;                                                // 0x0128(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalDinoCharacter*                                ReturnValue;                                             // 0x0130(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SpawnBoxBrushActorFast
	 */
	struct UVictoryCore_SpawnBoxBrushActorFast_Params
	{
	public:
		class UClass*                                              BrushType;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_V5HC[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          BrushTransform;                                          // 0x0010(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             BoxExtent;                                               // 0x0040(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_175A[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class ABrush*                                              ReturnValue;                                             // 0x0050(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SpawnBoxBrushActor
	 */
	struct UVictoryCore_SpawnBoxBrushActor_Params
	{
	public:
		class UClass*                                              BrushType;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_9KIE[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          BrushTransform;                                          // 0x0010(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             BoxExtent;                                               // 0x0040(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5G8H[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class ABrush*                                              ReturnValue;                                             // 0x0050(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SpawnActorInWorld
	 */
	struct UVictoryCore_SpawnActorInWorld_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              anActorClass;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtLocation;                                              // 0x0010(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            AtRotation;                                              // 0x001C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class USceneComponent*                                     attachToComponent;                                       // 0x0028(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    dataIndex;                                               // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                attachSocketName;                                        // 0x0034(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_N1T6[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              OwnerActor;                                              // 0x0040(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APawn*                                               InstigatorPawn;                                          // 0x0048(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              ReturnValue;                                             // 0x0050(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SpawnActorDeferred
	 */
	struct UVictoryCore_SpawnActorDeferred_Params
	{
	public:
		class UClass*                                              Class;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UWorld*                                              inWorld;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x001C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class AActor*                                              Owner;                                                   // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APawn*                                               Instigator;                                              // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bNoCollisionFail;                                        // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_E039[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              ReturnValue;                                             // 0x0040(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SortPointsByDistance
	 */
	struct UVictoryCore_SortPointsByDistance_Params
	{
	public:
		struct FVector                                             fromLoc;                                                 // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_X05Z[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FVector>                                     Points;                                                  // 0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<struct FVector>                                     ReturnValue;                                             // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.SortActorsByType
	 */
	struct UVictoryCore_SortActorsByType_Params
	{
	public:
		TArray<class AActor*>                                      actors;                                                  // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class AActor*>                                      ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.SortActorsByTag
	 */
	struct UVictoryCore_SortActorsByTag_Params
	{
	public:
		int32_t                                                    tagIndex;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_TB59[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      actors;                                                  // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class AActor*>                                      ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.SortActorsByDistanceReturnNearest
	 */
	struct UVictoryCore_SortActorsByDistanceReturnNearest_Params
	{
	public:
		struct FVector                                             fromLoc;                                                 // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_GYP5[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      actors;                                                  // 0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bRemoveNullEntries;                                      // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QH6P[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              ReturnValue;                                             // 0x0028(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SortActorsByDistance
	 */
	struct UVictoryCore_SortActorsByDistance_Params
	{
	public:
		struct FVector                                             fromLoc;                                                 // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JP7P[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      actors;                                                  // 0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class AActor*>                                      ReturnValue;                                             // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.SimpleReplaceUnicodeWithSupportedAlternatives
	 */
	struct UVictoryCore_SimpleReplaceUnicodeWithSupportedAlternatives_Params
	{
	public:
		class FString                                              OriginalString;                                          // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.SimpleFloatString
	 */
	struct UVictoryCore_SimpleFloatString_Params
	{
	public:
		float                                                      inputVal;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ISS9[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.SimpleCurveInterpClampedVector
	 */
	struct UVictoryCore_SimpleCurveInterpClampedVector_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Alpha;                                                   // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ESimpleCurve                                               CurveType;                                               // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NXU3[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             ReturnValue;                                             // 0x0020(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SimpleCurveInterpClampedTransform
	 */
	struct UVictoryCore_SimpleCurveInterpClampedTransform_Params
	{
	public:
		struct FTransform                                          A;                                                       // 0x0000(0x0030)  (Parm, IsPlainOldData, NoDestructor)
		struct FTransform                                          B;                                                       // 0x0030(0x0030)  (Parm, IsPlainOldData, NoDestructor)
		float                                                      Alpha;                                                   // 0x0060(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ESimpleCurve                                               CurveType;                                               // 0x0064(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JZP9[0xB];                                   // 0x0065(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          ReturnValue;                                             // 0x0070(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SimpleCurveInterpClampedRotator
	 */
	struct UVictoryCore_SimpleCurveInterpClampedRotator_Params
	{
	public:
		struct FRotator                                            A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Alpha;                                                   // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bShortestPath;                                           // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ESimpleCurve                                               CurveType;                                               // 0x001D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_R34W[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FRotator                                            ReturnValue;                                             // 0x0020(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SimpleCurveInterpClampedLinearColor
	 */
	struct UVictoryCore_SimpleCurveInterpClampedLinearColor_Params
	{
	public:
		struct FLinearColor                                        A;                                                       // 0x0000(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        B;                                                       // 0x0010(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Alpha;                                                   // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ESimpleCurve                                               CurveType;                                               // 0x0024(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_13QF[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FLinearColor                                        ReturnValue;                                             // 0x0028(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SimpleCurveInterpClamped
	 */
	struct UVictoryCore_SimpleCurveInterpClamped_Params
	{
	public:
		float                                                      A;                                                       // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      B;                                                       // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Alpha;                                                   // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ESimpleCurve                                               CurveType;                                               // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_TBI8[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SimpleCurveEval
	 */
	struct UVictoryCore_SimpleCurveEval_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ESimpleCurve                                               CurveType;                                               // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KWW4[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ShowEditorNotification
	 */
	struct UVictoryCore_ShowEditorNotification_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              Message;                                                 // 0x0008(0x0010)  (Parm, ZeroConstructor)
		EEditorMessageLogLevel                                     LogLevel;                                                // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QFV4[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      Duration;                                                // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bServerOnly;                                             // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SetTickGroupBP
	 */
	struct UVictoryCore_SetTickGroupBP_Params
	{
	public:
		class UActorComponent*                                     Component;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		ETickingGroup                                              TickGroup;                                               // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SetSessionPrefix
	 */
	struct UVictoryCore_SetSessionPrefix_Params
	{
	public:
		class FString                                              InPrefix;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SetSelectedLevelActors
	 */
	struct UVictoryCore_SetSelectedLevelActors_Params
	{
	public:
		TArray<class AActor*>                                      ActorsToSelect;                                          // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bClearPreviousSelection;                                 // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SetMultiUseEntryPriority
	 */
	struct UVictoryCore_SetMultiUseEntryPriority_Params
	{
	public:
		TArray<struct FMultiUseEntry>                              Entries;                                                 // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
		bool                                                       bFindByUseIndexInsteadOfArrayIndex;                      // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1MY5[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    index;                                                   // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NewPriority;                                             // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x001C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SetMousePosition
	 */
	struct UVictoryCore_SetMousePosition_Params
	{
	public:
		class APlayerController*                                   Controller;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      X;                                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Y;                                                       // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SetMaterialColorizationFromItemColors
	 */
	struct UVictoryCore_SetMaterialColorizationFromItemColors_Params
	{
	public:
		class UPrimalItem*                                         Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialInstanceDynamic*                            dynamicMic;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SetLevelActorFolderPath
	 */
	struct UVictoryCore_SetLevelActorFolderPath_Params
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                FolderPath;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SetLastMapPlayed
	 */
	struct UVictoryCore_SetLastMapPlayed_Params
	{
	public:
		class FString                                              NewLastMapPlayed;                                        // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SetDinoSetupPointsPerStat
	 */
	struct UVictoryCore_SetDinoSetupPointsPerStat_Params
	{
	public:
		struct FDinoSetup                                          DinoSetup;                                               // 0x0000(0x00F0)  (Parm, OutParm, ReferenceParm)
		EPrimalCharacterStatusValue                                StatusType;                                              // 0x00F0(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_LV25[0x3];                                   // 0x00F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    Value;                                                   // 0x00F4(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsPlayerAdded;                                          // 0x00F8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAddInsteadOfSet;                                        // 0x00F9(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SetBoolArrayElemTrue
	 */
	struct UVictoryCore_SetBoolArrayElemTrue_Params
	{
	public:
		TArray<bool>                                               TheArray;                                                // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    TheIndex;                                                // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SetBoolArrayElemFalse
	 */
	struct UVictoryCore_SetBoolArrayElemFalse_Params
	{
	public:
		TArray<bool>                                               TheArray;                                                // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    TheIndex;                                                // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SetAllowControllerInputWithCursor
	 */
	struct UVictoryCore_SetAllowControllerInputWithCursor_Params
	{
	public:
		bool                                                       bAllow;                                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ServerSearchFoliageByResource
	 */
	struct UVictoryCore_ServerSearchFoliageByResource_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Origin;                                                  // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FOverlappedFoliageElement>                   OutFoliage;                                              // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
		TArray<class UClass*>                                      HarvestResources;                                        // 0x0028(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bVisibleAndActiveOnly;                                   // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIncludeUsableFoliage;                                   // 0x0039(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIncludeMeshFoliage;                                     // 0x003A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSortByDistance;                                         // 0x003B(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReverseSort;                                            // 0x003C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ServerSearchFoliage
	 */
	struct UVictoryCore_ServerSearchFoliage_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Origin;                                                  // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FOverlappedFoliageElement>                   OutFoliage;                                              // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
		bool                                                       bVisibleAndActiveOnly;                                   // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIncludeUsableFoliage;                                   // 0x0029(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIncludeMeshFoliage;                                     // 0x002A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSortByDistance;                                         // 0x002B(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReverseSort;                                            // 0x002C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ServerOctreeOverlapActorsClassBitMask
	 */
	struct UVictoryCore_ServerOctreeOverlapActorsClassBitMask_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtLoc;                                                   // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    OctreeTypeBitMask;                                       // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_9KPW[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              ActorClass;                                              // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceActorLocationDistanceCheck;                        // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_922B[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ReturnValue;                                             // 0x0030(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.ServerOctreeOverlapActorsClass
	 */
	struct UVictoryCore_ServerOctreeOverlapActorsClass_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtLoc;                                                   // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EServerOctreeGroup                                         OctreeType;                                              // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1L6M[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              ActorClass;                                              // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceActorLocationDistanceCheck;                        // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_0F5C[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ReturnValue;                                             // 0x0030(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.ServerOctreeOverlapActorsBitMask
	 */
	struct UVictoryCore_ServerOctreeOverlapActorsBitMask_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtLoc;                                                   // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    OctreeTypeBitMask;                                       // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceActorLocationDistanceCheck;                        // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_V2BG[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ReturnValue;                                             // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.ServerOctreeOverlapActors
	 */
	struct UVictoryCore_ServerOctreeOverlapActors_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtLoc;                                                   // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EServerOctreeGroup                                         OctreeType;                                              // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceActorLocationDistanceCheck;                        // 0x0019(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_6FK3[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ReturnValue;                                             // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.ServerCheckMeshingOnActor
	 */
	struct UVictoryCore_ServerCheckMeshingOnActor_Params
	{
	public:
		class AActor*                                              OnActor;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceUseActorCenterBounds;                              // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0009(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SelectVectorIfWithinRange
	 */
	struct UVictoryCore_SelectVectorIfWithinRange_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       PickedA;                                                 // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_HUIB[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      MaxDistance;                                             // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0020(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.SelectCloserVector
	 */
	struct UVictoryCore_SelectCloserVector_Params
	{
	public:
		struct FVector                                             Origin;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             A;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             B;                                                       // 0x0018(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       PickedA;                                                 // 0x0024(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_OAD9[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             ReturnValue;                                             // 0x0028(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.RotateDirToTargetWithAngleLimits
	 */
	struct UVictoryCore_RotateDirToTargetWithAngleLimits_Params
	{
	public:
		struct FVector                                             RotateDir;                                               // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             TowardsDir;                                              // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            WithAngleLimits;                                         // 0x0018(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceZeroRoll;                                          // 0x0024(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NSOR[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             ReturnValue;                                             // 0x0028(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ReupdateCaptures
	 */
	struct UVictoryCore_ReupdateCaptures_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bReinitSkylights;                                        // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ResetMousePositionToCenter
	 */
	struct UVictoryCore_ResetMousePositionToCenter_Params
	{
	public:
		class APlayerController*                                   Controller;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ResetCooldown
	 */
	struct UVictoryCore_ResetCooldown_Params
	{
	public:
		double                                                     CooldownClock;                                           // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.RemoveRollFromRotator
	 */
	struct UVictoryCore_RemoveRollFromRotator_Params
	{
	public:
		struct FRotator                                            FromRotator;                                             // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.RemovePitchAndRollFromRotator
	 */
	struct UVictoryCore_RemovePitchAndRollFromRotator_Params
	{
	public:
		struct FRotator                                            FromRotator;                                             // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.RemoveInvalidObjectsInContainer
	 */
	struct UVictoryCore_RemoveInvalidObjectsInContainer_Params
	{
	public:
		TArray<TWeakObjectPtr<class APrimalDinoCharacter>>         fContainer;                                              // 0x0000(0x0010)  (Parm, ZeroConstructor)
		TArray<TWeakObjectPtr<class APrimalDinoCharacter>>         ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.RemoveFromActorList
	 */
	struct UVictoryCore_RemoveFromActorList_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ActorListNum;                                            // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1YP2[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              ActorRef;                                                // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.RemoveActorFromCustomActorList
	 */
	struct UVictoryCore_RemoveActorFromCustomActorList_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                SearchCustomTag;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              ActorToRemove;                                           // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.RegisterComponentBP
	 */
	struct UVictoryCore_RegisterComponentBP_Params
	{
	public:
		class UActorComponent*                                     Component;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.RefreshApplySoundVolumes
	 */
	struct UVictoryCore_RefreshApplySoundVolumes_Params
	{	};

	/**
	 * Function ShooterGame.VictoryCore.RefreshApplySoundAndMusicVolumes
	 */
	struct UVictoryCore_RefreshApplySoundAndMusicVolumes_Params
	{	};

	/**
	 * Function ShooterGame.VictoryCore.RecordMeshingMetrics
	 */
	struct UVictoryCore_RecordMeshingMetrics_Params
	{
	public:
		class AActor*                                              forActor;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bWasDestroyed;                                           // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ReallySupportsShaderModel5
	 */
	struct UVictoryCore_ReallySupportsShaderModel5_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.RandomPointInBoundingBoxFromStream
	 */
	struct UVictoryCore_RandomPointInBoundingBoxFromStream_Params
	{
	public:
		struct FVector                                             Origin;                                                  // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             BoxExtent;                                               // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRandomStream                                       Stream;                                                  // 0x0018(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FVector                                             ReturnValue;                                             // 0x0020(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.PureDefaultObject
	 */
	struct UVictoryCore_PureDefaultObject_Params
	{
	public:
		class UObject*                                             FromObjectInstance;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObject*                                             ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.PureClassDefaultObject
	 */
	struct UVictoryCore_PureClassDefaultObject_Params
	{
	public:
		class UClass*                                              FromClass;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObject*                                             ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ProjectWorldLocationToScreenOrScreenEdgePosition
	 */
	struct UVictoryCore_ProjectWorldLocationToScreenOrScreenEdgePosition_Params
	{
	public:
		class APlayerController*                                   PlayerController;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             WorldLocation;                                           // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ScreenPosition;                                          // 0x0014(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      screenMarginPercent;                                     // 0x001C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       widgetSpace;                                             // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       OnScreen;                                                // 0x0021(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAdjustWithScreenDPI;                                    // 0x0022(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0023(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ProjectVectorOntoInsideOfSphere
	 */
	struct UVictoryCore_ProjectVectorOntoInsideOfSphere_Params
	{
	public:
		struct FVector                                             ProjectVector;                                           // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ProjectVectorLocation;                                   // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             SphereOrigin;                                            // 0x0018(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bOnlyProjectIfVectorIsLeavingSphere;                     // 0x0024(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_LCXQ[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             ReturnValue;                                             // 0x0028(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ProjectScreenLocationIntoWorld
	 */
	struct UVictoryCore_ProjectScreenLocationIntoWorld_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ScreenLocation;                                          // 0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ProjectionDist;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0014(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ProjectLocationToEdgeOfSphere
	 */
	struct UVictoryCore_ProjectLocationToEdgeOfSphere_Params
	{
	public:
		bool                                                       bOutDidProject;                                          // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NAOA[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             ForLocation;                                             // 0x0004(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             SphereOrigin;                                            // 0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      SphereRadius;                                            // 0x001C(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bOnlyProjectIfWithinRadius;                              // 0x0020(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceProjection2D;                                      // 0x0021(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDebug;                                                  // 0x0022(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_9W6E[0x5];                                   // 0x0023(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              DebugContextActor;                                       // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DebugDuration;                                           // 0x0030(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0034(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.PrintMessageInShippingBuild
	 */
	struct UVictoryCore_PrintMessageInShippingBuild_Params
	{
	public:
		class FString                                              Msg;                                                     // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.PrecisionRound
	 */
	struct UVictoryCore_PrecisionRound_Params
	{
	public:
		float                                                      inputVal;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Precision;                                               // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.PointsRandomDist
	 */
	struct UVictoryCore_PointsRandomDist_Params
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		int32_t                                                    NumPoints;                                               // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      PointRadius;                                             // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FVector>                                     ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.PointsOnAGrid
	 */
	struct UVictoryCore_PointsOnAGrid_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Center;                                                  // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x0014(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MinSize;                                                 // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumPoints;                                               // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DebugDrawDuration;                                       // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FVector>                                     ReturnValue;                                             // 0x0030(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.PointsOnACircle
	 */
	struct UVictoryCore_PointsOnACircle_Params
	{
	public:
		struct FVector                                             Center;                                                  // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumPoints;                                               // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_6YJZ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FVector>                                     ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.PointOnSphere
	 */
	struct UVictoryCore_PointOnSphere_Params
	{
	public:
		float                                                      Radius;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DegreesI;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DegreesJ;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.PointOnCircle
	 */
	struct UVictoryCore_PointOnCircle_Params
	{
	public:
		float                                                      Radius;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      AngleDegrees;                                            // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.PlayMusic
	 */
	struct UVictoryCore_PlayMusic_Params
	{
	public:
		class FString                                              MusicFile;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
		float                                                      OverrideVolume;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.PlayMovie
	 */
	struct UVictoryCore_PlayMovie_Params
	{
	public:
		class FString                                              MoviePath;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bMovieIsSkippable;                                       // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CYRN[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FScriptDelegate                                      OnMoviePlaybackFinishedDelegate;                         // 0x0014(0x0010)  (Parm, ZeroConstructor, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0024(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.PlayerOwnsScorchedEarthServer
	 */
	struct UVictoryCore_PlayerOwnsScorchedEarthServer_Params
	{
	public:
		class AShooterPlayerController*                            Controller;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.PlayerOwnsGenesisSeasonPassServer
	 */
	struct UVictoryCore_PlayerOwnsGenesisSeasonPassServer_Params
	{
	public:
		class AShooterPlayerController*                            Controller;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.PlayerOwnsExtinctionServer
	 */
	struct UVictoryCore_PlayerOwnsExtinctionServer_Params
	{
	public:
		class AShooterPlayerController*                            Controller;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.PlayerOwnsAberrationServer
	 */
	struct UVictoryCore_PlayerOwnsAberrationServer_Params
	{
	public:
		class AShooterPlayerController*                            Controller;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.PlayCompanionReactionToPlayers
	 */
	struct UVictoryCore_PlayCompanionReactionToPlayers_Params
	{
	public:
		TArray<class APrimalCharacter*>                            PlayersWhoGetReaction;                                   // 0x0000(0x0010)  (Parm, ZeroConstructor)
		struct FCompanionReactionData                              ReactionData;                                            // 0x0010(0x00A0)  (Parm, OutParm, ReferenceParm)
		bool                                                       ForcePlayNow;                                            // 0x00B0(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CWI6[0x7];                                   // 0x00B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UMaterialInterface*                                  DialogueIconOverride;                                    // 0x00B8(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       RestrictedEnvironmentalReaction;                         // 0x00C0(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JVL4[0x3];                                   // 0x00C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    UniqueID;                                                // 0x00C4(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.PlayCompanionReactionOnSolePlayer
	 */
	struct UVictoryCore_PlayCompanionReactionOnSolePlayer_Params
	{
	public:
		class APrimalCharacter*                                    PlayersWhoGetReaction;                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FCompanionReactionData                              ReactionData;                                            // 0x0008(0x00A0)  (Parm, OutParm, ReferenceParm)
		bool                                                       ForcePlayNow;                                            // 0x00A8(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_D1XV[0x7];                                   // 0x00A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UMaterialInterface*                                  DialogueIconOverride;                                    // 0x00B0(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       RestrictedEnvironmentalReaction;                         // 0x00B8(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_RXMT[0x3];                                   // 0x00B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    UniqueID;                                                // 0x00BC(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.PlaceStructure
	 */
	struct UVictoryCore_PlaceStructure_Params
	{
	public:
		class AShooterCharacter*                                   placingPawn;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              StructureToPlace;                                        // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FItemNetID                                          ItemId;                                                  // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       DisplayFailMessage;                                      // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.OwnsSteamAppID
	 */
	struct UVictoryCore_OwnsSteamAppID_Params
	{
	public:
		int32_t                                                    AppID;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.OwnsScorchedEarth
	 */
	struct UVictoryCore_OwnsScorchedEarth_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.OwnsGenesisSeasonPass
	 */
	struct UVictoryCore_OwnsGenesisSeasonPass_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.OwnsGenesis
	 */
	struct UVictoryCore_OwnsGenesis_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.OwnsExtinction
	 */
	struct UVictoryCore_OwnsExtinction_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.OwnsDLC
	 */
	struct UVictoryCore_OwnsDLC_Params
	{
	public:
		class FString                                              DLCName;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.OwnsCrystalIsles
	 */
	struct UVictoryCore_OwnsCrystalIsles_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.OwnsAberration
	 */
	struct UVictoryCore_OwnsAberration_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.OverlappingStationaryObjectsTraceBP
	 */
	struct UVictoryCore_OverlappingStationaryObjectsTraceBP_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalCharacter*                                    SourceCharacter;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FOverlapResult>                              Overlaps;                                                // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
		struct FVector                                             Origin;                                                  // 0x0020(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          TraceChannel;                                            // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_9BY7[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              InIgnoreActor;                                           // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                TraceName;                                               // 0x0040(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bComplexOverlapTest;                                     // 0x0048(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0049(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.OverlappingActorsTraceBP
	 */
	struct UVictoryCore_OverlappingActorsTraceBP_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FOverlapResult>                              Overlaps;                                                // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		struct FVector                                             Origin;                                                  // 0x0018(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          TraceChannel;                                            // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_U7LL[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              InIgnoreActor;                                           // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                TraceName;                                               // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bComplexOverlapTest;                                     // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0041(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.OverlappingActorsBP
	 */
	struct UVictoryCore_OverlappingActorsBP_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FOverlapResult>                              Overlaps;                                                // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		struct FVector                                             Origin;                                                  // 0x0018(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    CollisionGroups;                                         // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_M6Q4[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              InIgnoreActor;                                           // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                TraceName;                                               // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bComplexOverlapTest;                                     // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0041(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.OpenStorePageForDLC
	 */
	struct UVictoryCore_OpenStorePageForDLC_Params
	{
	public:
		class FString                                              DLCName;                                                 // 0x0000(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.OnMoviePlaybackFinished__DelegateSignature
	 */
	struct UVictoryCore_OnMoviePlaybackFinished__DelegateSignature_Params
	{
	public:
		class FString                                              MoviePath;                                               // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       bPlaybackWasCancelled;                                   // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ObjectRefToClassRef
	 */
	struct UVictoryCore_ObjectRefToClassRef_Params
	{
	public:
		class UObject*                                             InObject;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ObjectIsChildOf
	 */
	struct UVictoryCore_ObjectIsChildOf_Params
	{
	public:
		class UObject*                                             Object;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ObjectType;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bExactMatch;                                             // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0011(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.NormalizeRotator
	 */
	struct UVictoryCore_NormalizeRotator_Params
	{
	public:
		struct FRotator                                            InRotator;                                               // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.NetworkTimeToRealWorldUtcTime
	 */
	struct UVictoryCore_NetworkTimeToRealWorldUtcTime_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     NetworkTime;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.MultiTraceProjectSphere
	 */
	struct UVictoryCore_MultiTraceProjectSphere_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FHitResult>                                  OutResults;                                              // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		struct FVector                                             Origin;                                                  // 0x0018(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          TraceChannel;                                            // 0x0024(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_2745[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    HorizResolution;                                         // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    VertResolution;                                          // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      StartDistance;                                           // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      EndDistance;                                             // 0x0034(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      NorthConeSubtractAngle;                                  // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SouthConeSubtractAngle;                                  // 0x003C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    PctChanceToTrace;                                        // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MaxTraceCount;                                           // 0x0044(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDrawDebugLines;                                         // 0x0048(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_VQCY[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      DebugDrawDuration;                                       // 0x004C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bStopOnFirstHit;                                         // 0x0050(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.MultiLinePenetrationTraceByChannel
	 */
	struct UVictoryCore_MultiLinePenetrationTraceByChannel_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FPenetrationTraceHit>                        OutResults;                                              // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		struct FVector                                             Start;                                                   // 0x0018(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0024(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          TraceChannel;                                            // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_BYXM[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0038(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bTraceComplex;                                           // 0x0048(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreSelf;                                             // 0x0049(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDrawDebugLines;                                         // 0x004A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_W419[0x1];                                   // 0x004B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      DebugDrawDuration;                                       // 0x004C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.MulticastDrawDebugString
	 */
	struct UVictoryCore_MulticastDrawDebugString_Params
	{
	public:
		class AActor*                                              ReplicatedActor;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		struct FVector                                             TextLocation;                                            // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_LVXV[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Text;                                                    // 0x0018(0x0010)  (Parm, ZeroConstructor)
		class AActor*                                              TestBaseActor;                                           // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        TextColor;                                               // 0x0030(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.MulticastDrawDebugSphere
	 */
	struct UVictoryCore_MulticastDrawDebugSphere_Params
	{
	public:
		class AActor*                                              ReplicatedActor;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		struct FVector                                             Center;                                                  // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Segments;                                                // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x001C(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.MulticastDrawDebugPoint
	 */
	struct UVictoryCore_MulticastDrawDebugPoint_Params
	{
	public:
		class AActor*                                              ReplicatedActor;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		struct FVector                                             Position;                                                // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Size;                                                    // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        PointColor;                                              // 0x0018(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.MulticastDrawDebugLine
	 */
	struct UVictoryCore_MulticastDrawDebugLine_Params
	{
	public:
		class AActor*                                              ReplicatedActor;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		struct FVector                                             LineStart;                                               // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             LineEnd;                                                 // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x0020(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0030(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Thickness;                                               // 0x0034(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       allowInShipping;                                         // 0x0038(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.MulticastDrawDebugCylinder
	 */
	struct UVictoryCore_MulticastDrawDebugCylinder_Params
	{
	public:
		class AActor*                                              ReplicatedActor;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		struct FVector                                             Start;                                                   // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Segments;                                                // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.MulticastDrawDebugCoordinateSystem
	 */
	struct UVictoryCore_MulticastDrawDebugCoordinateSystem_Params
	{
	public:
		class AActor*                                              ReplicatedActor;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		struct FVector                                             AxisLoc;                                                 // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            AxisRot;                                                 // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Scale;                                                   // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Thickness;                                               // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.MulticastDrawDebugCapsuleWithExtents
	 */
	struct UVictoryCore_MulticastDrawDebugCapsuleWithExtents_Params
	{
	public:
		class AActor*                                              ReplicatedActor;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		struct FVector                                             Top;                                                     // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Bottom;                                                  // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x0024(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0034(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bPersistent;                                             // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.MulticastDrawDebugCapsule
	 */
	struct UVictoryCore_MulticastDrawDebugCapsule_Params
	{
	public:
		class AActor*                                              ReplicatedActor;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		struct FVector                                             Center;                                                  // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HalfHeight;                                              // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x001C(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x0028(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.MulticastDrawDebugCamera
	 */
	struct UVictoryCore_MulticastDrawDebugCamera_Params
	{
	public:
		class AActor*                                              ReplicatedActor;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		class ACameraActor*                                        CameraActor;                                             // 0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        CameraColor;                                             // 0x0010(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.MulticastDrawDebugBox
	 */
	struct UVictoryCore_MulticastDrawDebugBox_Params
	{
	public:
		class AActor*                                              ReplicatedActor;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		struct FVector                                             Center;                                                  // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Extent;                                                  // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x0020(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x0030(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x003C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.MulticastDrawDebugArrow
	 */
	struct UVictoryCore_MulticastDrawDebugArrow_Params
	{
	public:
		class AActor*                                              ReplicatedActor;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		struct FVector                                             LineStart;                                               // 0x0008(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             LineEnd;                                                 // 0x0014(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ArrowSize;                                               // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x0024(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x0034(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ModifyDinoSetupTargetLevel
	 */
	struct UVictoryCore_ModifyDinoSetupTargetLevel_Params
	{
	public:
		struct FDinoSetup                                          DinoSetup;                                               // 0x0000(0x00F0)  (ConstParm, Parm, OutParm, ReferenceParm)
		float                                                      LevelMultiplier;                                         // 0x00F0(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MinLevel;                                                // 0x00F4(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MaxLevel;                                                // 0x00F8(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_YFYD[0x4];                                   // 0x00FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FDinoSetup                                          ReturnValue;                                             // 0x0100(0x00F0)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.MarkGen2IntroAsSeen
	 */
	struct UVictoryCore_MarkGen2IntroAsSeen_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.MapRangeToCurveClamped
	 */
	struct UVictoryCore_MapRangeToCurveClamped_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InRangeA;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InRangeB;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OutRangeA;                                               // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OutRangeB;                                               // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ESimpleCurve                                               CurveType;                                               // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_B7V3[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.MapAngleRangeToCurveClamped
	 */
	struct UVictoryCore_MapAngleRangeToCurveClamped_Params
	{
	public:
		float                                                      AngleDegrees;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InRangeA;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InRangeB;                                                // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OutRangeA;                                               // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      OutRangeB;                                               // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ESimpleCurve                                               CurveType;                                               // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_FGLW[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.MakePlaneWithPoints
	 */
	struct UVictoryCore_MakePlaneWithPoints_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             B;                                                       // 0x000C(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             C;                                                       // 0x0018(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_BR8K[0xC];                                   // 0x0024(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FPlane                                              ReturnValue;                                             // 0x0030(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.MakeHitResult
	 */
	struct UVictoryCore_MakeHitResult_Params
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Normal;                                                  // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPhysicalMaterial*                                   PhysMat;                                                 // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              HitActor;                                                // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimitiveComponent*                                 HitComponent;                                            // 0x0028(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class FName                                                HitBoneName;                                             // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    HitItem;                                                 // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bBlockingHit;                                            // 0x003C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CUQ9[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          ReturnValue;                                             // 0x0040(0x0088)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.LogStackTrace
	 */
	struct UVictoryCore_LogStackTrace_Params
	{	};

	/**
	 * Function ShooterGame.VictoryCore.LeadTargetPosition
	 */
	struct UVictoryCore_LeadTargetPosition_Params
	{
	public:
		struct FVector                                             ProjLocation;                                            // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      ProjSpeed;                                               // 0x000C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             TargetLocation;                                          // 0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             TargetVelocity;                                          // 0x001C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0028(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.LeaderboardColumnNameToString
	 */
	struct UVictoryCore_LeaderboardColumnNameToString_Params
	{
	public:
		ELeaderboardColumnName                                     ColumnType;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_TQUS[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.KillTargetCharacterOrStructure
	 */
	struct UVictoryCore_KillTargetCharacterOrStructure_Params
	{
	public:
		class AActor*                                              ActorToKill;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              DamageCauser;                                            // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTryDestroyActor;                                        // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0011(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.JoinStringArrayWithNewlines
	 */
	struct UVictoryCore_JoinStringArrayWithNewlines_Params
	{
	public:
		TArray<class FString>                                      SourceArray;                                             // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class FString                                              ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsXboxOneBuild
	 */
	struct UVictoryCore_IsXboxOneBuild_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsWorkshopIDSubscribed
	 */
	struct UVictoryCore_IsWorkshopIDSubscribed_Params
	{
	public:
		class FString                                              WorkshopID;                                              // 0x0000(0x0010)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsValidItemForGrinding
	 */
	struct UVictoryCore_IsValidItemForGrinding_Params
	{
	public:
		class UPrimalItem*                                         Item;                                                    // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalInventoryComponent*                           inventory;                                               // 0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsUWPBuild
	 */
	struct UVictoryCore_IsUWPBuild_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsUndermesh
	 */
	struct UVictoryCore_IsUndermesh_Params
	{
	public:
		class APrimalCharacter*                                    Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             CheckSevenHitLocation;                                   // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOverlapping;                                            // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_2XJR[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UActorComponent*                                     CheckSevenResult;                                        // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       DebugDraw;                                               // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_STNN[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      debugDrawSeconds;                                        // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0028(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsTimeSince_Utc
	 */
	struct UVictoryCore_IsTimeSince_Utc_Params
	{
	public:
		double                                                     OldTime;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CheckTimeSince;                                          // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceTrueAtZeroTime;                                    // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x000D(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsTimeSince_Network
	 */
	struct UVictoryCore_IsTimeSince_Network_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     OldTime;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CheckTimeSince;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceTrueAtZeroTime;                                    // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0015(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsTimeSince
	 */
	struct UVictoryCore_IsTimeSince_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     OldTime;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CheckTimeSince;                                          // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceTrueAtZeroTime;                                    // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0015(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsSplitscreen
	 */
	struct UVictoryCore_IsSplitscreen_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsShipping
	 */
	struct UVictoryCore_IsShipping_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsSavingSaveGame
	 */
	struct UVictoryCore_IsSavingSaveGame_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsRunningTotalConversion
	 */
	struct UVictoryCore_IsRunningTotalConversion_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsPVEServer
	 */
	struct UVictoryCore_IsPVEServer_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsPS4Build
	 */
	struct UVictoryCore_IsPS4Build_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsPointStuckWithinMesh
	 */
	struct UVictoryCore_IsPointStuckWithinMesh_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             TestPoint;                                               // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    hemisphereSubdivisions;                                  // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      rayDistance;                                             // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      percentageConsideredStuck;                               // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              ActorToIgnore;                                           // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0028(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsPointInCone
	 */
	struct UVictoryCore_IsPointInCone_Params
	{
	public:
		struct FVector                                             Point;                                                   // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ConeOrigin;                                              // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ConeDir;                                                 // 0x0018(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      ConeLength;                                              // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ConeHalfAngle;                                           // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x002C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsPlayingMovie
	 */
	struct UVictoryCore_IsPlayingMovie_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsPlayInEditor
	 */
	struct UVictoryCore_IsPlayInEditor_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsOfficialServer
	 */
	struct UVictoryCore_IsOfficialServer_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsNonHostPlayer
	 */
	struct UVictoryCore_IsNonHostPlayer_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AController*                                         PlayerController;                                        // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsMissionTagActiveAnywhere
	 */
	struct UVictoryCore_IsMissionTagActiveAnywhere_Params
	{
	public:
		class AShooterPlayerController*                            FromPC;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                MissionTag;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsMissionActiveAnywhere
	 */
	struct UVictoryCore_IsMissionActiveAnywhere_Params
	{
	public:
		class UClass*                                              MissionType;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsLowMemPlatform
	 */
	struct UVictoryCore_IsLowMemPlatform_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsLoadingSaveGame
	 */
	struct UVictoryCore_IsLoadingSaveGame_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsLinuxOrMacBuild
	 */
	struct UVictoryCore_IsLinuxOrMacBuild_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsInsideOrIntersectsBox
	 */
	struct UVictoryCore_IsInsideOrIntersectsBox_Params
	{
	public:
		struct FVector                                             BoxOrigin;                                               // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             BoxExtents;                                              // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class UShapeComponent*                                     ShapeComponent;                                          // 0x0018(0x0008)  (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsInsideBox
	 */
	struct UVictoryCore_IsInsideBox_Params
	{
	public:
		struct FVector                                             BoxOrigin;                                               // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             BoxExtents;                                              // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class UShapeComponent*                                     ShapeComponent;                                          // 0x0018(0x0008)  (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsGameWorld
	 */
	struct UVictoryCore_IsGameWorld_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsGamePadConnected
	 */
	struct UVictoryCore_IsGamePadConnected_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsEpicClient
	 */
	struct UVictoryCore_IsEpicClient_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsEditor
	 */
	struct UVictoryCore_IsEditor_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsDistanceLessThan
	 */
	struct UVictoryCore_IsDistanceLessThan_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Distance;                                                // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x001C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsDistanceGreaterThan
	 */
	struct UVictoryCore_IsDistanceGreaterThan_Params
	{
	public:
		struct FVector                                             A;                                                       // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             B;                                                       // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Distance;                                                // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x001C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsDinoDuped
	 */
	struct UVictoryCore_IsDinoDuped_Params
	{
	public:
		class UWorld*                                              WorldContext;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		uint32_t                                                   ID1;                                                     // 0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		uint32_t                                                   ID2;                                                     // 0x000C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsCryopodNerfEnabled
	 */
	struct UVictoryCore_IsCryopodNerfEnabled_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      damageMult;                                              // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Duration;                                                // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      incomingDamageMultPercent;                               // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsCooldownComplete
	 */
	struct UVictoryCore_IsCooldownComplete_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     CooldownClock;                                           // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CooldownDuration;                                        // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsConsoleServerBuild
	 */
	struct UVictoryCore_IsConsoleServerBuild_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsConsoleBuild
	 */
	struct UVictoryCore_IsConsoleBuild_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsChildOfClassesSoft
	 */
	struct UVictoryCore_IsChildOfClassesSoft_Params
	{
	public:
		class UClass*                                              childClass;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class FString>                                      ParentClassesArraySoft;                                  // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsChildOfClasses
	 */
	struct UVictoryCore_IsChildOfClasses_Params
	{
	public:
		class UClass*                                              childClass;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class UClass*>                                      ParentClassesArray;                                      // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IsBrainControllingDinoAttached
	 */
	struct UVictoryCore_IsBrainControllingDinoAttached_Params
	{
	public:
		class APrimalCharacter*                                    Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.InverseTransformVectorByScreenProjectionGlobalTransform
	 */
	struct UVictoryCore_InverseTransformVectorByScreenProjectionGlobalTransform_Params
	{
	public:
		struct FVector2D                                           outVec;                                                  // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.InverseTransform
	 */
	struct UVictoryCore_InverseTransform_Params
	{
	public:
		struct FTransform                                          TransformIn;                                             // 0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FTransform                                          ReturnValue;                                             // 0x0030(0x0030)  (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.IntToStringAscii
	 */
	struct UVictoryCore_IntToStringAscii_Params
	{
	public:
		int32_t                                                    CharValue;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5YMW[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.IntersectsBox
	 */
	struct UVictoryCore_IntersectsBox_Params
	{
	public:
		struct FVector                                             BoxOrigin;                                               // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             BoxExtents;                                              // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		class UShapeComponent*                                     ShapeComponent;                                          // 0x0018(0x0008)  (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.InlineLoadLevels
	 */
	struct UVictoryCore_InlineLoadLevels_Params
	{
	public:
		TArray<class FName>                                        LevelNames;                                              // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class FName>                                        LevelNamesToUnload;                                      // 0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bDisableDistanceStreamingOnLevels;                       // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.Helix
	 */
	struct UVictoryCore_Helix_Params
	{
	public:
		float                                                      Radius;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Time;                                                    // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.HasPlayerSeenGen2Intro
	 */
	struct UVictoryCore_HasPlayerSeenGen2Intro_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.HasCraftingRequirementsGreaterThanOne
	 */
	struct UVictoryCore_HasCraftingRequirementsGreaterThanOne_Params
	{
	public:
		class UPrimalItem*                                         Item;                                                    // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GrindItemIntoInventory
	 */
	struct UVictoryCore_GrindItemIntoInventory_Params
	{
	public:
		class UPrimalItem*                                         Item;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalInventoryComponent*                           inventory;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       bGrindStack;                                             // 0x0010(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_C8JO[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    MaxQuantityToGrind;                                      // 0x0014(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      GrindGiveItemsPercent;                                   // 0x0018(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MaxItemsToGivePerGrind;                                  // 0x001C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0020(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GrindAllItemsToInventory
	 */
	struct UVictoryCore_GrindAllItemsToInventory_Params
	{
	public:
		class UPrimalInventoryComponent*                           inventory;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       bGrindStack;                                             // 0x0008(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_T6SU[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    MaxQuantityToGrind;                                      // 0x000C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      GrindGiveItemsPercent;                                   // 0x0010(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MaxItemsToGivePerGrind;                                  // 0x0014(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GridTraceAroundPoint
	 */
	struct UVictoryCore_GridTraceAroundPoint_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FHitResult>                                  OutResults;                                              // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		struct FVector                                             Origin;                                                  // 0x0018(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            GridRotation;                                            // 0x0024(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0030(0x0010)  (Parm, ZeroConstructor)
		ECollisionChannel                                          CollisionChannel;                                        // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_U300[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    NumTracesX;                                              // 0x0044(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumTracesY;                                              // 0x0048(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SpacingX;                                                // 0x004C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      SpacingY;                                                // 0x0050(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ZStartOffset;                                            // 0x0054(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ZEndOffset;                                              // 0x0058(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x005C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDrawDebug;                                              // 0x005D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_YPCV[0x2];                                   // 0x005E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      DebugDrawDuration;                                       // 0x0060(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GiveItemToCharacter
	 */
	struct UVictoryCore_GiveItemToCharacter_Params
	{
	public:
		class APrimalCharacter*                                    Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ItemType;                                                // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    NumItems;                                                // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Quality;                                                 // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAutoEquip;                                              // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JMCC[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class UPrimalItem*>                                 ReturnValue;                                             // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetWorldSublevels
	 */
	struct UVictoryCore_GetWorldSublevels_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class ULevelStreaming*>                             ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetWorldLoadedAtTime
	 */
	struct UVictoryCore_GetWorldLoadedAtTime_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetWeightedRandomIndexFromArray
	 */
	struct UVictoryCore_GetWeightedRandomIndexFromArray_Params
	{
	public:
		TArray<float>                                              pArray;                                                  // 0x0000(0x0010)  (Parm, ZeroConstructor)
		float                                                      ForceRand;                                               // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetVolumeOfCapsule
	 */
	struct UVictoryCore_GetVolumeOfCapsule_Params
	{
	public:
		float                                                      CapsuleRadius;                                           // 0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CapsuleHalfHeight;                                       // 0x0004(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetVelocityDeltaBetweenChars
	 */
	struct UVictoryCore_GetVelocityDeltaBetweenChars_Params
	{
	public:
		class APrimalCharacter*                                    CharA;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalCharacter*                                    CharB;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetTwoLetterISOLanguageName
	 */
	struct UVictoryCore_GetTwoLetterISOLanguageName_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetTimeSince
	 */
	struct UVictoryCore_GetTimeSince_Params
	{
	public:
		class APawn*                                               Pawn;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Time;                                                    // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetTimeSeconds
	 */
	struct UVictoryCore_GetTimeSeconds_Params
	{
	public:
		class APawn*                                               Pawn;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetTeamColor
	 */
	struct UVictoryCore_GetTeamColor_Params
	{
	public:
		int32_t                                                    TargetingTeam;                                           // 0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FColor                                              ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetStaticMeshBounds
	 */
	struct UVictoryCore_GetStaticMeshBounds_Params
	{
	public:
		class UStaticMesh*                                         ForMesh;                                                 // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FBoxSphereBounds                                    ReturnValue;                                             // 0x0008(0x001C)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetSpecialActorList
	 */
	struct UVictoryCore_GetSpecialActorList_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EActorListsBP                                              ActorListType;                                           // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_K2VB[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      OutActors;                                               // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetSoundWaveLocalizedSpokenText
	 */
	struct UVictoryCore_GetSoundWaveLocalizedSpokenText_Params
	{
	public:
		class USoundWave*                                          InSound;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetSoundCueLocalizedSpokenText
	 */
	struct UVictoryCore_GetSoundCueLocalizedSpokenText_Params
	{
	public:
		class USoundCue*                                           InSound;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetSimpleMontageDuration
	 */
	struct UVictoryCore_GetSimpleMontageDuration_Params
	{
	public:
		class UAnimMontage*                                        GivenMontage;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      GivenPlayRate;                                           // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetShooterGameUserSettings
	 */
	struct UVictoryCore_GetShooterGameUserSettings_Params
	{
	public:
		class UShooterGameUserSettings*                            ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetShooterCharacterFromPawn
	 */
	struct UVictoryCore_GetShooterCharacterFromPawn_Params
	{
	public:
		class APawn*                                               Pawn;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetShooterCharacterFromController
	 */
	struct UVictoryCore_GetShooterCharacterFromController_Params
	{
	public:
		class AController*                                         Controller;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetSelectedLevelActors
	 */
	struct UVictoryCore_GetSelectedLevelActors_Params
	{
	public:
		TArray<class AActor*>                                      ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetSecondsIntoDay
	 */
	struct UVictoryCore_GetSecondsIntoDay_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetScreenPercentLocation
	 */
	struct UVictoryCore_GetScreenPercentLocation_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ScreenPercentages;                                       // 0x0008(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetScreenPercentage
	 */
	struct UVictoryCore_GetScreenPercentage_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetScreenFramePerfScalar
	 */
	struct UVictoryCore_GetScreenFramePerfScalar_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetRealWorldUtcTimeInSeconds
	 */
	struct UVictoryCore_GetRealWorldUtcTimeInSeconds_Params
	{
	public:
		double                                                     ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetRandomWeightedDinoSetup
	 */
	struct UVictoryCore_GetRandomWeightedDinoSetup_Params
	{
	public:
		TArray<struct FDinoSetup>                                  DinoSetupEntries;                                        // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FDinoSetup                                          DinoSetup;                                               // 0x0010(0x00F0)  (Parm, OutParm)
		bool                                                       ReturnValue;                                             // 0x0100(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetProjectileArcPeakTime
	 */
	struct UVictoryCore_GetProjectileArcPeakTime_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FProjectileArc                                      Arc;                                                     // 0x0008(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm)
		float                                                      ReturnValue;                                             // 0x0038(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetPrimaryWorld
	 */
	struct UVictoryCore_GetPrimaryWorld_Params
	{
	public:
		class UWorld*                                              ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetPlayerCharacterByIndex
	 */
	struct UVictoryCore_GetPlayerCharacterByIndex_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    PlayerIndex;                                             // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_X29N[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AShooterCharacter*                                   ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetPlayerCharacterByController
	 */
	struct UVictoryCore_GetPlayerCharacterByController_Params
	{
	public:
		class APlayerController*                                   PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AShooterCharacter*                                   ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetPlaneNormal
	 */
	struct UVictoryCore_GetPlaneNormal_Params
	{
	public:
		struct FPlane                                              ForPlane;                                                // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetOverlappedHarvestActors
	 */
	struct UVictoryCore_GetOverlappedHarvestActors_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtLoc;                                                   // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      AtRadius;                                                // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      OutHarvestActors;                                        // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor)
		TArray<class UActorComponent*>                             OutHarvestComponents;                                    // 0x0028(0x0010)  (Parm, OutParm, ZeroConstructor, ContainsInstancedReference)
		TArray<struct FVector>                                     OutHarvestLocations;                                     // 0x0038(0x0010)  (Parm, OutParm, ZeroConstructor)
		TArray<int32_t>                                            OutHitBodyIndices;                                       // 0x0048(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0058(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetObjectString
	 */
	struct UVictoryCore_GetObjectString_Params
	{
	public:
		class UObject*                                             ForObject;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetObjectsReferencedBy
	 */
	struct UVictoryCore_GetObjectsReferencedBy_Params
	{
	public:
		class UObject*                                             ForObject;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class UObject*>                                     OutReferencedObjects;                                    // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bIgnoreTransient;                                        // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetObjectPathName
	 */
	struct UVictoryCore_GetObjectPathName_Params
	{
	public:
		class UObject*                                             ForObject;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetObjectName
	 */
	struct UVictoryCore_GetObjectName_Params
	{
	public:
		class UObject*                                             ForObject;                                               // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetObjectFName
	 */
	struct UVictoryCore_GetObjectFName_Params
	{
	public:
		class UObject*                                             ForObject;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetNewlineCharacter
	 */
	struct UVictoryCore_GetNewlineCharacter_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetNetworkTimeInSeconds
	 */
	struct UVictoryCore_GetNetworkTimeInSeconds_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetMissionNetworkStartTime
	 */
	struct UVictoryCore_GetMissionNetworkStartTime_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                MissionTag;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetMissionActorOfTypes
	 */
	struct UVictoryCore_GetMissionActorOfTypes_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class UClass*>                                      theMissionTypes;                                         // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class AActor*                                              ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetMissionActorOfType
	 */
	struct UVictoryCore_GetMissionActorOfType_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              theMissionType;                                          // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bExactMatch;                                             // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_G8RB[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetMatineeLength
	 */
	struct UVictoryCore_GetMatineeLength_Params
	{
	public:
		class AMatineeActor*                                       MatineeActor;                                            // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetLocaleSpecificSoundWaveAnimTexturePairArrays
	 */
	struct UVictoryCore_GetLocaleSpecificSoundWaveAnimTexturePairArrays_Params
	{
	public:
		TArray<struct FLocalizedSoundWaveAnimTexturePairArrays>    LocalizedSoundWaveAnimTextures;                          // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FLocalizedSoundWaveAnimTexturePairArrays            OutLocalizedAudio;                                       // 0x0010(0x0020)  (Parm, OutParm)
		bool                                                       FoundLocalizedSoundWavesForThisLanguage;                 // 0x0030(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_VCX1[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              LanguageOverride;                                        // 0x0038(0x0010)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0048(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetLocaleSpecificAudio
	 */
	struct UVictoryCore_GetLocaleSpecificAudio_Params
	{
	public:
		TArray<struct FLocalizedSoundCueEntry>                     LocalizedSoundCues;                                      // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FLocalizedSoundCueEntry                             OutLocalizedAudio;                                       // 0x0010(0x0020)  (Parm, OutParm)
		class FString                                              LanguageOverride;                                        // 0x0030(0x0010)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0040(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetLoadedStreamingLevelNames
	 */
	struct UVictoryCore_GetLoadedStreamingLevelNames_Params
	{
	public:
		TArray<class FName>                                        ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetLaunchVelocityAndGravity
	 */
	struct UVictoryCore_GetLaunchVelocityAndGravity_Params
	{
	public:
		struct FVector                                             StartLocation;                                           // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             TargetLocation;                                          // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      LateralSpeed;                                            // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      PeakHeightZ;                                             // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             LaunchVelocity;                                          // 0x0020(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Gravity;                                                 // 0x002C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetLastMapPlayed
	 */
	struct UVictoryCore_GetLastMapPlayed_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetLastHostedMapPlayed
	 */
	struct UVictoryCore_GetLastHostedMapPlayed_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetKeyNameFromActionName
	 */
	struct UVictoryCore_GetKeyNameFromActionName_Params
	{
	public:
		class FName                                                ActionName;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetKeyName
	 */
	struct UVictoryCore_GetKeyName_Params
	{
	public:
		struct FKey                                                Key;                                                     // 0x0000(0x0018)  (Parm)
		class FString                                              ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetItemClassFromItemSetup
	 */
	struct UVictoryCore_GetItemClassFromItemSetup_Params
	{
	public:
		struct FItemSetup                                          ItemSetup;                                               // 0x0000(0x0028)  (ConstParm, Parm, OutParm, ReferenceParm)
		class UClass*                                              ReturnValue;                                             // 0x0028(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetHitBoneNameFromDamageEvent
	 */
	struct UVictoryCore_GetHitBoneNameFromDamageEvent_Params
	{
	public:
		class APrimalCharacter*                                    Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AController*                                         HitInstigator;                                           // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FDamageEvent                                        DamageEvent;                                             // 0x0010(0x0020)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       bIsPointDamage;                                          // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_BZ7Z[0x7];                                   // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          PointHitResult;                                          // 0x0038(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		class FName                                                MatchCollisionPresetName;                                // 0x00C0(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ReturnValue;                                             // 0x00C8(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetHarvestingComponentFromHitBodyIndex
	 */
	struct UVictoryCore_GetHarvestingComponentFromHitBodyIndex_Params
	{
	public:
		class UInstancedStaticMeshComponent*                       FromISMC;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    WithHitBodyIndex;                                        // 0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_SQTQ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UPrimalHarvestingComponent*                          ReturnValue;                                             // 0x0010(0x0008)  (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetGroundLocation
	 */
	struct UVictoryCore_GetGroundLocation_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             theGroundLoc;                                            // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             StartLoc;                                                // 0x0014(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             OffsetUp;                                                // 0x0020(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             OffsetDown;                                              // 0x002C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0038(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetGrinderReplacementItem
	 */
	struct UVictoryCore_GetGrinderReplacementItem_Params
	{
	public:
		class UClass*                                              current;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetGPSCoords
	 */
	struct UVictoryCore_GetGPSCoords_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             InLoc;                                                   // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0014(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetFirstDirectionalLight
	 */
	struct UVictoryCore_GetFirstDirectionalLight_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class ADirectionalLight*                                   ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetDistanceToCollision
	 */
	struct UVictoryCore_GetDistanceToCollision_Params
	{
	public:
		class UPrimitiveComponent*                                 Comp;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FVector                                             Point;                                                   // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             closestPoint;                                            // 0x0014(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0020(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetDinoStaticClass
	 */
	struct UVictoryCore_GetDinoStaticClass_Params
	{
	public:
		struct FDinoSetup                                          DinoSetup;                                               // 0x0000(0x00F0)  (ConstParm, Parm, OutParm, ReferenceParm)
		class UClass*                                              ReturnValue;                                             // 0x00F0(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetDinoSetupPointsPerStat
	 */
	struct UVictoryCore_GetDinoSetupPointsPerStat_Params
	{
	public:
		struct FDinoSetup                                          DinoSetup;                                               // 0x0000(0x00F0)  (ConstParm, Parm, OutParm, ReferenceParm)
		EPrimalCharacterStatusValue                                StatusType;                                              // 0x00F0(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bGetPlayerAdded;                                         // 0x00F1(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KQIX[0x2];                                   // 0x00F2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x00F4(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetDinoSetupGroup_WeightedRandom
	 */
	struct UVictoryCore_GetDinoSetupGroup_WeightedRandom_Params
	{
	public:
		TArray<struct FDinoSetupGroup>                             DinoSetupGroups;                                         // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FDinoSetupGroup                                     Group;                                                   // 0x0010(0x0030)  (Parm, OutParm)
		bool                                                       ReturnValue;                                             // 0x0040(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetDinoSetupGroup_ByName
	 */
	struct UVictoryCore_GetDinoSetupGroup_ByName_Params
	{
	public:
		class FName                                                GroupName;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FDinoSetupGroup>                             DinoSetupGroups;                                         // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		struct FDinoSetupGroup                                     Group;                                                   // 0x0018(0x0030)  (Parm, OutParm)
		bool                                                       ReturnValue;                                             // 0x0048(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetDinoSetupDinoType
	 */
	struct UVictoryCore_GetDinoSetupDinoType_Params
	{
	public:
		struct FDinoSetup                                          DinoSetup;                                               // 0x0000(0x00F0)  (ConstParm, Parm, OutParm, ReferenceParm)
		class UClass*                                              ReturnValue;                                             // 0x00F0(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetDinoSetupCapsuleSize
	 */
	struct UVictoryCore_GetDinoSetupCapsuleSize_Params
	{
	public:
		struct FDinoSetup                                          DinoSetup;                                               // 0x0000(0x00F0)  (ConstParm, Parm, OutParm, ReferenceParm)
		float                                                      CapsuleRadius;                                           // 0x00F0(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CapsuleHalfHeight;                                       // 0x00F4(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x00F8(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetDinoCharacterByID
	 */
	struct UVictoryCore_GetDinoCharacterByID_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    DinoID1;                                                 // 0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    DinoID2;                                                 // 0x000C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bSearchTamedOnly;                                        // 0x0010(0x0001)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_M574[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalDinoCharacter*                                ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetDefaultObject
	 */
	struct UVictoryCore_GetDefaultObject_Params
	{
	public:
		class UObject*                                             FromObjectInstance;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObject*                                             ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetCustomDinoSpawnLocation
	 */
	struct UVictoryCore_GetCustomDinoSpawnLocation_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             SpawnLocation;                                           // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            SpawnRotation;                                           // 0x0014(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FDinoSetup                                          DinoSetup;                                               // 0x0020(0x00F0)  (ConstParm, Parm, OutParm, ReferenceParm)
		float                                                      DebugDrawDuration;                                       // 0x0110(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bApplyRotationToSpawnOffset;                             // 0x0114(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_62PP[0x3];                                   // 0x0115(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             ReturnValue;                                             // 0x0118(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetCustomActorList
	 */
	struct UVictoryCore_GetCustomActorList_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                SearchCustomTag;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class ACustomActorList*                                    ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetCurrentCameraExposure
	 */
	struct UVictoryCore_GetCurrentCameraExposure_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetControllerMovementInputs
	 */
	struct UVictoryCore_GetControllerMovementInputs_Params
	{
	public:
		class APlayerController*                                   ForPC;                                                   // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetClosestActorArray
	 */
	struct UVictoryCore_GetClosestActorArray_Params
	{
	public:
		struct FVector                                             ToPoint;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_0LB4[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorArray;                                              // 0x0010(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class AActor*                                              ReturnValue;                                             // 0x0020(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetClassString
	 */
	struct UVictoryCore_GetClassString_Params
	{
	public:
		class UClass*                                              ForClass;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetClassPathName
	 */
	struct UVictoryCore_GetClassPathName_Params
	{
	public:
		class UObject*                                             ForClass;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetClassFName
	 */
	struct UVictoryCore_GetClassFName_Params
	{
	public:
		class UClass*                                              ForClass;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetClassDefaultObject
	 */
	struct UVictoryCore_GetClassDefaultObject_Params
	{
	public:
		class UClass*                                              FromClass;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObject*                                             ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetCharacterCapsuleSize
	 */
	struct UVictoryCore_GetCharacterCapsuleSize_Params
	{
	public:
		class UClass*                                              CharClass;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CapsuleRadius;                                           // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CapsuleHalfHeight;                                       // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetBlockingMissionTag
	 */
	struct UVictoryCore_GetBlockingMissionTag_Params
	{
	public:
		class AShooterPlayerController*                            FromPC;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                MissionTag;                                              // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetArrayIndicesSorted_Int
	 */
	struct UVictoryCore_GetArrayIndicesSorted_Int_Params
	{
	public:
		TArray<int32_t>                                            Array;                                                   // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bSortLowToHigh;                                          // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_I187[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<int32_t>                                            ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetArrayIndicesSorted_Float
	 */
	struct UVictoryCore_GetArrayIndicesSorted_Float_Params
	{
	public:
		TArray<float>                                              Array;                                                   // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bSortLowToHigh;                                          // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XM7G[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<int32_t>                                            ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetArrayIndicesSorted_Double
	 */
	struct UVictoryCore_GetArrayIndicesSorted_Double_Params
	{
	public:
		TArray<double>                                             Array;                                                   // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bSortLowToHigh;                                          // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_4NLL[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<int32_t>                                            ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetAngleBetweenVectorsPure
	 */
	struct UVictoryCore_GetAngleBetweenVectorsPure_Params
	{
	public:
		struct FVector                                             VectorA;                                                 // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             VectorB;                                                 // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AroundAxis;                                              // 0x0018(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0024(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetAngleBetweenVectors
	 */
	struct UVictoryCore_GetAngleBetweenVectors_Params
	{
	public:
		struct FVector                                             VectorA;                                                 // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             VectorB;                                                 // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             AroundAxis;                                              // 0x0018(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0024(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetAllPlayerStarts
	 */
	struct UVictoryCore_GetAllPlayerStarts_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetAllMissionDispatchers
	 */
	struct UVictoryCore_GetAllMissionDispatchers_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetAllMissionDispatcherPoints
	 */
	struct UVictoryCore_GetAllMissionDispatcherPoints_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetAllMissionActors
	 */
	struct UVictoryCore_GetAllMissionActors_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetAllLocalPlayerControllers
	 */
	struct UVictoryCore_GetAllLocalPlayerControllers_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AShooterPlayerController*>                    ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetAllLocalPlayerCharacters
	 */
	struct UVictoryCore_GetAllLocalPlayerCharacters_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AShooterCharacter*>                           ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetAllLocalPlayerCameraManagers
	 */
	struct UVictoryCore_GetAllLocalPlayerCameraManagers_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class APlayerCameraManager*>                        ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetAllClassesOfType
	 */
	struct UVictoryCore_GetAllClassesOfType_Params
	{
	public:
		TArray<class UClass*>                                      Subclasses;                                              // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
		class UClass*                                              ParentClass;                                             // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bAllowAbstract;                                          // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_BIH0[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              Path;                                                    // 0x0020(0x0010)  (Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetAllAvailableMissionsAsTags
	 */
	struct UVictoryCore_GetAllAvailableMissionsAsTags_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class FName>                                        ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GetAllAvailableMissions
	 */
	struct UVictoryCore_GetAllAvailableMissions_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FAvailableMission>                           ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.GenerateRandomLootItemFromLootTable
	 */
	struct UVictoryCore_GenerateRandomLootItemFromLootTable_Params
	{
	public:
		TArray<struct FLootTableEntry>                             Entries;                                                 // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		int32_t                                                    ItemQuantity;                                            // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ItemQuality;                                             // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.GenerateRandomLootItem
	 */
	struct UVictoryCore_GenerateRandomLootItem_Params
	{
	public:
		ELootItemType                                              LootItemType;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_IFAI[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UClass*                                              ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.Generate_UUID
	 */
	struct UVictoryCore_Generate_UUID_Params
	{
	public:
		class FString                                              ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.FuseChunkedFString
	 */
	struct UVictoryCore_FuseChunkedFString_Params
	{
	public:
		TArray<class FString>                                      InputStringArray;                                        // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class FString                                              ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.FormatAsTimeLong
	 */
	struct UVictoryCore_FormatAsTimeLong_Params
	{
	public:
		int32_t                                                    InTime;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NGTK[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.FormatAsTime
	 */
	struct UVictoryCore_FormatAsTime_Params
	{
	public:
		int32_t                                                    InTime;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       UseLeadingZero;                                          // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceLeadingZeroHour;                                   // 0x0005(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bShowSeconds;                                            // 0x0006(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_KQTU[0x1];                                   // 0x0007(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.ForceScreenColorFade
	 */
	struct UVictoryCore_ForceScreenColorFade_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        FadeColor;                                               // 0x0008(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      FullOpacityInterval;                                     // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      TheFadeOutInterval;                                      // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ForceLevelStreamingToBlock
	 */
	struct UVictoryCore_ForceLevelStreamingToBlock_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ForTime;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.FloatToDouble
	 */
	struct UVictoryCore_FloatToDouble_Params
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_V5Q4[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		double                                                     ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.FlattenDirectionVectorInLocalSpace
	 */
	struct UVictoryCore_FlattenDirectionVectorInLocalSpace_Params
	{
	public:
		struct FVector                                             Direction;                                               // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            Rotation;                                                // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.FlattenDirectionVector
	 */
	struct UVictoryCore_FlattenDirectionVector_Params
	{
	public:
		struct FVector                                             Direction;                                               // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.FinishSpawning
	 */
	struct UVictoryCore_FinishSpawning_Params
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.FindWorldActors
	 */
	struct UVictoryCore_FindWorldActors_Params
	{
	public:
		class UWorld*                                              fWorld;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class AActor*>                                      fContainer;                                              // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		class UClass*                                              fType;                                                   // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                fTag;                                                    // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0028(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.FindValidLocationNextToTarget
	 */
	struct UVictoryCore_FindValidLocationNextToTarget_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             OutLocation;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_L7AC[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalCharacter*                                    SourceCharacter;                                         // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalCharacter*                                    TargetCharacter;                                         // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DistanceMargin;                                          // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    MaxTraceCount;                                           // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              ActorToIgnore;                                           // 0x0030(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDrawDebug;                                              // 0x0039(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_2TVN[0x2];                                   // 0x003A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      DebugDrawDuration;                                       // 0x003C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0040(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.FindValidLocationInFrontOfTarget
	 */
	struct UVictoryCore_FindValidLocationInFrontOfTarget_Params
	{
	public:
		struct FVector                                             OutLocation;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XP5A[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalCharacter*                                    SourceCharacter;                                         // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalCharacter*                                    TargetCharacter;                                         // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DistanceMargin;                                          // 0x0020(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          CollisionChannel;                                        // 0x0024(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFailIfLocationNotOnGround;                              // 0x0025(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_V6U3[0x2];                                   // 0x0026(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              ActorToIgnore;                                           // 0x0028(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_QQLC[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      DebugDrawDuration;                                       // 0x0034(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0038(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.FindSocketClosestToDirection
	 */
	struct UVictoryCore_FindSocketClosestToDirection_Params
	{
	public:
		class USkeletalMeshComponent*                              Mesh;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FVector                                             TargetDirection;                                         // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JUBN[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class FName>                                        Sockets;                                                 // 0x0018(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<float>                                              DotProducts;                                             // 0x0028(0x0010)  (Parm, OutParm, ZeroConstructor)
		bool                                                       bOnlySocketsWithPrefix;                                  // 0x0038(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_S0VW[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              SocketPrefix;                                            // 0x0040(0x0010)  (Parm, ZeroConstructor)
		class FName                                                ReturnValue;                                             // 0x0050(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.FindNearbyCharactersOfClass
	 */
	struct UVictoryCore_FindNearbyCharactersOfClass_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtLoc;                                                   // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              CharacterClass;                                          // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTamedDinosOnly;                                         // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bWildDinosOnly;                                          // 0x0021(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_164E[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class APrimalCharacter*>                            ReturnValue;                                             // 0x0028(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.FindLocalizedVersionOfFilename
	 */
	struct UVictoryCore_FindLocalizedVersionOfFilename_Params
	{
	public:
		struct FStringAssetReference                               OriginalFile;                                            // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class FString                                              ReturnValue;                                             // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.FindActorAIState
	 */
	struct UVictoryCore_FindActorAIState_Params
	{
	public:
		class UClass*                                              fStateType;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FDinoAttackInfo>                             fContainerOfStates;                                      // 0x0008(0x0010)  (Parm, ZeroConstructor)
		class UPrimalAIState*                                      ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.EvalProjectileArc
	 */
	struct UVictoryCore_EvalProjectileArc_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FProjectileArc                                      Arc;                                                     // 0x0008(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm)
		float                                                      Time;                                                    // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x003C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ECC_TO_BITFIELD_BP
	 */
	struct UVictoryCore_ECC_TO_BITFIELD_BP_Params
	{
	public:
		ECollisionChannel                                          ConvertChannel;                                          // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_PVED[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.DisableGCM
	 */
	struct UVictoryCore_DisableGCM_Params
	{
	public:
		class AActor*                                              ShooterCharacter;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.DestroyAllCharactersWithinMissionTileVolumes
	 */
	struct UVictoryCore_DestroyAllCharactersWithinMissionTileVolumes_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOnlyCheckForDeadCharacters;                             // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_T3HS[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FName                                                ForceOnTileStreamVolumeCustomTag;                        // 0x000C(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.DeferredSpawnAndFireProjectile_Start
	 */
	struct UVictoryCore_DeferredSpawnAndFireProjectile_Start_Params
	{
	public:
		struct FVector                                             Origin;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ShootDir;                                                // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              ProjectileClass;                                         // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalCharacter*                                    forCharacter;                                            // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_3MXW[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          SpawnTransform;                                          // 0x0030(0x0030)  (Parm, OutParm, IsPlainOldData, NoDestructor)
		bool                                                       bNoCollisionFail;                                        // 0x0060(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_N0ZT[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AShooterProjectile*                                  ReturnValue;                                             // 0x0068(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.DeferredSpawnAndFireProjectile_Finish
	 */
	struct UVictoryCore_DeferredSpawnAndFireProjectile_Finish_Params
	{
	public:
		class AShooterProjectile*                                  theProjectile;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_8ZC2[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FTransform                                          SpawnTransform;                                          // 0x0010(0x0030)  (Parm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.DebugDrawProjectileArc
	 */
	struct UVictoryCore_DebugDrawProjectileArc_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FProjectileArc                                      Arc;                                                     // 0x0008(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm)
		float                                                      MaxArcTime;                                              // 0x0038(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ArcTimeStep;                                             // 0x003C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        LineColor;                                               // 0x0040(0x0010)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      LineThickness;                                           // 0x0050(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DebugDrawDuration;                                       // 0x0054(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.DeactivateMissionForPlayerCharacter
	 */
	struct UVictoryCore_DeactivateMissionForPlayerCharacter_Params
	{
	public:
		class AShooterCharacter*                                   PlayerPawn;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bOverrideForcePreventLeavingMissions;                    // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.DateTimeToSeconds
	 */
	struct UVictoryCore_DateTimeToSeconds_Params
	{
	public:
		struct FDateTime                                           DateTimeValue;                                           // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		double                                                     ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.CopyDinoColorSetIndicies
	 */
	struct UVictoryCore_CopyDinoColorSetIndicies_Params
	{
	public:
		class APrimalDinoCharacter*                                src;                                                     // 0x0000(0x0008)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalDinoCharacter*                                dest;                                                    // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.CooldownTimeRemaining
	 */
	struct UVictoryCore_CooldownTimeRemaining_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		double                                                     CooldownClock;                                           // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CooldownDuration;                                        // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ConvertRotatorFromWorldToLocal
	 */
	struct UVictoryCore_ConvertRotatorFromWorldToLocal_Params
	{
	public:
		struct FRotator                                            ConvertRot;                                              // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            ToParentRotation;                                        // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ConvertRotatorFromLocalToWorld
	 */
	struct UVictoryCore_ConvertRotatorFromLocalToWorld_Params
	{
	public:
		struct FRotator                                            ConvertRot;                                              // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            FromParentRotation;                                      // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ConvertIntToStringWithCommas
	 */
	struct UVictoryCore_ConvertIntToStringWithCommas_Params
	{
	public:
		int32_t                                                    GivenNumber;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_MIJY[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.Conv_VectorToVectorNetQuantizeNormal
	 */
	struct UVictoryCore_Conv_VectorToVectorNetQuantizeNormal_Params
	{
	public:
		struct FVector                                             InVector;                                                // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector_NetQuantizeNormal                           ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.Conv_VectorToVectorNetQuantize
	 */
	struct UVictoryCore_Conv_VectorToVectorNetQuantize_Params
	{
	public:
		struct FVector                                             InVector;                                                // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector_NetQuantize                                 ReturnValue;                                             // 0x000C(0x000C)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.ConstructObjectBP
	 */
	struct UVictoryCore_ConstructObjectBP_Params
	{
	public:
		class UClass*                                              Class;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObject*                                             Outer;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                Name;                                                    // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObject*                                             ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ConstructObjectAutoNameBP
	 */
	struct UVictoryCore_ConstructObjectAutoNameBP_Params
	{
	public:
		class UClass*                                              Class;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObject*                                             Outer;                                                   // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObject*                                             ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ComponentBoundsEncompassesPoint
	 */
	struct UVictoryCore_ComponentBoundsEncompassesPoint_Params
	{
	public:
		class UPrimitiveComponent*                                 Comp;                                                    // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FVector                                             Point;                                                   // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      BoundsMultiplier;                                        // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ClipLineInsideBox
	 */
	struct UVictoryCore_ClipLineInsideBox_Params
	{
	public:
		struct FVector                                             Origin;                                                  // 0x0000(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Extent;                                                  // 0x000C(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             LineStart;                                               // 0x0018(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             LineEnd;                                                 // 0x0024(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             OutLineStart;                                            // 0x0030(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             OutLineEnd;                                              // 0x003C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0048(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ClassToStringReference
	 */
	struct UVictoryCore_ClassToStringReference_Params
	{
	public:
		class UClass*                                              ForClass;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.ClassRefToObjectRef
	 */
	struct UVictoryCore_ClassRefToObjectRef_Params
	{
	public:
		class UClass*                                              InClass;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UObject*                                             ReturnValue;                                             // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ClampRotAxis
	 */
	struct UVictoryCore_ClampRotAxis_Params
	{
	public:
		float                                                      BaseAxis;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DesiredAxis;                                             // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxDiff;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ClampLocation
	 */
	struct UVictoryCore_ClampLocation_Params
	{
	public:
		struct FVector                                             BaseLocation;                                            // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             DesiredLocation;                                         // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxDiff;                                                 // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceClampLocation;                                     // 0x001C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5CWW[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UWorld*                                              TraceWorld;                                              // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             TraceFromLocation;                                       // 0x0028(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0034(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ChunkFStringIntoArray
	 */
	struct UVictoryCore_ChunkFStringIntoArray_Params
	{
	public:
		class FString                                              InputString;                                             // 0x0000(0x0010)  (Parm, ZeroConstructor)
		int32_t                                                    ChunkSize;                                               // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CHBC[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class FString>                                      ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.ChangeSaturation
	 */
	struct UVictoryCore_ChangeSaturation_Params
	{
	public:
		struct FLinearColor                                        InColor;                                                 // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      NewSaturation;                                           // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FLinearColor                                        ReturnValue;                                             // 0x0014(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.CapsuleSweepProjectileArc
	 */
	struct UVictoryCore_CapsuleSweepProjectileArc_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FProjectileArc                                      Arc;                                                     // 0x0008(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FRotator                                            CapsuleRotation;                                         // 0x0038(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      CapsuleRadius;                                           // 0x0044(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CapsuleHalfHeight;                                       // 0x0048(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bRotateCapsuleAlongPath;                                 // 0x004C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x004D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ALXN[0x2];                                   // 0x004E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FHitResult                                          HitResult;                                               // 0x0050(0x0088)  (Parm, OutParm)
		struct FVector                                             EndLocation;                                             // 0x00D8(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      EndArcTime;                                              // 0x00E4(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxArcLength;                                            // 0x00E8(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XWGE[0x4];                                   // 0x00EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x00F0(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bIgnoreSelf;                                             // 0x0100(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_6FLJ[0x3];                                   // 0x0101(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ArcTimeStep;                                             // 0x0104(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          CollisionChannel;                                        // 0x0108(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDrawDebug;                                              // 0x0109(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CN23[0x2];                                   // 0x010A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      DebugDrawDuration;                                       // 0x010C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0110(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.CapsuleSweepMulti
	 */
	struct UVictoryCore_CapsuleSweepMulti_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FHitResult>                                  OutHits;                                                 // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor)
		struct FVector                                             Start;                                                   // 0x0018(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x0024(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            CapsuleRot;                                              // 0x0030(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x003C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HalfHeight;                                              // 0x0040(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZM35[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class AActor*>                                      ActorsToIgnore;                                          // 0x0048(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       bIgnoreSelf;                                             // 0x0058(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          CollisionChannel;                                        // 0x0059(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x005A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDebugDraw;                                              // 0x005B(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      DebugDrawDuration;                                       // 0x005C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bFindInitialOverlaps;                                    // 0x0060(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0061(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.CapsuleSweepFast
	 */
	struct UVictoryCore_CapsuleSweepFast_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FHitResult                                          OutHit;                                                  // 0x0008(0x0088)  (Parm, OutParm)
		struct FVector                                             Start;                                                   // 0x0090(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x009C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            CapsuleRot;                                              // 0x00A8(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x00B4(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HalfHeight;                                              // 0x00B8(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          CollisionChannel;                                        // 0x00BC(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bTraceComplex;                                           // 0x00BD(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bIgnoreSelf;                                             // 0x00BE(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_D99G[0x1];                                   // 0x00BF(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              IgnoreActor;                                             // 0x00C0(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bDebugDraw;                                              // 0x00C8(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_F9TG[0x3];                                   // 0x00C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      DebugDrawDuration;                                       // 0x00CC(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       ReturnValue;                                             // 0x00D0(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.CapsuleOverlapFast
	 */
	struct UVictoryCore_CapsuleOverlapFast_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              FirstOverlappedActor;                                    // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Origin;                                                  // 0x0010(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            CapsuleRotation;                                         // 0x001C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HalfHeight;                                              // 0x002C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          CollisionChannel;                                        // 0x0030(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bTraceComplex;                                           // 0x0031(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bIgnoreSelf;                                             // 0x0032(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_IQOK[0x5];                                   // 0x0033(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              IgnoreActor;                                             // 0x0038(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bDebugDraw;                                              // 0x0040(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		unsigned char                                              UnknownData_ULZL[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      DebugDrawDuration;                                       // 0x0044(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       bBlockingOnly;                                           // 0x0048(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       ReturnValue;                                             // 0x0049(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.CanTeleport
	 */
	struct UVictoryCore_CanTeleport_Params
	{
	public:
		class APrimalDinoCharacter*                                Target;                                                  // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.CanSpawnCustomDino
	 */
	struct UVictoryCore_CanSpawnCustomDino_Params
	{
	public:
		class UWorld*                                              World;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             OutCalculatedSpawnLocation;                              // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             PlayerLocation;                                          // 0x0014(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             SpawnLocation;                                           // 0x0020(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            SpawnRotation;                                           // 0x002C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FDinoSetup                                          DinoSetup;                                               // 0x0038(0x00F0)  (ConstParm, Parm, OutParm, ReferenceParm)
		float                                                      DebugDrawDuration;                                       // 0x0128(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDoLosCheck;                                             // 0x012C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDoExtraSafetyChecks;                                    // 0x012D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_M2HH[0x2];                                   // 0x012E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APrimalCharacter*                                    spawningCharacter;                                       // 0x0130(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDoOverlapCheck;                                         // 0x0138(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0139(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.CallGlobalLevelEvent
	 */
	struct UVictoryCore_CallGlobalLevelEvent_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                EventName;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.CalculateGPSCoordinates
	 */
	struct UVictoryCore_CalculateGPSCoordinates_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             WorldPos;                                                // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FIntPoint                                           ReturnValue;                                             // 0x0014(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.BPSweepComponent
	 */
	struct UVictoryCore_BPSweepComponent_Params
	{
	public:
		class UPrimitiveComponent*                                 Component;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FHitResult                                          OutHit;                                                  // 0x0008(0x0088)  (Parm, OutParm)
		struct FVector                                             Start;                                                   // 0x0090(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x009C(0x000C)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Radius;                                                  // 0x00A8(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      HalfHeight;                                              // 0x00AC(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Extent;                                                  // 0x00B0(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bTraceComplex;                                           // 0x00BC(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x00BD(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.BPRTransformInverse
	 */
	struct UVictoryCore_BPRTransformInverse_Params
	{
	public:
		struct FRotator                                            R;                                                       // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            RBasis;                                                  // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.BPRTransform
	 */
	struct UVictoryCore_BPRTransform_Params
	{
	public:
		struct FRotator                                            R;                                                       // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            RBasis;                                                  // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.BPRotatorLerp
	 */
	struct UVictoryCore_BPRotatorLerp_Params
	{
	public:
		struct FRotator                                            A;                                                       // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            B;                                                       // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      Alpha;                                                   // 0x0018(0x0004)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x001C(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.BPProjectWorldToScreenPositionRaw
	 */
	struct UVictoryCore_BPProjectWorldToScreenPositionRaw_Params
	{
	public:
		class APlayerController*                                   thePC;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             WorldLocation;                                           // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           Out_ScreenLocation;                                      // 0x0014(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Out_ViewLocation;                                        // 0x001C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       Out_bIsScreenLocationInsideViewRect;                     // 0x0028(0x0001)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreScreenProjectionGlobalTransform;                  // 0x0029(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x002A(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.BPProjectWorldToScreenPosition
	 */
	struct UVictoryCore_BPProjectWorldToScreenPosition_Params
	{
	public:
		struct FVector                                             WorldLocation;                                           // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_W62O[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class APlayerController*                                   thePC;                                                   // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.BPLoadObject
	 */
	struct UVictoryCore_BPLoadObject_Params
	{
	public:
		class FString                                              PathName;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class UObject*                                             ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.BPLoadClass
	 */
	struct UVictoryCore_BPLoadClass_Params
	{
	public:
		class FString                                              PathName;                                                // 0x0000(0x0010)  (Parm, ZeroConstructor)
		class UClass*                                              ReturnValue;                                             // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.BPIsTemplate
	 */
	struct UVictoryCore_BPIsTemplate_Params
	{
	public:
		class UObject*                                             AnObject;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.BPIsDinoIDEqual
	 */
	struct UVictoryCore_BPIsDinoIDEqual_Params
	{
	public:
		int32_t                                                    FirstDinoID1;                                            // 0x0000(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    FirstDinoID2;                                            // 0x0004(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    SecondDinoID1;                                           // 0x0008(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    SecondDinoID2;                                           // 0x000C(0x0004)  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.BPGetWeightedRandomIndex
	 */
	struct UVictoryCore_BPGetWeightedRandomIndex_Params
	{
	public:
		TArray<float>                                              pArray;                                                  // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		float                                                      ForceRand;                                               // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0014(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.BPGetPrimaryMapName
	 */
	struct UVictoryCore_BPGetPrimaryMapName_Params
	{
	public:
		class UWorld*                                              WorldContext;                                            // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.BPGetBiomeWind
	 */
	struct UVictoryCore_BPGetBiomeWind_Params
	{
	public:
		class ABiomeZoneVolume*                                    BiomeZoneVolume;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      GlobalWind;                                              // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.BPGetBiomeTemperature
	 */
	struct UVictoryCore_BPGetBiomeTemperature_Params
	{
	public:
		class ABiomeZoneVolume*                                    BiomeZoneVolume;                                         // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      GlobalTemperature;                                       // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.BPFormatAsTimeLong
	 */
	struct UVictoryCore_BPFormatAsTimeLong_Params
	{
	public:
		int32_t                                                    InTime;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CO4W[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.BPFormatAsTime
	 */
	struct UVictoryCore_BPFormatAsTime_Params
	{
	public:
		int32_t                                                    InTime;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       UseLeadingZero;                                          // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceLeadingZeroHour;                                   // 0x0005(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bShowSeconds;                                            // 0x0006(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_IWU1[0x1];                                   // 0x0007(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class FString                                              ReturnValue;                                             // 0x0008(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.VictoryCore.BPFLerpFastPure
	 */
	struct UVictoryCore_BPFLerpFastPure_Params
	{
	public:
		float                                                      InMin;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InMax;                                                   // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InPercent;                                               // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.BPFLerpFast
	 */
	struct UVictoryCore_BPFLerpFast_Params
	{
	public:
		float                                                      InMin;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InMax;                                                   // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InPercent;                                               // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.BPFLerp
	 */
	struct UVictoryCore_BPFLerp_Params
	{
	public:
		float                                                      InMin;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InMax;                                                   // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      InPercent;                                               // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bClampToMin;                                             // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bClampToMax;                                             // 0x000D(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_TYVP[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.BPFastTrace
	 */
	struct UVictoryCore_BPFastTrace_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             TraceEnd;                                                // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             TraceStart;                                              // 0x0014(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              ActorToIgnore;                                           // 0x0020(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		float                                                      DebugDrawDuration;                                       // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
		bool                                                       ReturnValue;                                             // 0x002C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.BoxFromOriginAndExtent
	 */
	struct UVictoryCore_BoxFromOriginAndExtent_Params
	{
	public:
		struct FVector                                             Origin;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Extent;                                                  // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             OutBoxMin;                                               // 0x0018(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             OutBoxMax;                                               // 0x0024(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.AreVectorsNearlyEqual
	 */
	struct UVictoryCore_AreVectorsNearlyEqual_Params
	{
	public:
		struct FVector                                             VectorA;                                                 // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             VectorB;                                                 // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      WithinError;                                             // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x001C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.AreVector2DsNearlyEqual
	 */
	struct UVictoryCore_AreVector2DsNearlyEqual_Params
	{
	public:
		struct FVector2D                                           VectorA;                                                 // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector2D                                           VectorB;                                                 // 0x0008(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      WithinError;                                             // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.AreVector2DsEqual
	 */
	struct UVictoryCore_AreVector2DsEqual_Params
	{
	public:
		struct FVector2D                                           VectorA;                                                 // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector2D                                           VectorB;                                                 // 0x0008(0x0008)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.AreTransformsNearlyEqual
	 */
	struct UVictoryCore_AreTransformsNearlyEqual_Params
	{
	public:
		struct FTransform                                          TransformA;                                              // 0x0000(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FTransform                                          TransformB;                                              // 0x0030(0x0030)  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      WithinError;                                             // 0x0060(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0064(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.AreRotatorsNearlyEqual
	 */
	struct UVictoryCore_AreRotatorsNearlyEqual_Params
	{
	public:
		struct FRotator                                            RotatorA;                                                // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FRotator                                            RotatorB;                                                // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		float                                                      WithinError;                                             // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x001C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.AdjustScreenPositionWithScreenDPI
	 */
	struct UVictoryCore_AdjustScreenPositionWithScreenDPI_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector2D                                           ScreenPosition;                                          // 0x0008(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.AddToEditorMessageLog
	 */
	struct UVictoryCore_AddToEditorMessageLog_Params
	{
	public:
		class UObject*                                             WorldContextObject;                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              Message;                                                 // 0x0008(0x0010)  (Parm, ZeroConstructor)
		EEditorMessageLogLevel                                     LogLevel;                                                // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bServerOnly;                                             // 0x0019(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.AddToActorList
	 */
	struct UVictoryCore_AddToActorList_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ActorListNum;                                            // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_IA2U[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              ActorRef;                                                // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.AddActorToCustomActorList
	 */
	struct UVictoryCore_AddActorToCustomActorList_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FName                                                SearchCustomTag;                                         // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              ActorToAdd;                                              // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       createListIfMissing;                                     // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ActorHasLineOfSightToWorldLocation
	 */
	struct UVictoryCore_ActorHasLineOfSightToWorldLocation_Params
	{
	public:
		class AActor*                                              FromActor;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ToLocation;                                              // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_YK97[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AActor*                                              OutBlockingActor;                                        // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          Channel;                                                 // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_40F7[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      DebugDrawDuration;                                       // 0x0024(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0028(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.VictoryCore.ActorHasLineOfSight
	 */
	struct UVictoryCore_ActorHasLineOfSight_Params
	{
	public:
		class AActor*                                              FromActor;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              ToActor;                                                 // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              OutBlockingActor;                                        // 0x0010(0x0008)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ToActorOffset;                                           // 0x0018(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          Channel;                                                 // 0x0024(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_K9JB[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      DebugDrawDuration;                                       // 0x0028(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x002C(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalProjectileNetGun.GetManagedBoneRotation
	 */
	struct APrimalProjectileNetGun_GetManagedBoneRotation_Params
	{
	public:
		class FName                                                InBoneName;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalProjectileNetGun.GetManagedBoneLocationsAndRotations
	 */
	struct APrimalProjectileNetGun_GetManagedBoneLocationsAndRotations_Params
	{
	public:
		TArray<struct FVector>                                     Locations;                                               // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
		TArray<struct FRotator>                                    Rotations;                                               // 0x0010(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.PrimalProjectileNetGun.GetManagedBoneLocation
	 */
	struct APrimalProjectileNetGun_GetManagedBoneLocation_Params
	{
	public:
		class FName                                                InBoneName;                                              // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalProjectileNetGun.CalculateBonePositions
	 */
	struct APrimalProjectileNetGun_CalculateBonePositions_Params
	{	};

	/**
	 * Function ShooterGame.ShooterProjectile_Swarm.TimeSinceProjectileSpawn
	 */
	struct AShooterProjectile_Swarm_TimeSinceProjectileSpawn_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterProjectile_Swarm.SpawnSwarm
	 */
	struct AShooterProjectile_Swarm_SpawnSwarm_Params
	{	};

	/**
	 * Function ShooterGame.ShooterProjectile_Swarm.MultiSyncSwarm
	 */
	struct AShooterProjectile_Swarm_MultiSyncSwarm_Params
	{
	public:
		TArray<struct FBoid>                                       ServerSwarmData;                                         // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterProjectile_Swarm.MultiPrimaryProjectileDestroyed
	 */
	struct AShooterProjectile_Swarm_MultiPrimaryProjectileDestroyed_Params
	{
	public:
		struct FVector                                             ImpactLocation;                                          // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_2ED0[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		double                                                     DestroyNetworkTime;                                      // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterProjectile_Swarm.GetNumberOfBoidsInFlight
	 */
	struct AShooterProjectile_Swarm_GetNumberOfBoidsInFlight_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterProjectile_Swarm.DoSwarmSync
	 */
	struct AShooterProjectile_Swarm_DoSwarmSync_Params
	{	};

	/**
	 * Function ShooterGame.ShooterProjectile_Swarm.BPOnBoidExplode
	 */
	struct AShooterProjectile_Swarm_BPOnBoidExplode_Params
	{
	public:
		int32_t                                                    BoidIndex;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_BYR3[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UParticleSystemComponent*                            BoidParticles;                                           // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FHitResult                                          Hit;                                                     // 0x0010(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
	};

	/**
	 * Function ShooterGame.ShooterProjectile_Swarm.BPGetBoidSpawnLocationAndVelocity
	 */
	struct AShooterProjectile_Swarm_BPGetBoidSpawnLocationAndVelocity_Params
	{
	public:
		int32_t                                                    BoidIndex;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FBoid                                               BoidData;                                                // 0x0004(0x0054)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector                                             SpawnLocation;                                           // 0x0058(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             SpawnVelocity;                                           // 0x0064(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_ChainSaw.ServerStopFireAnim
	 */
	struct AShooterWeapon_ChainSaw_ServerStopFireAnim_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_ChainSaw.ServerReloadWeapon
	 */
	struct AShooterWeapon_ChainSaw_ServerReloadWeapon_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_ChainSaw.ServerHit
	 */
	struct AShooterWeapon_ChainSaw_ServerHit_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_ChainSaw.ClientSimulateChangeFireAnim
	 */
	struct AShooterWeapon_ChainSaw_ClientSimulateChangeFireAnim_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_Instant.SimulateInstantHit
	 */
	struct AShooterWeapon_Instant_SimulateInstantHit_Params
	{
	public:
		struct FVector                                             Origin;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector_NetQuantizeNormal                           ShootDir;                                                // 0x000C(0x000C)  (Parm)
		bool                                                       bForceOnLocal;                                           // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_A6IX[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ShotIndex;                                               // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Instant.ServerNotifyShotOrigin
	 */
	struct AShooterWeapon_Instant_ServerNotifyShotOrigin_Params
	{
	public:
		struct FVector                                             Origin;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_CYM9[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FHitResult>                                  Impacts;                                                 // 0x0010(0x0010)  (ConstParm, Parm, ZeroConstructor)
		TArray<struct FVector_NetQuantizeNormal>                   ShootDirs;                                               // 0x0020(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Instant.ServerNotifyShot
	 */
	struct AShooterWeapon_Instant_ServerNotifyShot_Params
	{
	public:
		TArray<struct FHitResult>                                  Impacts;                                                 // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
		TArray<struct FVector_NetQuantizeNormal>                   ShootDirs;                                               // 0x0010(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Instant.ServerForceShot
	 */
	struct AShooterWeapon_Instant_ServerForceShot_Params
	{
	public:
		struct FHitResult                                          Impact;                                                  // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector                                             StartShotLoc;                                            // 0x0088(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             EndShotLoc;                                              // 0x0094(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Instant.NetSimulateForceShot
	 */
	struct AShooterWeapon_Instant_NetSimulateForceShot_Params
	{
	public:
		struct FVector                                             ShotOrigin;                                              // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ShootDir;                                                // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Instant.GetFireLocationAndDirection
	 */
	struct AShooterWeapon_Instant_GetFireLocationAndDirection_Params
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Direction;                                               // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Instant.GetCurrentSpread
	 */
	struct AShooterWeapon_Instant_GetCurrentSpread_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Instant.CheckRefireTimer
	 */
	struct AShooterWeapon_Instant_CheckRefireTimer_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_Instant.BPSpawnImpactEffects
	 */
	struct AShooterWeapon_Instant_BPSpawnImpactEffects_Params
	{
	public:
		struct FHitResult                                          Impact;                                                  // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector                                             ShootDir;                                                // 0x0088(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bIsEntryHit;                                             // 0x0094(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_T6OR[0x3];                                   // 0x0095(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      WeaponMaxRange;                                          // 0x0098(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Instant.BPPostSpawnTrailEffect
	 */
	struct AShooterWeapon_Instant_BPPostSpawnTrailEffect_Params
	{
	public:
		class UParticleSystemComponent*                            TrailPSC;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		struct FVector                                             StartPoint;                                              // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             EndPoint;                                                // 0x0014(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Instant.BPKillImpactEffects
	 */
	struct AShooterWeapon_Instant_BPKillImpactEffects_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_Instant.BPGetCurrentSpread
	 */
	struct AShooterWeapon_Instant_BPGetCurrentSpread_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_FlameThrower.TickShootFX
	 */
	struct AShooterWeapon_FlameThrower_TickShootFX_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_FlameThrower.StopShootFX
	 */
	struct AShooterWeapon_FlameThrower_StopShootFX_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_FlameThrower.SpawnImpactEffects
	 */
	struct AShooterWeapon_FlameThrower_SpawnImpactEffects_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_FlameThrower.ServerTickShootFX
	 */
	struct AShooterWeapon_FlameThrower_ServerTickShootFX_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_FlameThrower.ServerStopShootFX
	 */
	struct AShooterWeapon_FlameThrower_ServerStopShootFX_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_FlameThrower.ServerBeginShootFX
	 */
	struct AShooterWeapon_FlameThrower_ServerBeginShootFX_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_FlameThrower.EndFXDelay
	 */
	struct AShooterWeapon_FlameThrower_EndFXDelay_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_FlameThrower.ClientSpawnHarvestFX
	 */
	struct AShooterWeapon_FlameThrower_ClientSpawnHarvestFX_Params
	{
	public:
		TArray<struct FVector>                                     Impacts;                                                 // 0x0000(0x0010)  (ConstParm, Parm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_FlameThrower.BPSpawnHarvestEffects
	 */
	struct AShooterWeapon_FlameThrower_BPSpawnHarvestEffects_Params
	{
	public:
		TArray<struct FVector>                                     Impacts;                                                 // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_FlameThrower.BeginShootFX
	 */
	struct AShooterWeapon_FlameThrower_BeginShootFX_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_Activated.ServerPreFire
	 */
	struct AShooterWeapon_Activated_ServerPreFire_Params
	{
	public:
		struct FVector                                             Origin;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ShootDir;                                                // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Activated.ServerCancelActivation
	 */
	struct AShooterWeapon_Activated_ServerCancelActivation_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_Activated.ServerActivateWeapon
	 */
	struct AShooterWeapon_Activated_ServerActivateWeapon_Params
	{
	public:
		bool                                                       bActivate;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_ZNXZ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    nAnimIndex;                                              // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Activated.IsActivationAnimPlaying
	 */
	struct AShooterWeapon_Activated_IsActivationAnimPlaying_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Activated.HandleActivation
	 */
	struct AShooterWeapon_Activated_HandleActivation_Params
	{
	public:
		bool                                                       bActive;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Activated.GetBeamTarget
	 */
	struct AShooterWeapon_Activated_GetBeamTarget_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Activated.EndActivationAnim
	 */
	struct AShooterWeapon_Activated_EndActivationAnim_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_Activated.ClientHandleActivation
	 */
	struct AShooterWeapon_Activated_ClientHandleActivation_Params
	{
	public:
		bool                                                       bActivate;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Activated.ClientActivateWeapon
	 */
	struct AShooterWeapon_Activated_ClientActivateWeapon_Params
	{
	public:
		bool                                                       bActivate;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Activated.BPPreFireEvent
	 */
	struct AShooterWeapon_Activated_BPPreFireEvent_Params
	{
	public:
		struct FVector                                             Origin;                                                  // 0x0000(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             ShootDir;                                                // 0x000C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Activated.ActivateWeapon
	 */
	struct AShooterWeapon_Activated_ActivateWeapon_Params
	{
	public:
		bool                                                       bActivate;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JXW0[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    nAnimIndex;                                              // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_InstantCharging.ServerSetCharging
	 */
	struct AShooterWeapon_InstantCharging_ServerSetCharging_Params
	{
	public:
		double                                                     StartTime;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_InstantPenetrating.WeaponPenetrationTrace
	 */
	struct AShooterWeapon_InstantPenetrating_WeaponPenetrationTrace_Params
	{
	public:
		struct FVector                                             Start;                                                   // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             End;                                                     // 0x000C(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       FilterVisuals;                                           // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDebugDraw;                                              // 0x0019(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_GSIO[0x2];                                   // 0x001A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      DebugDrawDuration;                                       // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FHitResult>                                  HitResults;                                              // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor)
		TArray<bool>                                               IsEntryHit;                                              // 0x0030(0x0010)  (Parm, OutParm, ZeroConstructor)
		float                                                      MaxDistance;                                             // 0x0040(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_InstantPenetrating.PassiveUseAmmo
	 */
	struct AShooterWeapon_InstantPenetrating_PassiveUseAmmo_Params
	{
	public:
		int32_t                                                    amount;                                                  // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0004(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_InstantPenetrating.BPStopPenetratingAtHit
	 */
	struct AShooterWeapon_InstantPenetrating_BPStopPenetratingAtHit_Params
	{
	public:
		struct FHitResult                                          CurrentHit;                                              // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       bIsEntryHit;                                             // 0x0088(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NFWW[0x3];                                   // 0x0089(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      CurrentDistance;                                         // 0x008C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CurrentMaxDistance;                                      // 0x0090(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0094(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWeaponElectronicBinoculars.ServerSetActivateNightVision
	 */
	struct APrimalWeaponElectronicBinoculars_ServerSetActivateNightVision_Params
	{
	public:
		int8_t                                                     bActive;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWeaponElectronicBinoculars.ClientSetActivateNightVision
	 */
	struct APrimalWeaponElectronicBinoculars_ClientSetActivateNightVision_Params
	{
	public:
		int8_t                                                     bActive;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWeaponGPS.ServerShowNone
	 */
	struct APrimalWeaponGPS_ServerShowNone_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWeaponGPS.ServerShowMapOnly
	 */
	struct APrimalWeaponGPS_ServerShowMapOnly_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWeaponGPS.ServerShowGPSOnly
	 */
	struct APrimalWeaponGPS_ServerShowGPSOnly_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWeaponGPS.ServerShowBoth
	 */
	struct APrimalWeaponGPS_ServerShowBoth_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWeaponGPS.ServerSetUseCompassInsteadOfGPS
	 */
	struct APrimalWeaponGPS_ServerSetUseCompassInsteadOfGPS_Params
	{
	public:
		bool                                                       bUseCompass;                                             // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWeaponGPS.RefreshUseCompass
	 */
	struct APrimalWeaponGPS_RefreshUseCompass_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_Climb.ShouldShowTargetingArray
	 */
	struct AShooterWeapon_Climb_ShouldShowTargetingArray_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Climb.SetClimbingAnchorPoint
	 */
	struct AShooterWeapon_Climb_SetClimbingAnchorPoint_Params
	{
	public:
		unsigned char                                              Type;                                                    // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              Mode;                                                    // 0x0001(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_XR6A[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector_NetQuantize100                              Direction;                                               // 0x0004(0x000C)  (Parm)
		struct FVector_NetQuantize100                              Position;                                                // 0x0010(0x000C)  (Parm)
		struct FVector_NetQuantizeNormal                           Normal;                                                  // 0x001C(0x000C)  (Parm)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Climb.ServerSetClimbingLeftArm
	 */
	struct AShooterWeapon_Climb_ServerSetClimbingLeftArm_Params
	{
	public:
		bool                                                       ClimbingLeftArm;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Climb.ServerRequestClimbMove
	 */
	struct AShooterWeapon_Climb_ServerRequestClimbMove_Params
	{
	public:
		unsigned char                                              Type;                                                    // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_0BIF[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             Direction;                                               // 0x0004(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ClimbingLeftArm;                                         // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Climb.ServerReleaseClimbingAnchor
	 */
	struct AShooterWeapon_Climb_ServerReleaseClimbingAnchor_Params
	{
	public:
		bool                                                       bWithJump;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_X5EQ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector_NetQuantizeNormal                           InputDir;                                                // 0x0004(0x000C)  (Parm)
		bool                                                       bForceMinTimeCheckBeforeReleasing;                       // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Climb.ServerPerformTurn
	 */
	struct AShooterWeapon_Climb_ServerPerformTurn_Params
	{
	public:
		bool                                                       ClimbingLeftArm;                                         // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Climb.ReleaseClimbingAnchor
	 */
	struct AShooterWeapon_Climb_ReleaseClimbingAnchor_Params
	{
	public:
		bool                                                       bWithJump;                                               // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5IXO[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             InputDir;                                                // 0x0004(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bForceMinTimeCheckBeforeReleasing;                       // 0x0010(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Climb.IsClimbingUp
	 */
	struct AShooterWeapon_Climb_IsClimbingUp_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Climb.IsClimbingHanging
	 */
	struct AShooterWeapon_Climb_IsClimbingHanging_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Climb.GetViewLocation
	 */
	struct AShooterWeapon_Climb_GetViewLocation_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Climb.GetViewDirection
	 */
	struct AShooterWeapon_Climb_GetViewDirection_Params
	{
	public:
		struct FVector                                             ReturnValue;                                             // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Climb.ClimbTrace
	 */
	struct AShooterWeapon_Climb_ClimbTrace_Params
	{
	public:
		struct FHitResult                                          HitResult;                                               // 0x0000(0x0088)  (Parm, OutParm)
		unsigned char                                              Type;                                                    // 0x0088(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_4BRL[0x3];                                   // 0x0089(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             Direction;                                               // 0x008C(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		ECollisionChannel                                          Channel;                                                 // 0x0098(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0099(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Climb.ClientNotifyNoClimbSurface
	 */
	struct AShooterWeapon_Climb_ClientNotifyNoClimbSurface_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_Climb.CanLandOnSurface
	 */
	struct AShooterWeapon_Climb_CanLandOnSurface_Params
	{
	public:
		struct FHitResult                                          HitResult;                                               // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0088(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Climb.CanClimbOnSurface
	 */
	struct AShooterWeapon_Climb_CanClimbOnSurface_Params
	{
	public:
		struct FHitResult                                          HitResult;                                               // 0x0000(0x0088)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0088(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Climb.BPUpdateClimbTarget
	 */
	struct AShooterWeapon_Climb_BPUpdateClimbTarget_Params
	{
	public:
		float                                                      DeltaSeconds;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bClimbing;                                               // 0x0004(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_R76Y[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             AnchorPosition;                                          // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             AnchorNormal;                                            // 0x0014(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bCanClimb;                                               // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bCanLand;                                                // 0x0021(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_1DYJ[0x2];                                   // 0x0022(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             ClimbLocation;                                           // 0x0024(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FVector                                             ClimbNormal;                                             // 0x0030(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bHudVisible;                                             // 0x003C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_MeleeLock.OnRep_LockValue
	 */
	struct AShooterWeapon_MeleeLock_OnRep_LockValue_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_MeleeLock.EndMeleeAttack
	 */
	struct AShooterWeapon_MeleeLock_EndMeleeAttack_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_Placer.ServerDetonateExplosives
	 */
	struct AShooterWeapon_Placer_ServerDetonateExplosives_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_Placer.PlaceStructureWithSecondaryAction
	 */
	struct AShooterWeapon_Placer_PlaceStructureWithSecondaryAction_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_Placer.GetPlacementOrigin
	 */
	struct AShooterWeapon_Placer_GetPlacementOrigin_Params
	{
	public:
		struct FVector                                             OriginLocation;                                          // 0x0000(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FRotator                                            OriginRotation;                                          // 0x000C(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Placer.BPSecondaryAction
	 */
	struct AShooterWeapon_Placer_BPSecondaryAction_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_Placer.BPPrefireAction
	 */
	struct AShooterWeapon_Placer_BPPrefireAction_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_PlacerTransGPS.ServerSetFrequency
	 */
	struct AShooterWeapon_PlacerTransGPS_ServerSetFrequency_Params
	{
	public:
		float                                                      Freq;                                                    // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ShooterWeapon_PlacerTransGPS.ServerAttachToSelf
	 */
	struct AShooterWeapon_PlacerTransGPS_ServerAttachToSelf_Params
	{	};

	/**
	 * Function ShooterGame.ShooterWeapon_PlacerTransGPS.ClientShowTransponders
	 */
	struct AShooterWeapon_PlacerTransGPS_ClientShowTransponders_Params
	{
	public:
		bool                                                       bValue;                                                  // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWeaponBow.UpdateTPVBowAnimation
	 */
	struct APrimalWeaponBow_UpdateTPVBowAnimation_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWeaponBow.UnHideArrow
	 */
	struct APrimalWeaponBow_UnHideArrow_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWeaponBow.ServerSetPullString
	 */
	struct APrimalWeaponBow_ServerSetPullString_Params
	{
	public:
		bool                                                       bIsPulling;                                              // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWeaponBow.HideArrow
	 */
	struct APrimalWeaponBow_HideArrow_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWeaponBow.BPSimulatedResetSetPullingTime
	 */
	struct APrimalWeaponBow_BPSimulatedResetSetPullingTime_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWeaponBow.BPCanStartFire
	 */
	struct APrimalWeaponBow_BPCanStartFire_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.PrimalWeaponBoomerang.OnRep_ClientHideBoomerang
	 */
	struct APrimalWeaponBoomerang_OnRep_ClientHideBoomerang_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWeaponGrenade.UnHidePin
	 */
	struct APrimalWeaponGrenade_UnHidePin_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWeaponGrenade.UnHideGrenade
	 */
	struct APrimalWeaponGrenade_UnHideGrenade_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWeaponGrenade.HidePin
	 */
	struct APrimalWeaponGrenade_HidePin_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWeaponGrenade.HideGrenade
	 */
	struct APrimalWeaponGrenade_HideGrenade_Params
	{	};

	/**
	 * Function ShooterGame.PrimalWeaponGrenade.BPGetProjectileSpeed
	 */
	struct APrimalWeaponGrenade_BPGetProjectileSpeed_Params
	{
	public:
		float                                                      ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.SkyBoxLoader.SetSkyTextureIndices
	 */
	struct ASkyBoxLoader_SetSkyTextureIndices_Params
	{
	public:
		int32_t                                                    Texture0;                                                // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    Texture1;                                                // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.SkyBoxLoader.LoadSkyTextureIndexArray
	 */
	struct ASkyBoxLoader_LoadSkyTextureIndexArray_Params
	{
	public:
		TArray<int32_t>                                            TextureInices;                                           // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.SkyBoxLoader.LoadSkyTextureIndex
	 */
	struct ASkyBoxLoader_LoadSkyTextureIndex_Params
	{
	public:
		int32_t                                                    TextureIdx;                                              // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0004(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.SkyBoxLoader.K2_OnTextureIndicesLoaded
	 */
	struct ASkyBoxLoader_K2_OnTextureIndicesLoaded_Params
	{
	public:
		TArray<int32_t>                                            TextureIndices;                                          // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
	};

	/**
	 * Function ShooterGame.StatWidget.ClickedButton
	 */
	struct UStatWidget_ClickedButton_Params
	{
	public:
		class UWidget*                                             clickedWidget;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.StructurePaintingComponent.UnloadExtraPaintingComponent
	 */
	struct UStructurePaintingComponent_UnloadExtraPaintingComponent_Params
	{	};

	/**
	 * Function ShooterGame.StructurePaintingComponent.TryPaintExtraPaintingComponent
	 */
	struct UStructurePaintingComponent_TryPaintExtraPaintingComponent_Params
	{	};

	/**
	 * Function ShooterGame.StructurePaintingComponent.OnPaintingTextureSet__DelegateSignature
	 */
	struct UStructurePaintingComponent_OnPaintingTextureSet__DelegateSignature_Params
	{	};

	/**
	 * Function ShooterGame.StructurePaintingComponent.HasPaintingTexture
	 */
	struct UStructurePaintingComponent_HasPaintingTexture_Params
	{
	public:
		bool                                                       ReturnValue;                                             // 0x0000(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.StructurePaintingComponent.ClientPaint
	 */
	struct UStructurePaintingComponent_ClientPaint_Params
	{
	public:
		class AShooterPlayerController*                            Painter;                                                 // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<struct FPaintItem>                                  Paints;                                                  // 0x0008(0x0010)  (ConstParm, Parm, ZeroConstructor, ContainsInstancedReference)
	};

	/**
	 * Function ShooterGame.StructurePreventionZoneVolume.BPIsWithinAnyStructurePreventionVolume
	 */
	struct AStructurePreventionZoneVolume_BPIsWithinAnyStructurePreventionVolume_Params
	{
	public:
		class UWorld*                                              ForWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             AtPoint;                                                 // 0x0008(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bCheckDisabled;                                          // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsForDamageCheck;                                       // 0x0015(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreOptionalVolumes;                                  // 0x0016(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_G6UQ[0x1];                                   // 0x0017(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class AStructurePreventionZoneVolume*                      ReturnValue;                                             // 0x0018(0x0008)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.StructuresPlus.SP_SetGlassModelEdgeVisibility
	 */
	struct UStructuresPlus_SP_SetGlassModelEdgeVisibility_Params
	{
	public:
		int32_t                                                    index;                                                   // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_NOPD[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		class UStaticMeshComponent*                                Top;                                                     // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UStaticMeshComponent*                                Bottom;                                                  // 0x0010(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UStaticMeshComponent*                                Left;                                                    // 0x0018(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UStaticMeshComponent*                                Right;                                                   // 0x0020(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       bIsTriangle;                                             // 0x0028(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.StructuresPlus.SP_SafeRemoveFromInventory
	 */
	struct UStructuresPlus_SP_SafeRemoveFromInventory_Params
	{
	public:
		class UClass*                                              ItemClass;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalInventoryComponent*                           inventory;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		int32_t                                                    ToRemove;                                                // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bExactClassMatch;                                        // 0x0014(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIgnoreHotbar;                                           // 0x0015(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_0TRY[0x2];                                   // 0x0016(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x0018(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.StructuresPlus.SP_MessageClient
	 */
	struct UStructuresPlus_SP_MessageClient_Params
	{
	public:
		class APlayerController*                                   PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              Message;                                                 // 0x0008(0x0010)  (Parm, ZeroConstructor)
		ESPMessageType                                             MsgType;                                                 // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.StructuresPlus.SP_IsValidStructureForConnection
	 */
	struct UStructuresPlus_SP_IsValidStructureForConnection_Params
	{
	public:
		class APrimalStructure*                                    Structure;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class UClass*>                                      StructureTypes;                                          // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.StructuresPlus.SP_IsSuitablePullTarget
	 */
	struct UStructuresPlus_SP_IsSuitablePullTarget_Params
	{
	public:
		class AActor*                                              TargetActor;                                             // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APlayerController*                                   PC;                                                      // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.StructuresPlus.SP_IsLinkedToPowerOrWater
	 */
	struct UStructuresPlus_SP_IsLinkedToPowerOrWater_Params
	{
	public:
		class APrimalStructure*                                    Structure;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.StructuresPlus.SP_IsFuel
	 */
	struct UStructuresPlus_SP_IsFuel_Params
	{
	public:
		class UPrimalInventoryComponent*                           inventory;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		class UClass*                                              ItemClass;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0010(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.StructuresPlus.SP_IsFlexibleConnectionLinked
	 */
	struct UStructuresPlus_SP_IsFlexibleConnectionLinked_Params
	{
	public:
		TArray<class APrimalStructure*>                            Structures;                                              // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class APrimalStructure*                                    NewStructure;                                            // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.StructuresPlus.SP_IsConnectedToInfiniteWaterSource
	 */
	struct UStructuresPlus_SP_IsConnectedToInfiniteWaterSource_Params
	{
	public:
		class APrimalStructure*                                    Structure;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.StructuresPlus.SP_GetSpecialMenuColor
	 */
	struct UStructuresPlus_SP_GetSpecialMenuColor_Params
	{
	public:
		struct FLinearColor                                        ReturnValue;                                             // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.StructuresPlus.SP_GetNearbyStructuresForFlexibleConnection
	 */
	struct UStructuresPlus_SP_GetNearbyStructuresForFlexibleConnection_Params
	{
	public:
		class APrimalStructure*                                    Structure;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UClass*                                              SearchClass;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Range;                                                   // 0x0010(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_OYQ6[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<class APrimalStructure*>                            ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.StructuresPlus.SP_GetMessageTypeColor
	 */
	struct UStructuresPlus_SP_GetMessageTypeColor_Params
	{
	public:
		ESPMessageType                                             MsgType;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_JWTY[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FLinearColor                                        ReturnValue;                                             // 0x0004(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.StructuresPlus.SP_GetInventoryWeightMultiplier
	 */
	struct UStructuresPlus_SP_GetInventoryWeightMultiplier_Params
	{
	public:
		class UClass*                                              ItemClass;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UPrimalInventoryComponent*                           inventory;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.StructuresPlus.SP_GetInventoryCapacityForItem
	 */
	struct UStructuresPlus_SP_GetInventoryCapacityForItem_Params
	{
	public:
		class UClass*                                              ItemClass;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              TargetActor;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		int32_t                                                    ReturnValue;                                             // 0x0010(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.StructuresPlus.SP_GetFloatOption
	 */
	struct UStructuresPlus_SP_GetFloatOption_Params
	{
	public:
		class AGameMode*                                           GameMode;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              OptionName;                                              // 0x0008(0x0010)  (Parm, ZeroConstructor)
		float                                                      Default;                                                 // 0x0018(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      Max;                                                     // 0x001C(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      ReturnValue;                                             // 0x0020(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.StructuresPlus.SP_GetEmptyInventorySlotCount
	 */
	struct UStructuresPlus_SP_GetEmptyInventorySlotCount_Params
	{
	public:
		class UPrimalInventoryComponent*                           inventory;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		bool                                                       bIsDino;                                                 // 0x0008(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_HZBL[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		int32_t                                                    ReturnValue;                                             // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.StructuresPlus.SP_GetCharacterWeights
	 */
	struct UStructuresPlus_SP_GetCharacterWeights_Params
	{
	public:
		class APrimalCharacter*                                    Character;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      MaxWeight;                                               // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      CurrentWeight;                                           // 0x000C(0x0004)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.StructuresPlus.SP_GetCentralPointForFlexibleConnection
	 */
	struct UStructuresPlus_SP_GetCentralPointForFlexibleConnection_Params
	{
	public:
		TArray<class APrimalStructure*>                            Structures;                                              // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		class APrimalStructure*                                    ThisStructure;                                           // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDrawDebug;                                              // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_5BY0[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FVector>                                     ConnectionPoints;                                        // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor)
		struct FVector                                             CentralPoint;                                            // 0x0030(0x000C)  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.StructuresPlus.SP_GetBoolOption
	 */
	struct UStructuresPlus_SP_GetBoolOption_Params
	{
	public:
		class AGameMode*                                           GameMode;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              OptionName;                                              // 0x0008(0x0010)  (Parm, ZeroConstructor)
		bool                                                       ReturnValue;                                             // 0x0018(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.StructuresPlus.SP_GetAllConnectedStructuresOfTypes
	 */
	struct UStructuresPlus_SP_GetAllConnectedStructuresOfTypes_Params
	{
	public:
		class APrimalStructure*                                    Structure;                                               // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class UClass*>                                      StructureTypes;                                          // 0x0008(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
		TArray<class APrimalStructure*>                            ReturnValue;                                             // 0x0018(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm)
	};

	/**
	 * Function ShooterGame.StructuresPlus.SP_GetAccessibleInventoriesInRange
	 */
	struct UStructuresPlus_SP_GetAccessibleInventoriesInRange_Params
	{
	public:
		class APlayerController*                                   PC;                                                      // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		struct FVector                                             Location;                                                // 0x0008(0x000C)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		float                                                      PullRange;                                               // 0x0014(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              ActorToIgnore;                                           // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		TArray<class APrimalDinoCharacter*>                        Dinos;                                                   // 0x0020(0x0010)  (Parm, OutParm, ZeroConstructor)
		TArray<class APrimalStructureItemContainer*>               Structures;                                              // 0x0030(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.StructuresPlus.SP_AlterGlassTransparency
	 */
	struct UStructuresPlus_SP_AlterGlassTransparency_Params
	{
	public:
		EGlassTransparencyType                                     GlassSettingsTransparencyType;                           // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_FFFE[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		float                                                      GlassSettingsTransparency;                               // 0x0004(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialInstanceDynamic*                            InsideMIC;                                               // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class UMaterialInstanceDynamic*                            OutsideMIC;                                              // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.StructuresPlus.SP_AddMenuEntries
	 */
	struct UStructuresPlus_SP_AddMenuEntries_Params
	{
	public:
		TArray<struct FMultiUseEntry>                              EntriesIn;                                               // 0x0000(0x0010)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference)
		class APlayerController*                                   PC;                                                      // 0x0010(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class APrimalStructure*                                    Structure;                                               // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bIsGlass;                                                // 0x0020(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_AJM6[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		TArray<struct FMultiUseEntry>                              ReturnValue;                                             // 0x0028(0x0010)  (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference)
	};

	/**
	 * Function ShooterGame.SupplyCrateSpawningVolume.SpawnCratesFromAllVolumes
	 */
	struct ASupplyCrateSpawningVolume_SpawnCratesFromAllVolumes_Params
	{
	public:
		class UWorld*                                              TheWorld;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.SupplyCrateSpawningVolume.SpawnCratesFromAllPoints
	 */
	struct ASupplyCrateSpawningVolume_SpawnCratesFromAllPoints_Params
	{	};

	/**
	 * Function ShooterGame.SupplyCrateSpawningVolume.SetSpawnEnabled
	 */
	struct ASupplyCrateSpawningVolume_SetSpawnEnabled_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.SupplyCrateSpawningVolume.CheckForSupplyCrateStart
	 */
	struct ASupplyCrateSpawningVolume_CheckForSupplyCrateStart_Params
	{	};

	/**
	 * Function ShooterGame.SupplyCrateSpawningVolume.CheckCrateSpawn
	 */
	struct ASupplyCrateSpawningVolume_CheckCrateSpawn_Params
	{	};

	/**
	 * Function ShooterGame.TickingHelperComponent.TickingHelperDelegate__DelegateSignature
	 */
	struct UTickingHelperComponent_TickingHelperDelegate__DelegateSignature_Params
	{
	public:
		class UTickingHelperComponent*                             TickingComponent;                                        // 0x0000(0x0008)  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor)
		float                                                      DeltaTime;                                               // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TickingHelperComponent.SetComponentTickGroup
	 */
	struct UTickingHelperComponent_SetComponentTickGroup_Params
	{
	public:
		ETickingGroup                                              NewTickGroup;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TickingHelperComponent.OnThrottledTick
	 */
	struct UTickingHelperComponent_OnThrottledTick_Params
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TogglePainVolume.TogglePainVolumeEvent__DelegateSignature
	 */
	struct ATogglePainVolume_TogglePainVolumeEvent__DelegateSignature_Params
	{
	public:
		class ATogglePainVolume*                                   ForPainVolume;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class AActor*                                              VictimActor;                                             // 0x0008(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TogglePainVolume.SetPainVolumeEnabled
	 */
	struct ATogglePainVolume_SetPainVolumeEnabled_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TogglePainVolume.OnInterpToggle
	 */
	struct ATogglePainVolume_OnInterpToggle_Params
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TogglePainVolume.OnEndOverlap
	 */
	struct ATogglePainVolume_OnEndOverlap_Params
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TogglePainVolume.OnBeginOverlap
	 */
	struct ATogglePainVolume_OnBeginOverlap_Params
	{
	public:
		class AActor*                                              Actor;                                                   // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.TogglePainVolume.GetOverlappedActors
	 */
	struct ATogglePainVolume_GetOverlappedActors_Params
	{
	public:
		TArray<class AActor*>                                      OutActors;                                               // 0x0000(0x0010)  (Parm, OutParm, ZeroConstructor)
	};

	/**
	 * Function ShooterGame.TogglePainVolume.GetOverlappedActorNum
	 */
	struct ATogglePainVolume_GetOverlappedActorNum_Params
	{
	public:
		int32_t                                                    ReturnValue;                                             // 0x0000(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ToolTipWidget.BPUpdateToolTip
	 */
	struct UToolTipWidget_BPUpdateToolTip_Params
	{
	public:
		float                                                      DeltaSeconds;                                            // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.ToolTipWidget.BPInitToolTip
	 */
	struct UToolTipWidget_BPInitToolTip_Params
	{
	public:
		class AShooterPlayerController*                            HUDOwner;                                                // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		class FString                                              ToolTipString;                                           // 0x0008(0x0010)  (Parm, ZeroConstructor)
		class UObject*                                             DataListEntry;                                           // 0x0018(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.WaterVolumeWithFlow.SetStrengthFromSplineActor
	 */
	struct AWaterVolumeWithFlow_SetStrengthFromSplineActor_Params
	{
	public:
		class AActor*                                              InSplineActor;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.WaterVolumeWithFlow.SetPaintValueAtGridIndex
	 */
	struct AWaterVolumeWithFlow_SetPaintValueAtGridIndex_Params
	{
	public:
		struct FGridIndex                                          Grid;                                                    // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FColor                                              InColor;                                                 // 0x0008(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		EColorChannelTarget                                        Channel;                                                 // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.WaterVolumeWithFlow.SetDestinationsFromSplineActor
	 */
	struct AWaterVolumeWithFlow_SetDestinationsFromSplineActor_Params
	{
	public:
		class AActor*                                              InSplineActor;                                           // 0x0000(0x0008)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.WaterVolumeWithFlow.SetDefaultPaintColors
	 */
	struct AWaterVolumeWithFlow_SetDefaultPaintColors_Params
	{	};

	/**
	 * Function ShooterGame.WaterVolumeWithFlow.SetCellSize
	 */
	struct AWaterVolumeWithFlow_SetCellSize_Params
	{
	public:
		float                                                      NewCellSize;                                             // 0x0000(0x0004)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.WaterVolumeWithFlow.PaintStrengthFromSpline
	 */
	struct AWaterVolumeWithFlow_PaintStrengthFromSpline_Params
	{	};

	/**
	 * Function ShooterGame.WaterVolumeWithFlow.PaintObstruction
	 */
	struct AWaterVolumeWithFlow_PaintObstruction_Params
	{	};

	/**
	 * Function ShooterGame.WaterVolumeWithFlow.PaintDestinationFromSpline
	 */
	struct AWaterVolumeWithFlow_PaintDestinationFromSpline_Params
	{	};

	/**
	 * Function ShooterGame.WaterVolumeWithFlow.IsGridIndexValid
	 */
	struct AWaterVolumeWithFlow_IsGridIndexValid_Params
	{
	public:
		struct FGridIndex                                          Grid;                                                    // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       ReturnValue;                                             // 0x0008(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.WaterVolumeWithFlow.GetPaintValueAtGridIndex
	 */
	struct AWaterVolumeWithFlow_GetPaintValueAtGridIndex_Params
	{
	public:
		struct FGridIndex                                          Grid;                                                    // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FColor                                              ReturnValue;                                             // 0x0008(0x0004)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.WaterVolumeWithFlow.GetLocationForGridIndex
	 */
	struct AWaterVolumeWithFlow_GetLocationForGridIndex_Params
	{
	public:
		struct FGridIndex                                          ForIndex;                                                // 0x0000(0x0008)  (ConstParm, Parm, OutParm, ReferenceParm)
		struct FVector                                             ReturnValue;                                             // 0x0008(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.WaterVolumeWithFlow.GetGridSize
	 */
	struct AWaterVolumeWithFlow_GetGridSize_Params
	{
	public:
		struct FGridIndex                                          ReturnValue;                                             // 0x0000(0x0008)  (Parm, OutParm, ReturnParm)
	};

	/**
	 * Function ShooterGame.WaterVolumeWithFlow.GetGridIndexForLocation
	 */
	struct AWaterVolumeWithFlow_GetGridIndexForLocation_Params
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		struct FGridIndex                                          Grid;                                                    // 0x000C(0x0008)  (Parm, OutParm)
		bool                                                       ReturnValue;                                             // 0x0014(0x0001)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.WaterVolumeWithFlow.GetFlowVectorAtLocation
	 */
	struct AWaterVolumeWithFlow_GetFlowVectorAtLocation_Params
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C)  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
		bool                                                       bInterpFlowVector;                                       // 0x000C(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		unsigned char                                              UnknownData_P7P8[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY) ()
		struct FVector                                             ReturnValue;                                             // 0x0010(0x000C)  (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.WaterVolumeWithFlow.GenerateFlowField
	 */
	struct AWaterVolumeWithFlow_GenerateFlowField_Params
	{	};

	/**
	 * Function ShooterGame.WaterVolumeWithFlow.ClearAllPaintChannels
	 */
	struct AWaterVolumeWithFlow_ClearAllPaintChannels_Params
	{	};

	/**
	 * Function ShooterGame.WaterVolumeWithFlow.BuildEverything
	 */
	struct AWaterVolumeWithFlow_BuildEverything_Params
	{	};

	/**
	 * Function ShooterGame.WorldBuffEntryWidget.SyncData
	 */
	struct UWorldBuffEntryWidget_SyncData_Params
	{
	public:
		struct FWorldBuffPersistantData                            WorldBuffPersistantData;                                 // 0x0000(0x0018)  (ConstParm, Parm, OutParm, ReferenceParm)
		bool                                                       bIsListEntry;                                            // 0x0018(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bShouldReinit;                                           // 0x0019(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
		bool                                                       bDurationIsStopped;                                      // 0x001A(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.WorldBuffEntryWidget.Initialize
	 */
	struct UWorldBuffEntryWidget_Initialize_Params
	{
	public:
		bool                                                       bIsListEntry;                                            // 0x0000(0x0001)  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	};

	/**
	 * Function ShooterGame.WorldBuffEntryWidget.FadeOut
	 */
	struct UWorldBuffEntryWidget_FadeOut_Params
	{	};

	/**
	 * Function ShooterGame.WorldBuffEntryWidget.Collapse
	 */
	struct UWorldBuffEntryWidget_Collapse_Params
	{	};

	/**
	 * Function ShooterGame.WorldBuffEntryWidget.BeginExpiring
	 */
	struct UWorldBuffEntryWidget_BeginExpiring_Params
	{	};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
